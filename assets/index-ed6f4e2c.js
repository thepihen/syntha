(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))n(o);new MutationObserver(o=>{for(const r of o)if(r.type==="childList")for(const a of r.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&n(a)}).observe(document,{childList:!0,subtree:!0});function t(o){const r={};return o.integrity&&(r.integrity=o.integrity),o.referrerPolicy&&(r.referrerPolicy=o.referrerPolicy),o.crossOrigin==="use-credentials"?r.credentials="include":o.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function n(o){if(o.ep)return;o.ep=!0;const r=t(o);fetch(o.href,r)}})();function makeMap(s,e){const t=Object.create(null),n=s.split(",");for(let o=0;o<n.length;o++)t[n[o]]=!0;return e?o=>!!t[o.toLowerCase()]:o=>!!t[o]}const EMPTY_OBJ={},EMPTY_ARR=[],NOOP=()=>{},NO=()=>!1,onRE=/^on[^a-z]/,isOn=s=>onRE.test(s),isModelListener=s=>s.startsWith("onUpdate:"),extend=Object.assign,remove=(s,e)=>{const t=s.indexOf(e);t>-1&&s.splice(t,1)},hasOwnProperty$1=Object.prototype.hasOwnProperty,hasOwn=(s,e)=>hasOwnProperty$1.call(s,e),isArray$2=Array.isArray,isMap=s=>toTypeString(s)==="[object Map]",isSet=s=>toTypeString(s)==="[object Set]",isDate=s=>toTypeString(s)==="[object Date]",isFunction$1=s=>typeof s=="function",isString$1=s=>typeof s=="string",isSymbol=s=>typeof s=="symbol",isObject$1=s=>s!==null&&typeof s=="object",isPromise=s=>isObject$1(s)&&isFunction$1(s.then)&&isFunction$1(s.catch),objectToString=Object.prototype.toString,toTypeString=s=>objectToString.call(s),toRawType=s=>toTypeString(s).slice(8,-1),isPlainObject=s=>toTypeString(s)==="[object Object]",isIntegerKey=s=>isString$1(s)&&s!=="NaN"&&s[0]!=="-"&&""+parseInt(s,10)===s,isReservedProp=makeMap(",key,ref,ref_for,ref_key,onVnodeBeforeMount,onVnodeMounted,onVnodeBeforeUpdate,onVnodeUpdated,onVnodeBeforeUnmount,onVnodeUnmounted"),cacheStringFunction=s=>{const e=Object.create(null);return t=>e[t]||(e[t]=s(t))},camelizeRE=/-(\w)/g,camelize=cacheStringFunction(s=>s.replace(camelizeRE,(e,t)=>t?t.toUpperCase():"")),hyphenateRE=/\B([A-Z])/g,hyphenate=cacheStringFunction(s=>s.replace(hyphenateRE,"-$1").toLowerCase()),capitalize=cacheStringFunction(s=>s.charAt(0).toUpperCase()+s.slice(1)),toHandlerKey=cacheStringFunction(s=>s?`on${capitalize(s)}`:""),hasChanged=(s,e)=>!Object.is(s,e),invokeArrayFns=(s,e)=>{for(let t=0;t<s.length;t++)s[t](e)},def=(s,e,t)=>{Object.defineProperty(s,e,{configurable:!0,enumerable:!1,value:t})},looseToNumber=s=>{const e=parseFloat(s);return isNaN(e)?s:e};let _globalThis;const getGlobalThis=()=>_globalThis||(_globalThis=typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof window<"u"?window:typeof global<"u"?global:{});function normalizeStyle(s){if(isArray$2(s)){const e={};for(let t=0;t<s.length;t++){const n=s[t],o=isString$1(n)?parseStringStyle(n):normalizeStyle(n);if(o)for(const r in o)e[r]=o[r]}return e}else{if(isString$1(s))return s;if(isObject$1(s))return s}}const listDelimiterRE=/;(?![^(]*\))/g,propertyDelimiterRE=/:([^]+)/,styleCommentRE=/\/\*[^]*?\*\//g;function parseStringStyle(s){const e={};return s.replace(styleCommentRE,"").split(listDelimiterRE).forEach(t=>{if(t){const n=t.split(propertyDelimiterRE);n.length>1&&(e[n[0].trim()]=n[1].trim())}}),e}function normalizeClass(s){let e="";if(isString$1(s))e=s;else if(isArray$2(s))for(let t=0;t<s.length;t++){const n=normalizeClass(s[t]);n&&(e+=n+" ")}else if(isObject$1(s))for(const t in s)s[t]&&(e+=t+" ");return e.trim()}const specialBooleanAttrs="itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly",isSpecialBooleanAttr=makeMap(specialBooleanAttrs);function includeBooleanAttr(s){return!!s||s===""}function looseCompareArrays(s,e){if(s.length!==e.length)return!1;let t=!0;for(let n=0;t&&n<s.length;n++)t=looseEqual(s[n],e[n]);return t}function looseEqual(s,e){if(s===e)return!0;let t=isDate(s),n=isDate(e);if(t||n)return t&&n?s.getTime()===e.getTime():!1;if(t=isSymbol(s),n=isSymbol(e),t||n)return s===e;if(t=isArray$2(s),n=isArray$2(e),t||n)return t&&n?looseCompareArrays(s,e):!1;if(t=isObject$1(s),n=isObject$1(e),t||n){if(!t||!n)return!1;const o=Object.keys(s).length,r=Object.keys(e).length;if(o!==r)return!1;for(const a in s){const c=s.hasOwnProperty(a),l=e.hasOwnProperty(a);if(c&&!l||!c&&l||!looseEqual(s[a],e[a]))return!1}}return String(s)===String(e)}function looseIndexOf(s,e){return s.findIndex(t=>looseEqual(t,e))}const toDisplayString=s=>isString$1(s)?s:s==null?"":isArray$2(s)||isObject$1(s)&&(s.toString===objectToString||!isFunction$1(s.toString))?JSON.stringify(s,replacer,2):String(s),replacer=(s,e)=>e&&e.__v_isRef?replacer(s,e.value):isMap(e)?{[`Map(${e.size})`]:[...e.entries()].reduce((t,[n,o])=>(t[`${n} =>`]=o,t),{})}:isSet(e)?{[`Set(${e.size})`]:[...e.values()]}:isObject$1(e)&&!isArray$2(e)&&!isPlainObject(e)?String(e):e;let activeEffectScope;class EffectScope{constructor(e=!1){this.detached=e,this._active=!0,this.effects=[],this.cleanups=[],this.parent=activeEffectScope,!e&&activeEffectScope&&(this.index=(activeEffectScope.scopes||(activeEffectScope.scopes=[])).push(this)-1)}get active(){return this._active}run(e){if(this._active){const t=activeEffectScope;try{return activeEffectScope=this,e()}finally{activeEffectScope=t}}}on(){activeEffectScope=this}off(){activeEffectScope=this.parent}stop(e){if(this._active){let t,n;for(t=0,n=this.effects.length;t<n;t++)this.effects[t].stop();for(t=0,n=this.cleanups.length;t<n;t++)this.cleanups[t]();if(this.scopes)for(t=0,n=this.scopes.length;t<n;t++)this.scopes[t].stop(!0);if(!this.detached&&this.parent&&!e){const o=this.parent.scopes.pop();o&&o!==this&&(this.parent.scopes[this.index]=o,o.index=this.index)}this.parent=void 0,this._active=!1}}}function recordEffectScope(s,e=activeEffectScope){e&&e.active&&e.effects.push(s)}function getCurrentScope(){return activeEffectScope}const createDep=s=>{const e=new Set(s);return e.w=0,e.n=0,e},wasTracked=s=>(s.w&trackOpBit)>0,newTracked=s=>(s.n&trackOpBit)>0,initDepMarkers=({deps:s})=>{if(s.length)for(let e=0;e<s.length;e++)s[e].w|=trackOpBit},finalizeDepMarkers=s=>{const{deps:e}=s;if(e.length){let t=0;for(let n=0;n<e.length;n++){const o=e[n];wasTracked(o)&&!newTracked(o)?o.delete(s):e[t++]=o,o.w&=~trackOpBit,o.n&=~trackOpBit}e.length=t}},targetMap=new WeakMap;let effectTrackDepth=0,trackOpBit=1;const maxMarkerBits=30;let activeEffect;const ITERATE_KEY=Symbol(""),MAP_KEY_ITERATE_KEY=Symbol("");class ReactiveEffect{constructor(e,t=null,n){this.fn=e,this.scheduler=t,this.active=!0,this.deps=[],this.parent=void 0,recordEffectScope(this,n)}run(){if(!this.active)return this.fn();let e=activeEffect,t=shouldTrack;for(;e;){if(e===this)return;e=e.parent}try{return this.parent=activeEffect,activeEffect=this,shouldTrack=!0,trackOpBit=1<<++effectTrackDepth,effectTrackDepth<=maxMarkerBits?initDepMarkers(this):cleanupEffect(this),this.fn()}finally{effectTrackDepth<=maxMarkerBits&&finalizeDepMarkers(this),trackOpBit=1<<--effectTrackDepth,activeEffect=this.parent,shouldTrack=t,this.parent=void 0,this.deferStop&&this.stop()}}stop(){activeEffect===this?this.deferStop=!0:this.active&&(cleanupEffect(this),this.onStop&&this.onStop(),this.active=!1)}}function cleanupEffect(s){const{deps:e}=s;if(e.length){for(let t=0;t<e.length;t++)e[t].delete(s);e.length=0}}let shouldTrack=!0;const trackStack=[];function pauseTracking(){trackStack.push(shouldTrack),shouldTrack=!1}function resetTracking(){const s=trackStack.pop();shouldTrack=s===void 0?!0:s}function track(s,e,t){if(shouldTrack&&activeEffect){let n=targetMap.get(s);n||targetMap.set(s,n=new Map);let o=n.get(t);o||n.set(t,o=createDep()),trackEffects(o)}}function trackEffects(s,e){let t=!1;effectTrackDepth<=maxMarkerBits?newTracked(s)||(s.n|=trackOpBit,t=!wasTracked(s)):t=!s.has(activeEffect),t&&(s.add(activeEffect),activeEffect.deps.push(s))}function trigger(s,e,t,n,o,r){const a=targetMap.get(s);if(!a)return;let c=[];if(e==="clear")c=[...a.values()];else if(t==="length"&&isArray$2(s)){const l=Number(n);a.forEach((u,d)=>{(d==="length"||d>=l)&&c.push(u)})}else switch(t!==void 0&&c.push(a.get(t)),e){case"add":isArray$2(s)?isIntegerKey(t)&&c.push(a.get("length")):(c.push(a.get(ITERATE_KEY)),isMap(s)&&c.push(a.get(MAP_KEY_ITERATE_KEY)));break;case"delete":isArray$2(s)||(c.push(a.get(ITERATE_KEY)),isMap(s)&&c.push(a.get(MAP_KEY_ITERATE_KEY)));break;case"set":isMap(s)&&c.push(a.get(ITERATE_KEY));break}if(c.length===1)c[0]&&triggerEffects(c[0]);else{const l=[];for(const u of c)u&&l.push(...u);triggerEffects(createDep(l))}}function triggerEffects(s,e){const t=isArray$2(s)?s:[...s];for(const n of t)n.computed&&triggerEffect(n);for(const n of t)n.computed||triggerEffect(n)}function triggerEffect(s,e){(s!==activeEffect||s.allowRecurse)&&(s.scheduler?s.scheduler():s.run())}const isNonTrackableKeys=makeMap("__proto__,__v_isRef,__isVue"),builtInSymbols=new Set(Object.getOwnPropertyNames(Symbol).filter(s=>s!=="arguments"&&s!=="caller").map(s=>Symbol[s]).filter(isSymbol)),get$1=createGetter(),shallowGet=createGetter(!1,!0),readonlyGet=createGetter(!0),arrayInstrumentations=createArrayInstrumentations();function createArrayInstrumentations(){const s={};return["includes","indexOf","lastIndexOf"].forEach(e=>{s[e]=function(...t){const n=toRaw(this);for(let r=0,a=this.length;r<a;r++)track(n,"get",r+"");const o=n[e](...t);return o===-1||o===!1?n[e](...t.map(toRaw)):o}}),["push","pop","shift","unshift","splice"].forEach(e=>{s[e]=function(...t){pauseTracking();const n=toRaw(this)[e].apply(this,t);return resetTracking(),n}}),s}function hasOwnProperty(s){const e=toRaw(this);return track(e,"has",s),e.hasOwnProperty(s)}function createGetter(s=!1,e=!1){return function(n,o,r){if(o==="__v_isReactive")return!s;if(o==="__v_isReadonly")return s;if(o==="__v_isShallow")return e;if(o==="__v_raw"&&r===(s?e?shallowReadonlyMap:readonlyMap:e?shallowReactiveMap:reactiveMap).get(n))return n;const a=isArray$2(n);if(!s){if(a&&hasOwn(arrayInstrumentations,o))return Reflect.get(arrayInstrumentations,o,r);if(o==="hasOwnProperty")return hasOwnProperty}const c=Reflect.get(n,o,r);return(isSymbol(o)?builtInSymbols.has(o):isNonTrackableKeys(o))||(s||track(n,"get",o),e)?c:isRef(c)?a&&isIntegerKey(o)?c:c.value:isObject$1(c)?s?readonly(c):reactive(c):c}}const set$1=createSetter(),shallowSet=createSetter(!0);function createSetter(s=!1){return function(t,n,o,r){let a=t[n];if(isReadonly(a)&&isRef(a)&&!isRef(o))return!1;if(!s&&(!isShallow(o)&&!isReadonly(o)&&(a=toRaw(a),o=toRaw(o)),!isArray$2(t)&&isRef(a)&&!isRef(o)))return a.value=o,!0;const c=isArray$2(t)&&isIntegerKey(n)?Number(n)<t.length:hasOwn(t,n),l=Reflect.set(t,n,o,r);return t===toRaw(r)&&(c?hasChanged(o,a)&&trigger(t,"set",n,o):trigger(t,"add",n,o)),l}}function deleteProperty(s,e){const t=hasOwn(s,e);s[e];const n=Reflect.deleteProperty(s,e);return n&&t&&trigger(s,"delete",e,void 0),n}function has$1(s,e){const t=Reflect.has(s,e);return(!isSymbol(e)||!builtInSymbols.has(e))&&track(s,"has",e),t}function ownKeys(s){return track(s,"iterate",isArray$2(s)?"length":ITERATE_KEY),Reflect.ownKeys(s)}const mutableHandlers={get:get$1,set:set$1,deleteProperty,has:has$1,ownKeys},readonlyHandlers={get:readonlyGet,set(s,e){return!0},deleteProperty(s,e){return!0}},shallowReactiveHandlers=extend({},mutableHandlers,{get:shallowGet,set:shallowSet}),toShallow=s=>s,getProto=s=>Reflect.getPrototypeOf(s);function get(s,e,t=!1,n=!1){s=s.__v_raw;const o=toRaw(s),r=toRaw(e);t||(e!==r&&track(o,"get",e),track(o,"get",r));const{has:a}=getProto(o),c=n?toShallow:t?toReadonly:toReactive;if(a.call(o,e))return c(s.get(e));if(a.call(o,r))return c(s.get(r));s!==o&&s.get(e)}function has(s,e=!1){const t=this.__v_raw,n=toRaw(t),o=toRaw(s);return e||(s!==o&&track(n,"has",s),track(n,"has",o)),s===o?t.has(s):t.has(s)||t.has(o)}function size(s,e=!1){return s=s.__v_raw,!e&&track(toRaw(s),"iterate",ITERATE_KEY),Reflect.get(s,"size",s)}function add(s){s=toRaw(s);const e=toRaw(this);return getProto(e).has.call(e,s)||(e.add(s),trigger(e,"add",s,s)),this}function set(s,e){e=toRaw(e);const t=toRaw(this),{has:n,get:o}=getProto(t);let r=n.call(t,s);r||(s=toRaw(s),r=n.call(t,s));const a=o.call(t,s);return t.set(s,e),r?hasChanged(e,a)&&trigger(t,"set",s,e):trigger(t,"add",s,e),this}function deleteEntry(s){const e=toRaw(this),{has:t,get:n}=getProto(e);let o=t.call(e,s);o||(s=toRaw(s),o=t.call(e,s)),n&&n.call(e,s);const r=e.delete(s);return o&&trigger(e,"delete",s,void 0),r}function clear(){const s=toRaw(this),e=s.size!==0,t=s.clear();return e&&trigger(s,"clear",void 0,void 0),t}function createForEach(s,e){return function(n,o){const r=this,a=r.__v_raw,c=toRaw(a),l=e?toShallow:s?toReadonly:toReactive;return!s&&track(c,"iterate",ITERATE_KEY),a.forEach((u,d)=>n.call(o,l(u),l(d),r))}}function createIterableMethod(s,e,t){return function(...n){const o=this.__v_raw,r=toRaw(o),a=isMap(r),c=s==="entries"||s===Symbol.iterator&&a,l=s==="keys"&&a,u=o[s](...n),d=t?toShallow:e?toReadonly:toReactive;return!e&&track(r,"iterate",l?MAP_KEY_ITERATE_KEY:ITERATE_KEY),{next(){const{value:f,done:m}=u.next();return m?{value:f,done:m}:{value:c?[d(f[0]),d(f[1])]:d(f),done:m}},[Symbol.iterator](){return this}}}}function createReadonlyMethod(s){return function(...e){return s==="delete"?!1:this}}function createInstrumentations(){const s={get(r){return get(this,r)},get size(){return size(this)},has,add,set,delete:deleteEntry,clear,forEach:createForEach(!1,!1)},e={get(r){return get(this,r,!1,!0)},get size(){return size(this)},has,add,set,delete:deleteEntry,clear,forEach:createForEach(!1,!0)},t={get(r){return get(this,r,!0)},get size(){return size(this,!0)},has(r){return has.call(this,r,!0)},add:createReadonlyMethod("add"),set:createReadonlyMethod("set"),delete:createReadonlyMethod("delete"),clear:createReadonlyMethod("clear"),forEach:createForEach(!0,!1)},n={get(r){return get(this,r,!0,!0)},get size(){return size(this,!0)},has(r){return has.call(this,r,!0)},add:createReadonlyMethod("add"),set:createReadonlyMethod("set"),delete:createReadonlyMethod("delete"),clear:createReadonlyMethod("clear"),forEach:createForEach(!0,!0)};return["keys","values","entries",Symbol.iterator].forEach(r=>{s[r]=createIterableMethod(r,!1,!1),t[r]=createIterableMethod(r,!0,!1),e[r]=createIterableMethod(r,!1,!0),n[r]=createIterableMethod(r,!0,!0)}),[s,t,e,n]}const[mutableInstrumentations,readonlyInstrumentations,shallowInstrumentations,shallowReadonlyInstrumentations]=createInstrumentations();function createInstrumentationGetter(s,e){const t=e?s?shallowReadonlyInstrumentations:shallowInstrumentations:s?readonlyInstrumentations:mutableInstrumentations;return(n,o,r)=>o==="__v_isReactive"?!s:o==="__v_isReadonly"?s:o==="__v_raw"?n:Reflect.get(hasOwn(t,o)&&o in n?t:n,o,r)}const mutableCollectionHandlers={get:createInstrumentationGetter(!1,!1)},shallowCollectionHandlers={get:createInstrumentationGetter(!1,!0)},readonlyCollectionHandlers={get:createInstrumentationGetter(!0,!1)},reactiveMap=new WeakMap,shallowReactiveMap=new WeakMap,readonlyMap=new WeakMap,shallowReadonlyMap=new WeakMap;function targetTypeMap(s){switch(s){case"Object":case"Array":return 1;case"Map":case"Set":case"WeakMap":case"WeakSet":return 2;default:return 0}}function getTargetType(s){return s.__v_skip||!Object.isExtensible(s)?0:targetTypeMap(toRawType(s))}function reactive(s){return isReadonly(s)?s:createReactiveObject(s,!1,mutableHandlers,mutableCollectionHandlers,reactiveMap)}function shallowReactive(s){return createReactiveObject(s,!1,shallowReactiveHandlers,shallowCollectionHandlers,shallowReactiveMap)}function readonly(s){return createReactiveObject(s,!0,readonlyHandlers,readonlyCollectionHandlers,readonlyMap)}function createReactiveObject(s,e,t,n,o){if(!isObject$1(s)||s.__v_raw&&!(e&&s.__v_isReactive))return s;const r=o.get(s);if(r)return r;const a=getTargetType(s);if(a===0)return s;const c=new Proxy(s,a===2?n:t);return o.set(s,c),c}function isReactive(s){return isReadonly(s)?isReactive(s.__v_raw):!!(s&&s.__v_isReactive)}function isReadonly(s){return!!(s&&s.__v_isReadonly)}function isShallow(s){return!!(s&&s.__v_isShallow)}function isProxy(s){return isReactive(s)||isReadonly(s)}function toRaw(s){const e=s&&s.__v_raw;return e?toRaw(e):s}function markRaw(s){return def(s,"__v_skip",!0),s}const toReactive=s=>isObject$1(s)?reactive(s):s,toReadonly=s=>isObject$1(s)?readonly(s):s;function trackRefValue(s){shouldTrack&&activeEffect&&(s=toRaw(s),trackEffects(s.dep||(s.dep=createDep())))}function triggerRefValue(s,e){s=toRaw(s);const t=s.dep;t&&triggerEffects(t)}function isRef(s){return!!(s&&s.__v_isRef===!0)}function ref(s){return createRef(s,!1)}function shallowRef(s){return createRef(s,!0)}function createRef(s,e){return isRef(s)?s:new RefImpl(s,e)}class RefImpl{constructor(e,t){this.__v_isShallow=t,this.dep=void 0,this.__v_isRef=!0,this._rawValue=t?e:toRaw(e),this._value=t?e:toReactive(e)}get value(){return trackRefValue(this),this._value}set value(e){const t=this.__v_isShallow||isShallow(e)||isReadonly(e);e=t?e:toRaw(e),hasChanged(e,this._rawValue)&&(this._rawValue=e,this._value=t?e:toReactive(e),triggerRefValue(this))}}function unref(s){return isRef(s)?s.value:s}const shallowUnwrapHandlers={get:(s,e,t)=>unref(Reflect.get(s,e,t)),set:(s,e,t,n)=>{const o=s[e];return isRef(o)&&!isRef(t)?(o.value=t,!0):Reflect.set(s,e,t,n)}};function proxyRefs(s){return isReactive(s)?s:new Proxy(s,shallowUnwrapHandlers)}class ComputedRefImpl{constructor(e,t,n,o){this._setter=t,this.dep=void 0,this.__v_isRef=!0,this.__v_isReadonly=!1,this._dirty=!0,this.effect=new ReactiveEffect(e,()=>{this._dirty||(this._dirty=!0,triggerRefValue(this))}),this.effect.computed=this,this.effect.active=this._cacheable=!o,this.__v_isReadonly=n}get value(){const e=toRaw(this);return trackRefValue(e),(e._dirty||!e._cacheable)&&(e._dirty=!1,e._value=e.effect.run()),e._value}set value(e){this._setter(e)}}function computed$1(s,e,t=!1){let n,o;const r=isFunction$1(s);return r?(n=s,o=NOOP):(n=s.get,o=s.set),new ComputedRefImpl(n,o,r||!o,t)}function warn$1(s,...e){}function callWithErrorHandling(s,e,t,n){let o;try{o=n?s(...n):s()}catch(r){handleError(r,e,t)}return o}function callWithAsyncErrorHandling(s,e,t,n){if(isFunction$1(s)){const r=callWithErrorHandling(s,e,t,n);return r&&isPromise(r)&&r.catch(a=>{handleError(a,e,t)}),r}const o=[];for(let r=0;r<s.length;r++)o.push(callWithAsyncErrorHandling(s[r],e,t,n));return o}function handleError(s,e,t,n=!0){const o=e?e.vnode:null;if(e){let r=e.parent;const a=e.proxy,c=t;for(;r;){const u=r.ec;if(u){for(let d=0;d<u.length;d++)if(u[d](s,a,c)===!1)return}r=r.parent}const l=e.appContext.config.errorHandler;if(l){callWithErrorHandling(l,null,10,[s,a,c]);return}}logError(s,t,o,n)}function logError(s,e,t,n=!0){console.error(s)}let isFlushing=!1,isFlushPending=!1;const queue=[];let flushIndex=0;const pendingPostFlushCbs=[];let activePostFlushCbs=null,postFlushIndex=0;const resolvedPromise=Promise.resolve();let currentFlushPromise=null;function nextTick(s){const e=currentFlushPromise||resolvedPromise;return s?e.then(this?s.bind(this):s):e}function findInsertionIndex(s){let e=flushIndex+1,t=queue.length;for(;e<t;){const n=e+t>>>1;getId(queue[n])<s?e=n+1:t=n}return e}function queueJob(s){(!queue.length||!queue.includes(s,isFlushing&&s.allowRecurse?flushIndex+1:flushIndex))&&(s.id==null?queue.push(s):queue.splice(findInsertionIndex(s.id),0,s),queueFlush())}function queueFlush(){!isFlushing&&!isFlushPending&&(isFlushPending=!0,currentFlushPromise=resolvedPromise.then(flushJobs))}function invalidateJob(s){const e=queue.indexOf(s);e>flushIndex&&queue.splice(e,1)}function queuePostFlushCb(s){isArray$2(s)?pendingPostFlushCbs.push(...s):(!activePostFlushCbs||!activePostFlushCbs.includes(s,s.allowRecurse?postFlushIndex+1:postFlushIndex))&&pendingPostFlushCbs.push(s),queueFlush()}function flushPreFlushCbs(s,e=isFlushing?flushIndex+1:0){for(;e<queue.length;e++){const t=queue[e];t&&t.pre&&(queue.splice(e,1),e--,t())}}function flushPostFlushCbs(s){if(pendingPostFlushCbs.length){const e=[...new Set(pendingPostFlushCbs)];if(pendingPostFlushCbs.length=0,activePostFlushCbs){activePostFlushCbs.push(...e);return}for(activePostFlushCbs=e,activePostFlushCbs.sort((t,n)=>getId(t)-getId(n)),postFlushIndex=0;postFlushIndex<activePostFlushCbs.length;postFlushIndex++)activePostFlushCbs[postFlushIndex]();activePostFlushCbs=null,postFlushIndex=0}}const getId=s=>s.id==null?1/0:s.id,comparator=(s,e)=>{const t=getId(s)-getId(e);if(t===0){if(s.pre&&!e.pre)return-1;if(e.pre&&!s.pre)return 1}return t};function flushJobs(s){isFlushPending=!1,isFlushing=!0,queue.sort(comparator);const e=NOOP;try{for(flushIndex=0;flushIndex<queue.length;flushIndex++){const t=queue[flushIndex];t&&t.active!==!1&&callWithErrorHandling(t,null,14)}}finally{flushIndex=0,queue.length=0,flushPostFlushCbs(),isFlushing=!1,currentFlushPromise=null,(queue.length||pendingPostFlushCbs.length)&&flushJobs()}}function emit(s,e,...t){if(s.isUnmounted)return;const n=s.vnode.props||EMPTY_OBJ;let o=t;const r=e.startsWith("update:"),a=r&&e.slice(7);if(a&&a in n){const d=`${a==="modelValue"?"model":a}Modifiers`,{number:f,trim:m}=n[d]||EMPTY_OBJ;m&&(o=t.map(g=>isString$1(g)?g.trim():g)),f&&(o=t.map(looseToNumber))}let c,l=n[c=toHandlerKey(e)]||n[c=toHandlerKey(camelize(e))];!l&&r&&(l=n[c=toHandlerKey(hyphenate(e))]),l&&callWithAsyncErrorHandling(l,s,6,o);const u=n[c+"Once"];if(u){if(!s.emitted)s.emitted={};else if(s.emitted[c])return;s.emitted[c]=!0,callWithAsyncErrorHandling(u,s,6,o)}}function normalizeEmitsOptions(s,e,t=!1){const n=e.emitsCache,o=n.get(s);if(o!==void 0)return o;const r=s.emits;let a={},c=!1;if(!isFunction$1(s)){const l=u=>{const d=normalizeEmitsOptions(u,e,!0);d&&(c=!0,extend(a,d))};!t&&e.mixins.length&&e.mixins.forEach(l),s.extends&&l(s.extends),s.mixins&&s.mixins.forEach(l)}return!r&&!c?(isObject$1(s)&&n.set(s,null),null):(isArray$2(r)?r.forEach(l=>a[l]=null):extend(a,r),isObject$1(s)&&n.set(s,a),a)}function isEmitListener(s,e){return!s||!isOn(e)?!1:(e=e.slice(2).replace(/Once$/,""),hasOwn(s,e[0].toLowerCase()+e.slice(1))||hasOwn(s,hyphenate(e))||hasOwn(s,e))}let currentRenderingInstance=null,currentScopeId=null;function setCurrentRenderingInstance(s){const e=currentRenderingInstance;return currentRenderingInstance=s,currentScopeId=s&&s.type.__scopeId||null,e}function pushScopeId(s){currentScopeId=s}function popScopeId(){currentScopeId=null}function withCtx(s,e=currentRenderingInstance,t){if(!e||s._n)return s;const n=(...o)=>{n._d&&setBlockTracking(-1);const r=setCurrentRenderingInstance(e);let a;try{a=s(...o)}finally{setCurrentRenderingInstance(r),n._d&&setBlockTracking(1)}return a};return n._n=!0,n._c=!0,n._d=!0,n}function markAttrsAccessed(){}function renderComponentRoot(s){const{type:e,vnode:t,proxy:n,withProxy:o,props:r,propsOptions:[a],slots:c,attrs:l,emit:u,render:d,renderCache:f,data:m,setupState:g,ctx:_,inheritAttrs:y}=s;let A,N;const x=setCurrentRenderingInstance(s);try{if(t.shapeFlag&4){const E=o||n;A=normalizeVNode(d.call(E,E,f,r,g,m,_)),N=l}else{const E=e;A=normalizeVNode(E.length>1?E(r,{attrs:l,slots:c,emit:u}):E(r,null)),N=e.props?l:getFunctionalFallthrough(l)}}catch(E){blockStack.length=0,handleError(E,s,1),A=createVNode(Comment)}let M=A;if(N&&y!==!1){const E=Object.keys(N),{shapeFlag:T}=M;E.length&&T&7&&(a&&E.some(isModelListener)&&(N=filterModelListeners(N,a)),M=cloneVNode(M,N))}return t.dirs&&(M=cloneVNode(M),M.dirs=M.dirs?M.dirs.concat(t.dirs):t.dirs),t.transition&&(M.transition=t.transition),A=M,setCurrentRenderingInstance(x),A}const getFunctionalFallthrough=s=>{let e;for(const t in s)(t==="class"||t==="style"||isOn(t))&&((e||(e={}))[t]=s[t]);return e},filterModelListeners=(s,e)=>{const t={};for(const n in s)(!isModelListener(n)||!(n.slice(9)in e))&&(t[n]=s[n]);return t};function shouldUpdateComponent(s,e,t){const{props:n,children:o,component:r}=s,{props:a,children:c,patchFlag:l}=e,u=r.emitsOptions;if(e.dirs||e.transition)return!0;if(t&&l>=0){if(l&1024)return!0;if(l&16)return n?hasPropsChanged(n,a,u):!!a;if(l&8){const d=e.dynamicProps;for(let f=0;f<d.length;f++){const m=d[f];if(a[m]!==n[m]&&!isEmitListener(u,m))return!0}}}else return(o||c)&&(!c||!c.$stable)?!0:n===a?!1:n?a?hasPropsChanged(n,a,u):!0:!!a;return!1}function hasPropsChanged(s,e,t){const n=Object.keys(e);if(n.length!==Object.keys(s).length)return!0;for(let o=0;o<n.length;o++){const r=n[o];if(e[r]!==s[r]&&!isEmitListener(t,r))return!0}return!1}function updateHOCHostEl({vnode:s,parent:e},t){for(;e&&e.subTree===s;)(s=e.vnode).el=t,e=e.parent}const isSuspense=s=>s.__isSuspense;function queueEffectWithSuspense(s,e){e&&e.pendingBranch?isArray$2(s)?e.effects.push(...s):e.effects.push(s):queuePostFlushCb(s)}function watchPostEffect(s,e){return doWatch(s,null,{flush:"post"})}const INITIAL_WATCHER_VALUE={};function watch(s,e,t){return doWatch(s,e,t)}function doWatch(s,e,{immediate:t,deep:n,flush:o,onTrack:r,onTrigger:a}=EMPTY_OBJ){var c;const l=getCurrentScope()===((c=currentInstance)==null?void 0:c.scope)?currentInstance:null;let u,d=!1,f=!1;if(isRef(s)?(u=()=>s.value,d=isShallow(s)):isReactive(s)?(u=()=>s,n=!0):isArray$2(s)?(f=!0,d=s.some(E=>isReactive(E)||isShallow(E)),u=()=>s.map(E=>{if(isRef(E))return E.value;if(isReactive(E))return traverse(E);if(isFunction$1(E))return callWithErrorHandling(E,l,2)})):isFunction$1(s)?e?u=()=>callWithErrorHandling(s,l,2):u=()=>{if(!(l&&l.isUnmounted))return m&&m(),callWithAsyncErrorHandling(s,l,3,[g])}:u=NOOP,e&&n){const E=u;u=()=>traverse(E())}let m,g=E=>{m=x.onStop=()=>{callWithErrorHandling(E,l,4)}},_;if(isInSSRComponentSetup)if(g=NOOP,e?t&&callWithAsyncErrorHandling(e,l,3,[u(),f?[]:void 0,g]):u(),o==="sync"){const E=useSSRContext();_=E.__watcherHandles||(E.__watcherHandles=[])}else return NOOP;let y=f?new Array(s.length).fill(INITIAL_WATCHER_VALUE):INITIAL_WATCHER_VALUE;const A=()=>{if(x.active)if(e){const E=x.run();(n||d||(f?E.some((T,k)=>hasChanged(T,y[k])):hasChanged(E,y)))&&(m&&m(),callWithAsyncErrorHandling(e,l,3,[E,y===INITIAL_WATCHER_VALUE?void 0:f&&y[0]===INITIAL_WATCHER_VALUE?[]:y,g]),y=E)}else x.run()};A.allowRecurse=!!e;let N;o==="sync"?N=A:o==="post"?N=()=>queuePostRenderEffect(A,l&&l.suspense):(A.pre=!0,l&&(A.id=l.uid),N=()=>queueJob(A));const x=new ReactiveEffect(u,N);e?t?A():y=x.run():o==="post"?queuePostRenderEffect(x.run.bind(x),l&&l.suspense):x.run();const M=()=>{x.stop(),l&&l.scope&&remove(l.scope.effects,x)};return _&&_.push(M),M}function instanceWatch(s,e,t){const n=this.proxy,o=isString$1(s)?s.includes(".")?createPathGetter(n,s):()=>n[s]:s.bind(n,n);let r;isFunction$1(e)?r=e:(r=e.handler,t=e);const a=currentInstance;setCurrentInstance(this);const c=doWatch(o,r.bind(n),t);return a?setCurrentInstance(a):unsetCurrentInstance(),c}function createPathGetter(s,e){const t=e.split(".");return()=>{let n=s;for(let o=0;o<t.length&&n;o++)n=n[t[o]];return n}}function traverse(s,e){if(!isObject$1(s)||s.__v_skip||(e=e||new Set,e.has(s)))return s;if(e.add(s),isRef(s))traverse(s.value,e);else if(isArray$2(s))for(let t=0;t<s.length;t++)traverse(s[t],e);else if(isSet(s)||isMap(s))s.forEach(t=>{traverse(t,e)});else if(isPlainObject(s))for(const t in s)traverse(s[t],e);return s}function withDirectives(s,e){const t=currentRenderingInstance;if(t===null)return s;const n=getExposeProxy(t)||t.proxy,o=s.dirs||(s.dirs=[]);for(let r=0;r<e.length;r++){let[a,c,l,u=EMPTY_OBJ]=e[r];a&&(isFunction$1(a)&&(a={mounted:a,updated:a}),a.deep&&traverse(c),o.push({dir:a,instance:n,value:c,oldValue:void 0,arg:l,modifiers:u}))}return s}function invokeDirectiveHook(s,e,t,n){const o=s.dirs,r=e&&e.dirs;for(let a=0;a<o.length;a++){const c=o[a];r&&(c.oldValue=r[a].value);let l=c.dir[n];l&&(pauseTracking(),callWithAsyncErrorHandling(l,t,8,[s.el,c,s,e]),resetTracking())}}function defineComponent(s,e){return isFunction$1(s)?(()=>extend({name:s.name},e,{setup:s}))():s}const isAsyncWrapper=s=>!!s.type.__asyncLoader,isKeepAlive=s=>s.type.__isKeepAlive;function onActivated(s,e){registerKeepAliveHook(s,"a",e)}function onDeactivated(s,e){registerKeepAliveHook(s,"da",e)}function registerKeepAliveHook(s,e,t=currentInstance){const n=s.__wdc||(s.__wdc=()=>{let o=t;for(;o;){if(o.isDeactivated)return;o=o.parent}return s()});if(injectHook(e,n,t),t){let o=t.parent;for(;o&&o.parent;)isKeepAlive(o.parent.vnode)&&injectToKeepAliveRoot(n,e,t,o),o=o.parent}}function injectToKeepAliveRoot(s,e,t,n){const o=injectHook(e,s,n,!0);onUnmounted(()=>{remove(n[e],o)},t)}function injectHook(s,e,t=currentInstance,n=!1){if(t){const o=t[s]||(t[s]=[]),r=e.__weh||(e.__weh=(...a)=>{if(t.isUnmounted)return;pauseTracking(),setCurrentInstance(t);const c=callWithAsyncErrorHandling(e,t,s,a);return unsetCurrentInstance(),resetTracking(),c});return n?o.unshift(r):o.push(r),r}}const createHook=s=>(e,t=currentInstance)=>(!isInSSRComponentSetup||s==="sp")&&injectHook(s,(...n)=>e(...n),t),onBeforeMount=createHook("bm"),onMounted=createHook("m"),onBeforeUpdate=createHook("bu"),onUpdated=createHook("u"),onBeforeUnmount=createHook("bum"),onUnmounted=createHook("um"),onServerPrefetch=createHook("sp"),onRenderTriggered=createHook("rtg"),onRenderTracked=createHook("rtc");function onErrorCaptured(s,e=currentInstance){injectHook("ec",s,e)}const COMPONENTS="components";function resolveComponent(s,e){return resolveAsset(COMPONENTS,s,!0,e)||s}const NULL_DYNAMIC_COMPONENT=Symbol.for("v-ndc");function resolveDynamicComponent(s){return isString$1(s)?resolveAsset(COMPONENTS,s,!1)||s:s||NULL_DYNAMIC_COMPONENT}function resolveAsset(s,e,t=!0,n=!1){const o=currentRenderingInstance||currentInstance;if(o){const r=o.type;if(s===COMPONENTS){const c=getComponentName(r,!1);if(c&&(c===e||c===camelize(e)||c===capitalize(camelize(e))))return r}const a=resolve(o[s]||r[s],e)||resolve(o.appContext[s],e);return!a&&n?r:a}}function resolve(s,e){return s&&(s[e]||s[camelize(e)]||s[capitalize(camelize(e))])}function renderList(s,e,t,n){let o;const r=t&&t[n];if(isArray$2(s)||isString$1(s)){o=new Array(s.length);for(let a=0,c=s.length;a<c;a++)o[a]=e(s[a],a,void 0,r&&r[a])}else if(typeof s=="number"){o=new Array(s);for(let a=0;a<s;a++)o[a]=e(a+1,a,void 0,r&&r[a])}else if(isObject$1(s))if(s[Symbol.iterator])o=Array.from(s,(a,c)=>e(a,c,void 0,r&&r[c]));else{const a=Object.keys(s);o=new Array(a.length);for(let c=0,l=a.length;c<l;c++){const u=a[c];o[c]=e(s[u],u,c,r&&r[c])}}else o=[];return t&&(t[n]=o),o}function renderSlot(s,e,t={},n,o){if(currentRenderingInstance.isCE||currentRenderingInstance.parent&&isAsyncWrapper(currentRenderingInstance.parent)&&currentRenderingInstance.parent.isCE)return e!=="default"&&(t.name=e),createVNode("slot",t,n&&n());let r=s[e];r&&r._c&&(r._d=!1),openBlock();const a=r&&ensureValidVNode(r(t)),c=createBlock(Fragment,{key:t.key||a&&a.key||`_${e}`},a||(n?n():[]),a&&s._===1?64:-2);return!o&&c.scopeId&&(c.slotScopeIds=[c.scopeId+"-s"]),r&&r._c&&(r._d=!0),c}function ensureValidVNode(s){return s.some(e=>isVNode(e)?!(e.type===Comment||e.type===Fragment&&!ensureValidVNode(e.children)):!0)?s:null}const getPublicInstance=s=>s?isStatefulComponent(s)?getExposeProxy(s)||s.proxy:getPublicInstance(s.parent):null,publicPropertiesMap=extend(Object.create(null),{$:s=>s,$el:s=>s.vnode.el,$data:s=>s.data,$props:s=>s.props,$attrs:s=>s.attrs,$slots:s=>s.slots,$refs:s=>s.refs,$parent:s=>getPublicInstance(s.parent),$root:s=>getPublicInstance(s.root),$emit:s=>s.emit,$options:s=>resolveMergedOptions(s),$forceUpdate:s=>s.f||(s.f=()=>queueJob(s.update)),$nextTick:s=>s.n||(s.n=nextTick.bind(s.proxy)),$watch:s=>instanceWatch.bind(s)}),hasSetupBinding=(s,e)=>s!==EMPTY_OBJ&&!s.__isScriptSetup&&hasOwn(s,e),PublicInstanceProxyHandlers={get({_:s},e){const{ctx:t,setupState:n,data:o,props:r,accessCache:a,type:c,appContext:l}=s;let u;if(e[0]!=="$"){const g=a[e];if(g!==void 0)switch(g){case 1:return n[e];case 2:return o[e];case 4:return t[e];case 3:return r[e]}else{if(hasSetupBinding(n,e))return a[e]=1,n[e];if(o!==EMPTY_OBJ&&hasOwn(o,e))return a[e]=2,o[e];if((u=s.propsOptions[0])&&hasOwn(u,e))return a[e]=3,r[e];if(t!==EMPTY_OBJ&&hasOwn(t,e))return a[e]=4,t[e];shouldCacheAccess&&(a[e]=0)}}const d=publicPropertiesMap[e];let f,m;if(d)return e==="$attrs"&&track(s,"get",e),d(s);if((f=c.__cssModules)&&(f=f[e]))return f;if(t!==EMPTY_OBJ&&hasOwn(t,e))return a[e]=4,t[e];if(m=l.config.globalProperties,hasOwn(m,e))return m[e]},set({_:s},e,t){const{data:n,setupState:o,ctx:r}=s;return hasSetupBinding(o,e)?(o[e]=t,!0):n!==EMPTY_OBJ&&hasOwn(n,e)?(n[e]=t,!0):hasOwn(s.props,e)||e[0]==="$"&&e.slice(1)in s?!1:(r[e]=t,!0)},has({_:{data:s,setupState:e,accessCache:t,ctx:n,appContext:o,propsOptions:r}},a){let c;return!!t[a]||s!==EMPTY_OBJ&&hasOwn(s,a)||hasSetupBinding(e,a)||(c=r[0])&&hasOwn(c,a)||hasOwn(n,a)||hasOwn(publicPropertiesMap,a)||hasOwn(o.config.globalProperties,a)},defineProperty(s,e,t){return t.get!=null?s._.accessCache[e]=0:hasOwn(t,"value")&&this.set(s,e,t.value,null),Reflect.defineProperty(s,e,t)}};function normalizePropsOrEmits(s){return isArray$2(s)?s.reduce((e,t)=>(e[t]=null,e),{}):s}let shouldCacheAccess=!0;function applyOptions(s){const e=resolveMergedOptions(s),t=s.proxy,n=s.ctx;shouldCacheAccess=!1,e.beforeCreate&&callHook(e.beforeCreate,s,"bc");const{data:o,computed:r,methods:a,watch:c,provide:l,inject:u,created:d,beforeMount:f,mounted:m,beforeUpdate:g,updated:_,activated:y,deactivated:A,beforeDestroy:N,beforeUnmount:x,destroyed:M,unmounted:E,render:T,renderTracked:k,renderTriggered:I,errorCaptured:C,serverPrefetch:W,expose:q,inheritAttrs:L,components:V,directives:K,filters:Y}=e;if(u&&resolveInjections(u,n,null),a)for(const G in a){const X=a[G];isFunction$1(X)&&(n[G]=X.bind(t))}if(o){const G=o.call(t,t);isObject$1(G)&&(s.data=reactive(G))}if(shouldCacheAccess=!0,r)for(const G in r){const X=r[G],ee=isFunction$1(X)?X.bind(t,t):isFunction$1(X.get)?X.get.bind(t,t):NOOP,oe=!isFunction$1(X)&&isFunction$1(X.set)?X.set.bind(t):NOOP,ne=computed({get:ee,set:oe});Object.defineProperty(n,G,{enumerable:!0,configurable:!0,get:()=>ne.value,set:re=>ne.value=re})}if(c)for(const G in c)createWatcher(c[G],n,t,G);if(l){const G=isFunction$1(l)?l.call(t):l;Reflect.ownKeys(G).forEach(X=>{provide(X,G[X])})}d&&callHook(d,s,"c");function H(G,X){isArray$2(X)?X.forEach(ee=>G(ee.bind(t))):X&&G(X.bind(t))}if(H(onBeforeMount,f),H(onMounted,m),H(onBeforeUpdate,g),H(onUpdated,_),H(onActivated,y),H(onDeactivated,A),H(onErrorCaptured,C),H(onRenderTracked,k),H(onRenderTriggered,I),H(onBeforeUnmount,x),H(onUnmounted,E),H(onServerPrefetch,W),isArray$2(q))if(q.length){const G=s.exposed||(s.exposed={});q.forEach(X=>{Object.defineProperty(G,X,{get:()=>t[X],set:ee=>t[X]=ee})})}else s.exposed||(s.exposed={});T&&s.render===NOOP&&(s.render=T),L!=null&&(s.inheritAttrs=L),V&&(s.components=V),K&&(s.directives=K)}function resolveInjections(s,e,t=NOOP){isArray$2(s)&&(s=normalizeInject(s));for(const n in s){const o=s[n];let r;isObject$1(o)?"default"in o?r=inject(o.from||n,o.default,!0):r=inject(o.from||n):r=inject(o),isRef(r)?Object.defineProperty(e,n,{enumerable:!0,configurable:!0,get:()=>r.value,set:a=>r.value=a}):e[n]=r}}function callHook(s,e,t){callWithAsyncErrorHandling(isArray$2(s)?s.map(n=>n.bind(e.proxy)):s.bind(e.proxy),e,t)}function createWatcher(s,e,t,n){const o=n.includes(".")?createPathGetter(t,n):()=>t[n];if(isString$1(s)){const r=e[s];isFunction$1(r)&&watch(o,r)}else if(isFunction$1(s))watch(o,s.bind(t));else if(isObject$1(s))if(isArray$2(s))s.forEach(r=>createWatcher(r,e,t,n));else{const r=isFunction$1(s.handler)?s.handler.bind(t):e[s.handler];isFunction$1(r)&&watch(o,r,s)}}function resolveMergedOptions(s){const e=s.type,{mixins:t,extends:n}=e,{mixins:o,optionsCache:r,config:{optionMergeStrategies:a}}=s.appContext,c=r.get(e);let l;return c?l=c:!o.length&&!t&&!n?l=e:(l={},o.length&&o.forEach(u=>mergeOptions$1(l,u,a,!0)),mergeOptions$1(l,e,a)),isObject$1(e)&&r.set(e,l),l}function mergeOptions$1(s,e,t,n=!1){const{mixins:o,extends:r}=e;r&&mergeOptions$1(s,r,t,!0),o&&o.forEach(a=>mergeOptions$1(s,a,t,!0));for(const a in e)if(!(n&&a==="expose")){const c=internalOptionMergeStrats[a]||t&&t[a];s[a]=c?c(s[a],e[a]):e[a]}return s}const internalOptionMergeStrats={data:mergeDataFn,props:mergeEmitsOrPropsOptions,emits:mergeEmitsOrPropsOptions,methods:mergeObjectOptions,computed:mergeObjectOptions,beforeCreate:mergeAsArray,created:mergeAsArray,beforeMount:mergeAsArray,mounted:mergeAsArray,beforeUpdate:mergeAsArray,updated:mergeAsArray,beforeDestroy:mergeAsArray,beforeUnmount:mergeAsArray,destroyed:mergeAsArray,unmounted:mergeAsArray,activated:mergeAsArray,deactivated:mergeAsArray,errorCaptured:mergeAsArray,serverPrefetch:mergeAsArray,components:mergeObjectOptions,directives:mergeObjectOptions,watch:mergeWatchOptions,provide:mergeDataFn,inject:mergeInject};function mergeDataFn(s,e){return e?s?function(){return extend(isFunction$1(s)?s.call(this,this):s,isFunction$1(e)?e.call(this,this):e)}:e:s}function mergeInject(s,e){return mergeObjectOptions(normalizeInject(s),normalizeInject(e))}function normalizeInject(s){if(isArray$2(s)){const e={};for(let t=0;t<s.length;t++)e[s[t]]=s[t];return e}return s}function mergeAsArray(s,e){return s?[...new Set([].concat(s,e))]:e}function mergeObjectOptions(s,e){return s?extend(Object.create(null),s,e):e}function mergeEmitsOrPropsOptions(s,e){return s?isArray$2(s)&&isArray$2(e)?[...new Set([...s,...e])]:extend(Object.create(null),normalizePropsOrEmits(s),normalizePropsOrEmits(e??{})):e}function mergeWatchOptions(s,e){if(!s)return e;if(!e)return s;const t=extend(Object.create(null),s);for(const n in e)t[n]=mergeAsArray(s[n],e[n]);return t}function createAppContext(){return{app:null,config:{isNativeTag:NO,performance:!1,globalProperties:{},optionMergeStrategies:{},errorHandler:void 0,warnHandler:void 0,compilerOptions:{}},mixins:[],components:{},directives:{},provides:Object.create(null),optionsCache:new WeakMap,propsCache:new WeakMap,emitsCache:new WeakMap}}let uid$1=0;function createAppAPI(s,e){return function(n,o=null){isFunction$1(n)||(n=extend({},n)),o!=null&&!isObject$1(o)&&(o=null);const r=createAppContext(),a=new Set;let c=!1;const l=r.app={_uid:uid$1++,_component:n,_props:o,_container:null,_context:r,_instance:null,version:version$1,get config(){return r.config},set config(u){},use(u,...d){return a.has(u)||(u&&isFunction$1(u.install)?(a.add(u),u.install(l,...d)):isFunction$1(u)&&(a.add(u),u(l,...d))),l},mixin(u){return r.mixins.includes(u)||r.mixins.push(u),l},component(u,d){return d?(r.components[u]=d,l):r.components[u]},directive(u,d){return d?(r.directives[u]=d,l):r.directives[u]},mount(u,d,f){if(!c){const m=createVNode(n,o);return m.appContext=r,d&&e?e(m,u):s(m,u,f),c=!0,l._container=u,u.__vue_app__=l,getExposeProxy(m.component)||m.component.proxy}},unmount(){c&&(s(null,l._container),delete l._container.__vue_app__)},provide(u,d){return r.provides[u]=d,l},runWithContext(u){currentApp=l;try{return u()}finally{currentApp=null}}};return l}}let currentApp=null;function provide(s,e){if(currentInstance){let t=currentInstance.provides;const n=currentInstance.parent&&currentInstance.parent.provides;n===t&&(t=currentInstance.provides=Object.create(n)),t[s]=e}}function inject(s,e,t=!1){const n=currentInstance||currentRenderingInstance;if(n||currentApp){const o=n?n.parent==null?n.vnode.appContext&&n.vnode.appContext.provides:n.parent.provides:currentApp._context.provides;if(o&&s in o)return o[s];if(arguments.length>1)return t&&isFunction$1(e)?e.call(n&&n.proxy):e}}function initProps(s,e,t,n=!1){const o={},r={};def(r,InternalObjectKey,1),s.propsDefaults=Object.create(null),setFullProps(s,e,o,r);for(const a in s.propsOptions[0])a in o||(o[a]=void 0);t?s.props=n?o:shallowReactive(o):s.type.props?s.props=o:s.props=r,s.attrs=r}function updateProps(s,e,t,n){const{props:o,attrs:r,vnode:{patchFlag:a}}=s,c=toRaw(o),[l]=s.propsOptions;let u=!1;if((n||a>0)&&!(a&16)){if(a&8){const d=s.vnode.dynamicProps;for(let f=0;f<d.length;f++){let m=d[f];if(isEmitListener(s.emitsOptions,m))continue;const g=e[m];if(l)if(hasOwn(r,m))g!==r[m]&&(r[m]=g,u=!0);else{const _=camelize(m);o[_]=resolvePropValue(l,c,_,g,s,!1)}else g!==r[m]&&(r[m]=g,u=!0)}}}else{setFullProps(s,e,o,r)&&(u=!0);let d;for(const f in c)(!e||!hasOwn(e,f)&&((d=hyphenate(f))===f||!hasOwn(e,d)))&&(l?t&&(t[f]!==void 0||t[d]!==void 0)&&(o[f]=resolvePropValue(l,c,f,void 0,s,!0)):delete o[f]);if(r!==c)for(const f in r)(!e||!hasOwn(e,f))&&(delete r[f],u=!0)}u&&trigger(s,"set","$attrs")}function setFullProps(s,e,t,n){const[o,r]=s.propsOptions;let a=!1,c;if(e)for(let l in e){if(isReservedProp(l))continue;const u=e[l];let d;o&&hasOwn(o,d=camelize(l))?!r||!r.includes(d)?t[d]=u:(c||(c={}))[d]=u:isEmitListener(s.emitsOptions,l)||(!(l in n)||u!==n[l])&&(n[l]=u,a=!0)}if(r){const l=toRaw(t),u=c||EMPTY_OBJ;for(let d=0;d<r.length;d++){const f=r[d];t[f]=resolvePropValue(o,l,f,u[f],s,!hasOwn(u,f))}}return a}function resolvePropValue(s,e,t,n,o,r){const a=s[t];if(a!=null){const c=hasOwn(a,"default");if(c&&n===void 0){const l=a.default;if(a.type!==Function&&!a.skipFactory&&isFunction$1(l)){const{propsDefaults:u}=o;t in u?n=u[t]:(setCurrentInstance(o),n=u[t]=l.call(null,e),unsetCurrentInstance())}else n=l}a[0]&&(r&&!c?n=!1:a[1]&&(n===""||n===hyphenate(t))&&(n=!0))}return n}function normalizePropsOptions(s,e,t=!1){const n=e.propsCache,o=n.get(s);if(o)return o;const r=s.props,a={},c=[];let l=!1;if(!isFunction$1(s)){const d=f=>{l=!0;const[m,g]=normalizePropsOptions(f,e,!0);extend(a,m),g&&c.push(...g)};!t&&e.mixins.length&&e.mixins.forEach(d),s.extends&&d(s.extends),s.mixins&&s.mixins.forEach(d)}if(!r&&!l)return isObject$1(s)&&n.set(s,EMPTY_ARR),EMPTY_ARR;if(isArray$2(r))for(let d=0;d<r.length;d++){const f=camelize(r[d]);validatePropName(f)&&(a[f]=EMPTY_OBJ)}else if(r)for(const d in r){const f=camelize(d);if(validatePropName(f)){const m=r[d],g=a[f]=isArray$2(m)||isFunction$1(m)?{type:m}:extend({},m);if(g){const _=getTypeIndex(Boolean,g.type),y=getTypeIndex(String,g.type);g[0]=_>-1,g[1]=y<0||_<y,(_>-1||hasOwn(g,"default"))&&c.push(f)}}}const u=[a,c];return isObject$1(s)&&n.set(s,u),u}function validatePropName(s){return s[0]!=="$"}function getType(s){const e=s&&s.toString().match(/^\s*(function|class) (\w+)/);return e?e[2]:s===null?"null":""}function isSameType(s,e){return getType(s)===getType(e)}function getTypeIndex(s,e){return isArray$2(e)?e.findIndex(t=>isSameType(t,s)):isFunction$1(e)&&isSameType(e,s)?0:-1}const isInternalKey=s=>s[0]==="_"||s==="$stable",normalizeSlotValue=s=>isArray$2(s)?s.map(normalizeVNode):[normalizeVNode(s)],normalizeSlot$1=(s,e,t)=>{if(e._n)return e;const n=withCtx((...o)=>normalizeSlotValue(e(...o)),t);return n._c=!1,n},normalizeObjectSlots=(s,e,t)=>{const n=s._ctx;for(const o in s){if(isInternalKey(o))continue;const r=s[o];if(isFunction$1(r))e[o]=normalizeSlot$1(o,r,n);else if(r!=null){const a=normalizeSlotValue(r);e[o]=()=>a}}},normalizeVNodeSlots=(s,e)=>{const t=normalizeSlotValue(e);s.slots.default=()=>t},initSlots=(s,e)=>{if(s.vnode.shapeFlag&32){const t=e._;t?(s.slots=toRaw(e),def(e,"_",t)):normalizeObjectSlots(e,s.slots={})}else s.slots={},e&&normalizeVNodeSlots(s,e);def(s.slots,InternalObjectKey,1)},updateSlots=(s,e,t)=>{const{vnode:n,slots:o}=s;let r=!0,a=EMPTY_OBJ;if(n.shapeFlag&32){const c=e._;c?t&&c===1?r=!1:(extend(o,e),!t&&c===1&&delete o._):(r=!e.$stable,normalizeObjectSlots(e,o)),a=e}else e&&(normalizeVNodeSlots(s,e),a={default:1});if(r)for(const c in o)!isInternalKey(c)&&!(c in a)&&delete o[c]};function setRef(s,e,t,n,o=!1){if(isArray$2(s)){s.forEach((m,g)=>setRef(m,e&&(isArray$2(e)?e[g]:e),t,n,o));return}if(isAsyncWrapper(n)&&!o)return;const r=n.shapeFlag&4?getExposeProxy(n.component)||n.component.proxy:n.el,a=o?null:r,{i:c,r:l}=s,u=e&&e.r,d=c.refs===EMPTY_OBJ?c.refs={}:c.refs,f=c.setupState;if(u!=null&&u!==l&&(isString$1(u)?(d[u]=null,hasOwn(f,u)&&(f[u]=null)):isRef(u)&&(u.value=null)),isFunction$1(l))callWithErrorHandling(l,c,12,[a,d]);else{const m=isString$1(l),g=isRef(l);if(m||g){const _=()=>{if(s.f){const y=m?hasOwn(f,l)?f[l]:d[l]:l.value;o?isArray$2(y)&&remove(y,r):isArray$2(y)?y.includes(r)||y.push(r):m?(d[l]=[r],hasOwn(f,l)&&(f[l]=d[l])):(l.value=[r],s.k&&(d[s.k]=l.value))}else m?(d[l]=a,hasOwn(f,l)&&(f[l]=a)):g&&(l.value=a,s.k&&(d[s.k]=a))};a?(_.id=-1,queuePostRenderEffect(_,t)):_()}}}const queuePostRenderEffect=queueEffectWithSuspense;function createRenderer(s){return baseCreateRenderer(s)}function baseCreateRenderer(s,e){const t=getGlobalThis();t.__VUE__=!0;const{insert:n,remove:o,patchProp:r,createElement:a,createText:c,createComment:l,setText:u,setElementText:d,parentNode:f,nextSibling:m,setScopeId:g=NOOP,insertStaticContent:_}=s,y=(v,S,w,b=null,O=null,D=null,U=!1,F=null,j=!!S.dynamicChildren)=>{if(v===S)return;v&&!isSameVNodeType(v,S)&&(b=P(v),re(v,O,D,!0),v=null),S.patchFlag===-2&&(j=!1,S.dynamicChildren=null);const{type:B,ref:J,shapeFlag:Q}=S;switch(B){case Text:A(v,S,w,b);break;case Comment:N(v,S,w,b);break;case Static:v==null&&x(S,w,b,U);break;case Fragment:V(v,S,w,b,O,D,U,F,j);break;default:Q&1?T(v,S,w,b,O,D,U,F,j):Q&6?K(v,S,w,b,O,D,U,F,j):(Q&64||Q&128)&&B.process(v,S,w,b,O,D,U,F,j,z)}J!=null&&O&&setRef(J,v&&v.ref,D,S||v,!S)},A=(v,S,w,b)=>{if(v==null)n(S.el=c(S.children),w,b);else{const O=S.el=v.el;S.children!==v.children&&u(O,S.children)}},N=(v,S,w,b)=>{v==null?n(S.el=l(S.children||""),w,b):S.el=v.el},x=(v,S,w,b)=>{[v.el,v.anchor]=_(v.children,S,w,b,v.el,v.anchor)},M=({el:v,anchor:S},w,b)=>{let O;for(;v&&v!==S;)O=m(v),n(v,w,b),v=O;n(S,w,b)},E=({el:v,anchor:S})=>{let w;for(;v&&v!==S;)w=m(v),o(v),v=w;o(S)},T=(v,S,w,b,O,D,U,F,j)=>{U=U||S.type==="svg",v==null?k(S,w,b,O,D,U,F,j):W(v,S,O,D,U,F,j)},k=(v,S,w,b,O,D,U,F)=>{let j,B;const{type:J,props:Q,shapeFlag:se,transition:ie,dirs:le}=v;if(j=v.el=a(v.type,D,Q&&Q.is,Q),se&8?d(j,v.children):se&16&&C(v.children,j,null,b,O,D&&J!=="foreignObject",U,F),le&&invokeDirectiveHook(v,null,b,"created"),I(j,v,v.scopeId,U,b),Q){for(const he in Q)he!=="value"&&!isReservedProp(he)&&r(j,he,null,Q[he],D,v.children,b,O,ce);"value"in Q&&r(j,"value",null,Q.value),(B=Q.onVnodeBeforeMount)&&invokeVNodeHook(B,b,v)}le&&invokeDirectiveHook(v,null,b,"beforeMount");const de=(!O||O&&!O.pendingBranch)&&ie&&!ie.persisted;de&&ie.beforeEnter(j),n(j,S,w),((B=Q&&Q.onVnodeMounted)||de||le)&&queuePostRenderEffect(()=>{B&&invokeVNodeHook(B,b,v),de&&ie.enter(j),le&&invokeDirectiveHook(v,null,b,"mounted")},O)},I=(v,S,w,b,O)=>{if(w&&g(v,w),b)for(let D=0;D<b.length;D++)g(v,b[D]);if(O){let D=O.subTree;if(S===D){const U=O.vnode;I(v,U,U.scopeId,U.slotScopeIds,O.parent)}}},C=(v,S,w,b,O,D,U,F,j=0)=>{for(let B=j;B<v.length;B++){const J=v[B]=F?cloneIfMounted(v[B]):normalizeVNode(v[B]);y(null,J,S,w,b,O,D,U,F)}},W=(v,S,w,b,O,D,U)=>{const F=S.el=v.el;let{patchFlag:j,dynamicChildren:B,dirs:J}=S;j|=v.patchFlag&16;const Q=v.props||EMPTY_OBJ,se=S.props||EMPTY_OBJ;let ie;w&&toggleRecurse(w,!1),(ie=se.onVnodeBeforeUpdate)&&invokeVNodeHook(ie,w,S,v),J&&invokeDirectiveHook(S,v,w,"beforeUpdate"),w&&toggleRecurse(w,!0);const le=O&&S.type!=="foreignObject";if(B?q(v.dynamicChildren,B,F,w,b,le,D):U||X(v,S,F,null,w,b,le,D,!1),j>0){if(j&16)L(F,S,Q,se,w,b,O);else if(j&2&&Q.class!==se.class&&r(F,"class",null,se.class,O),j&4&&r(F,"style",Q.style,se.style,O),j&8){const de=S.dynamicProps;for(let he=0;he<de.length;he++){const me=de[he],_e=Q[me],ve=se[me];(ve!==_e||me==="value")&&r(F,me,_e,ve,O,v.children,w,b,ce)}}j&1&&v.children!==S.children&&d(F,S.children)}else!U&&B==null&&L(F,S,Q,se,w,b,O);((ie=se.onVnodeUpdated)||J)&&queuePostRenderEffect(()=>{ie&&invokeVNodeHook(ie,w,S,v),J&&invokeDirectiveHook(S,v,w,"updated")},b)},q=(v,S,w,b,O,D,U)=>{for(let F=0;F<S.length;F++){const j=v[F],B=S[F],J=j.el&&(j.type===Fragment||!isSameVNodeType(j,B)||j.shapeFlag&70)?f(j.el):w;y(j,B,J,null,b,O,D,U,!0)}},L=(v,S,w,b,O,D,U)=>{if(w!==b){if(w!==EMPTY_OBJ)for(const F in w)!isReservedProp(F)&&!(F in b)&&r(v,F,w[F],null,U,S.children,O,D,ce);for(const F in b){if(isReservedProp(F))continue;const j=b[F],B=w[F];j!==B&&F!=="value"&&r(v,F,B,j,U,S.children,O,D,ce)}"value"in b&&r(v,"value",w.value,b.value)}},V=(v,S,w,b,O,D,U,F,j)=>{const B=S.el=v?v.el:c(""),J=S.anchor=v?v.anchor:c("");let{patchFlag:Q,dynamicChildren:se,slotScopeIds:ie}=S;ie&&(F=F?F.concat(ie):ie),v==null?(n(B,w,b),n(J,w,b),C(S.children,w,J,O,D,U,F,j)):Q>0&&Q&64&&se&&v.dynamicChildren?(q(v.dynamicChildren,se,w,O,D,U,F),(S.key!=null||O&&S===O.subTree)&&traverseStaticChildren(v,S,!0)):X(v,S,w,J,O,D,U,F,j)},K=(v,S,w,b,O,D,U,F,j)=>{S.slotScopeIds=F,v==null?S.shapeFlag&512?O.ctx.activate(S,w,b,U,j):Y(S,w,b,O,D,U,j):te(v,S,j)},Y=(v,S,w,b,O,D,U)=>{const F=v.component=createComponentInstance(v,b,O);if(isKeepAlive(v)&&(F.ctx.renderer=z),setupComponent(F),F.asyncDep){if(O&&O.registerDep(F,H),!v.el){const j=F.subTree=createVNode(Comment);N(null,j,S,w)}return}H(F,v,S,w,O,D,U)},te=(v,S,w)=>{const b=S.component=v.component;if(shouldUpdateComponent(v,S,w))if(b.asyncDep&&!b.asyncResolved){G(b,S,w);return}else b.next=S,invalidateJob(b.update),b.update();else S.el=v.el,b.vnode=S},H=(v,S,w,b,O,D,U)=>{const F=()=>{if(v.isMounted){let{next:J,bu:Q,u:se,parent:ie,vnode:le}=v,de=J,he;toggleRecurse(v,!1),J?(J.el=le.el,G(v,J,U)):J=le,Q&&invokeArrayFns(Q),(he=J.props&&J.props.onVnodeBeforeUpdate)&&invokeVNodeHook(he,ie,J,le),toggleRecurse(v,!0);const me=renderComponentRoot(v),_e=v.subTree;v.subTree=me,y(_e,me,f(_e.el),P(_e),v,O,D),J.el=me.el,de===null&&updateHOCHostEl(v,me.el),se&&queuePostRenderEffect(se,O),(he=J.props&&J.props.onVnodeUpdated)&&queuePostRenderEffect(()=>invokeVNodeHook(he,ie,J,le),O)}else{let J;const{el:Q,props:se}=S,{bm:ie,m:le,parent:de}=v,he=isAsyncWrapper(S);if(toggleRecurse(v,!1),ie&&invokeArrayFns(ie),!he&&(J=se&&se.onVnodeBeforeMount)&&invokeVNodeHook(J,de,S),toggleRecurse(v,!0),Q&&ue){const me=()=>{v.subTree=renderComponentRoot(v),ue(Q,v.subTree,v,O,null)};he?S.type.__asyncLoader().then(()=>!v.isUnmounted&&me()):me()}else{const me=v.subTree=renderComponentRoot(v);y(null,me,w,b,v,O,D),S.el=me.el}if(le&&queuePostRenderEffect(le,O),!he&&(J=se&&se.onVnodeMounted)){const me=S;queuePostRenderEffect(()=>invokeVNodeHook(J,de,me),O)}(S.shapeFlag&256||de&&isAsyncWrapper(de.vnode)&&de.vnode.shapeFlag&256)&&v.a&&queuePostRenderEffect(v.a,O),v.isMounted=!0,S=w=b=null}},j=v.effect=new ReactiveEffect(F,()=>queueJob(B),v.scope),B=v.update=()=>j.run();B.id=v.uid,toggleRecurse(v,!0),B()},G=(v,S,w)=>{S.component=v;const b=v.vnode.props;v.vnode=S,v.next=null,updateProps(v,S.props,b,w),updateSlots(v,S.children,w),pauseTracking(),flushPreFlushCbs(),resetTracking()},X=(v,S,w,b,O,D,U,F,j=!1)=>{const B=v&&v.children,J=v?v.shapeFlag:0,Q=S.children,{patchFlag:se,shapeFlag:ie}=S;if(se>0){if(se&128){oe(B,Q,w,b,O,D,U,F,j);return}else if(se&256){ee(B,Q,w,b,O,D,U,F,j);return}}ie&8?(J&16&&ce(B,O,D),Q!==B&&d(w,Q)):J&16?ie&16?oe(B,Q,w,b,O,D,U,F,j):ce(B,O,D,!0):(J&8&&d(w,""),ie&16&&C(Q,w,b,O,D,U,F,j))},ee=(v,S,w,b,O,D,U,F,j)=>{v=v||EMPTY_ARR,S=S||EMPTY_ARR;const B=v.length,J=S.length,Q=Math.min(B,J);let se;for(se=0;se<Q;se++){const ie=S[se]=j?cloneIfMounted(S[se]):normalizeVNode(S[se]);y(v[se],ie,w,null,O,D,U,F,j)}B>J?ce(v,O,D,!0,!1,Q):C(S,w,b,O,D,U,F,j,Q)},oe=(v,S,w,b,O,D,U,F,j)=>{let B=0;const J=S.length;let Q=v.length-1,se=J-1;for(;B<=Q&&B<=se;){const ie=v[B],le=S[B]=j?cloneIfMounted(S[B]):normalizeVNode(S[B]);if(isSameVNodeType(ie,le))y(ie,le,w,null,O,D,U,F,j);else break;B++}for(;B<=Q&&B<=se;){const ie=v[Q],le=S[se]=j?cloneIfMounted(S[se]):normalizeVNode(S[se]);if(isSameVNodeType(ie,le))y(ie,le,w,null,O,D,U,F,j);else break;Q--,se--}if(B>Q){if(B<=se){const ie=se+1,le=ie<J?S[ie].el:b;for(;B<=se;)y(null,S[B]=j?cloneIfMounted(S[B]):normalizeVNode(S[B]),w,le,O,D,U,F,j),B++}}else if(B>se)for(;B<=Q;)re(v[B],O,D,!0),B++;else{const ie=B,le=B,de=new Map;for(B=le;B<=se;B++){const ge=S[B]=j?cloneIfMounted(S[B]):normalizeVNode(S[B]);ge.key!=null&&de.set(ge.key,B)}let he,me=0;const _e=se-le+1;let ve=!1,Ce=0;const Ae=new Array(_e);for(B=0;B<_e;B++)Ae[B]=0;for(B=ie;B<=Q;B++){const ge=v[B];if(me>=_e){re(ge,O,D,!0);continue}let ye;if(ge.key!=null)ye=de.get(ge.key);else for(he=le;he<=se;he++)if(Ae[he-le]===0&&isSameVNodeType(ge,S[he])){ye=he;break}ye===void 0?re(ge,O,D,!0):(Ae[ye-le]=B+1,ye>=Ce?Ce=ye:ve=!0,y(ge,S[ye],w,null,O,D,U,F,j),me++)}const we=ve?getSequence(Ae):EMPTY_ARR;for(he=we.length-1,B=_e-1;B>=0;B--){const ge=le+B,ye=S[ge],xe=ge+1<J?S[ge+1].el:b;Ae[B]===0?y(null,ye,w,xe,O,D,U,F,j):ve&&(he<0||B!==we[he]?ne(ye,w,xe,2):he--)}}},ne=(v,S,w,b,O=null)=>{const{el:D,type:U,transition:F,children:j,shapeFlag:B}=v;if(B&6){ne(v.component.subTree,S,w,b);return}if(B&128){v.suspense.move(S,w,b);return}if(B&64){U.move(v,S,w,z);return}if(U===Fragment){n(D,S,w);for(let Q=0;Q<j.length;Q++)ne(j[Q],S,w,b);n(v.anchor,S,w);return}if(U===Static){M(v,S,w);return}if(b!==2&&B&1&&F)if(b===0)F.beforeEnter(D),n(D,S,w),queuePostRenderEffect(()=>F.enter(D),O);else{const{leave:Q,delayLeave:se,afterLeave:ie}=F,le=()=>n(D,S,w),de=()=>{Q(D,()=>{le(),ie&&ie()})};se?se(D,le,de):de()}else n(D,S,w)},re=(v,S,w,b=!1,O=!1)=>{const{type:D,props:U,ref:F,children:j,dynamicChildren:B,shapeFlag:J,patchFlag:Q,dirs:se}=v;if(F!=null&&setRef(F,null,w,v,!0),J&256){S.ctx.deactivate(v);return}const ie=J&1&&se,le=!isAsyncWrapper(v);let de;if(le&&(de=U&&U.onVnodeBeforeUnmount)&&invokeVNodeHook(de,S,v),J&6)ae(v.component,w,b);else{if(J&128){v.suspense.unmount(w,b);return}ie&&invokeDirectiveHook(v,null,S,"beforeUnmount"),J&64?v.type.remove(v,S,w,O,z,b):B&&(D!==Fragment||Q>0&&Q&64)?ce(B,S,w,!1,!0):(D===Fragment&&Q&384||!O&&J&16)&&ce(j,S,w),b&&pe(v)}(le&&(de=U&&U.onVnodeUnmounted)||ie)&&queuePostRenderEffect(()=>{de&&invokeVNodeHook(de,S,v),ie&&invokeDirectiveHook(v,null,S,"unmounted")},w)},pe=v=>{const{type:S,el:w,anchor:b,transition:O}=v;if(S===Fragment){fe(w,b);return}if(S===Static){E(v);return}const D=()=>{o(w),O&&!O.persisted&&O.afterLeave&&O.afterLeave()};if(v.shapeFlag&1&&O&&!O.persisted){const{leave:U,delayLeave:F}=O,j=()=>U(w,D);F?F(v.el,D,j):j()}else D()},fe=(v,S)=>{let w;for(;v!==S;)w=m(v),o(v),v=w;o(S)},ae=(v,S,w)=>{const{bum:b,scope:O,update:D,subTree:U,um:F}=v;b&&invokeArrayFns(b),O.stop(),D&&(D.active=!1,re(U,v,S,w)),F&&queuePostRenderEffect(F,S),queuePostRenderEffect(()=>{v.isUnmounted=!0},S),S&&S.pendingBranch&&!S.isUnmounted&&v.asyncDep&&!v.asyncResolved&&v.suspenseId===S.pendingId&&(S.deps--,S.deps===0&&S.resolve())},ce=(v,S,w,b=!1,O=!1,D=0)=>{for(let U=D;U<v.length;U++)re(v[U],S,w,b,O)},P=v=>v.shapeFlag&6?P(v.component.subTree):v.shapeFlag&128?v.suspense.next():m(v.anchor||v.el),R=(v,S,w)=>{v==null?S._vnode&&re(S._vnode,null,null,!0):y(S._vnode||null,v,S,null,null,null,w),flushPreFlushCbs(),flushPostFlushCbs(),S._vnode=v},z={p:y,um:re,m:ne,r:pe,mt:Y,mc:C,pc:X,pbc:q,n:P,o:s};let Z,ue;return e&&([Z,ue]=e(z)),{render:R,hydrate:Z,createApp:createAppAPI(R,Z)}}function toggleRecurse({effect:s,update:e},t){s.allowRecurse=e.allowRecurse=t}function traverseStaticChildren(s,e,t=!1){const n=s.children,o=e.children;if(isArray$2(n)&&isArray$2(o))for(let r=0;r<n.length;r++){const a=n[r];let c=o[r];c.shapeFlag&1&&!c.dynamicChildren&&((c.patchFlag<=0||c.patchFlag===32)&&(c=o[r]=cloneIfMounted(o[r]),c.el=a.el),t||traverseStaticChildren(a,c)),c.type===Text&&(c.el=a.el)}}function getSequence(s){const e=s.slice(),t=[0];let n,o,r,a,c;const l=s.length;for(n=0;n<l;n++){const u=s[n];if(u!==0){if(o=t[t.length-1],s[o]<u){e[n]=o,t.push(n);continue}for(r=0,a=t.length-1;r<a;)c=r+a>>1,s[t[c]]<u?r=c+1:a=c;u<s[t[r]]&&(r>0&&(e[n]=t[r-1]),t[r]=n)}}for(r=t.length,a=t[r-1];r-- >0;)t[r]=a,a=e[a];return t}const isTeleport=s=>s.__isTeleport,Fragment=Symbol.for("v-fgt"),Text=Symbol.for("v-txt"),Comment=Symbol.for("v-cmt"),Static=Symbol.for("v-stc"),blockStack=[];let currentBlock=null;function openBlock(s=!1){blockStack.push(currentBlock=s?null:[])}function closeBlock(){blockStack.pop(),currentBlock=blockStack[blockStack.length-1]||null}let isBlockTreeEnabled=1;function setBlockTracking(s){isBlockTreeEnabled+=s}function setupBlock(s){return s.dynamicChildren=isBlockTreeEnabled>0?currentBlock||EMPTY_ARR:null,closeBlock(),isBlockTreeEnabled>0&&currentBlock&&currentBlock.push(s),s}function createElementBlock(s,e,t,n,o,r){return setupBlock(createBaseVNode(s,e,t,n,o,r,!0))}function createBlock(s,e,t,n,o){return setupBlock(createVNode(s,e,t,n,o,!0))}function isVNode(s){return s?s.__v_isVNode===!0:!1}function isSameVNodeType(s,e){return s.type===e.type&&s.key===e.key}const InternalObjectKey="__vInternal",normalizeKey=({key:s})=>s??null,normalizeRef=({ref:s,ref_key:e,ref_for:t})=>(typeof s=="number"&&(s=""+s),s!=null?isString$1(s)||isRef(s)||isFunction$1(s)?{i:currentRenderingInstance,r:s,k:e,f:!!t}:s:null);function createBaseVNode(s,e=null,t=null,n=0,o=null,r=s===Fragment?0:1,a=!1,c=!1){const l={__v_isVNode:!0,__v_skip:!0,type:s,props:e,key:e&&normalizeKey(e),ref:e&&normalizeRef(e),scopeId:currentScopeId,slotScopeIds:null,children:t,component:null,suspense:null,ssContent:null,ssFallback:null,dirs:null,transition:null,el:null,anchor:null,target:null,targetAnchor:null,staticCount:0,shapeFlag:r,patchFlag:n,dynamicProps:o,dynamicChildren:null,appContext:null,ctx:currentRenderingInstance};return c?(normalizeChildren(l,t),r&128&&s.normalize(l)):t&&(l.shapeFlag|=isString$1(t)?8:16),isBlockTreeEnabled>0&&!a&&currentBlock&&(l.patchFlag>0||r&6)&&l.patchFlag!==32&&currentBlock.push(l),l}const createVNode=_createVNode;function _createVNode(s,e=null,t=null,n=0,o=null,r=!1){if((!s||s===NULL_DYNAMIC_COMPONENT)&&(s=Comment),isVNode(s)){const c=cloneVNode(s,e,!0);return t&&normalizeChildren(c,t),isBlockTreeEnabled>0&&!r&&currentBlock&&(c.shapeFlag&6?currentBlock[currentBlock.indexOf(s)]=c:currentBlock.push(c)),c.patchFlag|=-2,c}if(isClassComponent(s)&&(s=s.__vccOpts),e){e=guardReactiveProps(e);let{class:c,style:l}=e;c&&!isString$1(c)&&(e.class=normalizeClass(c)),isObject$1(l)&&(isProxy(l)&&!isArray$2(l)&&(l=extend({},l)),e.style=normalizeStyle(l))}const a=isString$1(s)?1:isSuspense(s)?128:isTeleport(s)?64:isObject$1(s)?4:isFunction$1(s)?2:0;return createBaseVNode(s,e,t,n,o,a,r,!0)}function guardReactiveProps(s){return s?isProxy(s)||InternalObjectKey in s?extend({},s):s:null}function cloneVNode(s,e,t=!1){const{props:n,ref:o,patchFlag:r,children:a}=s,c=e?mergeProps(n||{},e):n;return{__v_isVNode:!0,__v_skip:!0,type:s.type,props:c,key:c&&normalizeKey(c),ref:e&&e.ref?t&&o?isArray$2(o)?o.concat(normalizeRef(e)):[o,normalizeRef(e)]:normalizeRef(e):o,scopeId:s.scopeId,slotScopeIds:s.slotScopeIds,children:a,target:s.target,targetAnchor:s.targetAnchor,staticCount:s.staticCount,shapeFlag:s.shapeFlag,patchFlag:e&&s.type!==Fragment?r===-1?16:r|16:r,dynamicProps:s.dynamicProps,dynamicChildren:s.dynamicChildren,appContext:s.appContext,dirs:s.dirs,transition:s.transition,component:s.component,suspense:s.suspense,ssContent:s.ssContent&&cloneVNode(s.ssContent),ssFallback:s.ssFallback&&cloneVNode(s.ssFallback),el:s.el,anchor:s.anchor,ctx:s.ctx,ce:s.ce}}function createTextVNode(s=" ",e=0){return createVNode(Text,null,s,e)}function createStaticVNode(s,e){const t=createVNode(Static,null,s);return t.staticCount=e,t}function createCommentVNode(s="",e=!1){return e?(openBlock(),createBlock(Comment,null,s)):createVNode(Comment,null,s)}function normalizeVNode(s){return s==null||typeof s=="boolean"?createVNode(Comment):isArray$2(s)?createVNode(Fragment,null,s.slice()):typeof s=="object"?cloneIfMounted(s):createVNode(Text,null,String(s))}function cloneIfMounted(s){return s.el===null&&s.patchFlag!==-1||s.memo?s:cloneVNode(s)}function normalizeChildren(s,e){let t=0;const{shapeFlag:n}=s;if(e==null)e=null;else if(isArray$2(e))t=16;else if(typeof e=="object")if(n&65){const o=e.default;o&&(o._c&&(o._d=!1),normalizeChildren(s,o()),o._c&&(o._d=!0));return}else{t=32;const o=e._;!o&&!(InternalObjectKey in e)?e._ctx=currentRenderingInstance:o===3&&currentRenderingInstance&&(currentRenderingInstance.slots._===1?e._=1:(e._=2,s.patchFlag|=1024))}else isFunction$1(e)?(e={default:e,_ctx:currentRenderingInstance},t=32):(e=String(e),n&64?(t=16,e=[createTextVNode(e)]):t=8);s.children=e,s.shapeFlag|=t}function mergeProps(...s){const e={};for(let t=0;t<s.length;t++){const n=s[t];for(const o in n)if(o==="class")e.class!==n.class&&(e.class=normalizeClass([e.class,n.class]));else if(o==="style")e.style=normalizeStyle([e.style,n.style]);else if(isOn(o)){const r=e[o],a=n[o];a&&r!==a&&!(isArray$2(r)&&r.includes(a))&&(e[o]=r?[].concat(r,a):a)}else o!==""&&(e[o]=n[o])}return e}function invokeVNodeHook(s,e,t,n=null){callWithAsyncErrorHandling(s,e,7,[t,n])}const emptyAppContext=createAppContext();let uid=0;function createComponentInstance(s,e,t){const n=s.type,o=(e?e.appContext:s.appContext)||emptyAppContext,r={uid:uid++,vnode:s,type:n,parent:e,appContext:o,root:null,next:null,subTree:null,effect:null,update:null,scope:new EffectScope(!0),render:null,proxy:null,exposed:null,exposeProxy:null,withProxy:null,provides:e?e.provides:Object.create(o.provides),accessCache:null,renderCache:[],components:null,directives:null,propsOptions:normalizePropsOptions(n,o),emitsOptions:normalizeEmitsOptions(n,o),emit:null,emitted:null,propsDefaults:EMPTY_OBJ,inheritAttrs:n.inheritAttrs,ctx:EMPTY_OBJ,data:EMPTY_OBJ,props:EMPTY_OBJ,attrs:EMPTY_OBJ,slots:EMPTY_OBJ,refs:EMPTY_OBJ,setupState:EMPTY_OBJ,setupContext:null,attrsProxy:null,slotsProxy:null,suspense:t,suspenseId:t?t.pendingId:0,asyncDep:null,asyncResolved:!1,isMounted:!1,isUnmounted:!1,isDeactivated:!1,bc:null,c:null,bm:null,m:null,bu:null,u:null,um:null,bum:null,da:null,a:null,rtg:null,rtc:null,ec:null,sp:null};return r.ctx={_:r},r.root=e?e.root:r,r.emit=emit.bind(null,r),s.ce&&s.ce(r),r}let currentInstance=null;const getCurrentInstance=()=>currentInstance||currentRenderingInstance;let internalSetCurrentInstance,globalCurrentInstanceSetters,settersKey="__VUE_INSTANCE_SETTERS__";(globalCurrentInstanceSetters=getGlobalThis()[settersKey])||(globalCurrentInstanceSetters=getGlobalThis()[settersKey]=[]),globalCurrentInstanceSetters.push(s=>currentInstance=s),internalSetCurrentInstance=s=>{globalCurrentInstanceSetters.length>1?globalCurrentInstanceSetters.forEach(e=>e(s)):globalCurrentInstanceSetters[0](s)};const setCurrentInstance=s=>{internalSetCurrentInstance(s),s.scope.on()},unsetCurrentInstance=()=>{currentInstance&&currentInstance.scope.off(),internalSetCurrentInstance(null)};function isStatefulComponent(s){return s.vnode.shapeFlag&4}let isInSSRComponentSetup=!1;function setupComponent(s,e=!1){isInSSRComponentSetup=e;const{props:t,children:n}=s.vnode,o=isStatefulComponent(s);initProps(s,t,o,e),initSlots(s,n);const r=o?setupStatefulComponent(s,e):void 0;return isInSSRComponentSetup=!1,r}function setupStatefulComponent(s,e){const t=s.type;s.accessCache=Object.create(null),s.proxy=markRaw(new Proxy(s.ctx,PublicInstanceProxyHandlers));const{setup:n}=t;if(n){const o=s.setupContext=n.length>1?createSetupContext(s):null;setCurrentInstance(s),pauseTracking();const r=callWithErrorHandling(n,s,0,[s.props,o]);if(resetTracking(),unsetCurrentInstance(),isPromise(r)){if(r.then(unsetCurrentInstance,unsetCurrentInstance),e)return r.then(a=>{handleSetupResult(s,a,e)}).catch(a=>{handleError(a,s,0)});s.asyncDep=r}else handleSetupResult(s,r,e)}else finishComponentSetup(s,e)}function handleSetupResult(s,e,t){isFunction$1(e)?s.type.__ssrInlineRender?s.ssrRender=e:s.render=e:isObject$1(e)&&(s.setupState=proxyRefs(e)),finishComponentSetup(s,t)}let compile;function finishComponentSetup(s,e,t){const n=s.type;if(!s.render){if(!e&&compile&&!n.render){const o=n.template||resolveMergedOptions(s).template;if(o){const{isCustomElement:r,compilerOptions:a}=s.appContext.config,{delimiters:c,compilerOptions:l}=n,u=extend(extend({isCustomElement:r,delimiters:c},a),l);n.render=compile(o,u)}}s.render=n.render||NOOP}setCurrentInstance(s),pauseTracking(),applyOptions(s),resetTracking(),unsetCurrentInstance()}function getAttrsProxy(s){return s.attrsProxy||(s.attrsProxy=new Proxy(s.attrs,{get(e,t){return track(s,"get","$attrs"),e[t]}}))}function createSetupContext(s){const e=t=>{s.exposed=t||{}};return{get attrs(){return getAttrsProxy(s)},slots:s.slots,emit:s.emit,expose:e}}function getExposeProxy(s){if(s.exposed)return s.exposeProxy||(s.exposeProxy=new Proxy(proxyRefs(markRaw(s.exposed)),{get(e,t){if(t in e)return e[t];if(t in publicPropertiesMap)return publicPropertiesMap[t](s)},has(e,t){return t in e||t in publicPropertiesMap}}))}function getComponentName(s,e=!0){return isFunction$1(s)?s.displayName||s.name:s.name||e&&s.__name}function isClassComponent(s){return isFunction$1(s)&&"__vccOpts"in s}const computed=(s,e)=>computed$1(s,e,isInSSRComponentSetup);function h(s,e,t){const n=arguments.length;return n===2?isObject$1(e)&&!isArray$2(e)?isVNode(e)?createVNode(s,null,[e]):createVNode(s,e):createVNode(s,null,e):(n>3?t=Array.prototype.slice.call(arguments,2):n===3&&isVNode(t)&&(t=[t]),createVNode(s,e,t))}const ssrContextKey=Symbol.for("v-scx"),useSSRContext=()=>inject(ssrContextKey),version$1="3.3.4",svgNS="http://www.w3.org/2000/svg",doc=typeof document<"u"?document:null,templateContainer=doc&&doc.createElement("template"),nodeOps={insert:(s,e,t)=>{e.insertBefore(s,t||null)},remove:s=>{const e=s.parentNode;e&&e.removeChild(s)},createElement:(s,e,t,n)=>{const o=e?doc.createElementNS(svgNS,s):doc.createElement(s,t?{is:t}:void 0);return s==="select"&&n&&n.multiple!=null&&o.setAttribute("multiple",n.multiple),o},createText:s=>doc.createTextNode(s),createComment:s=>doc.createComment(s),setText:(s,e)=>{s.nodeValue=e},setElementText:(s,e)=>{s.textContent=e},parentNode:s=>s.parentNode,nextSibling:s=>s.nextSibling,querySelector:s=>doc.querySelector(s),setScopeId(s,e){s.setAttribute(e,"")},insertStaticContent(s,e,t,n,o,r){const a=t?t.previousSibling:e.lastChild;if(o&&(o===r||o.nextSibling))for(;e.insertBefore(o.cloneNode(!0),t),!(o===r||!(o=o.nextSibling)););else{templateContainer.innerHTML=n?`<svg>${s}</svg>`:s;const c=templateContainer.content;if(n){const l=c.firstChild;for(;l.firstChild;)c.appendChild(l.firstChild);c.removeChild(l)}e.insertBefore(c,t)}return[a?a.nextSibling:e.firstChild,t?t.previousSibling:e.lastChild]}};function patchClass(s,e,t){const n=s._vtc;n&&(e=(e?[e,...n]:[...n]).join(" ")),e==null?s.removeAttribute("class"):t?s.setAttribute("class",e):s.className=e}function patchStyle(s,e,t){const n=s.style,o=isString$1(t);if(t&&!o){if(e&&!isString$1(e))for(const r in e)t[r]==null&&setStyle(n,r,"");for(const r in t)setStyle(n,r,t[r])}else{const r=n.display;o?e!==t&&(n.cssText=t):e&&s.removeAttribute("style"),"_vod"in s&&(n.display=r)}}const importantRE=/\s*!important$/;function setStyle(s,e,t){if(isArray$2(t))t.forEach(n=>setStyle(s,e,n));else if(t==null&&(t=""),e.startsWith("--"))s.setProperty(e,t);else{const n=autoPrefix(s,e);importantRE.test(t)?s.setProperty(hyphenate(n),t.replace(importantRE,""),"important"):s[n]=t}}const prefixes=["Webkit","Moz","ms"],prefixCache={};function autoPrefix(s,e){const t=prefixCache[e];if(t)return t;let n=camelize(e);if(n!=="filter"&&n in s)return prefixCache[e]=n;n=capitalize(n);for(let o=0;o<prefixes.length;o++){const r=prefixes[o]+n;if(r in s)return prefixCache[e]=r}return e}const xlinkNS="http://www.w3.org/1999/xlink";function patchAttr(s,e,t,n,o){if(n&&e.startsWith("xlink:"))t==null?s.removeAttributeNS(xlinkNS,e.slice(6,e.length)):s.setAttributeNS(xlinkNS,e,t);else{const r=isSpecialBooleanAttr(e);t==null||r&&!includeBooleanAttr(t)?s.removeAttribute(e):s.setAttribute(e,r?"":t)}}function patchDOMProp(s,e,t,n,o,r,a){if(e==="innerHTML"||e==="textContent"){n&&a(n,o,r),s[e]=t??"";return}const c=s.tagName;if(e==="value"&&c!=="PROGRESS"&&!c.includes("-")){s._value=t;const u=c==="OPTION"?s.getAttribute("value"):s.value,d=t??"";u!==d&&(s.value=d),t==null&&s.removeAttribute(e);return}let l=!1;if(t===""||t==null){const u=typeof s[e];u==="boolean"?t=includeBooleanAttr(t):t==null&&u==="string"?(t="",l=!0):u==="number"&&(t=0,l=!0)}try{s[e]=t}catch{}l&&s.removeAttribute(e)}function addEventListener(s,e,t,n){s.addEventListener(e,t,n)}function removeEventListener(s,e,t,n){s.removeEventListener(e,t,n)}function patchEvent(s,e,t,n,o=null){const r=s._vei||(s._vei={}),a=r[e];if(n&&a)a.value=n;else{const[c,l]=parseName(e);if(n){const u=r[e]=createInvoker(n,o);addEventListener(s,c,u,l)}else a&&(removeEventListener(s,c,a,l),r[e]=void 0)}}const optionsModifierRE=/(?:Once|Passive|Capture)$/;function parseName(s){let e;if(optionsModifierRE.test(s)){e={};let n;for(;n=s.match(optionsModifierRE);)s=s.slice(0,s.length-n[0].length),e[n[0].toLowerCase()]=!0}return[s[2]===":"?s.slice(3):hyphenate(s.slice(2)),e]}let cachedNow=0;const p=Promise.resolve(),getNow=()=>cachedNow||(p.then(()=>cachedNow=0),cachedNow=Date.now());function createInvoker(s,e){const t=n=>{if(!n._vts)n._vts=Date.now();else if(n._vts<=t.attached)return;callWithAsyncErrorHandling(patchStopImmediatePropagation(n,t.value),e,5,[n])};return t.value=s,t.attached=getNow(),t}function patchStopImmediatePropagation(s,e){if(isArray$2(e)){const t=s.stopImmediatePropagation;return s.stopImmediatePropagation=()=>{t.call(s),s._stopped=!0},e.map(n=>o=>!o._stopped&&n&&n(o))}else return e}const nativeOnRE=/^on[a-z]/,patchProp=(s,e,t,n,o=!1,r,a,c,l)=>{e==="class"?patchClass(s,n,o):e==="style"?patchStyle(s,t,n):isOn(e)?isModelListener(e)||patchEvent(s,e,t,n,a):(e[0]==="."?(e=e.slice(1),!0):e[0]==="^"?(e=e.slice(1),!1):shouldSetAsProp(s,e,n,o))?patchDOMProp(s,e,n,r,a,c,l):(e==="true-value"?s._trueValue=n:e==="false-value"&&(s._falseValue=n),patchAttr(s,e,n,o))};function shouldSetAsProp(s,e,t,n){return n?!!(e==="innerHTML"||e==="textContent"||e in s&&nativeOnRE.test(e)&&isFunction$1(t)):e==="spellcheck"||e==="draggable"||e==="translate"||e==="form"||e==="list"&&s.tagName==="INPUT"||e==="type"&&s.tagName==="TEXTAREA"||nativeOnRE.test(e)&&isString$1(t)?!1:e in s}function useCssVars(s){const e=getCurrentInstance();if(!e)return;const t=e.ut=(o=s(e.proxy))=>{Array.from(document.querySelectorAll(`[data-v-owner="${e.uid}"]`)).forEach(r=>setVarsOnNode(r,o))},n=()=>{const o=s(e.proxy);setVarsOnVNode(e.subTree,o),t(o)};watchPostEffect(n),onMounted(()=>{const o=new MutationObserver(n);o.observe(e.subTree.el.parentNode,{childList:!0}),onUnmounted(()=>o.disconnect())})}function setVarsOnVNode(s,e){if(s.shapeFlag&128){const t=s.suspense;s=t.activeBranch,t.pendingBranch&&!t.isHydrating&&t.effects.push(()=>{setVarsOnVNode(t.activeBranch,e)})}for(;s.component;)s=s.component.subTree;if(s.shapeFlag&1&&s.el)setVarsOnNode(s.el,e);else if(s.type===Fragment)s.children.forEach(t=>setVarsOnVNode(t,e));else if(s.type===Static){let{el:t,anchor:n}=s;for(;t&&(setVarsOnNode(t,e),t!==n);)t=t.nextSibling}}function setVarsOnNode(s,e){if(s.nodeType===1){const t=s.style;for(const n in e)t.setProperty(`--${n}`,e[n])}}const getModelAssigner=s=>{const e=s.props["onUpdate:modelValue"]||!1;return isArray$2(e)?t=>invokeArrayFns(e,t):e};function onCompositionStart(s){s.target.composing=!0}function onCompositionEnd(s){const e=s.target;e.composing&&(e.composing=!1,e.dispatchEvent(new Event("input")))}const vModelText={created(s,{modifiers:{lazy:e,trim:t,number:n}},o){s._assign=getModelAssigner(o);const r=n||o.props&&o.props.type==="number";addEventListener(s,e?"change":"input",a=>{if(a.target.composing)return;let c=s.value;t&&(c=c.trim()),r&&(c=looseToNumber(c)),s._assign(c)}),t&&addEventListener(s,"change",()=>{s.value=s.value.trim()}),e||(addEventListener(s,"compositionstart",onCompositionStart),addEventListener(s,"compositionend",onCompositionEnd),addEventListener(s,"change",onCompositionEnd))},mounted(s,{value:e}){s.value=e??""},beforeUpdate(s,{value:e,modifiers:{lazy:t,trim:n,number:o}},r){if(s._assign=getModelAssigner(r),s.composing||document.activeElement===s&&s.type!=="range"&&(t||n&&s.value.trim()===e||(o||s.type==="number")&&looseToNumber(s.value)===e))return;const a=e??"";s.value!==a&&(s.value=a)}},vModelSelect={deep:!0,created(s,{value:e,modifiers:{number:t}},n){const o=isSet(e);addEventListener(s,"change",()=>{const r=Array.prototype.filter.call(s.options,a=>a.selected).map(a=>t?looseToNumber(getValue(a)):getValue(a));s._assign(s.multiple?o?new Set(r):r:r[0])}),s._assign=getModelAssigner(n)},mounted(s,{value:e}){setSelected(s,e)},beforeUpdate(s,e,t){s._assign=getModelAssigner(t)},updated(s,{value:e}){setSelected(s,e)}};function setSelected(s,e){const t=s.multiple;if(!(t&&!isArray$2(e)&&!isSet(e))){for(let n=0,o=s.options.length;n<o;n++){const r=s.options[n],a=getValue(r);if(t)isArray$2(e)?r.selected=looseIndexOf(e,a)>-1:r.selected=e.has(a);else if(looseEqual(getValue(r),e)){s.selectedIndex!==n&&(s.selectedIndex=n);return}}!t&&s.selectedIndex!==-1&&(s.selectedIndex=-1)}}function getValue(s){return"_value"in s?s._value:s.value}const systemModifiers=["ctrl","shift","alt","meta"],modifierGuards={stop:s=>s.stopPropagation(),prevent:s=>s.preventDefault(),self:s=>s.target!==s.currentTarget,ctrl:s=>!s.ctrlKey,shift:s=>!s.shiftKey,alt:s=>!s.altKey,meta:s=>!s.metaKey,left:s=>"button"in s&&s.button!==0,middle:s=>"button"in s&&s.button!==1,right:s=>"button"in s&&s.button!==2,exact:(s,e)=>systemModifiers.some(t=>s[`${t}Key`]&&!e.includes(t))},withModifiers=(s,e)=>(t,...n)=>{for(let o=0;o<e.length;o++){const r=modifierGuards[e[o]];if(r&&r(t,e))return}return s(t,...n)},rendererOptions=extend({patchProp},nodeOps);let renderer;function ensureRenderer(){return renderer||(renderer=createRenderer(rendererOptions))}const createApp=(...s)=>{const e=ensureRenderer().createApp(...s),{mount:t}=e;return e.mount=n=>{const o=normalizeContainer(n);if(!o)return;const r=e._component;!isFunction$1(r)&&!r.render&&!r.template&&(r.template=o.innerHTML),o.innerHTML="";const a=t(o,!1,o instanceof SVGElement);return o instanceof Element&&(o.removeAttribute("v-cloak"),o.setAttribute("data-v-app","")),a},e};function normalizeContainer(s){return isString$1(s)?document.querySelector(s):s}/*!
  * vue-router v4.2.5
  * (c) 2023 Eduardo San Martin Morote
  * @license MIT
  */const isBrowser=typeof window<"u";function isESModule(s){return s.__esModule||s[Symbol.toStringTag]==="Module"}const assign=Object.assign;function applyToParams(s,e){const t={};for(const n in e){const o=e[n];t[n]=isArray$1(o)?o.map(s):s(o)}return t}const noop=()=>{},isArray$1=Array.isArray,TRAILING_SLASH_RE=/\/$/,removeTrailingSlash=s=>s.replace(TRAILING_SLASH_RE,"");function parseURL(s,e,t="/"){let n,o={},r="",a="";const c=e.indexOf("#");let l=e.indexOf("?");return c<l&&c>=0&&(l=-1),l>-1&&(n=e.slice(0,l),r=e.slice(l+1,c>-1?c:e.length),o=s(r)),c>-1&&(n=n||e.slice(0,c),a=e.slice(c,e.length)),n=resolveRelativePath(n??e,t),{fullPath:n+(r&&"?")+r+a,path:n,query:o,hash:a}}function stringifyURL(s,e){const t=e.query?s(e.query):"";return e.path+(t&&"?")+t+(e.hash||"")}function stripBase(s,e){return!e||!s.toLowerCase().startsWith(e.toLowerCase())?s:s.slice(e.length)||"/"}function isSameRouteLocation(s,e,t){const n=e.matched.length-1,o=t.matched.length-1;return n>-1&&n===o&&isSameRouteRecord(e.matched[n],t.matched[o])&&isSameRouteLocationParams(e.params,t.params)&&s(e.query)===s(t.query)&&e.hash===t.hash}function isSameRouteRecord(s,e){return(s.aliasOf||s)===(e.aliasOf||e)}function isSameRouteLocationParams(s,e){if(Object.keys(s).length!==Object.keys(e).length)return!1;for(const t in s)if(!isSameRouteLocationParamsValue(s[t],e[t]))return!1;return!0}function isSameRouteLocationParamsValue(s,e){return isArray$1(s)?isEquivalentArray(s,e):isArray$1(e)?isEquivalentArray(e,s):s===e}function isEquivalentArray(s,e){return isArray$1(e)?s.length===e.length&&s.every((t,n)=>t===e[n]):s.length===1&&s[0]===e}function resolveRelativePath(s,e){if(s.startsWith("/"))return s;if(!s)return e;const t=e.split("/"),n=s.split("/"),o=n[n.length-1];(o===".."||o===".")&&n.push("");let r=t.length-1,a,c;for(a=0;a<n.length;a++)if(c=n[a],c!==".")if(c==="..")r>1&&r--;else break;return t.slice(0,r).join("/")+"/"+n.slice(a-(a===n.length?1:0)).join("/")}var NavigationType;(function(s){s.pop="pop",s.push="push"})(NavigationType||(NavigationType={}));var NavigationDirection;(function(s){s.back="back",s.forward="forward",s.unknown=""})(NavigationDirection||(NavigationDirection={}));function normalizeBase(s){if(!s)if(isBrowser){const e=document.querySelector("base");s=e&&e.getAttribute("href")||"/",s=s.replace(/^\w+:\/\/[^\/]+/,"")}else s="/";return s[0]!=="/"&&s[0]!=="#"&&(s="/"+s),removeTrailingSlash(s)}const BEFORE_HASH_RE=/^[^#]+#/;function createHref(s,e){return s.replace(BEFORE_HASH_RE,"#")+e}function getElementPosition(s,e){const t=document.documentElement.getBoundingClientRect(),n=s.getBoundingClientRect();return{behavior:e.behavior,left:n.left-t.left-(e.left||0),top:n.top-t.top-(e.top||0)}}const computeScrollPosition=()=>({left:window.pageXOffset,top:window.pageYOffset});function scrollToPosition(s){let e;if("el"in s){const t=s.el,n=typeof t=="string"&&t.startsWith("#"),o=typeof t=="string"?n?document.getElementById(t.slice(1)):document.querySelector(t):t;if(!o)return;e=getElementPosition(o,s)}else e=s;"scrollBehavior"in document.documentElement.style?window.scrollTo(e):window.scrollTo(e.left!=null?e.left:window.pageXOffset,e.top!=null?e.top:window.pageYOffset)}function getScrollKey(s,e){return(history.state?history.state.position-e:-1)+s}const scrollPositions=new Map;function saveScrollPosition(s,e){scrollPositions.set(s,e)}function getSavedScrollPosition(s){const e=scrollPositions.get(s);return scrollPositions.delete(s),e}let createBaseLocation=()=>location.protocol+"//"+location.host;function createCurrentLocation(s,e){const{pathname:t,search:n,hash:o}=e,r=s.indexOf("#");if(r>-1){let c=o.includes(s.slice(r))?s.slice(r).length:1,l=o.slice(c);return l[0]!=="/"&&(l="/"+l),stripBase(l,"")}return stripBase(t,s)+n+o}function useHistoryListeners(s,e,t,n){let o=[],r=[],a=null;const c=({state:m})=>{const g=createCurrentLocation(s,location),_=t.value,y=e.value;let A=0;if(m){if(t.value=g,e.value=m,a&&a===_){a=null;return}A=y?m.position-y.position:0}else n(g);o.forEach(N=>{N(t.value,_,{delta:A,type:NavigationType.pop,direction:A?A>0?NavigationDirection.forward:NavigationDirection.back:NavigationDirection.unknown})})};function l(){a=t.value}function u(m){o.push(m);const g=()=>{const _=o.indexOf(m);_>-1&&o.splice(_,1)};return r.push(g),g}function d(){const{history:m}=window;m.state&&m.replaceState(assign({},m.state,{scroll:computeScrollPosition()}),"")}function f(){for(const m of r)m();r=[],window.removeEventListener("popstate",c),window.removeEventListener("beforeunload",d)}return window.addEventListener("popstate",c),window.addEventListener("beforeunload",d,{passive:!0}),{pauseListeners:l,listen:u,destroy:f}}function buildState(s,e,t,n=!1,o=!1){return{back:s,current:e,forward:t,replaced:n,position:window.history.length,scroll:o?computeScrollPosition():null}}function useHistoryStateNavigation(s){const{history:e,location:t}=window,n={value:createCurrentLocation(s,t)},o={value:e.state};o.value||r(n.value,{back:null,current:n.value,forward:null,position:e.length-1,replaced:!0,scroll:null},!0);function r(l,u,d){const f=s.indexOf("#"),m=f>-1?(t.host&&document.querySelector("base")?s:s.slice(f))+l:createBaseLocation()+s+l;try{e[d?"replaceState":"pushState"](u,"",m),o.value=u}catch(g){console.error(g),t[d?"replace":"assign"](m)}}function a(l,u){const d=assign({},e.state,buildState(o.value.back,l,o.value.forward,!0),u,{position:o.value.position});r(l,d,!0),n.value=l}function c(l,u){const d=assign({},o.value,e.state,{forward:l,scroll:computeScrollPosition()});r(d.current,d,!0);const f=assign({},buildState(n.value,l,null),{position:d.position+1},u);r(l,f,!1),n.value=l}return{location:n,state:o,push:c,replace:a}}function createWebHistory(s){s=normalizeBase(s);const e=useHistoryStateNavigation(s),t=useHistoryListeners(s,e.state,e.location,e.replace);function n(r,a=!0){a||t.pauseListeners(),history.go(r)}const o=assign({location:"",base:s,go:n,createHref:createHref.bind(null,s)},e,t);return Object.defineProperty(o,"location",{enumerable:!0,get:()=>e.location.value}),Object.defineProperty(o,"state",{enumerable:!0,get:()=>e.state.value}),o}function isRouteLocation(s){return typeof s=="string"||s&&typeof s=="object"}function isRouteName(s){return typeof s=="string"||typeof s=="symbol"}const START_LOCATION_NORMALIZED={path:"/",name:void 0,params:{},query:{},hash:"",fullPath:"/",matched:[],meta:{},redirectedFrom:void 0},NavigationFailureSymbol=Symbol("");var NavigationFailureType;(function(s){s[s.aborted=4]="aborted",s[s.cancelled=8]="cancelled",s[s.duplicated=16]="duplicated"})(NavigationFailureType||(NavigationFailureType={}));function createRouterError(s,e){return assign(new Error,{type:s,[NavigationFailureSymbol]:!0},e)}function isNavigationFailure(s,e){return s instanceof Error&&NavigationFailureSymbol in s&&(e==null||!!(s.type&e))}const BASE_PARAM_PATTERN="[^/]+?",BASE_PATH_PARSER_OPTIONS={sensitive:!1,strict:!1,start:!0,end:!0},REGEX_CHARS_RE=/[.+*?^${}()[\]/\\]/g;function tokensToParser(s,e){const t=assign({},BASE_PATH_PARSER_OPTIONS,e),n=[];let o=t.start?"^":"";const r=[];for(const u of s){const d=u.length?[]:[90];t.strict&&!u.length&&(o+="/");for(let f=0;f<u.length;f++){const m=u[f];let g=40+(t.sensitive?.25:0);if(m.type===0)f||(o+="/"),o+=m.value.replace(REGEX_CHARS_RE,"\\$&"),g+=40;else if(m.type===1){const{value:_,repeatable:y,optional:A,regexp:N}=m;r.push({name:_,repeatable:y,optional:A});const x=N||BASE_PARAM_PATTERN;if(x!==BASE_PARAM_PATTERN){g+=10;try{new RegExp(`(${x})`)}catch(E){throw new Error(`Invalid custom RegExp for param "${_}" (${x}): `+E.message)}}let M=y?`((?:${x})(?:/(?:${x}))*)`:`(${x})`;f||(M=A&&u.length<2?`(?:/${M})`:"/"+M),A&&(M+="?"),o+=M,g+=20,A&&(g+=-8),y&&(g+=-20),x===".*"&&(g+=-50)}d.push(g)}n.push(d)}if(t.strict&&t.end){const u=n.length-1;n[u][n[u].length-1]+=.7000000000000001}t.strict||(o+="/?"),t.end?o+="$":t.strict&&(o+="(?:/|$)");const a=new RegExp(o,t.sensitive?"":"i");function c(u){const d=u.match(a),f={};if(!d)return null;for(let m=1;m<d.length;m++){const g=d[m]||"",_=r[m-1];f[_.name]=g&&_.repeatable?g.split("/"):g}return f}function l(u){let d="",f=!1;for(const m of s){(!f||!d.endsWith("/"))&&(d+="/"),f=!1;for(const g of m)if(g.type===0)d+=g.value;else if(g.type===1){const{value:_,repeatable:y,optional:A}=g,N=_ in u?u[_]:"";if(isArray$1(N)&&!y)throw new Error(`Provided param "${_}" is an array but it is not repeatable (* or + modifiers)`);const x=isArray$1(N)?N.join("/"):N;if(!x)if(A)m.length<2&&(d.endsWith("/")?d=d.slice(0,-1):f=!0);else throw new Error(`Missing required param "${_}"`);d+=x}}return d||"/"}return{re:a,score:n,keys:r,parse:c,stringify:l}}function compareScoreArray(s,e){let t=0;for(;t<s.length&&t<e.length;){const n=e[t]-s[t];if(n)return n;t++}return s.length<e.length?s.length===1&&s[0]===40+40?-1:1:s.length>e.length?e.length===1&&e[0]===40+40?1:-1:0}function comparePathParserScore(s,e){let t=0;const n=s.score,o=e.score;for(;t<n.length&&t<o.length;){const r=compareScoreArray(n[t],o[t]);if(r)return r;t++}if(Math.abs(o.length-n.length)===1){if(isLastScoreNegative(n))return 1;if(isLastScoreNegative(o))return-1}return o.length-n.length}function isLastScoreNegative(s){const e=s[s.length-1];return s.length>0&&e[e.length-1]<0}const ROOT_TOKEN={type:0,value:""},VALID_PARAM_RE=/[a-zA-Z0-9_]/;function tokenizePath(s){if(!s)return[[]];if(s==="/")return[[ROOT_TOKEN]];if(!s.startsWith("/"))throw new Error(`Invalid path "${s}"`);function e(g){throw new Error(`ERR (${t})/"${u}": ${g}`)}let t=0,n=t;const o=[];let r;function a(){r&&o.push(r),r=[]}let c=0,l,u="",d="";function f(){u&&(t===0?r.push({type:0,value:u}):t===1||t===2||t===3?(r.length>1&&(l==="*"||l==="+")&&e(`A repeatable param (${u}) must be alone in its segment. eg: '/:ids+.`),r.push({type:1,value:u,regexp:d,repeatable:l==="*"||l==="+",optional:l==="*"||l==="?"})):e("Invalid state to consume buffer"),u="")}function m(){u+=l}for(;c<s.length;){if(l=s[c++],l==="\\"&&t!==2){n=t,t=4;continue}switch(t){case 0:l==="/"?(u&&f(),a()):l===":"?(f(),t=1):m();break;case 4:m(),t=n;break;case 1:l==="("?t=2:VALID_PARAM_RE.test(l)?m():(f(),t=0,l!=="*"&&l!=="?"&&l!=="+"&&c--);break;case 2:l===")"?d[d.length-1]=="\\"?d=d.slice(0,-1)+l:t=3:d+=l;break;case 3:f(),t=0,l!=="*"&&l!=="?"&&l!=="+"&&c--,d="";break;default:e("Unknown state");break}}return t===2&&e(`Unfinished custom RegExp for param "${u}"`),f(),a(),o}function createRouteRecordMatcher(s,e,t){const n=tokensToParser(tokenizePath(s.path),t),o=assign(n,{record:s,parent:e,children:[],alias:[]});return e&&!o.record.aliasOf==!e.record.aliasOf&&e.children.push(o),o}function createRouterMatcher(s,e){const t=[],n=new Map;e=mergeOptions({strict:!1,end:!0,sensitive:!1},e);function o(d){return n.get(d)}function r(d,f,m){const g=!m,_=normalizeRouteRecord(d);_.aliasOf=m&&m.record;const y=mergeOptions(e,d),A=[_];if("alias"in d){const M=typeof d.alias=="string"?[d.alias]:d.alias;for(const E of M)A.push(assign({},_,{components:m?m.record.components:_.components,path:E,aliasOf:m?m.record:_}))}let N,x;for(const M of A){const{path:E}=M;if(f&&E[0]!=="/"){const T=f.record.path,k=T[T.length-1]==="/"?"":"/";M.path=f.record.path+(E&&k+E)}if(N=createRouteRecordMatcher(M,f,y),m?m.alias.push(N):(x=x||N,x!==N&&x.alias.push(N),g&&d.name&&!isAliasRecord(N)&&a(d.name)),_.children){const T=_.children;for(let k=0;k<T.length;k++)r(T[k],N,m&&m.children[k])}m=m||N,(N.record.components&&Object.keys(N.record.components).length||N.record.name||N.record.redirect)&&l(N)}return x?()=>{a(x)}:noop}function a(d){if(isRouteName(d)){const f=n.get(d);f&&(n.delete(d),t.splice(t.indexOf(f),1),f.children.forEach(a),f.alias.forEach(a))}else{const f=t.indexOf(d);f>-1&&(t.splice(f,1),d.record.name&&n.delete(d.record.name),d.children.forEach(a),d.alias.forEach(a))}}function c(){return t}function l(d){let f=0;for(;f<t.length&&comparePathParserScore(d,t[f])>=0&&(d.record.path!==t[f].record.path||!isRecordChildOf(d,t[f]));)f++;t.splice(f,0,d),d.record.name&&!isAliasRecord(d)&&n.set(d.record.name,d)}function u(d,f){let m,g={},_,y;if("name"in d&&d.name){if(m=n.get(d.name),!m)throw createRouterError(1,{location:d});y=m.record.name,g=assign(paramsFromLocation(f.params,m.keys.filter(x=>!x.optional).map(x=>x.name)),d.params&&paramsFromLocation(d.params,m.keys.map(x=>x.name))),_=m.stringify(g)}else if("path"in d)_=d.path,m=t.find(x=>x.re.test(_)),m&&(g=m.parse(_),y=m.record.name);else{if(m=f.name?n.get(f.name):t.find(x=>x.re.test(f.path)),!m)throw createRouterError(1,{location:d,currentLocation:f});y=m.record.name,g=assign({},f.params,d.params),_=m.stringify(g)}const A=[];let N=m;for(;N;)A.unshift(N.record),N=N.parent;return{name:y,path:_,params:g,matched:A,meta:mergeMetaFields(A)}}return s.forEach(d=>r(d)),{addRoute:r,resolve:u,removeRoute:a,getRoutes:c,getRecordMatcher:o}}function paramsFromLocation(s,e){const t={};for(const n of e)n in s&&(t[n]=s[n]);return t}function normalizeRouteRecord(s){return{path:s.path,redirect:s.redirect,name:s.name,meta:s.meta||{},aliasOf:void 0,beforeEnter:s.beforeEnter,props:normalizeRecordProps(s),children:s.children||[],instances:{},leaveGuards:new Set,updateGuards:new Set,enterCallbacks:{},components:"components"in s?s.components||null:s.component&&{default:s.component}}}function normalizeRecordProps(s){const e={},t=s.props||!1;if("component"in s)e.default=t;else for(const n in s.components)e[n]=typeof t=="object"?t[n]:t;return e}function isAliasRecord(s){for(;s;){if(s.record.aliasOf)return!0;s=s.parent}return!1}function mergeMetaFields(s){return s.reduce((e,t)=>assign(e,t.meta),{})}function mergeOptions(s,e){const t={};for(const n in s)t[n]=n in e?e[n]:s[n];return t}function isRecordChildOf(s,e){return e.children.some(t=>t===s||isRecordChildOf(s,t))}const HASH_RE=/#/g,AMPERSAND_RE=/&/g,SLASH_RE=/\//g,EQUAL_RE=/=/g,IM_RE=/\?/g,PLUS_RE=/\+/g,ENC_BRACKET_OPEN_RE=/%5B/g,ENC_BRACKET_CLOSE_RE=/%5D/g,ENC_CARET_RE=/%5E/g,ENC_BACKTICK_RE=/%60/g,ENC_CURLY_OPEN_RE=/%7B/g,ENC_PIPE_RE=/%7C/g,ENC_CURLY_CLOSE_RE=/%7D/g,ENC_SPACE_RE=/%20/g;function commonEncode(s){return encodeURI(""+s).replace(ENC_PIPE_RE,"|").replace(ENC_BRACKET_OPEN_RE,"[").replace(ENC_BRACKET_CLOSE_RE,"]")}function encodeHash(s){return commonEncode(s).replace(ENC_CURLY_OPEN_RE,"{").replace(ENC_CURLY_CLOSE_RE,"}").replace(ENC_CARET_RE,"^")}function encodeQueryValue(s){return commonEncode(s).replace(PLUS_RE,"%2B").replace(ENC_SPACE_RE,"+").replace(HASH_RE,"%23").replace(AMPERSAND_RE,"%26").replace(ENC_BACKTICK_RE,"`").replace(ENC_CURLY_OPEN_RE,"{").replace(ENC_CURLY_CLOSE_RE,"}").replace(ENC_CARET_RE,"^")}function encodeQueryKey(s){return encodeQueryValue(s).replace(EQUAL_RE,"%3D")}function encodePath(s){return commonEncode(s).replace(HASH_RE,"%23").replace(IM_RE,"%3F")}function encodeParam(s){return s==null?"":encodePath(s).replace(SLASH_RE,"%2F")}function decode(s){try{return decodeURIComponent(""+s)}catch{}return""+s}function parseQuery(s){const e={};if(s===""||s==="?")return e;const n=(s[0]==="?"?s.slice(1):s).split("&");for(let o=0;o<n.length;++o){const r=n[o].replace(PLUS_RE," "),a=r.indexOf("="),c=decode(a<0?r:r.slice(0,a)),l=a<0?null:decode(r.slice(a+1));if(c in e){let u=e[c];isArray$1(u)||(u=e[c]=[u]),u.push(l)}else e[c]=l}return e}function stringifyQuery(s){let e="";for(let t in s){const n=s[t];if(t=encodeQueryKey(t),n==null){n!==void 0&&(e+=(e.length?"&":"")+t);continue}(isArray$1(n)?n.map(r=>r&&encodeQueryValue(r)):[n&&encodeQueryValue(n)]).forEach(r=>{r!==void 0&&(e+=(e.length?"&":"")+t,r!=null&&(e+="="+r))})}return e}function normalizeQuery(s){const e={};for(const t in s){const n=s[t];n!==void 0&&(e[t]=isArray$1(n)?n.map(o=>o==null?null:""+o):n==null?n:""+n)}return e}const matchedRouteKey=Symbol(""),viewDepthKey=Symbol(""),routerKey=Symbol(""),routeLocationKey=Symbol(""),routerViewLocationKey=Symbol("");function useCallbacks(){let s=[];function e(n){return s.push(n),()=>{const o=s.indexOf(n);o>-1&&s.splice(o,1)}}function t(){s=[]}return{add:e,list:()=>s.slice(),reset:t}}function guardToPromiseFn(s,e,t,n,o){const r=n&&(n.enterCallbacks[o]=n.enterCallbacks[o]||[]);return()=>new Promise((a,c)=>{const l=f=>{f===!1?c(createRouterError(4,{from:t,to:e})):f instanceof Error?c(f):isRouteLocation(f)?c(createRouterError(2,{from:e,to:f})):(r&&n.enterCallbacks[o]===r&&typeof f=="function"&&r.push(f),a())},u=s.call(n&&n.instances[o],e,t,l);let d=Promise.resolve(u);s.length<3&&(d=d.then(l)),d.catch(f=>c(f))})}function extractComponentsGuards(s,e,t,n){const o=[];for(const r of s)for(const a in r.components){let c=r.components[a];if(!(e!=="beforeRouteEnter"&&!r.instances[a]))if(isRouteComponent(c)){const u=(c.__vccOpts||c)[e];u&&o.push(guardToPromiseFn(u,t,n,r,a))}else{let l=c();o.push(()=>l.then(u=>{if(!u)return Promise.reject(new Error(`Couldn't resolve component "${a}" at "${r.path}"`));const d=isESModule(u)?u.default:u;r.components[a]=d;const m=(d.__vccOpts||d)[e];return m&&guardToPromiseFn(m,t,n,r,a)()}))}}return o}function isRouteComponent(s){return typeof s=="object"||"displayName"in s||"props"in s||"__vccOpts"in s}function useLink(s){const e=inject(routerKey),t=inject(routeLocationKey),n=computed(()=>e.resolve(unref(s.to))),o=computed(()=>{const{matched:l}=n.value,{length:u}=l,d=l[u-1],f=t.matched;if(!d||!f.length)return-1;const m=f.findIndex(isSameRouteRecord.bind(null,d));if(m>-1)return m;const g=getOriginalPath(l[u-2]);return u>1&&getOriginalPath(d)===g&&f[f.length-1].path!==g?f.findIndex(isSameRouteRecord.bind(null,l[u-2])):m}),r=computed(()=>o.value>-1&&includesParams(t.params,n.value.params)),a=computed(()=>o.value>-1&&o.value===t.matched.length-1&&isSameRouteLocationParams(t.params,n.value.params));function c(l={}){return guardEvent(l)?e[unref(s.replace)?"replace":"push"](unref(s.to)).catch(noop):Promise.resolve()}return{route:n,href:computed(()=>n.value.href),isActive:r,isExactActive:a,navigate:c}}const RouterLinkImpl=defineComponent({name:"RouterLink",compatConfig:{MODE:3},props:{to:{type:[String,Object],required:!0},replace:Boolean,activeClass:String,exactActiveClass:String,custom:Boolean,ariaCurrentValue:{type:String,default:"page"}},useLink,setup(s,{slots:e}){const t=reactive(useLink(s)),{options:n}=inject(routerKey),o=computed(()=>({[getLinkClass(s.activeClass,n.linkActiveClass,"router-link-active")]:t.isActive,[getLinkClass(s.exactActiveClass,n.linkExactActiveClass,"router-link-exact-active")]:t.isExactActive}));return()=>{const r=e.default&&e.default(t);return s.custom?r:h("a",{"aria-current":t.isExactActive?s.ariaCurrentValue:null,href:t.href,onClick:t.navigate,class:o.value},r)}}}),RouterLink=RouterLinkImpl;function guardEvent(s){if(!(s.metaKey||s.altKey||s.ctrlKey||s.shiftKey)&&!s.defaultPrevented&&!(s.button!==void 0&&s.button!==0)){if(s.currentTarget&&s.currentTarget.getAttribute){const e=s.currentTarget.getAttribute("target");if(/\b_blank\b/i.test(e))return}return s.preventDefault&&s.preventDefault(),!0}}function includesParams(s,e){for(const t in e){const n=e[t],o=s[t];if(typeof n=="string"){if(n!==o)return!1}else if(!isArray$1(o)||o.length!==n.length||n.some((r,a)=>r!==o[a]))return!1}return!0}function getOriginalPath(s){return s?s.aliasOf?s.aliasOf.path:s.path:""}const getLinkClass=(s,e,t)=>s??e??t,RouterViewImpl=defineComponent({name:"RouterView",inheritAttrs:!1,props:{name:{type:String,default:"default"},route:Object},compatConfig:{MODE:3},setup(s,{attrs:e,slots:t}){const n=inject(routerViewLocationKey),o=computed(()=>s.route||n.value),r=inject(viewDepthKey,0),a=computed(()=>{let u=unref(r);const{matched:d}=o.value;let f;for(;(f=d[u])&&!f.components;)u++;return u}),c=computed(()=>o.value.matched[a.value]);provide(viewDepthKey,computed(()=>a.value+1)),provide(matchedRouteKey,c),provide(routerViewLocationKey,o);const l=ref();return watch(()=>[l.value,c.value,s.name],([u,d,f],[m,g,_])=>{d&&(d.instances[f]=u,g&&g!==d&&u&&u===m&&(d.leaveGuards.size||(d.leaveGuards=g.leaveGuards),d.updateGuards.size||(d.updateGuards=g.updateGuards))),u&&d&&(!g||!isSameRouteRecord(d,g)||!m)&&(d.enterCallbacks[f]||[]).forEach(y=>y(u))},{flush:"post"}),()=>{const u=o.value,d=s.name,f=c.value,m=f&&f.components[d];if(!m)return normalizeSlot(t.default,{Component:m,route:u});const g=f.props[d],_=g?g===!0?u.params:typeof g=="function"?g(u):g:null,A=h(m,assign({},_,e,{onVnodeUnmounted:N=>{N.component.isUnmounted&&(f.instances[d]=null)},ref:l}));return normalizeSlot(t.default,{Component:A,route:u})||A}}});function normalizeSlot(s,e){if(!s)return null;const t=s(e);return t.length===1?t[0]:t}const RouterView=RouterViewImpl;function createRouter(s){const e=createRouterMatcher(s.routes,s),t=s.parseQuery||parseQuery,n=s.stringifyQuery||stringifyQuery,o=s.history,r=useCallbacks(),a=useCallbacks(),c=useCallbacks(),l=shallowRef(START_LOCATION_NORMALIZED);let u=START_LOCATION_NORMALIZED;isBrowser&&s.scrollBehavior&&"scrollRestoration"in history&&(history.scrollRestoration="manual");const d=applyToParams.bind(null,P=>""+P),f=applyToParams.bind(null,encodeParam),m=applyToParams.bind(null,decode);function g(P,R){let z,Z;return isRouteName(P)?(z=e.getRecordMatcher(P),Z=R):Z=P,e.addRoute(Z,z)}function _(P){const R=e.getRecordMatcher(P);R&&e.removeRoute(R)}function y(){return e.getRoutes().map(P=>P.record)}function A(P){return!!e.getRecordMatcher(P)}function N(P,R){if(R=assign({},R||l.value),typeof P=="string"){const w=parseURL(t,P,R.path),b=e.resolve({path:w.path},R),O=o.createHref(w.fullPath);return assign(w,b,{params:m(b.params),hash:decode(w.hash),redirectedFrom:void 0,href:O})}let z;if("path"in P)z=assign({},P,{path:parseURL(t,P.path,R.path).path});else{const w=assign({},P.params);for(const b in w)w[b]==null&&delete w[b];z=assign({},P,{params:f(w)}),R.params=f(R.params)}const Z=e.resolve(z,R),ue=P.hash||"";Z.params=d(m(Z.params));const v=stringifyURL(n,assign({},P,{hash:encodeHash(ue),path:Z.path})),S=o.createHref(v);return assign({fullPath:v,hash:ue,query:n===stringifyQuery?normalizeQuery(P.query):P.query||{}},Z,{redirectedFrom:void 0,href:S})}function x(P){return typeof P=="string"?parseURL(t,P,l.value.path):assign({},P)}function M(P,R){if(u!==P)return createRouterError(8,{from:R,to:P})}function E(P){return I(P)}function T(P){return E(assign(x(P),{replace:!0}))}function k(P){const R=P.matched[P.matched.length-1];if(R&&R.redirect){const{redirect:z}=R;let Z=typeof z=="function"?z(P):z;return typeof Z=="string"&&(Z=Z.includes("?")||Z.includes("#")?Z=x(Z):{path:Z},Z.params={}),assign({query:P.query,hash:P.hash,params:"path"in Z?{}:P.params},Z)}}function I(P,R){const z=u=N(P),Z=l.value,ue=P.state,v=P.force,S=P.replace===!0,w=k(z);if(w)return I(assign(x(w),{state:typeof w=="object"?assign({},ue,w.state):ue,force:v,replace:S}),R||z);const b=z;b.redirectedFrom=R;let O;return!v&&isSameRouteLocation(n,Z,z)&&(O=createRouterError(16,{to:b,from:Z}),ne(Z,Z,!0,!1)),(O?Promise.resolve(O):q(b,Z)).catch(D=>isNavigationFailure(D)?isNavigationFailure(D,2)?D:oe(D):X(D,b,Z)).then(D=>{if(D){if(isNavigationFailure(D,2))return I(assign({replace:S},x(D.to),{state:typeof D.to=="object"?assign({},ue,D.to.state):ue,force:v}),R||b)}else D=V(b,Z,!0,S,ue);return L(b,Z,D),D})}function C(P,R){const z=M(P,R);return z?Promise.reject(z):Promise.resolve()}function W(P){const R=fe.values().next().value;return R&&typeof R.runWithContext=="function"?R.runWithContext(P):P()}function q(P,R){let z;const[Z,ue,v]=extractChangingRecords(P,R);z=extractComponentsGuards(Z.reverse(),"beforeRouteLeave",P,R);for(const w of Z)w.leaveGuards.forEach(b=>{z.push(guardToPromiseFn(b,P,R))});const S=C.bind(null,P,R);return z.push(S),ce(z).then(()=>{z=[];for(const w of r.list())z.push(guardToPromiseFn(w,P,R));return z.push(S),ce(z)}).then(()=>{z=extractComponentsGuards(ue,"beforeRouteUpdate",P,R);for(const w of ue)w.updateGuards.forEach(b=>{z.push(guardToPromiseFn(b,P,R))});return z.push(S),ce(z)}).then(()=>{z=[];for(const w of v)if(w.beforeEnter)if(isArray$1(w.beforeEnter))for(const b of w.beforeEnter)z.push(guardToPromiseFn(b,P,R));else z.push(guardToPromiseFn(w.beforeEnter,P,R));return z.push(S),ce(z)}).then(()=>(P.matched.forEach(w=>w.enterCallbacks={}),z=extractComponentsGuards(v,"beforeRouteEnter",P,R),z.push(S),ce(z))).then(()=>{z=[];for(const w of a.list())z.push(guardToPromiseFn(w,P,R));return z.push(S),ce(z)}).catch(w=>isNavigationFailure(w,8)?w:Promise.reject(w))}function L(P,R,z){c.list().forEach(Z=>W(()=>Z(P,R,z)))}function V(P,R,z,Z,ue){const v=M(P,R);if(v)return v;const S=R===START_LOCATION_NORMALIZED,w=isBrowser?history.state:{};z&&(Z||S?o.replace(P.fullPath,assign({scroll:S&&w&&w.scroll},ue)):o.push(P.fullPath,ue)),l.value=P,ne(P,R,z,S),oe()}let K;function Y(){K||(K=o.listen((P,R,z)=>{if(!ae.listening)return;const Z=N(P),ue=k(Z);if(ue){I(assign(ue,{replace:!0}),Z).catch(noop);return}u=Z;const v=l.value;isBrowser&&saveScrollPosition(getScrollKey(v.fullPath,z.delta),computeScrollPosition()),q(Z,v).catch(S=>isNavigationFailure(S,12)?S:isNavigationFailure(S,2)?(I(S.to,Z).then(w=>{isNavigationFailure(w,20)&&!z.delta&&z.type===NavigationType.pop&&o.go(-1,!1)}).catch(noop),Promise.reject()):(z.delta&&o.go(-z.delta,!1),X(S,Z,v))).then(S=>{S=S||V(Z,v,!1),S&&(z.delta&&!isNavigationFailure(S,8)?o.go(-z.delta,!1):z.type===NavigationType.pop&&isNavigationFailure(S,20)&&o.go(-1,!1)),L(Z,v,S)}).catch(noop)}))}let te=useCallbacks(),H=useCallbacks(),G;function X(P,R,z){oe(P);const Z=H.list();return Z.length?Z.forEach(ue=>ue(P,R,z)):console.error(P),Promise.reject(P)}function ee(){return G&&l.value!==START_LOCATION_NORMALIZED?Promise.resolve():new Promise((P,R)=>{te.add([P,R])})}function oe(P){return G||(G=!P,Y(),te.list().forEach(([R,z])=>P?z(P):R()),te.reset()),P}function ne(P,R,z,Z){const{scrollBehavior:ue}=s;if(!isBrowser||!ue)return Promise.resolve();const v=!z&&getSavedScrollPosition(getScrollKey(P.fullPath,0))||(Z||!z)&&history.state&&history.state.scroll||null;return nextTick().then(()=>ue(P,R,v)).then(S=>S&&scrollToPosition(S)).catch(S=>X(S,P,R))}const re=P=>o.go(P);let pe;const fe=new Set,ae={currentRoute:l,listening:!0,addRoute:g,removeRoute:_,hasRoute:A,getRoutes:y,resolve:N,options:s,push:E,replace:T,go:re,back:()=>re(-1),forward:()=>re(1),beforeEach:r.add,beforeResolve:a.add,afterEach:c.add,onError:H.add,isReady:ee,install(P){const R=this;P.component("RouterLink",RouterLink),P.component("RouterView",RouterView),P.config.globalProperties.$router=R,Object.defineProperty(P.config.globalProperties,"$route",{enumerable:!0,get:()=>unref(l)}),isBrowser&&!pe&&l.value===START_LOCATION_NORMALIZED&&(pe=!0,E(o.location).catch(ue=>{}));const z={};for(const ue in START_LOCATION_NORMALIZED)Object.defineProperty(z,ue,{get:()=>l.value[ue],enumerable:!0});P.provide(routerKey,R),P.provide(routeLocationKey,shallowReactive(z)),P.provide(routerViewLocationKey,l);const Z=P.unmount;fe.add(P),P.unmount=function(){fe.delete(P),fe.size<1&&(u=START_LOCATION_NORMALIZED,K&&K(),K=null,l.value=START_LOCATION_NORMALIZED,pe=!1,G=!1),Z()}}};function ce(P){return P.reduce((R,z)=>R.then(()=>W(z)),Promise.resolve())}return ae}function extractChangingRecords(s,e){const t=[],n=[],o=[],r=Math.max(e.matched.length,s.matched.length);for(let a=0;a<r;a++){const c=e.matched[a];c&&(s.matched.find(u=>isSameRouteRecord(u,c))?n.push(c):t.push(c));const l=s.matched[a];l&&(e.matched.find(u=>isSameRouteRecord(u,l))||o.push(l))}return[t,n,o]}const store=reactive({loggedIn:!1,login(){this.loggedIn=!0},logout(){this.loggedIn=!1}}),Home_vue_vue_type_style_index_0_scoped_7e26beca_lang="",_export_sfc=(s,e)=>{const t=s.__vccOpts||s;for(const[n,o]of e)t[n]=o;return t},_sfc_main$l={data(){return{store,glowcolor:"rgb(112, 224, 255)",konamiCode:!1,sequenceKeys:0,sequence:["w","w","s","s","a","d","a","d","b","a"]}},created(){localStorage.getItem("loggedIn")=="true"?this.loggedIn=!0:this.loggedIn=!1},mounted(){window.addEventListener("keydown",this.trackKeys)},beforeUnmount(){window.removeEventListener("keydown",this.trackKeys)},methods:{trackKeys(s){console.log(s.key),s.key==this.sequence[this.sequenceKeys]?(console.log("got one"),this.sequenceKeys++,this.sequenceKeys==this.sequence.length&&(this.konamiCode=!0,this.sequenceKeys=0,window.removeEventListener("keydown",this.trackKeys),console.log("Secret Unlocked"))):this.sequenceKeys=0},openNav(){document.getElementById("myNav").style.width="100%"},closeNav(){document.getElementById("myNav").style.width="0%"}}},__injectCSSVars__$4=()=>{useCssVars(s=>({cb54f526:s.glowcolor}))},__setup__$4=_sfc_main$l.setup;_sfc_main$l.setup=__setup__$4?(s,e)=>(__injectCSSVars__$4(),__setup__$4(s,e)):__injectCSSVars__$4;const _withScopeId$a=s=>(pushScopeId("data-v-7e26beca"),s=s(),popScopeId(),s),_hoisted_1$l={id:"myNav",class:"overlay"},_hoisted_2$j={class:"overlay-content"},_hoisted_3$g=_withScopeId$a(()=>createBaseVNode("br",null,null,-1)),_hoisted_4$d=_withScopeId$a(()=>createBaseVNode("br",null,null,-1)),_hoisted_5$c=_withScopeId$a(()=>createBaseVNode("br",null,null,-1)),_hoisted_6$a=_withScopeId$a(()=>createBaseVNode("br",null,null,-1)),_hoisted_7$9=_withScopeId$a(()=>createBaseVNode("br",null,null,-1)),_hoisted_8$8=_withScopeId$a(()=>createBaseVNode("br",null,null,-1)),_hoisted_9$7={class:"mainDivHome"};function _sfc_render$k(s,e,t,n,o,r){const a=resolveComponent("router-link");return openBlock(),createElementBlock(Fragment,null,[createBaseVNode("div",_hoisted_1$l,[createBaseVNode("a",{href:"javascript:void(0)",class:"closebtn",onClick:e[0]||(e[0]=c=>r.closeNav())},"×"),createBaseVNode("div",_hoisted_2$j,[createVNode(a,{to:"/syntha/"},{default:withCtx(()=>[createTextVNode("HOME")]),_:1}),_hoisted_3$g,createVNode(a,{to:"/syntha/workshop"},{default:withCtx(()=>[createTextVNode("LIBRARY")]),_:1}),_hoisted_4$d,createVNode(a,{to:"/syntha/account"},{default:withCtx(()=>[createTextVNode("ACCOUNT")]),_:1}),_hoisted_5$c,createVNode(a,{to:"/syntha/docs"},{default:withCtx(()=>[createTextVNode("DOCUMENTATION")]),_:1}),_hoisted_6$a,createVNode(a,{to:"/syntha/about"},{default:withCtx(()=>[createTextVNode("ABOUT")]),_:1}),_hoisted_7$9,o.konamiCode?(openBlock(),createBlock(a,{key:0,to:"/syntha/quiz"},{default:withCtx(()=>[createTextVNode("QUIZ??")]),_:1})):createCommentVNode("",!0),_hoisted_8$8])]),createBaseVNode("div",_hoisted_9$7,[createBaseVNode("span",{class:"goofyAahButton",style:{"font-size":"30px",cursor:"pointer"},onClick:e[1]||(e[1]=c=>r.openNav())},"☰"),s.loggedIn==!1?(openBlock(),createBlock(a,{key:0,class:"accountbtn",to:"/syntha/login",style:{"text-decoration":"none"}},{default:withCtx(()=>[createTextVNode("LOGIN")]),_:1})):createCommentVNode("",!0),s.loggedIn?(openBlock(),createBlock(a,{key:1,class:"accountbtn",to:"/syntha/account",style:{"text-decoration":"none"}},{default:withCtx(()=>[createTextVNode("Account")]),_:1})):createCommentVNode("",!0),createVNode(a,{to:"/syntha/synth",class:"glowing-btn"},{default:withCtx(()=>[createTextVNode("OPEN SYNTHA")]),_:1})])],64)}const Home=_export_sfc(_sfc_main$l,[["render",_sfc_render$k],["__scopeId","data-v-7e26beca"]]),About_vue_vue_type_style_index_0_scoped_54a7ab2e_lang="",_sfc_main$k={data(){return{glowcolor:"rgb(112, 224, 255)"}},methods:{openNav(){document.getElementById("myNav").style.width="100%"},closeNav(){document.getElementById("myNav").style.width="0%"}}},__injectCSSVars__$3=()=>{useCssVars(s=>({79043437:s.glowcolor}))},__setup__$3=_sfc_main$k.setup;_sfc_main$k.setup=__setup__$3?(s,e)=>(__injectCSSVars__$3(),__setup__$3(s,e)):__injectCSSVars__$3;const _withScopeId$9=s=>(pushScopeId("data-v-54a7ab2e"),s=s(),popScopeId(),s),_hoisted_1$k={id:"myNav",class:"overlay"},_hoisted_2$i={class:"overlay-content"},_hoisted_3$f=_withScopeId$9(()=>createBaseVNode("br",null,null,-1)),_hoisted_4$c=_withScopeId$9(()=>createBaseVNode("br",null,null,-1)),_hoisted_5$b=_withScopeId$9(()=>createBaseVNode("br",null,null,-1)),_hoisted_6$9=_withScopeId$9(()=>createBaseVNode("br",null,null,-1)),_hoisted_7$8=_withScopeId$9(()=>createBaseVNode("br",null,null,-1)),_hoisted_8$7={class:"mainDivAbout"},_hoisted_9$6=createStaticVNode('<button class="glowing-btn" data-v-54a7ab2e>SYNTHA</button><div class="text" data-v-54a7ab2e><p data-v-54a7ab2e>SynthA! is a student made project, hoping to make it easier to develop music wherever you are! <br data-v-54a7ab2e> The site was build for the &#39;Design of WWW Services&#39; course at Aalto Univeristy</p><h1 data-v-54a7ab2e>THE TEAM</h1><p data-v-54a7ab2e><b data-v-54a7ab2e>Francesco Colotti <br data-v-54a7ab2e></b> Creator of the sandboxTM <br data-v-54a7ab2e><br data-v-54a7ab2e><b data-v-54a7ab2e>Jakub Votrubec</b> <br data-v-54a7ab2e> Mastermind of the login and library <br data-v-54a7ab2e><br data-v-54a7ab2e><b data-v-54a7ab2e>Roos Zoutman </b> <br data-v-54a7ab2e> Designer of the frontpage </p></div>',2);function _sfc_render$j(s,e,t,n,o,r){const a=resolveComponent("router-link");return openBlock(),createElementBlock(Fragment,null,[createBaseVNode("div",_hoisted_1$k,[createBaseVNode("a",{href:"javascript:void(0)",class:"closebtn",onClick:e[0]||(e[0]=c=>r.closeNav())},"×"),createBaseVNode("div",_hoisted_2$i,[createVNode(a,{to:"/syntha/"},{default:withCtx(()=>[createTextVNode("HOME")]),_:1}),_hoisted_3$f,createVNode(a,{to:"/syntha/workshop"},{default:withCtx(()=>[createTextVNode("LIBRARY")]),_:1}),_hoisted_4$c,createVNode(a,{to:"/syntha/account"},{default:withCtx(()=>[createTextVNode("ACCOUNT")]),_:1}),_hoisted_5$b,createVNode(a,{to:"/syntha/docs"},{default:withCtx(()=>[createTextVNode("DOCUMENTATION")]),_:1}),_hoisted_6$9,createVNode(a,{to:"/syntha/about"},{default:withCtx(()=>[createTextVNode("ABOUT")]),_:1}),_hoisted_7$8])]),createBaseVNode("div",_hoisted_8$7,[createBaseVNode("span",{class:"weirdAssButton",style:{"font-size":"30px",cursor:"pointer"},onClick:e[1]||(e[1]=c=>r.openNav())},"☰"),createVNode(a,{class:"homebtn",to:"/syntha/",style:{"text-decoration":"none"}},{default:withCtx(()=>[createTextVNode("☖")]),_:1}),createVNode(a,{class:"accountbtn",to:"/syntha/login",style:{"text-decoration":"none"}},{default:withCtx(()=>[createTextVNode("LOGIN")]),_:1}),_hoisted_9$6])],64)}const About=_export_sfc(_sfc_main$k,[["render",_sfc_render$j],["__scopeId","data-v-54a7ab2e"]]),NotFound_vue_vue_type_style_index_0_scoped_5b72c2f4_lang="",_sfc_main$j={},_withScopeId$8=s=>(pushScopeId("data-v-5b72c2f4"),s=s(),popScopeId(),s),_hoisted_1$j=_withScopeId$8(()=>createBaseVNode("header",null,null,-1)),_hoisted_2$h=_withScopeId$8(()=>createBaseVNode("main",null,[createBaseVNode("div",{class:"centralDiv"}," Page not found ")],-1));function _sfc_render$i(s,e){return openBlock(),createElementBlock(Fragment,null,[_hoisted_1$j,_hoisted_2$h],64)}const NotFound=_export_sfc(_sfc_main$j,[["render",_sfc_render$i],["__scopeId","data-v-5b72c2f4"]]),Toolbar_vue_vue_type_style_index_0_scoped_358c305c_lang="",_sfc_main$i={emits:["savepreset","loadpreset"],methods:{savePreset(){this.$emit("savepreset")},loadPreset(){this.$emit("loadpreset")}}},_withScopeId$7=s=>(pushScopeId("data-v-358c305c"),s=s(),popScopeId(),s),_hoisted_1$i={class:"toolbar"},_hoisted_2$g=_withScopeId$7(()=>createBaseVNode("div",{class:"toolbar-title"},"SynthA!",-1)),_hoisted_3$e={class:"toolbar-actions"},_hoisted_4$b=_withScopeId$7(()=>createBaseVNode("div",{class:"version"},"v1.0",-1));function _sfc_render$h(s,e,t,n,o,r){const a=resolveComponent("router-link");return openBlock(),createElementBlock("div",_hoisted_1$i,[_hoisted_2$g,createBaseVNode("div",_hoisted_3$e,[createVNode(a,{to:"/syntha/"},{default:withCtx(()=>[createTextVNode("Home")]),_:1}),createBaseVNode("button",{class:"toolbarButton",onClick:e[0]||(e[0]=(...c)=>r.savePreset&&r.savePreset(...c))}," Save "),createVNode(a,{to:"/syntha/workshop/"},{default:withCtx(()=>[createTextVNode("Load")]),_:1})]),_hoisted_4$b])}const Toolbar=_export_sfc(_sfc_main$i,[["render",_sfc_render$h],["__scopeId","data-v-358c305c"]]),ControlsToolbar_vue_vue_type_style_index_0_scoped_3544aa3e_lang="",_sfc_main$h={inject:["ACM"],methods:{playMainFunction(){},stopRecordAudio(){this.ACM.stopRecordAudio()},recordAudio(){this.ACM.recordAudio()}}},_hoisted_1$h={class:"control_toolbar"},_hoisted_2$f={class:"toolbar-actions"};function _sfc_render$g(s,e,t,n,o,r){return openBlock(),createElementBlock("div",_hoisted_1$h,[createBaseVNode("div",_hoisted_2$f,[createBaseVNode("button",{class:"controlButton material-symbols-outlined",onClick:e[0]||(e[0]=(...a)=>r.recordAudio&&r.recordAudio(...a))},"fiber_manual_record"),createBaseVNode("button",{class:"controlButton material-symbols-outlined",onClick:e[1]||(e[1]=(...a)=>r.stopRecordAudio&&r.stopRecordAudio(...a))},"stop")])])}const ControlsToolbar=_export_sfc(_sfc_main$h,[["render",_sfc_render$g],["__scopeId","data-v-3544aa3e"]]),version="14.7.77",createExtendedExponentialRampToValueAutomationEvent=(s,e,t)=>({endTime:e,insertTime:t,type:"exponentialRampToValue",value:s}),createExtendedLinearRampToValueAutomationEvent=(s,e,t)=>({endTime:e,insertTime:t,type:"linearRampToValue",value:s}),createSetValueAutomationEvent=(s,e)=>({startTime:e,type:"setValue",value:s}),createSetValueCurveAutomationEvent=(s,e,t)=>({duration:t,startTime:e,type:"setValueCurve",values:s}),getTargetValueAtTime=(s,e,{startTime:t,target:n,timeConstant:o})=>n+(e-n)*Math.exp((t-s)/o),isExponentialRampToValueAutomationEvent=s=>s.type==="exponentialRampToValue",isLinearRampToValueAutomationEvent=s=>s.type==="linearRampToValue",isAnyRampToValueAutomationEvent=s=>isExponentialRampToValueAutomationEvent(s)||isLinearRampToValueAutomationEvent(s),isSetValueAutomationEvent=s=>s.type==="setValue",isSetValueCurveAutomationEvent=s=>s.type==="setValueCurve",getValueOfAutomationEventAtIndexAtTime=(s,e,t,n)=>{const o=s[e];return o===void 0?n:isAnyRampToValueAutomationEvent(o)||isSetValueAutomationEvent(o)?o.value:isSetValueCurveAutomationEvent(o)?o.values[o.values.length-1]:getTargetValueAtTime(t,getValueOfAutomationEventAtIndexAtTime(s,e-1,o.startTime,n),o)},getEndTimeAndValueOfPreviousAutomationEvent=(s,e,t,n,o)=>t===void 0?[n.insertTime,o]:isAnyRampToValueAutomationEvent(t)?[t.endTime,t.value]:isSetValueAutomationEvent(t)?[t.startTime,t.value]:isSetValueCurveAutomationEvent(t)?[t.startTime+t.duration,t.values[t.values.length-1]]:[t.startTime,getValueOfAutomationEventAtIndexAtTime(s,e-1,t.startTime,o)],isCancelAndHoldAutomationEvent=s=>s.type==="cancelAndHold",isCancelScheduledValuesAutomationEvent=s=>s.type==="cancelScheduledValues",getEventTime=s=>isCancelAndHoldAutomationEvent(s)||isCancelScheduledValuesAutomationEvent(s)?s.cancelTime:isExponentialRampToValueAutomationEvent(s)||isLinearRampToValueAutomationEvent(s)?s.endTime:s.startTime,getExponentialRampValueAtTime=(s,e,t,{endTime:n,value:o})=>t===o?o:0<t&&0<o||t<0&&o<0?t*(o/t)**((s-e)/(n-e)):0,getLinearRampValueAtTime=(s,e,t,{endTime:n,value:o})=>t+(s-e)/(n-e)*(o-t),interpolateValue=(s,e)=>{const t=Math.floor(e),n=Math.ceil(e);return t===n?s[t]:(1-(e-t))*s[t]+(1-(n-e))*s[n]},getValueCurveValueAtTime=(s,{duration:e,startTime:t,values:n})=>{const o=(s-t)/e*(n.length-1);return interpolateValue(n,o)},isSetTargetAutomationEvent=s=>s.type==="setTarget";class AutomationEventList{constructor(e){this._automationEvents=[],this._currenTime=0,this._defaultValue=e}[Symbol.iterator](){return this._automationEvents[Symbol.iterator]()}add(e){const t=getEventTime(e);if(isCancelAndHoldAutomationEvent(e)||isCancelScheduledValuesAutomationEvent(e)){const n=this._automationEvents.findIndex(r=>isCancelScheduledValuesAutomationEvent(e)&&isSetValueCurveAutomationEvent(r)?r.startTime+r.duration>=t:getEventTime(r)>=t),o=this._automationEvents[n];if(n!==-1&&(this._automationEvents=this._automationEvents.slice(0,n)),isCancelAndHoldAutomationEvent(e)){const r=this._automationEvents[this._automationEvents.length-1];if(o!==void 0&&isAnyRampToValueAutomationEvent(o)){if(r!==void 0&&isSetTargetAutomationEvent(r))throw new Error("The internal list is malformed.");const a=r===void 0?o.insertTime:isSetValueCurveAutomationEvent(r)?r.startTime+r.duration:getEventTime(r),c=r===void 0?this._defaultValue:isSetValueCurveAutomationEvent(r)?r.values[r.values.length-1]:r.value,l=isExponentialRampToValueAutomationEvent(o)?getExponentialRampValueAtTime(t,a,c,o):getLinearRampValueAtTime(t,a,c,o),u=isExponentialRampToValueAutomationEvent(o)?createExtendedExponentialRampToValueAutomationEvent(l,t,this._currenTime):createExtendedLinearRampToValueAutomationEvent(l,t,this._currenTime);this._automationEvents.push(u)}if(r!==void 0&&isSetTargetAutomationEvent(r)&&this._automationEvents.push(createSetValueAutomationEvent(this.getValue(t),t)),r!==void 0&&isSetValueCurveAutomationEvent(r)&&r.startTime+r.duration>t){const a=t-r.startTime,c=(r.values.length-1)/r.duration,l=Math.max(2,1+Math.ceil(a*c)),u=a/(l-1)*c,d=r.values.slice(0,l);if(u<1)for(let f=1;f<l;f+=1){const m=u*f%1;d[f]=r.values[f-1]*(1-m)+r.values[f]*m}this._automationEvents[this._automationEvents.length-1]=createSetValueCurveAutomationEvent(d,r.startTime,a)}}}else{const n=this._automationEvents.findIndex(a=>getEventTime(a)>t),o=n===-1?this._automationEvents[this._automationEvents.length-1]:this._automationEvents[n-1];if(o!==void 0&&isSetValueCurveAutomationEvent(o)&&getEventTime(o)+o.duration>t)return!1;const r=isExponentialRampToValueAutomationEvent(e)?createExtendedExponentialRampToValueAutomationEvent(e.value,e.endTime,this._currenTime):isLinearRampToValueAutomationEvent(e)?createExtendedLinearRampToValueAutomationEvent(e.value,t,this._currenTime):e;if(n===-1)this._automationEvents.push(r);else{if(isSetValueCurveAutomationEvent(e)&&t+e.duration>getEventTime(this._automationEvents[n]))return!1;this._automationEvents.splice(n,0,r)}}return!0}flush(e){const t=this._automationEvents.findIndex(n=>getEventTime(n)>e);if(t>1){const n=this._automationEvents.slice(t-1),o=n[0];isSetTargetAutomationEvent(o)&&n.unshift(createSetValueAutomationEvent(getValueOfAutomationEventAtIndexAtTime(this._automationEvents,t-2,o.startTime,this._defaultValue),o.startTime)),this._automationEvents=n}}getValue(e){if(this._automationEvents.length===0)return this._defaultValue;const t=this._automationEvents.findIndex(a=>getEventTime(a)>e),n=this._automationEvents[t],o=(t===-1?this._automationEvents.length:t)-1,r=this._automationEvents[o];if(r!==void 0&&isSetTargetAutomationEvent(r)&&(n===void 0||!isAnyRampToValueAutomationEvent(n)||n.insertTime>e))return getTargetValueAtTime(e,getValueOfAutomationEventAtIndexAtTime(this._automationEvents,o-1,r.startTime,this._defaultValue),r);if(r!==void 0&&isSetValueAutomationEvent(r)&&(n===void 0||!isAnyRampToValueAutomationEvent(n)))return r.value;if(r!==void 0&&isSetValueCurveAutomationEvent(r)&&(n===void 0||!isAnyRampToValueAutomationEvent(n)||r.startTime+r.duration>e))return e<r.startTime+r.duration?getValueCurveValueAtTime(e,r):r.values[r.values.length-1];if(r!==void 0&&isAnyRampToValueAutomationEvent(r)&&(n===void 0||!isAnyRampToValueAutomationEvent(n)))return r.value;if(n!==void 0&&isExponentialRampToValueAutomationEvent(n)){const[a,c]=getEndTimeAndValueOfPreviousAutomationEvent(this._automationEvents,o,r,n,this._defaultValue);return getExponentialRampValueAtTime(e,a,c,n)}if(n!==void 0&&isLinearRampToValueAutomationEvent(n)){const[a,c]=getEndTimeAndValueOfPreviousAutomationEvent(this._automationEvents,o,r,n,this._defaultValue);return getLinearRampValueAtTime(e,a,c,n)}return this._defaultValue}}const createCancelAndHoldAutomationEvent=s=>({cancelTime:s,type:"cancelAndHold"}),createCancelScheduledValuesAutomationEvent=s=>({cancelTime:s,type:"cancelScheduledValues"}),createExponentialRampToValueAutomationEvent=(s,e)=>({endTime:e,type:"exponentialRampToValue",value:s}),createLinearRampToValueAutomationEvent=(s,e)=>({endTime:e,type:"linearRampToValue",value:s}),createSetTargetAutomationEvent=(s,e,t)=>({startTime:e,target:s,timeConstant:t,type:"setTarget"}),createAbortError=()=>new DOMException("","AbortError"),createAddActiveInputConnectionToAudioNode=s=>(e,t,[n,o,r],a)=>{s(e[o],[t,n,r],c=>c[0]===t&&c[1]===n,a)},createAddAudioNodeConnections=s=>(e,t,n)=>{const o=[];for(let r=0;r<n.numberOfInputs;r+=1)o.push(new Set);s.set(e,{activeInputs:o,outputs:new Set,passiveInputs:new WeakMap,renderer:t})},createAddAudioParamConnections=s=>(e,t)=>{s.set(e,{activeInputs:new Set,passiveInputs:new WeakMap,renderer:t})},ACTIVE_AUDIO_NODE_STORE=new WeakSet,AUDIO_NODE_CONNECTIONS_STORE=new WeakMap,AUDIO_NODE_STORE=new WeakMap,AUDIO_PARAM_CONNECTIONS_STORE=new WeakMap,AUDIO_PARAM_STORE=new WeakMap,CONTEXT_STORE=new WeakMap,EVENT_LISTENERS=new WeakMap,CYCLE_COUNTERS=new WeakMap,NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS=new WeakMap,NODE_TO_PROCESSOR_MAPS=new WeakMap,handler={construct(){return handler}},isConstructible=s=>{try{const e=new Proxy(s,handler);new e}catch{return!1}return!0},IMPORT_STATEMENT_REGEX=/^import(?:(?:[\s]+[\w]+|(?:[\s]+[\w]+[\s]*,)?[\s]*\{[\s]*[\w]+(?:[\s]+as[\s]+[\w]+)?(?:[\s]*,[\s]*[\w]+(?:[\s]+as[\s]+[\w]+)?)*[\s]*}|(?:[\s]+[\w]+[\s]*,)?[\s]*\*[\s]+as[\s]+[\w]+)[\s]+from)?(?:[\s]*)("([^"\\]|\\.)+"|'([^'\\]|\\.)+')(?:[\s]*);?/,splitImportStatements=(s,e)=>{const t=[];let n=s.replace(/^[\s]+/,""),o=n.match(IMPORT_STATEMENT_REGEX);for(;o!==null;){const r=o[1].slice(1,-1),a=o[0].replace(/([\s]+)?;?$/,"").replace(r,new URL(r,e).toString());t.push(a),n=n.slice(o[0].length).replace(/^[\s]+/,""),o=n.match(IMPORT_STATEMENT_REGEX)}return[t.join(";"),n]},verifyParameterDescriptors=s=>{if(s!==void 0&&!Array.isArray(s))throw new TypeError("The parameterDescriptors property of given value for processorCtor is not an array.")},verifyProcessorCtor=s=>{if(!isConstructible(s))throw new TypeError("The given value for processorCtor should be a constructor.");if(s.prototype===null||typeof s.prototype!="object")throw new TypeError("The given value for processorCtor should have a prototype.")},createAddAudioWorkletModule=(s,e,t,n,o,r,a,c,l,u,d,f,m)=>{let g=0;return(_,y,A={credentials:"omit"})=>{const N=d.get(_);if(N!==void 0&&N.has(y))return Promise.resolve();const x=u.get(_);if(x!==void 0){const T=x.get(y);if(T!==void 0)return T}const M=r(_),E=M.audioWorklet===void 0?o(y).then(([T,k])=>{const[I,C]=splitImportStatements(T,k),W=`${I};((a,b)=>{(a[b]=a[b]||[]).push((AudioWorkletProcessor,global,registerProcessor,sampleRate,self,window)=>{${C}
})})(window,'_AWGS')`;return t(W)}).then(()=>{const T=m._AWGS.pop();if(T===void 0)throw new SyntaxError;n(M.currentTime,M.sampleRate,()=>T(class{},void 0,(k,I)=>{if(k.trim()==="")throw e();const C=NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS.get(M);if(C!==void 0){if(C.has(k))throw e();verifyProcessorCtor(I),verifyParameterDescriptors(I.parameterDescriptors),C.set(k,I)}else verifyProcessorCtor(I),verifyParameterDescriptors(I.parameterDescriptors),NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS.set(M,new Map([[k,I]]))},M.sampleRate,void 0,void 0))}):Promise.all([o(y),Promise.resolve(s(f,f))]).then(([[T,k],I])=>{const C=g+1;g=C;const[W,q]=splitImportStatements(T,k),Y=`${W};((AudioWorkletProcessor,registerProcessor)=>{${q}
})(${I?"AudioWorkletProcessor":"class extends AudioWorkletProcessor {__b=new WeakSet();constructor(){super();(p=>p.postMessage=(q=>(m,t)=>q.call(p,m,t?t.filter(u=>!this.__b.has(u)):t))(p.postMessage))(this.port)}}"},(n,p)=>registerProcessor(n,class extends p{${I?"":"__c = (a) => a.forEach(e=>this.__b.add(e.buffer));"}process(i,o,p){${I?"":"i.forEach(this.__c);o.forEach(this.__c);this.__c(Object.values(p));"}return super.process(i.map(j=>j.some(k=>k.length===0)?[]:j),o,p)}}));registerProcessor('__sac${C}',class extends AudioWorkletProcessor{process(){return !1}})`,te=new Blob([Y],{type:"application/javascript; charset=utf-8"}),H=URL.createObjectURL(te);return M.audioWorklet.addModule(H,A).then(()=>{if(c(M))return M;const G=a(M);return G.audioWorklet.addModule(H,A).then(()=>G)}).then(G=>{if(l===null)throw new SyntaxError;try{new l(G,`__sac${C}`)}catch{throw new SyntaxError}}).finally(()=>URL.revokeObjectURL(H))});return x===void 0?u.set(_,new Map([[y,E]])):x.set(y,E),E.then(()=>{const T=d.get(_);T===void 0?d.set(_,new Set([y])):T.add(y)}).finally(()=>{const T=u.get(_);T!==void 0&&T.delete(y)}),E}},getValueForKey=(s,e)=>{const t=s.get(e);if(t===void 0)throw new Error("A value with the given key could not be found.");return t},pickElementFromSet=(s,e)=>{const t=Array.from(s).filter(e);if(t.length>1)throw Error("More than one element was found.");if(t.length===0)throw Error("No element was found.");const[n]=t;return s.delete(n),n},deletePassiveInputConnectionToAudioNode=(s,e,t,n)=>{const o=getValueForKey(s,e),r=pickElementFromSet(o,a=>a[0]===t&&a[1]===n);return o.size===0&&s.delete(e),r},getEventListenersOfAudioNode=s=>getValueForKey(EVENT_LISTENERS,s),setInternalStateToActive=s=>{if(ACTIVE_AUDIO_NODE_STORE.has(s))throw new Error("The AudioNode is already stored.");ACTIVE_AUDIO_NODE_STORE.add(s),getEventListenersOfAudioNode(s).forEach(e=>e(!0))},isAudioWorkletNode=s=>"port"in s,setInternalStateToPassive=s=>{if(!ACTIVE_AUDIO_NODE_STORE.has(s))throw new Error("The AudioNode is not stored.");ACTIVE_AUDIO_NODE_STORE.delete(s),getEventListenersOfAudioNode(s).forEach(e=>e(!1))},setInternalStateToPassiveWhenNecessary=(s,e)=>{!isAudioWorkletNode(s)&&e.every(t=>t.size===0)&&setInternalStateToPassive(s)},createAddConnectionToAudioNode=(s,e,t,n,o,r,a,c,l,u,d,f,m)=>{const g=new WeakMap;return(_,y,A,N,x)=>{const{activeInputs:M,passiveInputs:E}=r(y),{outputs:T}=r(_),k=c(_),I=C=>{const W=l(y),q=l(_);if(C){const L=deletePassiveInputConnectionToAudioNode(E,_,A,N);s(M,_,L,!1),!x&&!f(_)&&t(q,W,A,N),m(y)&&setInternalStateToActive(y)}else{const L=n(M,_,A,N);e(E,N,L,!1),!x&&!f(_)&&o(q,W,A,N);const V=a(y);if(V===0)d(y)&&setInternalStateToPassiveWhenNecessary(y,M);else{const K=g.get(y);K!==void 0&&clearTimeout(K),g.set(y,setTimeout(()=>{d(y)&&setInternalStateToPassiveWhenNecessary(y,M)},V*1e3))}}};return u(T,[y,A,N],C=>C[0]===y&&C[1]===A&&C[2]===N,!0)?(k.add(I),d(_)?s(M,_,[A,N,I],!0):e(E,N,[_,A,I],!0),!0):!1}},createAddPassiveInputConnectionToAudioNode=s=>(e,t,[n,o,r],a)=>{const c=e.get(n);c===void 0?e.set(n,new Set([[o,t,r]])):s(c,[o,t,r],l=>l[0]===o&&l[1]===t,a)},createAddSilentConnection=s=>(e,t)=>{const n=s(e,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0});t.connect(n).connect(e.destination);const o=()=>{t.removeEventListener("ended",o),t.disconnect(n),n.disconnect()};t.addEventListener("ended",o)},createAddUnrenderedAudioWorkletNode=s=>(e,t)=>{s(e).add(t)},DEFAULT_OPTIONS$j={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",fftSize:2048,maxDecibels:-30,minDecibels:-100,smoothingTimeConstant:.8},createAnalyserNodeConstructor=(s,e,t,n,o,r)=>class extends s{constructor(c,l){const u=o(c),d={...DEFAULT_OPTIONS$j,...l},f=n(u,d),m=r(u)?e():null;super(c,!1,f,m),this._nativeAnalyserNode=f}get fftSize(){return this._nativeAnalyserNode.fftSize}set fftSize(c){this._nativeAnalyserNode.fftSize=c}get frequencyBinCount(){return this._nativeAnalyserNode.frequencyBinCount}get maxDecibels(){return this._nativeAnalyserNode.maxDecibels}set maxDecibels(c){const l=this._nativeAnalyserNode.maxDecibels;if(this._nativeAnalyserNode.maxDecibels=c,!(c>this._nativeAnalyserNode.minDecibels))throw this._nativeAnalyserNode.maxDecibels=l,t()}get minDecibels(){return this._nativeAnalyserNode.minDecibels}set minDecibels(c){const l=this._nativeAnalyserNode.minDecibels;if(this._nativeAnalyserNode.minDecibels=c,!(this._nativeAnalyserNode.maxDecibels>c))throw this._nativeAnalyserNode.minDecibels=l,t()}get smoothingTimeConstant(){return this._nativeAnalyserNode.smoothingTimeConstant}set smoothingTimeConstant(c){this._nativeAnalyserNode.smoothingTimeConstant=c}getByteFrequencyData(c){this._nativeAnalyserNode.getByteFrequencyData(c)}getByteTimeDomainData(c){this._nativeAnalyserNode.getByteTimeDomainData(c)}getFloatFrequencyData(c){this._nativeAnalyserNode.getFloatFrequencyData(c)}getFloatTimeDomainData(c){this._nativeAnalyserNode.getFloatTimeDomainData(c)}},isOwnedByContext=(s,e)=>s.context===e,createAnalyserNodeRendererFactory=(s,e,t)=>()=>{const n=new WeakMap,o=async(r,a)=>{let c=e(r);if(!isOwnedByContext(c,a)){const u={channelCount:c.channelCount,channelCountMode:c.channelCountMode,channelInterpretation:c.channelInterpretation,fftSize:c.fftSize,maxDecibels:c.maxDecibels,minDecibels:c.minDecibels,smoothingTimeConstant:c.smoothingTimeConstant};c=s(a,u)}return n.set(a,c),await t(r,a,c),c};return{render(r,a){const c=n.get(a);return c!==void 0?Promise.resolve(c):o(r,a)}}},testAudioBufferCopyChannelMethodsOutOfBoundsSupport=s=>{try{s.copyToChannel(new Float32Array(1),0,-1)}catch{return!1}return!0},createIndexSizeError=()=>new DOMException("","IndexSizeError"),wrapAudioBufferGetChannelDataMethod=s=>{s.getChannelData=(e=>t=>{try{return e.call(s,t)}catch(n){throw n.code===12?createIndexSizeError():n}})(s.getChannelData)},DEFAULT_OPTIONS$i={numberOfChannels:1},createAudioBufferConstructor=(s,e,t,n,o,r,a,c)=>{let l=null;return class Oe{constructor(d){if(o===null)throw new Error("Missing the native OfflineAudioContext constructor.");const{length:f,numberOfChannels:m,sampleRate:g}={...DEFAULT_OPTIONS$i,...d};l===null&&(l=new o(1,1,44100));const _=n!==null&&e(r,r)?new n({length:f,numberOfChannels:m,sampleRate:g}):l.createBuffer(m,f,g);if(_.numberOfChannels===0)throw t();return typeof _.copyFromChannel!="function"?(a(_),wrapAudioBufferGetChannelDataMethod(_)):e(testAudioBufferCopyChannelMethodsOutOfBoundsSupport,()=>testAudioBufferCopyChannelMethodsOutOfBoundsSupport(_))||c(_),s.add(_),_}static[Symbol.hasInstance](d){return d!==null&&typeof d=="object"&&Object.getPrototypeOf(d)===Oe.prototype||s.has(d)}}},MOST_NEGATIVE_SINGLE_FLOAT=-34028234663852886e22,MOST_POSITIVE_SINGLE_FLOAT=-MOST_NEGATIVE_SINGLE_FLOAT,isActiveAudioNode=s=>ACTIVE_AUDIO_NODE_STORE.has(s),DEFAULT_OPTIONS$h={buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1},createAudioBufferSourceNodeConstructor=(s,e,t,n,o,r,a,c)=>class extends s{constructor(u,d){const f=r(u),m={...DEFAULT_OPTIONS$h,...d},g=o(f,m),_=a(f),y=_?e():null;super(u,!1,g,y),this._audioBufferSourceNodeRenderer=y,this._isBufferNullified=!1,this._isBufferSet=m.buffer!==null,this._nativeAudioBufferSourceNode=g,this._onended=null,this._playbackRate=t(this,_,g.playbackRate,MOST_POSITIVE_SINGLE_FLOAT,MOST_NEGATIVE_SINGLE_FLOAT)}get buffer(){return this._isBufferNullified?null:this._nativeAudioBufferSourceNode.buffer}set buffer(u){if(this._nativeAudioBufferSourceNode.buffer=u,u!==null){if(this._isBufferSet)throw n();this._isBufferSet=!0}}get loop(){return this._nativeAudioBufferSourceNode.loop}set loop(u){this._nativeAudioBufferSourceNode.loop=u}get loopEnd(){return this._nativeAudioBufferSourceNode.loopEnd}set loopEnd(u){this._nativeAudioBufferSourceNode.loopEnd=u}get loopStart(){return this._nativeAudioBufferSourceNode.loopStart}set loopStart(u){this._nativeAudioBufferSourceNode.loopStart=u}get onended(){return this._onended}set onended(u){const d=typeof u=="function"?c(this,u):null;this._nativeAudioBufferSourceNode.onended=d;const f=this._nativeAudioBufferSourceNode.onended;this._onended=f!==null&&f===d?u:f}get playbackRate(){return this._playbackRate}start(u=0,d=0,f){if(this._nativeAudioBufferSourceNode.start(u,d,f),this._audioBufferSourceNodeRenderer!==null&&(this._audioBufferSourceNodeRenderer.start=f===void 0?[u,d]:[u,d,f]),this.context.state!=="closed"){setInternalStateToActive(this);const m=()=>{this._nativeAudioBufferSourceNode.removeEventListener("ended",m),isActiveAudioNode(this)&&setInternalStateToPassive(this)};this._nativeAudioBufferSourceNode.addEventListener("ended",m)}}stop(u=0){this._nativeAudioBufferSourceNode.stop(u),this._audioBufferSourceNodeRenderer!==null&&(this._audioBufferSourceNodeRenderer.stop=u)}},createAudioBufferSourceNodeRendererFactory=(s,e,t,n,o)=>()=>{const r=new WeakMap;let a=null,c=null;const l=async(u,d)=>{let f=t(u);const m=isOwnedByContext(f,d);if(!m){const g={buffer:f.buffer,channelCount:f.channelCount,channelCountMode:f.channelCountMode,channelInterpretation:f.channelInterpretation,loop:f.loop,loopEnd:f.loopEnd,loopStart:f.loopStart,playbackRate:f.playbackRate.value};f=e(d,g),a!==null&&f.start(...a),c!==null&&f.stop(c)}return r.set(d,f),m?await s(d,u.playbackRate,f.playbackRate):await n(d,u.playbackRate,f.playbackRate),await o(u,d,f),f};return{set start(u){a=u},set stop(u){c=u},render(u,d){const f=r.get(d);return f!==void 0?Promise.resolve(f):l(u,d)}}},isAudioBufferSourceNode=s=>"playbackRate"in s,isBiquadFilterNode=s=>"frequency"in s&&"gain"in s,isConstantSourceNode=s=>"offset"in s,isGainNode=s=>!("frequency"in s)&&"gain"in s,isOscillatorNode=s=>"detune"in s&&"frequency"in s,isStereoPannerNode=s=>"pan"in s,getAudioNodeConnections=s=>getValueForKey(AUDIO_NODE_CONNECTIONS_STORE,s),getAudioParamConnections=s=>getValueForKey(AUDIO_PARAM_CONNECTIONS_STORE,s),deactivateActiveAudioNodeInputConnections=(s,e)=>{const{activeInputs:t}=getAudioNodeConnections(s);t.forEach(o=>o.forEach(([r])=>{e.includes(s)||deactivateActiveAudioNodeInputConnections(r,[...e,s])}));const n=isAudioBufferSourceNode(s)?[s.playbackRate]:isAudioWorkletNode(s)?Array.from(s.parameters.values()):isBiquadFilterNode(s)?[s.Q,s.detune,s.frequency,s.gain]:isConstantSourceNode(s)?[s.offset]:isGainNode(s)?[s.gain]:isOscillatorNode(s)?[s.detune,s.frequency]:isStereoPannerNode(s)?[s.pan]:[];for(const o of n){const r=getAudioParamConnections(o);r!==void 0&&r.activeInputs.forEach(([a])=>deactivateActiveAudioNodeInputConnections(a,e))}isActiveAudioNode(s)&&setInternalStateToPassive(s)},deactivateAudioGraph=s=>{deactivateActiveAudioNodeInputConnections(s.destination,[])},isValidLatencyHint=s=>s===void 0||typeof s=="number"||typeof s=="string"&&(s==="balanced"||s==="interactive"||s==="playback"),createAudioContextConstructor=(s,e,t,n,o,r,a,c,l)=>class extends s{constructor(d={}){if(l===null)throw new Error("Missing the native AudioContext constructor.");let f;try{f=new l(d)}catch(_){throw _.code===12&&_.message==="sampleRate is not in range"?t():_}if(f===null)throw n();if(!isValidLatencyHint(d.latencyHint))throw new TypeError(`The provided value '${d.latencyHint}' is not a valid enum value of type AudioContextLatencyCategory.`);if(d.sampleRate!==void 0&&f.sampleRate!==d.sampleRate)throw t();super(f,2);const{latencyHint:m}=d,{sampleRate:g}=f;if(this._baseLatency=typeof f.baseLatency=="number"?f.baseLatency:m==="balanced"?512/g:m==="interactive"||m===void 0?256/g:m==="playback"?1024/g:Math.max(2,Math.min(128,Math.round(m*g/128)))*128/g,this._nativeAudioContext=f,l.name==="webkitAudioContext"?(this._nativeGainNode=f.createGain(),this._nativeOscillatorNode=f.createOscillator(),this._nativeGainNode.gain.value=1e-37,this._nativeOscillatorNode.connect(this._nativeGainNode).connect(f.destination),this._nativeOscillatorNode.start()):(this._nativeGainNode=null,this._nativeOscillatorNode=null),this._state=null,f.state==="running"){this._state="suspended";const _=()=>{this._state==="suspended"&&(this._state=null),f.removeEventListener("statechange",_)};f.addEventListener("statechange",_)}}get baseLatency(){return this._baseLatency}get state(){return this._state!==null?this._state:this._nativeAudioContext.state}close(){return this.state==="closed"?this._nativeAudioContext.close().then(()=>{throw e()}):(this._state==="suspended"&&(this._state=null),this._nativeAudioContext.close().then(()=>{this._nativeGainNode!==null&&this._nativeOscillatorNode!==null&&(this._nativeOscillatorNode.stop(),this._nativeGainNode.disconnect(),this._nativeOscillatorNode.disconnect()),deactivateAudioGraph(this)}))}createMediaElementSource(d){return new o(this,{mediaElement:d})}createMediaStreamDestination(){return new r(this)}createMediaStreamSource(d){return new a(this,{mediaStream:d})}createMediaStreamTrackSource(d){return new c(this,{mediaStreamTrack:d})}resume(){return this._state==="suspended"?new Promise((d,f)=>{const m=()=>{this._nativeAudioContext.removeEventListener("statechange",m),this._nativeAudioContext.state==="running"?d():this.resume().then(d,f)};this._nativeAudioContext.addEventListener("statechange",m)}):this._nativeAudioContext.resume().catch(d=>{throw d===void 0||d.code===15?e():d})}suspend(){return this._nativeAudioContext.suspend().catch(d=>{throw d===void 0?e():d})}},createAudioDestinationNodeConstructor=(s,e,t,n,o,r,a,c)=>class extends s{constructor(u,d){const f=r(u),m=a(f),g=o(f,d,m),_=m?e(c):null;super(u,!1,g,_),this._isNodeOfNativeOfflineAudioContext=m,this._nativeAudioDestinationNode=g}get channelCount(){return this._nativeAudioDestinationNode.channelCount}set channelCount(u){if(this._isNodeOfNativeOfflineAudioContext)throw n();if(u>this._nativeAudioDestinationNode.maxChannelCount)throw t();this._nativeAudioDestinationNode.channelCount=u}get channelCountMode(){return this._nativeAudioDestinationNode.channelCountMode}set channelCountMode(u){if(this._isNodeOfNativeOfflineAudioContext)throw n();this._nativeAudioDestinationNode.channelCountMode=u}get maxChannelCount(){return this._nativeAudioDestinationNode.maxChannelCount}},createAudioDestinationNodeRenderer=s=>{const e=new WeakMap,t=async(n,o)=>{const r=o.destination;return e.set(o,r),await s(n,o,r),r};return{render(n,o){const r=e.get(o);return r!==void 0?Promise.resolve(r):t(n,o)}}},createAudioListenerFactory=(s,e,t,n,o,r,a,c)=>(l,u)=>{const d=u.listener,f=()=>{const T=new Float32Array(1),k=e(u,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:9}),I=a(u);let C=!1,W=[0,0,-1,0,1,0],q=[0,0,0];const L=()=>{if(C)return;C=!0;const te=n(u,256,9,0);te.onaudioprocess=({inputBuffer:H})=>{const G=[r(H,T,0),r(H,T,1),r(H,T,2),r(H,T,3),r(H,T,4),r(H,T,5)];G.some((ee,oe)=>ee!==W[oe])&&(d.setOrientation(...G),W=G);const X=[r(H,T,6),r(H,T,7),r(H,T,8)];X.some((ee,oe)=>ee!==q[oe])&&(d.setPosition(...X),q=X)},k.connect(te)},V=te=>H=>{H!==W[te]&&(W[te]=H,d.setOrientation(...W))},K=te=>H=>{H!==q[te]&&(q[te]=H,d.setPosition(...q))},Y=(te,H,G)=>{const X=t(u,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",offset:H});X.connect(k,0,te),X.start(),Object.defineProperty(X.offset,"defaultValue",{get(){return H}});const ee=s({context:l},I,X.offset,MOST_POSITIVE_SINGLE_FLOAT,MOST_NEGATIVE_SINGLE_FLOAT);return c(ee,"value",oe=>()=>oe.call(ee),oe=>ne=>{try{oe.call(ee,ne)}catch(re){if(re.code!==9)throw re}L(),I&&G(ne)}),ee.cancelAndHoldAtTime=(oe=>I?()=>{throw o()}:(...ne)=>{const re=oe.apply(ee,ne);return L(),re})(ee.cancelAndHoldAtTime),ee.cancelScheduledValues=(oe=>I?()=>{throw o()}:(...ne)=>{const re=oe.apply(ee,ne);return L(),re})(ee.cancelScheduledValues),ee.exponentialRampToValueAtTime=(oe=>I?()=>{throw o()}:(...ne)=>{const re=oe.apply(ee,ne);return L(),re})(ee.exponentialRampToValueAtTime),ee.linearRampToValueAtTime=(oe=>I?()=>{throw o()}:(...ne)=>{const re=oe.apply(ee,ne);return L(),re})(ee.linearRampToValueAtTime),ee.setTargetAtTime=(oe=>I?()=>{throw o()}:(...ne)=>{const re=oe.apply(ee,ne);return L(),re})(ee.setTargetAtTime),ee.setValueAtTime=(oe=>I?()=>{throw o()}:(...ne)=>{const re=oe.apply(ee,ne);return L(),re})(ee.setValueAtTime),ee.setValueCurveAtTime=(oe=>I?()=>{throw o()}:(...ne)=>{const re=oe.apply(ee,ne);return L(),re})(ee.setValueCurveAtTime),ee};return{forwardX:Y(0,0,V(0)),forwardY:Y(1,0,V(1)),forwardZ:Y(2,-1,V(2)),positionX:Y(6,0,K(0)),positionY:Y(7,0,K(1)),positionZ:Y(8,0,K(2)),upX:Y(3,0,V(3)),upY:Y(4,1,V(4)),upZ:Y(5,0,V(5))}},{forwardX:m,forwardY:g,forwardZ:_,positionX:y,positionY:A,positionZ:N,upX:x,upY:M,upZ:E}=d.forwardX===void 0?f():d;return{get forwardX(){return m},get forwardY(){return g},get forwardZ(){return _},get positionX(){return y},get positionY(){return A},get positionZ(){return N},get upX(){return x},get upY(){return M},get upZ(){return E}}},isAudioNode$1=s=>"context"in s,isAudioNodeOutputConnection=s=>isAudioNode$1(s[0]),insertElementInSet=(s,e,t,n)=>{for(const o of s)if(t(o)){if(n)return!1;throw Error("The set contains at least one similar element.")}return s.add(e),!0},addActiveInputConnectionToAudioParam=(s,e,[t,n],o)=>{insertElementInSet(s,[e,t,n],r=>r[0]===e&&r[1]===t,o)},addPassiveInputConnectionToAudioParam=(s,[e,t,n],o)=>{const r=s.get(e);r===void 0?s.set(e,new Set([[t,n]])):insertElementInSet(r,[t,n],a=>a[0]===t,o)},isNativeAudioNodeFaker=s=>"inputs"in s,connectNativeAudioNodeToNativeAudioNode=(s,e,t,n)=>{if(isNativeAudioNodeFaker(e)){const o=e.inputs[n];return s.connect(o,t,0),[o,t,0]}return s.connect(e,t,n),[e,t,n]},deleteActiveInputConnection=(s,e,t)=>{for(const n of s)if(n[0]===e&&n[1]===t)return s.delete(n),n;return null},deleteActiveInputConnectionToAudioParam=(s,e,t)=>pickElementFromSet(s,n=>n[0]===e&&n[1]===t),deleteEventListenerOfAudioNode=(s,e)=>{if(!getEventListenersOfAudioNode(s).delete(e))throw new Error("Missing the expected event listener.")},deletePassiveInputConnectionToAudioParam=(s,e,t)=>{const n=getValueForKey(s,e),o=pickElementFromSet(n,r=>r[0]===t);return n.size===0&&s.delete(e),o},disconnectNativeAudioNodeFromNativeAudioNode=(s,e,t,n)=>{isNativeAudioNodeFaker(e)?s.disconnect(e.inputs[n],t,0):s.disconnect(e,t,n)},getNativeAudioNode=s=>getValueForKey(AUDIO_NODE_STORE,s),getNativeAudioParam=s=>getValueForKey(AUDIO_PARAM_STORE,s),isPartOfACycle=s=>CYCLE_COUNTERS.has(s),isPassiveAudioNode=s=>!ACTIVE_AUDIO_NODE_STORE.has(s),testAudioNodeDisconnectMethodSupport=(s,e)=>new Promise(t=>{if(e!==null)t(!0);else{const n=s.createScriptProcessor(256,1,1),o=s.createGain(),r=s.createBuffer(1,2,44100),a=r.getChannelData(0);a[0]=1,a[1]=1;const c=s.createBufferSource();c.buffer=r,c.loop=!0,c.connect(n).connect(s.destination),c.connect(o),c.disconnect(o),n.onaudioprocess=l=>{const u=l.inputBuffer.getChannelData(0);Array.prototype.some.call(u,d=>d===1)?t(!0):t(!1),c.stop(),n.onaudioprocess=null,c.disconnect(n),n.disconnect(s.destination)},c.start()}}),visitEachAudioNodeOnce=(s,e)=>{const t=new Map;for(const n of s)for(const o of n){const r=t.get(o);t.set(o,r===void 0?1:r+1)}t.forEach((n,o)=>e(o,n))},isNativeAudioNode$1=s=>"context"in s,wrapAudioNodeDisconnectMethod=s=>{const e=new Map;s.connect=(t=>(n,o=0,r=0)=>{const a=isNativeAudioNode$1(n)?t(n,o,r):t(n,o),c=e.get(n);return c===void 0?e.set(n,[{input:r,output:o}]):c.every(l=>l.input!==r||l.output!==o)&&c.push({input:r,output:o}),a})(s.connect.bind(s)),s.disconnect=(t=>(n,o,r)=>{if(t.apply(s),n===void 0)e.clear();else if(typeof n=="number")for(const[a,c]of e){const l=c.filter(u=>u.output!==n);l.length===0?e.delete(a):e.set(a,l)}else if(e.has(n))if(o===void 0)e.delete(n);else{const a=e.get(n);if(a!==void 0){const c=a.filter(l=>l.output!==o&&(l.input!==r||r===void 0));c.length===0?e.delete(n):e.set(n,c)}}for(const[a,c]of e)c.forEach(l=>{isNativeAudioNode$1(a)?s.connect(a,l.output,l.input):s.connect(a,l.output)})})(s.disconnect)},addConnectionToAudioParamOfAudioContext=(s,e,t,n)=>{const{activeInputs:o,passiveInputs:r}=getAudioParamConnections(e),{outputs:a}=getAudioNodeConnections(s),c=getEventListenersOfAudioNode(s),l=u=>{const d=getNativeAudioNode(s),f=getNativeAudioParam(e);if(u){const m=deletePassiveInputConnectionToAudioParam(r,s,t);addActiveInputConnectionToAudioParam(o,s,m,!1),!n&&!isPartOfACycle(s)&&d.connect(f,t)}else{const m=deleteActiveInputConnectionToAudioParam(o,s,t);addPassiveInputConnectionToAudioParam(r,m,!1),!n&&!isPartOfACycle(s)&&d.disconnect(f,t)}};return insertElementInSet(a,[e,t],u=>u[0]===e&&u[1]===t,!0)?(c.add(l),isActiveAudioNode(s)?addActiveInputConnectionToAudioParam(o,s,[t,l],!0):addPassiveInputConnectionToAudioParam(r,[s,t,l],!0),!0):!1},deleteInputConnectionOfAudioNode=(s,e,t,n)=>{const{activeInputs:o,passiveInputs:r}=getAudioNodeConnections(e),a=deleteActiveInputConnection(o[n],s,t);return a===null?[deletePassiveInputConnectionToAudioNode(r,s,t,n)[2],!1]:[a[2],!0]},deleteInputConnectionOfAudioParam=(s,e,t)=>{const{activeInputs:n,passiveInputs:o}=getAudioParamConnections(e),r=deleteActiveInputConnection(n,s,t);return r===null?[deletePassiveInputConnectionToAudioParam(o,s,t)[1],!1]:[r[2],!0]},deleteInputsOfAudioNode=(s,e,t,n,o)=>{const[r,a]=deleteInputConnectionOfAudioNode(s,t,n,o);if(r!==null&&(deleteEventListenerOfAudioNode(s,r),a&&!e&&!isPartOfACycle(s)&&disconnectNativeAudioNodeFromNativeAudioNode(getNativeAudioNode(s),getNativeAudioNode(t),n,o)),isActiveAudioNode(t)){const{activeInputs:c}=getAudioNodeConnections(t);setInternalStateToPassiveWhenNecessary(t,c)}},deleteInputsOfAudioParam=(s,e,t,n)=>{const[o,r]=deleteInputConnectionOfAudioParam(s,t,n);o!==null&&(deleteEventListenerOfAudioNode(s,o),r&&!e&&!isPartOfACycle(s)&&getNativeAudioNode(s).disconnect(getNativeAudioParam(t),n))},deleteAnyConnection=(s,e)=>{const t=getAudioNodeConnections(s),n=[];for(const o of t.outputs)isAudioNodeOutputConnection(o)?deleteInputsOfAudioNode(s,e,...o):deleteInputsOfAudioParam(s,e,...o),n.push(o[0]);return t.outputs.clear(),n},deleteConnectionAtOutput=(s,e,t)=>{const n=getAudioNodeConnections(s),o=[];for(const r of n.outputs)r[1]===t&&(isAudioNodeOutputConnection(r)?deleteInputsOfAudioNode(s,e,...r):deleteInputsOfAudioParam(s,e,...r),o.push(r[0]),n.outputs.delete(r));return o},deleteConnectionToDestination=(s,e,t,n,o)=>{const r=getAudioNodeConnections(s);return Array.from(r.outputs).filter(a=>a[0]===t&&(n===void 0||a[1]===n)&&(o===void 0||a[2]===o)).map(a=>(isAudioNodeOutputConnection(a)?deleteInputsOfAudioNode(s,e,...a):deleteInputsOfAudioParam(s,e,...a),r.outputs.delete(a),a[0]))},createAudioNodeConstructor=(s,e,t,n,o,r,a,c,l,u,d,f,m,g,_,y)=>class extends u{constructor(N,x,M,E){super(M),this._context=N,this._nativeAudioNode=M;const T=d(N);f(T)&&t(testAudioNodeDisconnectMethodSupport,()=>testAudioNodeDisconnectMethodSupport(T,y))!==!0&&wrapAudioNodeDisconnectMethod(M),AUDIO_NODE_STORE.set(this,M),EVENT_LISTENERS.set(this,new Set),N.state!=="closed"&&x&&setInternalStateToActive(this),s(this,E,M)}get channelCount(){return this._nativeAudioNode.channelCount}set channelCount(N){this._nativeAudioNode.channelCount=N}get channelCountMode(){return this._nativeAudioNode.channelCountMode}set channelCountMode(N){this._nativeAudioNode.channelCountMode=N}get channelInterpretation(){return this._nativeAudioNode.channelInterpretation}set channelInterpretation(N){this._nativeAudioNode.channelInterpretation=N}get context(){return this._context}get numberOfInputs(){return this._nativeAudioNode.numberOfInputs}get numberOfOutputs(){return this._nativeAudioNode.numberOfOutputs}connect(N,x=0,M=0){if(x<0||x>=this._nativeAudioNode.numberOfOutputs)throw o();const E=d(this._context),T=_(E);if(m(N)||g(N))throw r();if(isAudioNode$1(N)){const C=getNativeAudioNode(N);try{const q=connectNativeAudioNodeToNativeAudioNode(this._nativeAudioNode,C,x,M),L=isPassiveAudioNode(this);(T||L)&&this._nativeAudioNode.disconnect(...q),this.context.state!=="closed"&&!L&&isPassiveAudioNode(N)&&setInternalStateToActive(N)}catch(q){throw q.code===12?r():q}if(e(this,N,x,M,T)){const q=l([this],N);visitEachAudioNodeOnce(q,n(T))}return N}const k=getNativeAudioParam(N);if(k.name==="playbackRate"&&k.maxValue===1024)throw a();try{this._nativeAudioNode.connect(k,x),(T||isPassiveAudioNode(this))&&this._nativeAudioNode.disconnect(k,x)}catch(C){throw C.code===12?r():C}if(addConnectionToAudioParamOfAudioContext(this,N,x,T)){const C=l([this],N);visitEachAudioNodeOnce(C,n(T))}}disconnect(N,x,M){let E;const T=d(this._context),k=_(T);if(N===void 0)E=deleteAnyConnection(this,k);else if(typeof N=="number"){if(N<0||N>=this.numberOfOutputs)throw o();E=deleteConnectionAtOutput(this,k,N)}else{if(x!==void 0&&(x<0||x>=this.numberOfOutputs)||isAudioNode$1(N)&&M!==void 0&&(M<0||M>=N.numberOfInputs))throw o();if(E=deleteConnectionToDestination(this,k,N,x,M),E.length===0)throw r()}for(const I of E){const C=l([this],I);visitEachAudioNodeOnce(C,c)}}},createAudioParamFactory=(s,e,t,n,o,r,a,c,l,u,d,f,m)=>(g,_,y,A=null,N=null)=>{const x=y.value,M=new AutomationEventList(x),E=_?n(M):null,T={get defaultValue(){return x},get maxValue(){return A===null?y.maxValue:A},get minValue(){return N===null?y.minValue:N},get value(){return y.value},set value(k){y.value=k,T.setValueAtTime(k,g.context.currentTime)},cancelAndHoldAtTime(k){if(typeof y.cancelAndHoldAtTime=="function")E===null&&M.flush(g.context.currentTime),M.add(o(k)),y.cancelAndHoldAtTime(k);else{const I=Array.from(M).pop();E===null&&M.flush(g.context.currentTime),M.add(o(k));const C=Array.from(M).pop();y.cancelScheduledValues(k),I!==C&&C!==void 0&&(C.type==="exponentialRampToValue"?y.exponentialRampToValueAtTime(C.value,C.endTime):C.type==="linearRampToValue"?y.linearRampToValueAtTime(C.value,C.endTime):C.type==="setValue"?y.setValueAtTime(C.value,C.startTime):C.type==="setValueCurve"&&y.setValueCurveAtTime(C.values,C.startTime,C.duration))}return T},cancelScheduledValues(k){return E===null&&M.flush(g.context.currentTime),M.add(r(k)),y.cancelScheduledValues(k),T},exponentialRampToValueAtTime(k,I){if(k===0)throw new RangeError;if(!Number.isFinite(I)||I<0)throw new RangeError;const C=g.context.currentTime;return E===null&&M.flush(C),Array.from(M).length===0&&(M.add(u(x,C)),y.setValueAtTime(x,C)),M.add(a(k,I)),y.exponentialRampToValueAtTime(k,I),T},linearRampToValueAtTime(k,I){const C=g.context.currentTime;return E===null&&M.flush(C),Array.from(M).length===0&&(M.add(u(x,C)),y.setValueAtTime(x,C)),M.add(c(k,I)),y.linearRampToValueAtTime(k,I),T},setTargetAtTime(k,I,C){return E===null&&M.flush(g.context.currentTime),M.add(l(k,I,C)),y.setTargetAtTime(k,I,C),T},setValueAtTime(k,I){return E===null&&M.flush(g.context.currentTime),M.add(u(k,I)),y.setValueAtTime(k,I),T},setValueCurveAtTime(k,I,C){const W=k instanceof Float32Array?k:new Float32Array(k);if(f!==null&&f.name==="webkitAudioContext"){const q=I+C,L=g.context.sampleRate,V=Math.ceil(I*L),K=Math.floor(q*L),Y=K-V,te=new Float32Array(Y);for(let G=0;G<Y;G+=1){const X=(W.length-1)/C*((V+G)/L-I),ee=Math.floor(X),oe=Math.ceil(X);te[G]=ee===oe?W[ee]:(1-(X-ee))*W[ee]+(1-(oe-X))*W[oe]}E===null&&M.flush(g.context.currentTime),M.add(d(te,I,C)),y.setValueCurveAtTime(te,I,C);const H=K/L;H<q&&m(T,te[te.length-1],H),m(T,W[W.length-1],q)}else E===null&&M.flush(g.context.currentTime),M.add(d(W,I,C)),y.setValueCurveAtTime(W,I,C);return T}};return t.set(T,y),e.set(T,g),s(T,E),T},createAudioParamRenderer=s=>({replay(e){for(const t of s)if(t.type==="exponentialRampToValue"){const{endTime:n,value:o}=t;e.exponentialRampToValueAtTime(o,n)}else if(t.type==="linearRampToValue"){const{endTime:n,value:o}=t;e.linearRampToValueAtTime(o,n)}else if(t.type==="setTarget"){const{startTime:n,target:o,timeConstant:r}=t;e.setTargetAtTime(o,n,r)}else if(t.type==="setValue"){const{startTime:n,value:o}=t;e.setValueAtTime(o,n)}else if(t.type==="setValueCurve"){const{duration:n,startTime:o,values:r}=t;e.setValueCurveAtTime(r,o,n)}else throw new Error("Can't apply an unknown automation.")}});class ReadOnlyMap{constructor(e){this._map=new Map(e)}get size(){return this._map.size}entries(){return this._map.entries()}forEach(e,t=null){return this._map.forEach((n,o)=>e.call(t,n,o,this))}get(e){return this._map.get(e)}has(e){return this._map.has(e)}keys(){return this._map.keys()}values(){return this._map.values()}}const DEFAULT_OPTIONS$g={channelCount:2,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:1,numberOfOutputs:1,parameterData:{},processorOptions:{}},createAudioWorkletNodeConstructor=(s,e,t,n,o,r,a,c,l,u,d,f,m,g)=>class extends e{constructor(y,A,N){var x;const M=c(y),E=l(M),T=d({...DEFAULT_OPTIONS$g,...N});m(T);const k=NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS.get(M),I=k==null?void 0:k.get(A),C=E||M.state!=="closed"?M:(x=a(M))!==null&&x!==void 0?x:M,W=o(C,E?null:y.baseLatency,u,A,I,T),q=E?n(A,T,I):null;super(y,!0,W,q);const L=[];W.parameters.forEach((K,Y)=>{const te=t(this,E,K);L.push([Y,te])}),this._nativeAudioWorkletNode=W,this._onprocessorerror=null,this._parameters=new ReadOnlyMap(L),E&&s(M,this);const{activeInputs:V}=r(this);f(W,V)}get onprocessorerror(){return this._onprocessorerror}set onprocessorerror(y){const A=typeof y=="function"?g(this,y):null;this._nativeAudioWorkletNode.onprocessorerror=A;const N=this._nativeAudioWorkletNode.onprocessorerror;this._onprocessorerror=N!==null&&N===A?y:N}get parameters(){return this._parameters===null?this._nativeAudioWorkletNode.parameters:this._parameters}get port(){return this._nativeAudioWorkletNode.port}};function copyFromChannel(s,e,t,n,o){if(typeof s.copyFromChannel=="function")e[t].byteLength===0&&(e[t]=new Float32Array(128)),s.copyFromChannel(e[t],n,o);else{const r=s.getChannelData(n);if(e[t].byteLength===0)e[t]=r.slice(o,o+128);else{const a=new Float32Array(r.buffer,o*Float32Array.BYTES_PER_ELEMENT,128);e[t].set(a)}}}const copyToChannel=(s,e,t,n,o)=>{typeof s.copyToChannel=="function"?e[t].byteLength!==0&&s.copyToChannel(e[t],n,o):e[t].byteLength!==0&&s.getChannelData(n).set(e[t],o)},createNestedArrays=(s,e)=>{const t=[];for(let n=0;n<s;n+=1){const o=[],r=typeof e=="number"?e:e[n];for(let a=0;a<r;a+=1)o.push(new Float32Array(128));t.push(o)}return t},getAudioWorkletProcessor=(s,e)=>{const t=getValueForKey(NODE_TO_PROCESSOR_MAPS,s),n=getNativeAudioNode(e);return getValueForKey(t,n)},processBuffer=async(s,e,t,n,o,r,a)=>{const c=e===null?Math.ceil(s.context.length/128)*128:e.length,l=n.channelCount*n.numberOfInputs,u=o.reduce((A,N)=>A+N,0),d=u===0?null:t.createBuffer(u,c,t.sampleRate);if(r===void 0)throw new Error("Missing the processor constructor.");const f=getAudioNodeConnections(s),m=await getAudioWorkletProcessor(t,s),g=createNestedArrays(n.numberOfInputs,n.channelCount),_=createNestedArrays(n.numberOfOutputs,o),y=Array.from(s.parameters.keys()).reduce((A,N)=>({...A,[N]:new Float32Array(128)}),{});for(let A=0;A<c;A+=128){if(n.numberOfInputs>0&&e!==null)for(let N=0;N<n.numberOfInputs;N+=1)for(let x=0;x<n.channelCount;x+=1)copyFromChannel(e,g[N],x,x,A);r.parameterDescriptors!==void 0&&e!==null&&r.parameterDescriptors.forEach(({name:N},x)=>{copyFromChannel(e,y,N,l+x,A)});for(let N=0;N<n.numberOfInputs;N+=1)for(let x=0;x<o[N];x+=1)_[N][x].byteLength===0&&(_[N][x]=new Float32Array(128));try{const N=g.map((M,E)=>f.activeInputs[E].size===0?[]:M),x=a(A/t.sampleRate,t.sampleRate,()=>m.process(N,_,y));if(d!==null)for(let M=0,E=0;M<n.numberOfOutputs;M+=1){for(let T=0;T<o[M];T+=1)copyToChannel(d,_[M],T,E+T,A);E+=o[M]}if(!x)break}catch(N){s.dispatchEvent(new ErrorEvent("processorerror",{colno:N.colno,filename:N.filename,lineno:N.lineno,message:N.message}));break}}return d},createAudioWorkletNodeRendererFactory=(s,e,t,n,o,r,a,c,l,u,d,f,m,g,_,y)=>(A,N,x)=>{const M=new WeakMap;let E=null;const T=async(k,I)=>{let C=d(k),W=null;const q=isOwnedByContext(C,I),L=Array.isArray(N.outputChannelCount)?N.outputChannelCount:Array.from(N.outputChannelCount);if(f===null){const V=L.reduce((H,G)=>H+G,0),K=o(I,{channelCount:Math.max(1,V),channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:Math.max(1,V)}),Y=[];for(let H=0;H<k.numberOfOutputs;H+=1)Y.push(n(I,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:L[H]}));const te=a(I,{channelCount:N.channelCount,channelCountMode:N.channelCountMode,channelInterpretation:N.channelInterpretation,gain:1});te.connect=e.bind(null,Y),te.disconnect=l.bind(null,Y),W=[K,Y,te]}else q||(C=new f(I,A));if(M.set(I,W===null?C:W[2]),W!==null){if(E===null){if(x===void 0)throw new Error("Missing the processor constructor.");if(m===null)throw new Error("Missing the native OfflineAudioContext constructor.");const G=k.channelCount*k.numberOfInputs,X=x.parameterDescriptors===void 0?0:x.parameterDescriptors.length,ee=G+X;E=processBuffer(k,ee===0?null:await(async()=>{const ne=new m(ee,Math.ceil(k.context.length/128)*128,I.sampleRate),re=[],pe=[];for(let ce=0;ce<N.numberOfInputs;ce+=1)re.push(a(ne,{channelCount:N.channelCount,channelCountMode:N.channelCountMode,channelInterpretation:N.channelInterpretation,gain:1})),pe.push(o(ne,{channelCount:N.channelCount,channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:N.channelCount}));const fe=await Promise.all(Array.from(k.parameters.values()).map(async ce=>{const P=r(ne,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",offset:ce.value});return await g(ne,ce,P.offset),P})),ae=n(ne,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:Math.max(1,G+X)});for(let ce=0;ce<N.numberOfInputs;ce+=1){re[ce].connect(pe[ce]);for(let P=0;P<N.channelCount;P+=1)pe[ce].connect(ae,P,ce*N.channelCount+P)}for(const[ce,P]of fe.entries())P.connect(ae,0,G+ce),P.start(0);return ae.connect(ne.destination),await Promise.all(re.map(ce=>_(k,ne,ce))),y(ne)})(),I,N,L,x,u)}const V=await E,K=t(I,{buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1}),[Y,te,H]=W;V!==null&&(K.buffer=V,K.start(0)),K.connect(Y);for(let G=0,X=0;G<k.numberOfOutputs;G+=1){const ee=te[G];for(let oe=0;oe<L[G];oe+=1)Y.connect(ee,X+oe,oe);X+=L[G]}return H}if(q)for(const[V,K]of k.parameters.entries())await s(I,K,C.parameters.get(V));else for(const[V,K]of k.parameters.entries())await g(I,K,C.parameters.get(V));return await _(k,I,C),C};return{render(k,I){c(I,k);const C=M.get(I);return C!==void 0?Promise.resolve(C):T(k,I)}}},createBaseAudioContextConstructor=(s,e,t,n,o,r,a,c,l,u,d,f,m,g,_,y,A,N,x,M)=>class extends _{constructor(T,k){super(T,k),this._nativeContext=T,this._audioWorklet=s===void 0?void 0:{addModule:(I,C)=>s(this,I,C)}}get audioWorklet(){return this._audioWorklet}createAnalyser(){return new e(this)}createBiquadFilter(){return new o(this)}createBuffer(T,k,I){return new t({length:k,numberOfChannels:T,sampleRate:I})}createBufferSource(){return new n(this)}createChannelMerger(T=6){return new r(this,{numberOfInputs:T})}createChannelSplitter(T=6){return new a(this,{numberOfOutputs:T})}createConstantSource(){return new c(this)}createConvolver(){return new l(this)}createDelay(T=1){return new d(this,{maxDelayTime:T})}createDynamicsCompressor(){return new f(this)}createGain(){return new m(this)}createIIRFilter(T,k){return new g(this,{feedback:k,feedforward:T})}createOscillator(){return new y(this)}createPanner(){return new A(this)}createPeriodicWave(T,k,I={disableNormalization:!1}){return new N(this,{...I,imag:k,real:T})}createStereoPanner(){return new x(this)}createWaveShaper(){return new M(this)}decodeAudioData(T,k,I){return u(this._nativeContext,T).then(C=>(typeof k=="function"&&k(C),C),C=>{throw typeof I=="function"&&I(C),C})}},DEFAULT_OPTIONS$f={Q:1,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",detune:0,frequency:350,gain:0,type:"lowpass"},createBiquadFilterNodeConstructor=(s,e,t,n,o,r,a,c)=>class extends s{constructor(u,d){const f=r(u),m={...DEFAULT_OPTIONS$f,...d},g=o(f,m),_=a(f),y=_?t():null;super(u,!1,g,y),this._Q=e(this,_,g.Q,MOST_POSITIVE_SINGLE_FLOAT,MOST_NEGATIVE_SINGLE_FLOAT),this._detune=e(this,_,g.detune,1200*Math.log2(MOST_POSITIVE_SINGLE_FLOAT),-1200*Math.log2(MOST_POSITIVE_SINGLE_FLOAT)),this._frequency=e(this,_,g.frequency,u.sampleRate/2,0),this._gain=e(this,_,g.gain,40*Math.log10(MOST_POSITIVE_SINGLE_FLOAT),MOST_NEGATIVE_SINGLE_FLOAT),this._nativeBiquadFilterNode=g,c(this,1)}get detune(){return this._detune}get frequency(){return this._frequency}get gain(){return this._gain}get Q(){return this._Q}get type(){return this._nativeBiquadFilterNode.type}set type(u){this._nativeBiquadFilterNode.type=u}getFrequencyResponse(u,d,f){try{this._nativeBiquadFilterNode.getFrequencyResponse(u,d,f)}catch(m){throw m.code===11?n():m}if(u.length!==d.length||d.length!==f.length)throw n()}},createBiquadFilterNodeRendererFactory=(s,e,t,n,o)=>()=>{const r=new WeakMap,a=async(c,l)=>{let u=t(c);const d=isOwnedByContext(u,l);if(!d){const f={Q:u.Q.value,channelCount:u.channelCount,channelCountMode:u.channelCountMode,channelInterpretation:u.channelInterpretation,detune:u.detune.value,frequency:u.frequency.value,gain:u.gain.value,type:u.type};u=e(l,f)}return r.set(l,u),d?(await s(l,c.Q,u.Q),await s(l,c.detune,u.detune),await s(l,c.frequency,u.frequency),await s(l,c.gain,u.gain)):(await n(l,c.Q,u.Q),await n(l,c.detune,u.detune),await n(l,c.frequency,u.frequency),await n(l,c.gain,u.gain)),await o(c,l,u),u};return{render(c,l){const u=r.get(l);return u!==void 0?Promise.resolve(u):a(c,l)}}},createCacheTestResult=(s,e)=>(t,n)=>{const o=e.get(t);if(o!==void 0)return o;const r=s.get(t);if(r!==void 0)return r;try{const a=n();return a instanceof Promise?(s.set(t,a),a.catch(()=>!1).then(c=>(s.delete(t),e.set(t,c),c))):(e.set(t,a),a)}catch{return e.set(t,!1),!1}},DEFAULT_OPTIONS$e={channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:6},createChannelMergerNodeConstructor=(s,e,t,n,o)=>class extends s{constructor(a,c){const l=n(a),u={...DEFAULT_OPTIONS$e,...c},d=t(l,u),f=o(l)?e():null;super(a,!1,d,f)}},createChannelMergerNodeRendererFactory=(s,e,t)=>()=>{const n=new WeakMap,o=async(r,a)=>{let c=e(r);if(!isOwnedByContext(c,a)){const u={channelCount:c.channelCount,channelCountMode:c.channelCountMode,channelInterpretation:c.channelInterpretation,numberOfInputs:c.numberOfInputs};c=s(a,u)}return n.set(a,c),await t(r,a,c),c};return{render(r,a){const c=n.get(a);return c!==void 0?Promise.resolve(c):o(r,a)}}},DEFAULT_OPTIONS$d={channelCount:6,channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:6},createChannelSplitterNodeConstructor=(s,e,t,n,o,r)=>class extends s{constructor(c,l){const u=n(c),d=r({...DEFAULT_OPTIONS$d,...l}),f=t(u,d),m=o(u)?e():null;super(c,!1,f,m)}},createChannelSplitterNodeRendererFactory=(s,e,t)=>()=>{const n=new WeakMap,o=async(r,a)=>{let c=e(r);if(!isOwnedByContext(c,a)){const u={channelCount:c.channelCount,channelCountMode:c.channelCountMode,channelInterpretation:c.channelInterpretation,numberOfOutputs:c.numberOfOutputs};c=s(a,u)}return n.set(a,c),await t(r,a,c),c};return{render(r,a){const c=n.get(a);return c!==void 0?Promise.resolve(c):o(r,a)}}},createConnectAudioParam=s=>(e,t,n)=>s(t,e,n),createConnectMultipleOutputs=s=>(e,t,n=0,o=0)=>{const r=e[n];if(r===void 0)throw s();return isNativeAudioNode$1(t)?r.connect(t,0,o):r.connect(t,0)},createConnectedNativeAudioBufferSourceNodeFactory=s=>(e,t)=>{const n=s(e,{buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1}),o=e.createBuffer(1,2,44100);return n.buffer=o,n.loop=!0,n.connect(t),n.start(),()=>{n.stop(),n.disconnect(t)}},DEFAULT_OPTIONS$c={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",offset:1},createConstantSourceNodeConstructor=(s,e,t,n,o,r,a)=>class extends s{constructor(l,u){const d=o(l),f={...DEFAULT_OPTIONS$c,...u},m=n(d,f),g=r(d),_=g?t():null;super(l,!1,m,_),this._constantSourceNodeRenderer=_,this._nativeConstantSourceNode=m,this._offset=e(this,g,m.offset,MOST_POSITIVE_SINGLE_FLOAT,MOST_NEGATIVE_SINGLE_FLOAT),this._onended=null}get offset(){return this._offset}get onended(){return this._onended}set onended(l){const u=typeof l=="function"?a(this,l):null;this._nativeConstantSourceNode.onended=u;const d=this._nativeConstantSourceNode.onended;this._onended=d!==null&&d===u?l:d}start(l=0){if(this._nativeConstantSourceNode.start(l),this._constantSourceNodeRenderer!==null&&(this._constantSourceNodeRenderer.start=l),this.context.state!=="closed"){setInternalStateToActive(this);const u=()=>{this._nativeConstantSourceNode.removeEventListener("ended",u),isActiveAudioNode(this)&&setInternalStateToPassive(this)};this._nativeConstantSourceNode.addEventListener("ended",u)}}stop(l=0){this._nativeConstantSourceNode.stop(l),this._constantSourceNodeRenderer!==null&&(this._constantSourceNodeRenderer.stop=l)}},createConstantSourceNodeRendererFactory=(s,e,t,n,o)=>()=>{const r=new WeakMap;let a=null,c=null;const l=async(u,d)=>{let f=t(u);const m=isOwnedByContext(f,d);if(!m){const g={channelCount:f.channelCount,channelCountMode:f.channelCountMode,channelInterpretation:f.channelInterpretation,offset:f.offset.value};f=e(d,g),a!==null&&f.start(a),c!==null&&f.stop(c)}return r.set(d,f),m?await s(d,u.offset,f.offset):await n(d,u.offset,f.offset),await o(u,d,f),f};return{set start(u){a=u},set stop(u){c=u},render(u,d){const f=r.get(d);return f!==void 0?Promise.resolve(f):l(u,d)}}},createConvertNumberToUnsignedLong=s=>e=>(s[0]=e,s[0]),DEFAULT_OPTIONS$b={buffer:null,channelCount:2,channelCountMode:"clamped-max",channelInterpretation:"speakers",disableNormalization:!1},createConvolverNodeConstructor=(s,e,t,n,o,r)=>class extends s{constructor(c,l){const u=n(c),d={...DEFAULT_OPTIONS$b,...l},f=t(u,d),g=o(u)?e():null;super(c,!1,f,g),this._isBufferNullified=!1,this._nativeConvolverNode=f,d.buffer!==null&&r(this,d.buffer.duration)}get buffer(){return this._isBufferNullified?null:this._nativeConvolverNode.buffer}set buffer(c){if(this._nativeConvolverNode.buffer=c,c===null&&this._nativeConvolverNode.buffer!==null){const l=this._nativeConvolverNode.context;this._nativeConvolverNode.buffer=l.createBuffer(1,1,l.sampleRate),this._isBufferNullified=!0,r(this,0)}else this._isBufferNullified=!1,r(this,this._nativeConvolverNode.buffer===null?0:this._nativeConvolverNode.buffer.duration)}get normalize(){return this._nativeConvolverNode.normalize}set normalize(c){this._nativeConvolverNode.normalize=c}},createConvolverNodeRendererFactory=(s,e,t)=>()=>{const n=new WeakMap,o=async(r,a)=>{let c=e(r);if(!isOwnedByContext(c,a)){const u={buffer:c.buffer,channelCount:c.channelCount,channelCountMode:c.channelCountMode,channelInterpretation:c.channelInterpretation,disableNormalization:!c.normalize};c=s(a,u)}return n.set(a,c),isNativeAudioNodeFaker(c)?await t(r,a,c.inputs[0]):await t(r,a,c),c};return{render(r,a){const c=n.get(a);return c!==void 0?Promise.resolve(c):o(r,a)}}},createCreateNativeOfflineAudioContext=(s,e)=>(t,n,o)=>{if(e===null)throw new Error("Missing the native OfflineAudioContext constructor.");try{return new e(t,n,o)}catch(r){throw r.name==="SyntaxError"?s():r}},createDataCloneError=()=>new DOMException("","DataCloneError"),detachArrayBuffer=s=>{const{port1:e,port2:t}=new MessageChannel;return new Promise(n=>{const o=()=>{t.onmessage=null,e.close(),t.close(),n()};t.onmessage=()=>o();try{e.postMessage(s,[s])}catch{}finally{o()}})},createDecodeAudioData=(s,e,t,n,o,r,a,c,l,u,d)=>(f,m)=>{const g=a(f)?f:r(f);if(o.has(m)){const _=t();return Promise.reject(_)}try{o.add(m)}catch{}return e(l,()=>l(g))?g.decodeAudioData(m).then(_=>(detachArrayBuffer(m).catch(()=>{}),e(c,()=>c(_))||d(_),s.add(_),_)):new Promise((_,y)=>{const A=async()=>{try{await detachArrayBuffer(m)}catch{}},N=x=>{y(x),A()};try{g.decodeAudioData(m,x=>{typeof x.copyFromChannel!="function"&&(u(x),wrapAudioBufferGetChannelDataMethod(x)),s.add(x),A().then(()=>_(x))},x=>{N(x===null?n():x)})}catch(x){N(x)}})},createDecrementCycleCounter=(s,e,t,n,o,r,a,c)=>(l,u)=>{const d=e.get(l);if(d===void 0)throw new Error("Missing the expected cycle count.");const f=r(l.context),m=c(f);if(d===u){if(e.delete(l),!m&&a(l)){const g=n(l),{outputs:_}=t(l);for(const y of _)if(isAudioNodeOutputConnection(y)){const A=n(y[0]);s(g,A,y[1],y[2])}else{const A=o(y[0]);g.connect(A,y[1])}}}else e.set(l,d-u)},DEFAULT_OPTIONS$a={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",delayTime:0,maxDelayTime:1},createDelayNodeConstructor=(s,e,t,n,o,r,a)=>class extends s{constructor(l,u){const d=o(l),f={...DEFAULT_OPTIONS$a,...u},m=n(d,f),g=r(d),_=g?t(f.maxDelayTime):null;super(l,!1,m,_),this._delayTime=e(this,g,m.delayTime),a(this,f.maxDelayTime)}get delayTime(){return this._delayTime}},createDelayNodeRendererFactory=(s,e,t,n,o)=>r=>{const a=new WeakMap,c=async(l,u)=>{let d=t(l);const f=isOwnedByContext(d,u);if(!f){const m={channelCount:d.channelCount,channelCountMode:d.channelCountMode,channelInterpretation:d.channelInterpretation,delayTime:d.delayTime.value,maxDelayTime:r};d=e(u,m)}return a.set(u,d),f?await s(u,l.delayTime,d.delayTime):await n(u,l.delayTime,d.delayTime),await o(l,u,d),d};return{render(l,u){const d=a.get(u);return d!==void 0?Promise.resolve(d):c(l,u)}}},createDeleteActiveInputConnectionToAudioNode=s=>(e,t,n,o)=>s(e[o],r=>r[0]===t&&r[1]===n),createDeleteUnrenderedAudioWorkletNode=s=>(e,t)=>{s(e).delete(t)},isDelayNode=s=>"delayTime"in s,createDetectCycles=(s,e,t)=>function n(o,r){const a=isAudioNode$1(r)?r:t(s,r);if(isDelayNode(a))return[];if(o[0]===a)return[o];if(o.includes(a))return[];const{outputs:c}=e(a);return Array.from(c).map(l=>n([...o,a],l[0])).reduce((l,u)=>l.concat(u),[])},getOutputAudioNodeAtIndex=(s,e,t)=>{const n=e[t];if(n===void 0)throw s();return n},createDisconnectMultipleOutputs=s=>(e,t=void 0,n=void 0,o=0)=>t===void 0?e.forEach(r=>r.disconnect()):typeof t=="number"?getOutputAudioNodeAtIndex(s,e,t).disconnect():isNativeAudioNode$1(t)?n===void 0?e.forEach(r=>r.disconnect(t)):o===void 0?getOutputAudioNodeAtIndex(s,e,n).disconnect(t,0):getOutputAudioNodeAtIndex(s,e,n).disconnect(t,0,o):n===void 0?e.forEach(r=>r.disconnect(t)):getOutputAudioNodeAtIndex(s,e,n).disconnect(t,0),DEFAULT_OPTIONS$9={attack:.003,channelCount:2,channelCountMode:"clamped-max",channelInterpretation:"speakers",knee:30,ratio:12,release:.25,threshold:-24},createDynamicsCompressorNodeConstructor=(s,e,t,n,o,r,a,c)=>class extends s{constructor(u,d){const f=r(u),m={...DEFAULT_OPTIONS$9,...d},g=n(f,m),_=a(f),y=_?t():null;super(u,!1,g,y),this._attack=e(this,_,g.attack),this._knee=e(this,_,g.knee),this._nativeDynamicsCompressorNode=g,this._ratio=e(this,_,g.ratio),this._release=e(this,_,g.release),this._threshold=e(this,_,g.threshold),c(this,.006)}get attack(){return this._attack}get channelCount(){return this._nativeDynamicsCompressorNode.channelCount}set channelCount(u){const d=this._nativeDynamicsCompressorNode.channelCount;if(this._nativeDynamicsCompressorNode.channelCount=u,u>2)throw this._nativeDynamicsCompressorNode.channelCount=d,o()}get channelCountMode(){return this._nativeDynamicsCompressorNode.channelCountMode}set channelCountMode(u){const d=this._nativeDynamicsCompressorNode.channelCountMode;if(this._nativeDynamicsCompressorNode.channelCountMode=u,u==="max")throw this._nativeDynamicsCompressorNode.channelCountMode=d,o()}get knee(){return this._knee}get ratio(){return this._ratio}get reduction(){return typeof this._nativeDynamicsCompressorNode.reduction.value=="number"?this._nativeDynamicsCompressorNode.reduction.value:this._nativeDynamicsCompressorNode.reduction}get release(){return this._release}get threshold(){return this._threshold}},createDynamicsCompressorNodeRendererFactory=(s,e,t,n,o)=>()=>{const r=new WeakMap,a=async(c,l)=>{let u=t(c);const d=isOwnedByContext(u,l);if(!d){const f={attack:u.attack.value,channelCount:u.channelCount,channelCountMode:u.channelCountMode,channelInterpretation:u.channelInterpretation,knee:u.knee.value,ratio:u.ratio.value,release:u.release.value,threshold:u.threshold.value};u=e(l,f)}return r.set(l,u),d?(await s(l,c.attack,u.attack),await s(l,c.knee,u.knee),await s(l,c.ratio,u.ratio),await s(l,c.release,u.release),await s(l,c.threshold,u.threshold)):(await n(l,c.attack,u.attack),await n(l,c.knee,u.knee),await n(l,c.ratio,u.ratio),await n(l,c.release,u.release),await n(l,c.threshold,u.threshold)),await o(c,l,u),u};return{render(c,l){const u=r.get(l);return u!==void 0?Promise.resolve(u):a(c,l)}}},createEncodingError=()=>new DOMException("","EncodingError"),createEvaluateSource=s=>e=>new Promise((t,n)=>{if(s===null){n(new SyntaxError);return}const o=s.document.head;if(o===null)n(new SyntaxError);else{const r=s.document.createElement("script"),a=new Blob([e],{type:"application/javascript"}),c=URL.createObjectURL(a),l=s.onerror,u=()=>{s.onerror=l,URL.revokeObjectURL(c)};s.onerror=(d,f,m,g,_)=>{if(f===c||f===s.location.href&&m===1&&g===1)return u(),n(_),!1;if(l!==null)return l(d,f,m,g,_)},r.onerror=()=>{u(),n(new SyntaxError)},r.onload=()=>{u(),t()},r.src=c,r.type="module",o.appendChild(r)}}),createEventTargetConstructor=s=>class{constructor(t){this._nativeEventTarget=t,this._listeners=new WeakMap}addEventListener(t,n,o){if(n!==null){let r=this._listeners.get(n);r===void 0&&(r=s(this,n),typeof n=="function"&&this._listeners.set(n,r)),this._nativeEventTarget.addEventListener(t,r,o)}}dispatchEvent(t){return this._nativeEventTarget.dispatchEvent(t)}removeEventListener(t,n,o){const r=n===null?void 0:this._listeners.get(n);this._nativeEventTarget.removeEventListener(t,r===void 0?null:r,o)}},createExposeCurrentFrameAndCurrentTime=s=>(e,t,n)=>{Object.defineProperties(s,{currentFrame:{configurable:!0,get(){return Math.round(e*t)}},currentTime:{configurable:!0,get(){return e}}});try{return n()}finally{s!==null&&(delete s.currentFrame,delete s.currentTime)}},createFetchSource=s=>async e=>{try{const t=await fetch(e);if(t.ok)return[await t.text(),t.url]}catch{}throw s()},DEFAULT_OPTIONS$8={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",gain:1},createGainNodeConstructor=(s,e,t,n,o,r)=>class extends s{constructor(c,l){const u=o(c),d={...DEFAULT_OPTIONS$8,...l},f=n(u,d),m=r(u),g=m?t():null;super(c,!1,f,g),this._gain=e(this,m,f.gain,MOST_POSITIVE_SINGLE_FLOAT,MOST_NEGATIVE_SINGLE_FLOAT)}get gain(){return this._gain}},createGainNodeRendererFactory=(s,e,t,n,o)=>()=>{const r=new WeakMap,a=async(c,l)=>{let u=t(c);const d=isOwnedByContext(u,l);if(!d){const f={channelCount:u.channelCount,channelCountMode:u.channelCountMode,channelInterpretation:u.channelInterpretation,gain:u.gain.value};u=e(l,f)}return r.set(l,u),d?await s(l,c.gain,u.gain):await n(l,c.gain,u.gain),await o(c,l,u),u};return{render(c,l){const u=r.get(l);return u!==void 0?Promise.resolve(u):a(c,l)}}},createGetActiveAudioWorkletNodeInputs=(s,e)=>t=>e(s,t),createGetAudioNodeRenderer=s=>e=>{const t=s(e);if(t.renderer===null)throw new Error("Missing the renderer of the given AudioNode in the audio graph.");return t.renderer},createGetAudioNodeTailTime=s=>e=>{var t;return(t=s.get(e))!==null&&t!==void 0?t:0},createGetAudioParamRenderer=s=>e=>{const t=s(e);if(t.renderer===null)throw new Error("Missing the renderer of the given AudioParam in the audio graph.");return t.renderer},createGetBackupOfflineAudioContext=s=>e=>s.get(e),createInvalidStateError=()=>new DOMException("","InvalidStateError"),createGetNativeContext=s=>e=>{const t=s.get(e);if(t===void 0)throw createInvalidStateError();return t},createGetOrCreateBackupOfflineAudioContext=(s,e)=>t=>{let n=s.get(t);if(n!==void 0)return n;if(e===null)throw new Error("Missing the native OfflineAudioContext constructor.");return n=new e(1,1,44100),s.set(t,n),n},createGetUnrenderedAudioWorkletNodes=s=>e=>{const t=s.get(e);if(t===void 0)throw new Error("The context has no set of AudioWorkletNodes.");return t},createInvalidAccessError=()=>new DOMException("","InvalidAccessError"),wrapIIRFilterNodeGetFrequencyResponseMethod=s=>{s.getFrequencyResponse=(e=>(t,n,o)=>{if(t.length!==n.length||n.length!==o.length)throw createInvalidAccessError();return e.call(s,t,n,o)})(s.getFrequencyResponse)},DEFAULT_OPTIONS$7={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers"},createIIRFilterNodeConstructor=(s,e,t,n,o,r)=>class extends s{constructor(c,l){const u=n(c),d=o(u),f={...DEFAULT_OPTIONS$7,...l},m=e(u,d?null:c.baseLatency,f),g=d?t(f.feedback,f.feedforward):null;super(c,!1,m,g),wrapIIRFilterNodeGetFrequencyResponseMethod(m),this._nativeIIRFilterNode=m,r(this,1)}getFrequencyResponse(c,l,u){return this._nativeIIRFilterNode.getFrequencyResponse(c,l,u)}},filterBuffer=(s,e,t,n,o,r,a,c,l,u,d)=>{const f=u.length;let m=c;for(let g=0;g<f;g+=1){let _=t[0]*u[g];for(let y=1;y<o;y+=1){const A=m-y&l-1;_+=t[y]*r[A],_-=s[y]*a[A]}for(let y=o;y<n;y+=1)_+=t[y]*r[m-y&l-1];for(let y=o;y<e;y+=1)_-=s[y]*a[m-y&l-1];r[m]=u[g],a[m]=_,m=m+1&l-1,d[g]=_}return m},filterFullBuffer=(s,e,t,n)=>{const o=t instanceof Float64Array?t:new Float64Array(t),r=n instanceof Float64Array?n:new Float64Array(n),a=o.length,c=r.length,l=Math.min(a,c);if(o[0]!==1){for(let _=0;_<a;_+=1)r[_]/=o[0];for(let _=1;_<c;_+=1)o[_]/=o[0]}const u=32,d=new Float32Array(u),f=new Float32Array(u),m=e.createBuffer(s.numberOfChannels,s.length,s.sampleRate),g=s.numberOfChannels;for(let _=0;_<g;_+=1){const y=s.getChannelData(_),A=m.getChannelData(_);d.fill(0),f.fill(0),filterBuffer(o,a,r,c,l,d,f,0,u,y,A)}return m},createIIRFilterNodeRendererFactory=(s,e,t,n,o)=>(r,a)=>{const c=new WeakMap;let l=null;const u=async(d,f)=>{let m=null,g=e(d);const _=isOwnedByContext(g,f);if(f.createIIRFilter===void 0?m=s(f,{buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1}):_||(g=f.createIIRFilter(a,r)),c.set(f,m===null?g:m),m!==null){if(l===null){if(t===null)throw new Error("Missing the native OfflineAudioContext constructor.");const A=new t(d.context.destination.channelCount,d.context.length,f.sampleRate);l=(async()=>{await n(d,A,A.destination);const N=await o(A);return filterFullBuffer(N,f,r,a)})()}const y=await l;return m.buffer=y,m.start(0),m}return await n(d,f,g),g};return{render(d,f){const m=c.get(f);return m!==void 0?Promise.resolve(m):u(d,f)}}},createIncrementCycleCounterFactory=(s,e,t,n,o,r)=>a=>(c,l)=>{const u=s.get(c);if(u===void 0){if(!a&&r(c)){const d=n(c),{outputs:f}=t(c);for(const m of f)if(isAudioNodeOutputConnection(m)){const g=n(m[0]);e(d,g,m[1],m[2])}else{const g=o(m[0]);d.disconnect(g,m[1])}}s.set(c,l)}else s.set(c,u+l)},createIsAnyAudioContext=(s,e)=>t=>{const n=s.get(t);return e(n)||e(t)},createIsAnyAudioNode=(s,e)=>t=>s.has(t)||e(t),createIsAnyAudioParam=(s,e)=>t=>s.has(t)||e(t),createIsAnyOfflineAudioContext=(s,e)=>t=>{const n=s.get(t);return e(n)||e(t)},createIsNativeAudioContext=s=>e=>s!==null&&e instanceof s,createIsNativeAudioNode=s=>e=>s!==null&&typeof s.AudioNode=="function"&&e instanceof s.AudioNode,createIsNativeAudioParam=s=>e=>s!==null&&typeof s.AudioParam=="function"&&e instanceof s.AudioParam,createIsNativeContext=(s,e)=>t=>s(t)||e(t),createIsNativeOfflineAudioContext=s=>e=>s!==null&&e instanceof s,createIsSecureContext=s=>s!==null&&s.isSecureContext,createIsSupportedPromise=async(s,e,t,n,o,r,a,c,l,u,d,f,m,g,_,y)=>s(e,e)&&s(t,t)&&s(o,o)&&s(r,r)&&s(c,c)&&s(l,l)&&s(u,u)&&s(d,d)&&s(f,f)&&s(m,m)&&s(g,g)?(await Promise.all([s(n,n),s(a,a),s(_,_),s(y,y)])).every(N=>N):!1,createMediaElementAudioSourceNodeConstructor=(s,e,t,n)=>class extends s{constructor(r,a){const c=t(r),l=e(c,a);if(n(c))throw TypeError();super(r,!0,l,null),this._nativeMediaElementAudioSourceNode=l}get mediaElement(){return this._nativeMediaElementAudioSourceNode.mediaElement}},DEFAULT_OPTIONS$6={channelCount:2,channelCountMode:"explicit",channelInterpretation:"speakers"},createMediaStreamAudioDestinationNodeConstructor=(s,e,t,n)=>class extends s{constructor(r,a){const c=t(r);if(n(c))throw new TypeError;const l={...DEFAULT_OPTIONS$6,...a},u=e(c,l);super(r,!1,u,null),this._nativeMediaStreamAudioDestinationNode=u}get stream(){return this._nativeMediaStreamAudioDestinationNode.stream}},createMediaStreamAudioSourceNodeConstructor=(s,e,t,n)=>class extends s{constructor(r,a){const c=t(r),l=e(c,a);if(n(c))throw new TypeError;super(r,!0,l,null),this._nativeMediaStreamAudioSourceNode=l}get mediaStream(){return this._nativeMediaStreamAudioSourceNode.mediaStream}},createMediaStreamTrackAudioSourceNodeConstructor=(s,e,t)=>class extends s{constructor(o,r){const a=t(o),c=e(a,r);super(o,!0,c,null)}},createMinimalBaseAudioContextConstructor=(s,e,t,n,o,r)=>class extends t{constructor(c,l){super(c),this._nativeContext=c,CONTEXT_STORE.set(this,c),n(c)&&o.set(c,new Set),this._destination=new s(this,l),this._listener=e(this,c),this._onstatechange=null}get currentTime(){return this._nativeContext.currentTime}get destination(){return this._destination}get listener(){return this._listener}get onstatechange(){return this._onstatechange}set onstatechange(c){const l=typeof c=="function"?r(this,c):null;this._nativeContext.onstatechange=l;const u=this._nativeContext.onstatechange;this._onstatechange=u!==null&&u===l?c:u}get sampleRate(){return this._nativeContext.sampleRate}get state(){return this._nativeContext.state}},testPromiseSupport=s=>{const e=new Uint32Array([1179011410,40,1163280727,544501094,16,131073,44100,176400,1048580,1635017060,4,0]);try{const t=s.decodeAudioData(e.buffer,()=>{});return t===void 0?!1:(t.catch(()=>{}),!0)}catch{}return!1},createMonitorConnections=(s,e)=>(t,n,o)=>{const r=new Set;return t.connect=(a=>(c,l=0,u=0)=>{const d=r.size===0;if(e(c))return a.call(t,c,l,u),s(r,[c,l,u],f=>f[0]===c&&f[1]===l&&f[2]===u,!0),d&&n(),c;a.call(t,c,l),s(r,[c,l],f=>f[0]===c&&f[1]===l,!0),d&&n()})(t.connect),t.disconnect=(a=>(c,l,u)=>{const d=r.size>0;if(c===void 0)a.apply(t),r.clear();else if(typeof c=="number"){a.call(t,c);for(const m of r)m[1]===c&&r.delete(m)}else{e(c)?a.call(t,c,l,u):a.call(t,c,l);for(const m of r)m[0]===c&&(l===void 0||m[1]===l)&&(u===void 0||m[2]===u)&&r.delete(m)}const f=r.size===0;d&&f&&o()})(t.disconnect),t},assignNativeAudioNodeOption=(s,e,t)=>{const n=e[t];n!==void 0&&n!==s[t]&&(s[t]=n)},assignNativeAudioNodeOptions=(s,e)=>{assignNativeAudioNodeOption(s,e,"channelCount"),assignNativeAudioNodeOption(s,e,"channelCountMode"),assignNativeAudioNodeOption(s,e,"channelInterpretation")},testAnalyserNodeGetFloatTimeDomainDataMethodSupport=s=>typeof s.getFloatTimeDomainData=="function",wrapAnalyserNodeGetFloatTimeDomainDataMethod=s=>{s.getFloatTimeDomainData=e=>{const t=new Uint8Array(e.length);s.getByteTimeDomainData(t);const n=Math.max(t.length,s.fftSize);for(let o=0;o<n;o+=1)e[o]=(t[o]-128)*.0078125;return e}},createNativeAnalyserNodeFactory=(s,e)=>(t,n)=>{const o=t.createAnalyser();if(assignNativeAudioNodeOptions(o,n),!(n.maxDecibels>n.minDecibels))throw e();return assignNativeAudioNodeOption(o,n,"fftSize"),assignNativeAudioNodeOption(o,n,"maxDecibels"),assignNativeAudioNodeOption(o,n,"minDecibels"),assignNativeAudioNodeOption(o,n,"smoothingTimeConstant"),s(testAnalyserNodeGetFloatTimeDomainDataMethodSupport,()=>testAnalyserNodeGetFloatTimeDomainDataMethodSupport(o))||wrapAnalyserNodeGetFloatTimeDomainDataMethod(o),o},createNativeAudioBufferConstructor=s=>s===null?null:s.hasOwnProperty("AudioBuffer")?s.AudioBuffer:null,assignNativeAudioNodeAudioParamValue=(s,e,t)=>{const n=e[t];n!==void 0&&n!==s[t].value&&(s[t].value=n)},wrapAudioBufferSourceNodeStartMethodConsecutiveCalls=s=>{s.start=(e=>{let t=!1;return(n=0,o=0,r)=>{if(t)throw createInvalidStateError();e.call(s,n,o,r),t=!0}})(s.start)},wrapAudioScheduledSourceNodeStartMethodNegativeParameters=s=>{s.start=(e=>(t=0,n=0,o)=>{if(typeof o=="number"&&o<0||n<0||t<0)throw new RangeError("The parameters can't be negative.");e.call(s,t,n,o)})(s.start)},wrapAudioScheduledSourceNodeStopMethodNegativeParameters=s=>{s.stop=(e=>(t=0)=>{if(t<0)throw new RangeError("The parameter can't be negative.");e.call(s,t)})(s.stop)},createNativeAudioBufferSourceNodeFactory=(s,e,t,n,o,r,a,c,l,u,d)=>(f,m)=>{const g=f.createBufferSource();return assignNativeAudioNodeOptions(g,m),assignNativeAudioNodeAudioParamValue(g,m,"playbackRate"),assignNativeAudioNodeOption(g,m,"buffer"),assignNativeAudioNodeOption(g,m,"loop"),assignNativeAudioNodeOption(g,m,"loopEnd"),assignNativeAudioNodeOption(g,m,"loopStart"),e(t,()=>t(f))||wrapAudioBufferSourceNodeStartMethodConsecutiveCalls(g),e(n,()=>n(f))||l(g),e(o,()=>o(f))||u(g,f),e(r,()=>r(f))||wrapAudioScheduledSourceNodeStartMethodNegativeParameters(g),e(a,()=>a(f))||d(g,f),e(c,()=>c(f))||wrapAudioScheduledSourceNodeStopMethodNegativeParameters(g),s(f,g),g},createNativeAudioContextConstructor=s=>s===null?null:s.hasOwnProperty("AudioContext")?s.AudioContext:s.hasOwnProperty("webkitAudioContext")?s.webkitAudioContext:null,createNativeAudioDestinationNodeFactory=(s,e)=>(t,n,o)=>{const r=t.destination;if(r.channelCount!==n)try{r.channelCount=n}catch{}o&&r.channelCountMode!=="explicit"&&(r.channelCountMode="explicit"),r.maxChannelCount===0&&Object.defineProperty(r,"maxChannelCount",{value:n});const a=s(t,{channelCount:n,channelCountMode:r.channelCountMode,channelInterpretation:r.channelInterpretation,gain:1});return e(a,"channelCount",c=>()=>c.call(a),c=>l=>{c.call(a,l);try{r.channelCount=l}catch(u){if(l>r.maxChannelCount)throw u}}),e(a,"channelCountMode",c=>()=>c.call(a),c=>l=>{c.call(a,l),r.channelCountMode=l}),e(a,"channelInterpretation",c=>()=>c.call(a),c=>l=>{c.call(a,l),r.channelInterpretation=l}),Object.defineProperty(a,"maxChannelCount",{get:()=>r.maxChannelCount}),a.connect(r),a},createNativeAudioWorkletNodeConstructor=s=>s===null?null:s.hasOwnProperty("AudioWorkletNode")?s.AudioWorkletNode:null,testClonabilityOfAudioWorkletNodeOptions=s=>{const{port1:e}=new MessageChannel;try{e.postMessage(s)}finally{e.close()}},createNativeAudioWorkletNodeFactory=(s,e,t,n,o)=>(r,a,c,l,u,d)=>{if(c!==null)try{const f=new c(r,l,d),m=new Map;let g=null;if(Object.defineProperties(f,{channelCount:{get:()=>d.channelCount,set:()=>{throw s()}},channelCountMode:{get:()=>"explicit",set:()=>{throw s()}},onprocessorerror:{get:()=>g,set:_=>{typeof g=="function"&&f.removeEventListener("processorerror",g),g=typeof _=="function"?_:null,typeof g=="function"&&f.addEventListener("processorerror",g)}}}),f.addEventListener=(_=>(...y)=>{if(y[0]==="processorerror"){const A=typeof y[1]=="function"?y[1]:typeof y[1]=="object"&&y[1]!==null&&typeof y[1].handleEvent=="function"?y[1].handleEvent:null;if(A!==null){const N=m.get(y[1]);N!==void 0?y[1]=N:(y[1]=x=>{x.type==="error"?(Object.defineProperties(x,{type:{value:"processorerror"}}),A(x)):A(new ErrorEvent(y[0],{...x}))},m.set(A,y[1]))}}return _.call(f,"error",y[1],y[2]),_.call(f,...y)})(f.addEventListener),f.removeEventListener=(_=>(...y)=>{if(y[0]==="processorerror"){const A=m.get(y[1]);A!==void 0&&(m.delete(y[1]),y[1]=A)}return _.call(f,"error",y[1],y[2]),_.call(f,y[0],y[1],y[2])})(f.removeEventListener),d.numberOfOutputs!==0){const _=t(r,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0});return f.connect(_).connect(r.destination),o(f,()=>_.disconnect(),()=>_.connect(r.destination))}return f}catch(f){throw f.code===11?n():f}if(u===void 0)throw n();return testClonabilityOfAudioWorkletNodeOptions(d),e(r,a,u,d)},computeBufferSize=(s,e)=>s===null?512:Math.max(512,Math.min(16384,Math.pow(2,Math.round(Math.log2(s*e))))),cloneAudioWorkletNodeOptions=s=>new Promise((e,t)=>{const{port1:n,port2:o}=new MessageChannel;n.onmessage=({data:r})=>{n.close(),o.close(),e(r)},n.onmessageerror=({data:r})=>{n.close(),o.close(),t(r)},o.postMessage(s)}),createAudioWorkletProcessorPromise=async(s,e)=>{const t=await cloneAudioWorkletNodeOptions(e);return new s(t)},createAudioWorkletProcessor=(s,e,t,n)=>{let o=NODE_TO_PROCESSOR_MAPS.get(s);o===void 0&&(o=new WeakMap,NODE_TO_PROCESSOR_MAPS.set(s,o));const r=createAudioWorkletProcessorPromise(t,n);return o.set(e,r),r},createNativeAudioWorkletNodeFakerFactory=(s,e,t,n,o,r,a,c,l,u,d,f,m)=>(g,_,y,A)=>{if(A.numberOfInputs===0&&A.numberOfOutputs===0)throw l();const N=Array.isArray(A.outputChannelCount)?A.outputChannelCount:Array.from(A.outputChannelCount);if(N.some(b=>b<1))throw l();if(N.length!==A.numberOfOutputs)throw e();if(A.channelCountMode!=="explicit")throw l();const x=A.channelCount*A.numberOfInputs,M=N.reduce((b,O)=>b+O,0),E=y.parameterDescriptors===void 0?0:y.parameterDescriptors.length;if(x+E>6||M>6)throw l();const T=new MessageChannel,k=[],I=[];for(let b=0;b<A.numberOfInputs;b+=1)k.push(a(g,{channelCount:A.channelCount,channelCountMode:A.channelCountMode,channelInterpretation:A.channelInterpretation,gain:1})),I.push(o(g,{channelCount:A.channelCount,channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:A.channelCount}));const C=[];if(y.parameterDescriptors!==void 0)for(const{defaultValue:b,maxValue:O,minValue:D,name:U}of y.parameterDescriptors){const F=r(g,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",offset:A.parameterData[U]!==void 0?A.parameterData[U]:b===void 0?0:b});Object.defineProperties(F.offset,{defaultValue:{get:()=>b===void 0?0:b},maxValue:{get:()=>O===void 0?MOST_POSITIVE_SINGLE_FLOAT:O},minValue:{get:()=>D===void 0?MOST_NEGATIVE_SINGLE_FLOAT:D}}),C.push(F)}const W=n(g,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:Math.max(1,x+E)}),q=computeBufferSize(_,g.sampleRate),L=c(g,q,x+E,Math.max(1,M)),V=o(g,{channelCount:Math.max(1,M),channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:Math.max(1,M)}),K=[];for(let b=0;b<A.numberOfOutputs;b+=1)K.push(n(g,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:N[b]}));for(let b=0;b<A.numberOfInputs;b+=1){k[b].connect(I[b]);for(let O=0;O<A.channelCount;O+=1)I[b].connect(W,O,b*A.channelCount+O)}const Y=new ReadOnlyMap(y.parameterDescriptors===void 0?[]:y.parameterDescriptors.map(({name:b},O)=>{const D=C[O];return D.connect(W,0,x+O),D.start(0),[b,D.offset]}));W.connect(L);let te=A.channelInterpretation,H=null;const G=A.numberOfOutputs===0?[L]:K,X={get bufferSize(){return q},get channelCount(){return A.channelCount},set channelCount(b){throw t()},get channelCountMode(){return A.channelCountMode},set channelCountMode(b){throw t()},get channelInterpretation(){return te},set channelInterpretation(b){for(const O of k)O.channelInterpretation=b;te=b},get context(){return L.context},get inputs(){return k},get numberOfInputs(){return A.numberOfInputs},get numberOfOutputs(){return A.numberOfOutputs},get onprocessorerror(){return H},set onprocessorerror(b){typeof H=="function"&&X.removeEventListener("processorerror",H),H=typeof b=="function"?b:null,typeof H=="function"&&X.addEventListener("processorerror",H)},get parameters(){return Y},get port(){return T.port2},addEventListener(...b){return L.addEventListener(b[0],b[1],b[2])},connect:s.bind(null,G),disconnect:u.bind(null,G),dispatchEvent(...b){return L.dispatchEvent(b[0])},removeEventListener(...b){return L.removeEventListener(b[0],b[1],b[2])}},ee=new Map;T.port1.addEventListener=(b=>(...O)=>{if(O[0]==="message"){const D=typeof O[1]=="function"?O[1]:typeof O[1]=="object"&&O[1]!==null&&typeof O[1].handleEvent=="function"?O[1].handleEvent:null;if(D!==null){const U=ee.get(O[1]);U!==void 0?O[1]=U:(O[1]=F=>{d(g.currentTime,g.sampleRate,()=>D(F))},ee.set(D,O[1]))}}return b.call(T.port1,O[0],O[1],O[2])})(T.port1.addEventListener),T.port1.removeEventListener=(b=>(...O)=>{if(O[0]==="message"){const D=ee.get(O[1]);D!==void 0&&(ee.delete(O[1]),O[1]=D)}return b.call(T.port1,O[0],O[1],O[2])})(T.port1.removeEventListener);let oe=null;Object.defineProperty(T.port1,"onmessage",{get:()=>oe,set:b=>{typeof oe=="function"&&T.port1.removeEventListener("message",oe),oe=typeof b=="function"?b:null,typeof oe=="function"&&(T.port1.addEventListener("message",oe),T.port1.start())}}),y.prototype.port=T.port1;let ne=null;createAudioWorkletProcessor(g,X,y,A).then(b=>ne=b);const pe=createNestedArrays(A.numberOfInputs,A.channelCount),fe=createNestedArrays(A.numberOfOutputs,N),ae=y.parameterDescriptors===void 0?[]:y.parameterDescriptors.reduce((b,{name:O})=>({...b,[O]:new Float32Array(128)}),{});let ce=!0;const P=()=>{A.numberOfOutputs>0&&L.disconnect(V);for(let b=0,O=0;b<A.numberOfOutputs;b+=1){const D=K[b];for(let U=0;U<N[b];U+=1)V.disconnect(D,O+U,U);O+=N[b]}},R=new Map;L.onaudioprocess=({inputBuffer:b,outputBuffer:O})=>{if(ne!==null){const D=f(X);for(let U=0;U<q;U+=128){for(let F=0;F<A.numberOfInputs;F+=1)for(let j=0;j<A.channelCount;j+=1)copyFromChannel(b,pe[F],j,j,U);y.parameterDescriptors!==void 0&&y.parameterDescriptors.forEach(({name:F},j)=>{copyFromChannel(b,ae,F,x+j,U)});for(let F=0;F<A.numberOfInputs;F+=1)for(let j=0;j<N[F];j+=1)fe[F][j].byteLength===0&&(fe[F][j]=new Float32Array(128));try{const F=pe.map((B,J)=>{if(D[J].size>0)return R.set(J,q/128),B;const se=R.get(J);return se===void 0?[]:(B.every(ie=>ie.every(le=>le===0))&&(se===1?R.delete(J):R.set(J,se-1)),B)});ce=d(g.currentTime+U/g.sampleRate,g.sampleRate,()=>ne.process(F,fe,ae));for(let B=0,J=0;B<A.numberOfOutputs;B+=1){for(let Q=0;Q<N[B];Q+=1)copyToChannel(O,fe[B],Q,J+Q,U);J+=N[B]}}catch(F){ce=!1,X.dispatchEvent(new ErrorEvent("processorerror",{colno:F.colno,filename:F.filename,lineno:F.lineno,message:F.message}))}if(!ce){for(let F=0;F<A.numberOfInputs;F+=1){k[F].disconnect(I[F]);for(let j=0;j<A.channelCount;j+=1)I[U].disconnect(W,j,F*A.channelCount+j)}if(y.parameterDescriptors!==void 0){const F=y.parameterDescriptors.length;for(let j=0;j<F;j+=1){const B=C[j];B.disconnect(W,0,x+j),B.stop()}}W.disconnect(L),L.onaudioprocess=null,z?P():v();break}}}};let z=!1;const Z=a(g,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0}),ue=()=>L.connect(Z).connect(g.destination),v=()=>{L.disconnect(Z),Z.disconnect()},S=()=>{if(ce){v(),A.numberOfOutputs>0&&L.connect(V);for(let b=0,O=0;b<A.numberOfOutputs;b+=1){const D=K[b];for(let U=0;U<N[b];U+=1)V.connect(D,O+U,U);O+=N[b]}}z=!0},w=()=>{ce&&(ue(),P()),z=!1};return ue(),m(X,S,w)},createNativeBiquadFilterNode=(s,e)=>{const t=s.createBiquadFilter();return assignNativeAudioNodeOptions(t,e),assignNativeAudioNodeAudioParamValue(t,e,"Q"),assignNativeAudioNodeAudioParamValue(t,e,"detune"),assignNativeAudioNodeAudioParamValue(t,e,"frequency"),assignNativeAudioNodeAudioParamValue(t,e,"gain"),assignNativeAudioNodeOption(t,e,"type"),t},createNativeChannelMergerNodeFactory=(s,e)=>(t,n)=>{const o=t.createChannelMerger(n.numberOfInputs);return s!==null&&s.name==="webkitAudioContext"&&e(t,o),assignNativeAudioNodeOptions(o,n),o},wrapChannelSplitterNode=s=>{const e=s.numberOfOutputs;Object.defineProperty(s,"channelCount",{get:()=>e,set:t=>{if(t!==e)throw createInvalidStateError()}}),Object.defineProperty(s,"channelCountMode",{get:()=>"explicit",set:t=>{if(t!=="explicit")throw createInvalidStateError()}}),Object.defineProperty(s,"channelInterpretation",{get:()=>"discrete",set:t=>{if(t!=="discrete")throw createInvalidStateError()}})},createNativeChannelSplitterNode=(s,e)=>{const t=s.createChannelSplitter(e.numberOfOutputs);return assignNativeAudioNodeOptions(t,e),wrapChannelSplitterNode(t),t},createNativeConstantSourceNodeFactory=(s,e,t,n,o)=>(r,a)=>{if(r.createConstantSource===void 0)return t(r,a);const c=r.createConstantSource();return assignNativeAudioNodeOptions(c,a),assignNativeAudioNodeAudioParamValue(c,a,"offset"),e(n,()=>n(r))||wrapAudioScheduledSourceNodeStartMethodNegativeParameters(c),e(o,()=>o(r))||wrapAudioScheduledSourceNodeStopMethodNegativeParameters(c),s(r,c),c},interceptConnections=(s,e)=>(s.connect=e.connect.bind(e),s.disconnect=e.disconnect.bind(e),s),createNativeConstantSourceNodeFakerFactory=(s,e,t,n)=>(o,{offset:r,...a})=>{const c=o.createBuffer(1,2,44100),l=e(o,{buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1}),u=t(o,{...a,gain:r}),d=c.getChannelData(0);d[0]=1,d[1]=1,l.buffer=c,l.loop=!0;const f={get bufferSize(){},get channelCount(){return u.channelCount},set channelCount(_){u.channelCount=_},get channelCountMode(){return u.channelCountMode},set channelCountMode(_){u.channelCountMode=_},get channelInterpretation(){return u.channelInterpretation},set channelInterpretation(_){u.channelInterpretation=_},get context(){return u.context},get inputs(){return[]},get numberOfInputs(){return l.numberOfInputs},get numberOfOutputs(){return u.numberOfOutputs},get offset(){return u.gain},get onended(){return l.onended},set onended(_){l.onended=_},addEventListener(..._){return l.addEventListener(_[0],_[1],_[2])},dispatchEvent(..._){return l.dispatchEvent(_[0])},removeEventListener(..._){return l.removeEventListener(_[0],_[1],_[2])},start(_=0){l.start.call(l,_)},stop(_=0){l.stop.call(l,_)}},m=()=>l.connect(u),g=()=>l.disconnect(u);return s(o,l),n(interceptConnections(f,u),m,g)},createNativeConvolverNodeFactory=(s,e)=>(t,n)=>{const o=t.createConvolver();if(assignNativeAudioNodeOptions(o,n),n.disableNormalization===o.normalize&&(o.normalize=!n.disableNormalization),assignNativeAudioNodeOption(o,n,"buffer"),n.channelCount>2||(e(o,"channelCount",r=>()=>r.call(o),r=>a=>{if(a>2)throw s();return r.call(o,a)}),n.channelCountMode==="max"))throw s();return e(o,"channelCountMode",r=>()=>r.call(o),r=>a=>{if(a==="max")throw s();return r.call(o,a)}),o},createNativeDelayNode=(s,e)=>{const t=s.createDelay(e.maxDelayTime);return assignNativeAudioNodeOptions(t,e),assignNativeAudioNodeAudioParamValue(t,e,"delayTime"),t},createNativeDynamicsCompressorNodeFactory=s=>(e,t)=>{const n=e.createDynamicsCompressor();if(assignNativeAudioNodeOptions(n,t),t.channelCount>2||t.channelCountMode==="max")throw s();return assignNativeAudioNodeAudioParamValue(n,t,"attack"),assignNativeAudioNodeAudioParamValue(n,t,"knee"),assignNativeAudioNodeAudioParamValue(n,t,"ratio"),assignNativeAudioNodeAudioParamValue(n,t,"release"),assignNativeAudioNodeAudioParamValue(n,t,"threshold"),n},createNativeGainNode=(s,e)=>{const t=s.createGain();return assignNativeAudioNodeOptions(t,e),assignNativeAudioNodeAudioParamValue(t,e,"gain"),t},createNativeIIRFilterNodeFactory=s=>(e,t,n)=>{if(e.createIIRFilter===void 0)return s(e,t,n);const o=e.createIIRFilter(n.feedforward,n.feedback);return assignNativeAudioNodeOptions(o,n),o};function divide(s,e){const t=e[0]*e[0]+e[1]*e[1];return[(s[0]*e[0]+s[1]*e[1])/t,(s[1]*e[0]-s[0]*e[1])/t]}function multiply(s,e){return[s[0]*e[0]-s[1]*e[1],s[0]*e[1]+s[1]*e[0]]}function evaluatePolynomial(s,e){let t=[0,0];for(let n=s.length-1;n>=0;n-=1)t=multiply(t,e),t[0]+=s[n];return t}const createNativeIIRFilterNodeFakerFactory=(s,e,t,n)=>(o,r,{channelCount:a,channelCountMode:c,channelInterpretation:l,feedback:u,feedforward:d})=>{const f=computeBufferSize(r,o.sampleRate),m=u instanceof Float64Array?u:new Float64Array(u),g=d instanceof Float64Array?d:new Float64Array(d),_=m.length,y=g.length,A=Math.min(_,y);if(_===0||_>20)throw n();if(m[0]===0)throw e();if(y===0||y>20)throw n();if(g[0]===0)throw e();if(m[0]!==1){for(let C=0;C<y;C+=1)g[C]/=m[0];for(let C=1;C<_;C+=1)m[C]/=m[0]}const N=t(o,f,a,a);N.channelCount=a,N.channelCountMode=c,N.channelInterpretation=l;const x=32,M=[],E=[],T=[];for(let C=0;C<a;C+=1){M.push(0);const W=new Float32Array(x),q=new Float32Array(x);W.fill(0),q.fill(0),E.push(W),T.push(q)}N.onaudioprocess=C=>{const W=C.inputBuffer,q=C.outputBuffer,L=W.numberOfChannels;for(let V=0;V<L;V+=1){const K=W.getChannelData(V),Y=q.getChannelData(V);M[V]=filterBuffer(m,_,g,y,A,E[V],T[V],M[V],x,K,Y)}};const k=o.sampleRate/2;return interceptConnections({get bufferSize(){return f},get channelCount(){return N.channelCount},set channelCount(C){N.channelCount=C},get channelCountMode(){return N.channelCountMode},set channelCountMode(C){N.channelCountMode=C},get channelInterpretation(){return N.channelInterpretation},set channelInterpretation(C){N.channelInterpretation=C},get context(){return N.context},get inputs(){return[N]},get numberOfInputs(){return N.numberOfInputs},get numberOfOutputs(){return N.numberOfOutputs},addEventListener(...C){return N.addEventListener(C[0],C[1],C[2])},dispatchEvent(...C){return N.dispatchEvent(C[0])},getFrequencyResponse(C,W,q){if(C.length!==W.length||W.length!==q.length)throw s();const L=C.length;for(let V=0;V<L;V+=1){const K=-Math.PI*(C[V]/k),Y=[Math.cos(K),Math.sin(K)],te=evaluatePolynomial(g,Y),H=evaluatePolynomial(m,Y),G=divide(te,H);W[V]=Math.sqrt(G[0]*G[0]+G[1]*G[1]),q[V]=Math.atan2(G[1],G[0])}},removeEventListener(...C){return N.removeEventListener(C[0],C[1],C[2])}},N)},createNativeMediaElementAudioSourceNode=(s,e)=>s.createMediaElementSource(e.mediaElement),createNativeMediaStreamAudioDestinationNode=(s,e)=>{const t=s.createMediaStreamDestination();return assignNativeAudioNodeOptions(t,e),t.numberOfOutputs===1&&Object.defineProperty(t,"numberOfOutputs",{get:()=>0}),t},createNativeMediaStreamAudioSourceNode=(s,{mediaStream:e})=>{const t=e.getAudioTracks();t.sort((r,a)=>r.id<a.id?-1:r.id>a.id?1:0);const n=t.slice(0,1),o=s.createMediaStreamSource(new MediaStream(n));return Object.defineProperty(o,"mediaStream",{value:e}),o},createNativeMediaStreamTrackAudioSourceNodeFactory=(s,e)=>(t,{mediaStreamTrack:n})=>{if(typeof t.createMediaStreamTrackSource=="function")return t.createMediaStreamTrackSource(n);const o=new MediaStream([n]),r=t.createMediaStreamSource(o);if(n.kind!=="audio")throw s();if(e(t))throw new TypeError;return r},createNativeOfflineAudioContextConstructor=s=>s===null?null:s.hasOwnProperty("OfflineAudioContext")?s.OfflineAudioContext:s.hasOwnProperty("webkitOfflineAudioContext")?s.webkitOfflineAudioContext:null,createNativeOscillatorNodeFactory=(s,e,t,n,o,r)=>(a,c)=>{const l=a.createOscillator();return assignNativeAudioNodeOptions(l,c),assignNativeAudioNodeAudioParamValue(l,c,"detune"),assignNativeAudioNodeAudioParamValue(l,c,"frequency"),c.periodicWave!==void 0?l.setPeriodicWave(c.periodicWave):assignNativeAudioNodeOption(l,c,"type"),e(t,()=>t(a))||wrapAudioScheduledSourceNodeStartMethodNegativeParameters(l),e(n,()=>n(a))||r(l,a),e(o,()=>o(a))||wrapAudioScheduledSourceNodeStopMethodNegativeParameters(l),s(a,l),l},createNativePannerNodeFactory=s=>(e,t)=>{const n=e.createPanner();return n.orientationX===void 0?s(e,t):(assignNativeAudioNodeOptions(n,t),assignNativeAudioNodeAudioParamValue(n,t,"orientationX"),assignNativeAudioNodeAudioParamValue(n,t,"orientationY"),assignNativeAudioNodeAudioParamValue(n,t,"orientationZ"),assignNativeAudioNodeAudioParamValue(n,t,"positionX"),assignNativeAudioNodeAudioParamValue(n,t,"positionY"),assignNativeAudioNodeAudioParamValue(n,t,"positionZ"),assignNativeAudioNodeOption(n,t,"coneInnerAngle"),assignNativeAudioNodeOption(n,t,"coneOuterAngle"),assignNativeAudioNodeOption(n,t,"coneOuterGain"),assignNativeAudioNodeOption(n,t,"distanceModel"),assignNativeAudioNodeOption(n,t,"maxDistance"),assignNativeAudioNodeOption(n,t,"panningModel"),assignNativeAudioNodeOption(n,t,"refDistance"),assignNativeAudioNodeOption(n,t,"rolloffFactor"),n)},createNativePannerNodeFakerFactory=(s,e,t,n,o,r,a,c,l,u)=>(d,{coneInnerAngle:f,coneOuterAngle:m,coneOuterGain:g,distanceModel:_,maxDistance:y,orientationX:A,orientationY:N,orientationZ:x,panningModel:M,positionX:E,positionY:T,positionZ:k,refDistance:I,rolloffFactor:C,...W})=>{const q=d.createPanner();if(W.channelCount>2||W.channelCountMode==="max")throw a();assignNativeAudioNodeOptions(q,W);const L={channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete"},V=t(d,{...L,channelInterpretation:"speakers",numberOfInputs:6}),K=n(d,{...W,gain:1}),Y=n(d,{...L,gain:1}),te=n(d,{...L,gain:0}),H=n(d,{...L,gain:0}),G=n(d,{...L,gain:0}),X=n(d,{...L,gain:0}),ee=n(d,{...L,gain:0}),oe=o(d,256,6,1),ne=r(d,{...L,curve:new Float32Array([1,1]),oversample:"none"});let re=[A,N,x],pe=[E,T,k];const fe=new Float32Array(1);oe.onaudioprocess=({inputBuffer:R})=>{const z=[l(R,fe,0),l(R,fe,1),l(R,fe,2)];z.some((ue,v)=>ue!==re[v])&&(q.setOrientation(...z),re=z);const Z=[l(R,fe,3),l(R,fe,4),l(R,fe,5)];Z.some((ue,v)=>ue!==pe[v])&&(q.setPosition(...Z),pe=Z)},Object.defineProperty(te.gain,"defaultValue",{get:()=>0}),Object.defineProperty(H.gain,"defaultValue",{get:()=>0}),Object.defineProperty(G.gain,"defaultValue",{get:()=>0}),Object.defineProperty(X.gain,"defaultValue",{get:()=>0}),Object.defineProperty(ee.gain,"defaultValue",{get:()=>0});const ae={get bufferSize(){},get channelCount(){return q.channelCount},set channelCount(R){if(R>2)throw a();K.channelCount=R,q.channelCount=R},get channelCountMode(){return q.channelCountMode},set channelCountMode(R){if(R==="max")throw a();K.channelCountMode=R,q.channelCountMode=R},get channelInterpretation(){return q.channelInterpretation},set channelInterpretation(R){K.channelInterpretation=R,q.channelInterpretation=R},get coneInnerAngle(){return q.coneInnerAngle},set coneInnerAngle(R){q.coneInnerAngle=R},get coneOuterAngle(){return q.coneOuterAngle},set coneOuterAngle(R){q.coneOuterAngle=R},get coneOuterGain(){return q.coneOuterGain},set coneOuterGain(R){if(R<0||R>1)throw e();q.coneOuterGain=R},get context(){return q.context},get distanceModel(){return q.distanceModel},set distanceModel(R){q.distanceModel=R},get inputs(){return[K]},get maxDistance(){return q.maxDistance},set maxDistance(R){if(R<0)throw new RangeError;q.maxDistance=R},get numberOfInputs(){return q.numberOfInputs},get numberOfOutputs(){return q.numberOfOutputs},get orientationX(){return Y.gain},get orientationY(){return te.gain},get orientationZ(){return H.gain},get panningModel(){return q.panningModel},set panningModel(R){q.panningModel=R},get positionX(){return G.gain},get positionY(){return X.gain},get positionZ(){return ee.gain},get refDistance(){return q.refDistance},set refDistance(R){if(R<0)throw new RangeError;q.refDistance=R},get rolloffFactor(){return q.rolloffFactor},set rolloffFactor(R){if(R<0)throw new RangeError;q.rolloffFactor=R},addEventListener(...R){return K.addEventListener(R[0],R[1],R[2])},dispatchEvent(...R){return K.dispatchEvent(R[0])},removeEventListener(...R){return K.removeEventListener(R[0],R[1],R[2])}};f!==ae.coneInnerAngle&&(ae.coneInnerAngle=f),m!==ae.coneOuterAngle&&(ae.coneOuterAngle=m),g!==ae.coneOuterGain&&(ae.coneOuterGain=g),_!==ae.distanceModel&&(ae.distanceModel=_),y!==ae.maxDistance&&(ae.maxDistance=y),A!==ae.orientationX.value&&(ae.orientationX.value=A),N!==ae.orientationY.value&&(ae.orientationY.value=N),x!==ae.orientationZ.value&&(ae.orientationZ.value=x),M!==ae.panningModel&&(ae.panningModel=M),E!==ae.positionX.value&&(ae.positionX.value=E),T!==ae.positionY.value&&(ae.positionY.value=T),k!==ae.positionZ.value&&(ae.positionZ.value=k),I!==ae.refDistance&&(ae.refDistance=I),C!==ae.rolloffFactor&&(ae.rolloffFactor=C),(re[0]!==1||re[1]!==0||re[2]!==0)&&q.setOrientation(...re),(pe[0]!==0||pe[1]!==0||pe[2]!==0)&&q.setPosition(...pe);const ce=()=>{K.connect(q),s(K,ne,0,0),ne.connect(Y).connect(V,0,0),ne.connect(te).connect(V,0,1),ne.connect(H).connect(V,0,2),ne.connect(G).connect(V,0,3),ne.connect(X).connect(V,0,4),ne.connect(ee).connect(V,0,5),V.connect(oe).connect(d.destination)},P=()=>{K.disconnect(q),c(K,ne,0,0),ne.disconnect(Y),Y.disconnect(V),ne.disconnect(te),te.disconnect(V),ne.disconnect(H),H.disconnect(V),ne.disconnect(G),G.disconnect(V),ne.disconnect(X),X.disconnect(V),ne.disconnect(ee),ee.disconnect(V),V.disconnect(oe),oe.disconnect(d.destination)};return u(interceptConnections(ae,q),ce,P)},createNativePeriodicWaveFactory=s=>(e,{disableNormalization:t,imag:n,real:o})=>{const r=n instanceof Float32Array?n:new Float32Array(n),a=o instanceof Float32Array?o:new Float32Array(o),c=e.createPeriodicWave(a,r,{disableNormalization:t});if(Array.from(n).length<2)throw s();return c},createNativeScriptProcessorNode=(s,e,t,n)=>s.createScriptProcessor(e,t,n),createNativeStereoPannerNodeFactory=(s,e)=>(t,n)=>{const o=n.channelCountMode;if(o==="clamped-max")throw e();if(t.createStereoPanner===void 0)return s(t,n);const r=t.createStereoPanner();return assignNativeAudioNodeOptions(r,n),assignNativeAudioNodeAudioParamValue(r,n,"pan"),Object.defineProperty(r,"channelCountMode",{get:()=>o,set:a=>{if(a!==o)throw e()}}),r},createNativeStereoPannerNodeFakerFactory=(s,e,t,n,o,r)=>{const c=new Float32Array([1,1]),l=Math.PI/2,u={channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete"},d={...u,oversample:"none"},f=(_,y,A,N)=>{const x=new Float32Array(16385),M=new Float32Array(16385);for(let W=0;W<16385;W+=1){const q=W/16384*l;x[W]=Math.cos(q),M[W]=Math.sin(q)}const E=t(_,{...u,gain:0}),T=n(_,{...d,curve:x}),k=n(_,{...d,curve:c}),I=t(_,{...u,gain:0}),C=n(_,{...d,curve:M});return{connectGraph(){y.connect(E),y.connect(k.inputs===void 0?k:k.inputs[0]),y.connect(I),k.connect(A),A.connect(T.inputs===void 0?T:T.inputs[0]),A.connect(C.inputs===void 0?C:C.inputs[0]),T.connect(E.gain),C.connect(I.gain),E.connect(N,0,0),I.connect(N,0,1)},disconnectGraph(){y.disconnect(E),y.disconnect(k.inputs===void 0?k:k.inputs[0]),y.disconnect(I),k.disconnect(A),A.disconnect(T.inputs===void 0?T:T.inputs[0]),A.disconnect(C.inputs===void 0?C:C.inputs[0]),T.disconnect(E.gain),C.disconnect(I.gain),E.disconnect(N,0,0),I.disconnect(N,0,1)}}},m=(_,y,A,N)=>{const x=new Float32Array(16385),M=new Float32Array(16385),E=new Float32Array(16385),T=new Float32Array(16385),k=Math.floor(16385/2);for(let G=0;G<16385;G+=1)if(G>k){const X=(G-k)/(16384-k)*l;x[G]=Math.cos(X),M[G]=Math.sin(X),E[G]=0,T[G]=1}else{const X=G/(16384-k)*l;x[G]=1,M[G]=0,E[G]=Math.cos(X),T[G]=Math.sin(X)}const I=e(_,{channelCount:2,channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:2}),C=t(_,{...u,gain:0}),W=n(_,{...d,curve:x}),q=t(_,{...u,gain:0}),L=n(_,{...d,curve:M}),V=n(_,{...d,curve:c}),K=t(_,{...u,gain:0}),Y=n(_,{...d,curve:E}),te=t(_,{...u,gain:0}),H=n(_,{...d,curve:T});return{connectGraph(){y.connect(I),y.connect(V.inputs===void 0?V:V.inputs[0]),I.connect(C,0),I.connect(q,0),I.connect(K,1),I.connect(te,1),V.connect(A),A.connect(W.inputs===void 0?W:W.inputs[0]),A.connect(L.inputs===void 0?L:L.inputs[0]),A.connect(Y.inputs===void 0?Y:Y.inputs[0]),A.connect(H.inputs===void 0?H:H.inputs[0]),W.connect(C.gain),L.connect(q.gain),Y.connect(K.gain),H.connect(te.gain),C.connect(N,0,0),K.connect(N,0,0),q.connect(N,0,1),te.connect(N,0,1)},disconnectGraph(){y.disconnect(I),y.disconnect(V.inputs===void 0?V:V.inputs[0]),I.disconnect(C,0),I.disconnect(q,0),I.disconnect(K,1),I.disconnect(te,1),V.disconnect(A),A.disconnect(W.inputs===void 0?W:W.inputs[0]),A.disconnect(L.inputs===void 0?L:L.inputs[0]),A.disconnect(Y.inputs===void 0?Y:Y.inputs[0]),A.disconnect(H.inputs===void 0?H:H.inputs[0]),W.disconnect(C.gain),L.disconnect(q.gain),Y.disconnect(K.gain),H.disconnect(te.gain),C.disconnect(N,0,0),K.disconnect(N,0,0),q.disconnect(N,0,1),te.disconnect(N,0,1)}}},g=(_,y,A,N,x)=>{if(y===1)return f(_,A,N,x);if(y===2)return m(_,A,N,x);throw o()};return(_,{channelCount:y,channelCountMode:A,pan:N,...x})=>{if(A==="max")throw o();const M=s(_,{...x,channelCount:1,channelCountMode:A,numberOfInputs:2}),E=t(_,{...x,channelCount:y,channelCountMode:A,gain:1}),T=t(_,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:N});let{connectGraph:k,disconnectGraph:I}=g(_,y,E,T,M);Object.defineProperty(T.gain,"defaultValue",{get:()=>0}),Object.defineProperty(T.gain,"maxValue",{get:()=>1}),Object.defineProperty(T.gain,"minValue",{get:()=>-1});const C={get bufferSize(){},get channelCount(){return E.channelCount},set channelCount(V){E.channelCount!==V&&(W&&I(),{connectGraph:k,disconnectGraph:I}=g(_,V,E,T,M),W&&k()),E.channelCount=V},get channelCountMode(){return E.channelCountMode},set channelCountMode(V){if(V==="clamped-max"||V==="max")throw o();E.channelCountMode=V},get channelInterpretation(){return E.channelInterpretation},set channelInterpretation(V){E.channelInterpretation=V},get context(){return E.context},get inputs(){return[E]},get numberOfInputs(){return E.numberOfInputs},get numberOfOutputs(){return E.numberOfOutputs},get pan(){return T.gain},addEventListener(...V){return E.addEventListener(V[0],V[1],V[2])},dispatchEvent(...V){return E.dispatchEvent(V[0])},removeEventListener(...V){return E.removeEventListener(V[0],V[1],V[2])}};let W=!1;const q=()=>{k(),W=!0},L=()=>{I(),W=!1};return r(interceptConnections(C,M),q,L)}},createNativeWaveShaperNodeFactory=(s,e,t,n,o,r,a)=>(c,l)=>{const u=c.createWaveShaper();if(r!==null&&r.name==="webkitAudioContext"&&c.createGain().gain.automationRate===void 0)return t(c,l);assignNativeAudioNodeOptions(u,l);const d=l.curve===null||l.curve instanceof Float32Array?l.curve:new Float32Array(l.curve);if(d!==null&&d.length<2)throw e();assignNativeAudioNodeOption(u,{curve:d},"curve"),assignNativeAudioNodeOption(u,l,"oversample");let f=null,m=!1;return a(u,"curve",y=>()=>y.call(u),y=>A=>(y.call(u,A),m&&(n(A)&&f===null?f=s(c,u):!n(A)&&f!==null&&(f(),f=null)),A)),o(u,()=>{m=!0,n(u.curve)&&(f=s(c,u))},()=>{m=!1,f!==null&&(f(),f=null)})},createNativeWaveShaperNodeFakerFactory=(s,e,t,n,o)=>(r,{curve:a,oversample:c,...l})=>{const u=r.createWaveShaper(),d=r.createWaveShaper();assignNativeAudioNodeOptions(u,l),assignNativeAudioNodeOptions(d,l);const f=t(r,{...l,gain:1}),m=t(r,{...l,gain:-1}),g=t(r,{...l,gain:1}),_=t(r,{...l,gain:-1});let y=null,A=!1,N=null;const x={get bufferSize(){},get channelCount(){return u.channelCount},set channelCount(T){f.channelCount=T,m.channelCount=T,u.channelCount=T,g.channelCount=T,d.channelCount=T,_.channelCount=T},get channelCountMode(){return u.channelCountMode},set channelCountMode(T){f.channelCountMode=T,m.channelCountMode=T,u.channelCountMode=T,g.channelCountMode=T,d.channelCountMode=T,_.channelCountMode=T},get channelInterpretation(){return u.channelInterpretation},set channelInterpretation(T){f.channelInterpretation=T,m.channelInterpretation=T,u.channelInterpretation=T,g.channelInterpretation=T,d.channelInterpretation=T,_.channelInterpretation=T},get context(){return u.context},get curve(){return N},set curve(T){if(T!==null&&T.length<2)throw e();if(T===null)u.curve=T,d.curve=T;else{const k=T.length,I=new Float32Array(k+2-k%2),C=new Float32Array(k+2-k%2);I[0]=T[0],C[0]=-T[k-1];const W=Math.ceil((k+1)/2),q=(k+1)/2-1;for(let L=1;L<W;L+=1){const V=L/W*q,K=Math.floor(V),Y=Math.ceil(V);I[L]=K===Y?T[K]:(1-(V-K))*T[K]+(1-(Y-V))*T[Y],C[L]=K===Y?-T[k-1-K]:-((1-(V-K))*T[k-1-K])-(1-(Y-V))*T[k-1-Y]}I[W]=k%2===1?T[W-1]:(T[W-2]+T[W-1])/2,u.curve=I,d.curve=C}N=T,A&&(n(N)&&y===null?y=s(r,f):y!==null&&(y(),y=null))},get inputs(){return[f]},get numberOfInputs(){return u.numberOfInputs},get numberOfOutputs(){return u.numberOfOutputs},get oversample(){return u.oversample},set oversample(T){u.oversample=T,d.oversample=T},addEventListener(...T){return f.addEventListener(T[0],T[1],T[2])},dispatchEvent(...T){return f.dispatchEvent(T[0])},removeEventListener(...T){return f.removeEventListener(T[0],T[1],T[2])}};a!==null&&(x.curve=a instanceof Float32Array?a:new Float32Array(a)),c!==x.oversample&&(x.oversample=c);const M=()=>{f.connect(u).connect(g),f.connect(m).connect(d).connect(_).connect(g),A=!0,n(N)&&(y=s(r,f))},E=()=>{f.disconnect(u),u.disconnect(g),f.disconnect(m),m.disconnect(d),d.disconnect(_),_.disconnect(g),A=!1,y!==null&&(y(),y=null)};return o(interceptConnections(x,g),M,E)},createNotSupportedError=()=>new DOMException("","NotSupportedError"),DEFAULT_OPTIONS$5={numberOfChannels:1},createOfflineAudioContextConstructor=(s,e,t,n,o)=>class extends s{constructor(a,c,l){let u;if(typeof a=="number"&&c!==void 0&&l!==void 0)u={length:c,numberOfChannels:a,sampleRate:l};else if(typeof a=="object")u=a;else throw new Error("The given parameters are not valid.");const{length:d,numberOfChannels:f,sampleRate:m}={...DEFAULT_OPTIONS$5,...u},g=n(f,d,m);e(testPromiseSupport,()=>testPromiseSupport(g))||g.addEventListener("statechange",(()=>{let _=0;const y=A=>{this._state==="running"&&(_>0?(g.removeEventListener("statechange",y),A.stopImmediatePropagation(),this._waitForThePromiseToSettle(A)):_+=1)};return y})()),super(g,f),this._length=d,this._nativeOfflineAudioContext=g,this._state=null}get length(){return this._nativeOfflineAudioContext.length===void 0?this._length:this._nativeOfflineAudioContext.length}get state(){return this._state===null?this._nativeOfflineAudioContext.state:this._state}startRendering(){return this._state==="running"?Promise.reject(t()):(this._state="running",o(this.destination,this._nativeOfflineAudioContext).finally(()=>{this._state=null,deactivateAudioGraph(this)}))}_waitForThePromiseToSettle(a){this._state===null?this._nativeOfflineAudioContext.dispatchEvent(a):setTimeout(()=>this._waitForThePromiseToSettle(a))}},DEFAULT_OPTIONS$4={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",detune:0,frequency:440,periodicWave:void 0,type:"sine"},createOscillatorNodeConstructor=(s,e,t,n,o,r,a)=>class extends s{constructor(l,u){const d=o(l),f={...DEFAULT_OPTIONS$4,...u},m=t(d,f),g=r(d),_=g?n():null,y=l.sampleRate/2;super(l,!1,m,_),this._detune=e(this,g,m.detune,153600,-153600),this._frequency=e(this,g,m.frequency,y,-y),this._nativeOscillatorNode=m,this._onended=null,this._oscillatorNodeRenderer=_,this._oscillatorNodeRenderer!==null&&f.periodicWave!==void 0&&(this._oscillatorNodeRenderer.periodicWave=f.periodicWave)}get detune(){return this._detune}get frequency(){return this._frequency}get onended(){return this._onended}set onended(l){const u=typeof l=="function"?a(this,l):null;this._nativeOscillatorNode.onended=u;const d=this._nativeOscillatorNode.onended;this._onended=d!==null&&d===u?l:d}get type(){return this._nativeOscillatorNode.type}set type(l){this._nativeOscillatorNode.type=l,this._oscillatorNodeRenderer!==null&&(this._oscillatorNodeRenderer.periodicWave=null)}setPeriodicWave(l){this._nativeOscillatorNode.setPeriodicWave(l),this._oscillatorNodeRenderer!==null&&(this._oscillatorNodeRenderer.periodicWave=l)}start(l=0){if(this._nativeOscillatorNode.start(l),this._oscillatorNodeRenderer!==null&&(this._oscillatorNodeRenderer.start=l),this.context.state!=="closed"){setInternalStateToActive(this);const u=()=>{this._nativeOscillatorNode.removeEventListener("ended",u),isActiveAudioNode(this)&&setInternalStateToPassive(this)};this._nativeOscillatorNode.addEventListener("ended",u)}}stop(l=0){this._nativeOscillatorNode.stop(l),this._oscillatorNodeRenderer!==null&&(this._oscillatorNodeRenderer.stop=l)}},createOscillatorNodeRendererFactory=(s,e,t,n,o)=>()=>{const r=new WeakMap;let a=null,c=null,l=null;const u=async(d,f)=>{let m=t(d);const g=isOwnedByContext(m,f);if(!g){const _={channelCount:m.channelCount,channelCountMode:m.channelCountMode,channelInterpretation:m.channelInterpretation,detune:m.detune.value,frequency:m.frequency.value,periodicWave:a===null?void 0:a,type:m.type};m=e(f,_),c!==null&&m.start(c),l!==null&&m.stop(l)}return r.set(f,m),g?(await s(f,d.detune,m.detune),await s(f,d.frequency,m.frequency)):(await n(f,d.detune,m.detune),await n(f,d.frequency,m.frequency)),await o(d,f,m),m};return{set periodicWave(d){a=d},set start(d){c=d},set stop(d){l=d},render(d,f){const m=r.get(f);return m!==void 0?Promise.resolve(m):u(d,f)}}},DEFAULT_OPTIONS$3={channelCount:2,channelCountMode:"clamped-max",channelInterpretation:"speakers",coneInnerAngle:360,coneOuterAngle:360,coneOuterGain:0,distanceModel:"inverse",maxDistance:1e4,orientationX:1,orientationY:0,orientationZ:0,panningModel:"equalpower",positionX:0,positionY:0,positionZ:0,refDistance:1,rolloffFactor:1},createPannerNodeConstructor=(s,e,t,n,o,r,a)=>class extends s{constructor(l,u){const d=o(l),f={...DEFAULT_OPTIONS$3,...u},m=t(d,f),g=r(d),_=g?n():null;super(l,!1,m,_),this._nativePannerNode=m,this._orientationX=e(this,g,m.orientationX,MOST_POSITIVE_SINGLE_FLOAT,MOST_NEGATIVE_SINGLE_FLOAT),this._orientationY=e(this,g,m.orientationY,MOST_POSITIVE_SINGLE_FLOAT,MOST_NEGATIVE_SINGLE_FLOAT),this._orientationZ=e(this,g,m.orientationZ,MOST_POSITIVE_SINGLE_FLOAT,MOST_NEGATIVE_SINGLE_FLOAT),this._positionX=e(this,g,m.positionX,MOST_POSITIVE_SINGLE_FLOAT,MOST_NEGATIVE_SINGLE_FLOAT),this._positionY=e(this,g,m.positionY,MOST_POSITIVE_SINGLE_FLOAT,MOST_NEGATIVE_SINGLE_FLOAT),this._positionZ=e(this,g,m.positionZ,MOST_POSITIVE_SINGLE_FLOAT,MOST_NEGATIVE_SINGLE_FLOAT),a(this,1)}get coneInnerAngle(){return this._nativePannerNode.coneInnerAngle}set coneInnerAngle(l){this._nativePannerNode.coneInnerAngle=l}get coneOuterAngle(){return this._nativePannerNode.coneOuterAngle}set coneOuterAngle(l){this._nativePannerNode.coneOuterAngle=l}get coneOuterGain(){return this._nativePannerNode.coneOuterGain}set coneOuterGain(l){this._nativePannerNode.coneOuterGain=l}get distanceModel(){return this._nativePannerNode.distanceModel}set distanceModel(l){this._nativePannerNode.distanceModel=l}get maxDistance(){return this._nativePannerNode.maxDistance}set maxDistance(l){this._nativePannerNode.maxDistance=l}get orientationX(){return this._orientationX}get orientationY(){return this._orientationY}get orientationZ(){return this._orientationZ}get panningModel(){return this._nativePannerNode.panningModel}set panningModel(l){this._nativePannerNode.panningModel=l}get positionX(){return this._positionX}get positionY(){return this._positionY}get positionZ(){return this._positionZ}get refDistance(){return this._nativePannerNode.refDistance}set refDistance(l){this._nativePannerNode.refDistance=l}get rolloffFactor(){return this._nativePannerNode.rolloffFactor}set rolloffFactor(l){this._nativePannerNode.rolloffFactor=l}},createPannerNodeRendererFactory=(s,e,t,n,o,r,a,c,l,u)=>()=>{const d=new WeakMap;let f=null;const m=async(g,_)=>{let y=null,A=r(g);const N={channelCount:A.channelCount,channelCountMode:A.channelCountMode,channelInterpretation:A.channelInterpretation},x={...N,coneInnerAngle:A.coneInnerAngle,coneOuterAngle:A.coneOuterAngle,coneOuterGain:A.coneOuterGain,distanceModel:A.distanceModel,maxDistance:A.maxDistance,panningModel:A.panningModel,refDistance:A.refDistance,rolloffFactor:A.rolloffFactor},M=isOwnedByContext(A,_);if("bufferSize"in A)y=n(_,{...N,gain:1});else if(!M){const E={...x,orientationX:A.orientationX.value,orientationY:A.orientationY.value,orientationZ:A.orientationZ.value,positionX:A.positionX.value,positionY:A.positionY.value,positionZ:A.positionZ.value};A=o(_,E)}if(d.set(_,y===null?A:y),y!==null){if(f===null){if(a===null)throw new Error("Missing the native OfflineAudioContext constructor.");const L=new a(6,g.context.length,_.sampleRate),V=e(L,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:6});V.connect(L.destination),f=(async()=>{const K=await Promise.all([g.orientationX,g.orientationY,g.orientationZ,g.positionX,g.positionY,g.positionZ].map(async(Y,te)=>{const H=t(L,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",offset:te===0?1:0});return await c(L,Y,H.offset),H}));for(let Y=0;Y<6;Y+=1)K[Y].connect(V,0,Y),K[Y].start(0);return u(L)})()}const E=await f,T=n(_,{...N,gain:1});await l(g,_,T);const k=[];for(let L=0;L<E.numberOfChannels;L+=1)k.push(E.getChannelData(L));let I=[k[0][0],k[1][0],k[2][0]],C=[k[3][0],k[4][0],k[5][0]],W=n(_,{...N,gain:1}),q=o(_,{...x,orientationX:I[0],orientationY:I[1],orientationZ:I[2],positionX:C[0],positionY:C[1],positionZ:C[2]});T.connect(W).connect(q.inputs[0]),q.connect(y);for(let L=128;L<E.length;L+=128){const V=[k[0][L],k[1][L],k[2][L]],K=[k[3][L],k[4][L],k[5][L]];if(V.some((Y,te)=>Y!==I[te])||K.some((Y,te)=>Y!==C[te])){I=V,C=K;const Y=L/_.sampleRate;W.gain.setValueAtTime(0,Y),W=n(_,{...N,gain:0}),q=o(_,{...x,orientationX:I[0],orientationY:I[1],orientationZ:I[2],positionX:C[0],positionY:C[1],positionZ:C[2]}),W.gain.setValueAtTime(1,Y),T.connect(W).connect(q.inputs[0]),q.connect(y)}}return y}return M?(await s(_,g.orientationX,A.orientationX),await s(_,g.orientationY,A.orientationY),await s(_,g.orientationZ,A.orientationZ),await s(_,g.positionX,A.positionX),await s(_,g.positionY,A.positionY),await s(_,g.positionZ,A.positionZ)):(await c(_,g.orientationX,A.orientationX),await c(_,g.orientationY,A.orientationY),await c(_,g.orientationZ,A.orientationZ),await c(_,g.positionX,A.positionX),await c(_,g.positionY,A.positionY),await c(_,g.positionZ,A.positionZ)),isNativeAudioNodeFaker(A)?await l(g,_,A.inputs[0]):await l(g,_,A),A};return{render(g,_){const y=d.get(_);return y!==void 0?Promise.resolve(y):m(g,_)}}},DEFAULT_OPTIONS$2={disableNormalization:!1},createPeriodicWaveConstructor=(s,e,t,n)=>class ke{constructor(r,a){const c=e(r),l=n({...DEFAULT_OPTIONS$2,...a}),u=s(c,l);return t.add(u),u}static[Symbol.hasInstance](r){return r!==null&&typeof r=="object"&&Object.getPrototypeOf(r)===ke.prototype||t.has(r)}},createRenderAutomation=(s,e)=>(t,n,o)=>(s(n).replay(o),e(n,t,o)),createRenderInputsOfAudioNode=(s,e,t)=>async(n,o,r)=>{const a=s(n);await Promise.all(a.activeInputs.map((c,l)=>Array.from(c).map(async([u,d])=>{const m=await e(u).render(u,o),g=n.context.destination;!t(u)&&(n!==g||!t(n))&&m.connect(r,d,l)})).reduce((c,l)=>[...c,...l],[]))},createRenderInputsOfAudioParam=(s,e,t)=>async(n,o,r)=>{const a=e(n);await Promise.all(Array.from(a.activeInputs).map(async([c,l])=>{const d=await s(c).render(c,o);t(c)||d.connect(r,l)}))},createRenderNativeOfflineAudioContext=(s,e,t,n)=>o=>s(testPromiseSupport,()=>testPromiseSupport(o))?Promise.resolve(s(n,n)).then(r=>{if(!r){const a=t(o,512,0,1);o.oncomplete=()=>{a.onaudioprocess=null,a.disconnect()},a.onaudioprocess=()=>o.currentTime,a.connect(o.destination)}return o.startRendering()}):new Promise(r=>{const a=e(o,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0});o.oncomplete=c=>{a.disconnect(),r(c.renderedBuffer)},a.connect(o.destination),o.startRendering()}),createSetActiveAudioWorkletNodeInputs=s=>(e,t)=>{s.set(e,t)},createSetAudioNodeTailTime=s=>(e,t)=>s.set(e,t),createStartRendering=(s,e,t,n,o,r,a,c)=>(l,u)=>t(l).render(l,u).then(()=>Promise.all(Array.from(n(u)).map(d=>t(d).render(d,u)))).then(()=>o(u)).then(d=>(typeof d.copyFromChannel!="function"?(a(d),wrapAudioBufferGetChannelDataMethod(d)):e(r,()=>r(d))||c(d),s.add(d),d)),DEFAULT_OPTIONS$1={channelCount:2,channelCountMode:"explicit",channelInterpretation:"speakers",pan:0},createStereoPannerNodeConstructor=(s,e,t,n,o,r)=>class extends s{constructor(c,l){const u=o(c),d={...DEFAULT_OPTIONS$1,...l},f=t(u,d),m=r(u),g=m?n():null;super(c,!1,f,g),this._pan=e(this,m,f.pan)}get pan(){return this._pan}},createStereoPannerNodeRendererFactory=(s,e,t,n,o)=>()=>{const r=new WeakMap,a=async(c,l)=>{let u=t(c);const d=isOwnedByContext(u,l);if(!d){const f={channelCount:u.channelCount,channelCountMode:u.channelCountMode,channelInterpretation:u.channelInterpretation,pan:u.pan.value};u=e(l,f)}return r.set(l,u),d?await s(l,c.pan,u.pan):await n(l,c.pan,u.pan),isNativeAudioNodeFaker(u)?await o(c,l,u.inputs[0]):await o(c,l,u),u};return{render(c,l){const u=r.get(l);return u!==void 0?Promise.resolve(u):a(c,l)}}},createTestAudioBufferConstructorSupport=s=>()=>{if(s===null)return!1;try{new s({length:1,sampleRate:44100})}catch{return!1}return!0},createTestAudioBufferCopyChannelMethodsSubarraySupport=s=>()=>{if(s===null)return!1;const t=new s(1,1,44100).createBuffer(1,1,44100);if(t.copyToChannel===void 0)return!0;const n=new Float32Array(2);try{t.copyFromChannel(n,0,0)}catch{return!1}return!0},createTestAudioContextCloseMethodSupport=s=>()=>{if(s===null)return!1;if(s.prototype!==void 0&&s.prototype.close!==void 0)return!0;const e=new s,t=e.close!==void 0;try{e.close()}catch{}return t},createTestAudioContextDecodeAudioDataMethodTypeErrorSupport=s=>()=>{if(s===null)return Promise.resolve(!1);const e=new s(1,1,44100);return new Promise(t=>{let n=!0;const o=a=>{n&&(n=!1,e.startRendering(),t(a instanceof TypeError))};let r;try{r=e.decodeAudioData(null,()=>{},o)}catch(a){o(a)}r!==void 0&&r.catch(o)})},createTestAudioContextOptionsSupport=s=>()=>{if(s===null)return!1;let e;try{e=new s({latencyHint:"balanced"})}catch{return!1}return e.close(),!0},createTestAudioNodeConnectMethodSupport=s=>()=>{if(s===null)return!1;const t=new s(1,1,44100).createGain(),n=t.connect(t)===t;return t.disconnect(t),n},createTestAudioWorkletProcessorNoOutputsSupport=(s,e)=>async()=>{if(s===null)return!0;if(e===null)return!1;const t=new Blob(['let c,p;class A extends AudioWorkletProcessor{constructor(){super();this.port.onmessage=(e)=>{p=e.data;p.onmessage=()=>{p.postMessage(c);p.close()};this.port.postMessage(0)}}process(){c=1}}registerProcessor("a",A)'],{type:"application/javascript; charset=utf-8"}),n=new MessageChannel,o=new e(1,128,44100),r=URL.createObjectURL(t);let a=!1;try{await o.audioWorklet.addModule(r);const c=new s(o,"a",{numberOfOutputs:0}),l=o.createOscillator();await new Promise(u=>{c.port.onmessage=()=>u(),c.port.postMessage(n.port2,[n.port2])}),c.port.onmessage=()=>a=!0,l.connect(c),l.start(0),await o.startRendering(),a=await new Promise(u=>{n.port1.onmessage=({data:d})=>u(d===1),n.port1.postMessage(0)})}catch{}finally{n.port1.close(),URL.revokeObjectURL(r)}return a},createTestAudioWorkletProcessorPostMessageSupport=(s,e)=>async()=>{if(s===null)return!0;if(e===null)return!1;const t=new Blob(['class A extends AudioWorkletProcessor{process(i){this.port.postMessage(i,[i[0][0].buffer])}}registerProcessor("a",A)'],{type:"application/javascript; charset=utf-8"}),n=new e(1,128,44100),o=URL.createObjectURL(t);let r=!1,a=!1;try{await n.audioWorklet.addModule(o);const c=new s(n,"a",{numberOfOutputs:0}),l=n.createOscillator();c.port.onmessage=()=>r=!0,c.onprocessorerror=()=>a=!0,l.connect(c),l.start(0),await n.startRendering(),await new Promise(u=>setTimeout(u))}catch{}finally{URL.revokeObjectURL(o)}return r&&!a},createTestChannelMergerNodeChannelCountSupport=s=>()=>{if(s===null)return!1;const t=new s(1,1,44100).createChannelMerger();if(t.channelCountMode==="max")return!0;try{t.channelCount=2}catch{return!0}return!1},createTestConstantSourceNodeAccurateSchedulingSupport=s=>()=>{if(s===null)return!1;const e=new s(1,1,44100);return e.createConstantSource===void 0?!0:e.createConstantSource().offset.maxValue!==Number.POSITIVE_INFINITY},createTestConvolverNodeBufferReassignabilitySupport=s=>()=>{if(s===null)return!1;const e=new s(1,1,44100),t=e.createConvolver();t.buffer=e.createBuffer(1,1,e.sampleRate);try{t.buffer=e.createBuffer(1,1,e.sampleRate)}catch{return!1}return!0},createTestConvolverNodeChannelCountSupport=s=>()=>{if(s===null)return!1;const t=new s(1,1,44100).createConvolver();try{t.channelCount=1}catch{return!1}return!0},createTestIsSecureContextSupport=s=>()=>s!==null&&s.hasOwnProperty("isSecureContext"),createTestMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport=s=>()=>{if(s===null)return!1;const e=new s;try{return e.createMediaStreamSource(new MediaStream),!1}catch{return!0}finally{e.close()}},createTestOfflineAudioContextCurrentTimeSupport=(s,e)=>()=>{if(e===null)return Promise.resolve(!1);const t=new e(1,1,44100),n=s(t,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0});return new Promise(o=>{t.oncomplete=()=>{n.disconnect(),o(t.currentTime!==0)},t.startRendering()})},createTestStereoPannerNodeDefaultValueSupport=s=>()=>{if(s===null)return Promise.resolve(!1);const e=new s(1,1,44100);if(e.createStereoPanner===void 0||e.createConstantSource===void 0)return Promise.resolve(!0);const t=e.createConstantSource(),n=e.createStereoPanner();return t.channelCount=1,t.offset.value=1,n.channelCount=1,t.start(),t.connect(n).connect(e.destination),e.startRendering().then(o=>o.getChannelData(0)[0]!==1)},createUnknownError=()=>new DOMException("","UnknownError"),DEFAULT_OPTIONS={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",curve:null,oversample:"none"},createWaveShaperNodeConstructor=(s,e,t,n,o,r,a)=>class extends s{constructor(l,u){const d=o(l),f={...DEFAULT_OPTIONS,...u},m=t(d,f),_=r(d)?n():null;super(l,!0,m,_),this._isCurveNullified=!1,this._nativeWaveShaperNode=m,a(this,1)}get curve(){return this._isCurveNullified?null:this._nativeWaveShaperNode.curve}set curve(l){if(l===null)this._isCurveNullified=!0,this._nativeWaveShaperNode.curve=new Float32Array([0,0]);else{if(l.length<2)throw e();this._isCurveNullified=!1,this._nativeWaveShaperNode.curve=l}}get oversample(){return this._nativeWaveShaperNode.oversample}set oversample(l){this._nativeWaveShaperNode.oversample=l}},createWaveShaperNodeRendererFactory=(s,e,t)=>()=>{const n=new WeakMap,o=async(r,a)=>{let c=e(r);if(!isOwnedByContext(c,a)){const u={channelCount:c.channelCount,channelCountMode:c.channelCountMode,channelInterpretation:c.channelInterpretation,curve:c.curve,oversample:c.oversample};c=s(a,u)}return n.set(a,c),isNativeAudioNodeFaker(c)?await t(r,a,c.inputs[0]):await t(r,a,c),c};return{render(r,a){const c=n.get(a);return c!==void 0?Promise.resolve(c):o(r,a)}}},createWindow=()=>typeof window>"u"?null:window,createWrapAudioBufferCopyChannelMethods=(s,e)=>t=>{t.copyFromChannel=(n,o,r=0)=>{const a=s(r),c=s(o);if(c>=t.numberOfChannels)throw e();const l=t.length,u=t.getChannelData(c),d=n.length;for(let f=a<0?-a:0;f+a<l&&f<d;f+=1)n[f]=u[f+a]},t.copyToChannel=(n,o,r=0)=>{const a=s(r),c=s(o);if(c>=t.numberOfChannels)throw e();const l=t.length,u=t.getChannelData(c),d=n.length;for(let f=a<0?-a:0;f+a<l&&f<d;f+=1)u[f+a]=n[f]}},createWrapAudioBufferCopyChannelMethodsOutOfBounds=s=>e=>{e.copyFromChannel=(t=>(n,o,r=0)=>{const a=s(r),c=s(o);if(a<e.length)return t.call(e,n,c,a)})(e.copyFromChannel),e.copyToChannel=(t=>(n,o,r=0)=>{const a=s(r),c=s(o);if(a<e.length)return t.call(e,n,c,a)})(e.copyToChannel)},createWrapAudioBufferSourceNodeStopMethodNullifiedBuffer=s=>(e,t)=>{const n=t.createBuffer(1,1,44100);e.buffer===null&&(e.buffer=n),s(e,"buffer",o=>()=>{const r=o.call(e);return r===n?null:r},o=>r=>o.call(e,r===null?n:r))},createWrapChannelMergerNode=(s,e)=>(t,n)=>{n.channelCount=1,n.channelCountMode="explicit",Object.defineProperty(n,"channelCount",{get:()=>1,set:()=>{throw s()}}),Object.defineProperty(n,"channelCountMode",{get:()=>"explicit",set:()=>{throw s()}});const o=t.createBufferSource();e(n,()=>{const c=n.numberOfInputs;for(let l=0;l<c;l+=1)o.connect(n,0,l)},()=>o.disconnect(n))},getFirstSample=(s,e,t)=>s.copyFromChannel===void 0?s.getChannelData(t)[0]:(s.copyFromChannel(e,t),e[0]),isDCCurve=s=>{if(s===null)return!1;const e=s.length;return e%2!==0?s[Math.floor(e/2)]!==0:s[e/2-1]+s[e/2]!==0},overwriteAccessors=(s,e,t,n)=>{let o=s;for(;!o.hasOwnProperty(e);)o=Object.getPrototypeOf(o);const{get:r,set:a}=Object.getOwnPropertyDescriptor(o,e);Object.defineProperty(s,e,{get:t(r),set:n(a)})},sanitizeAudioWorkletNodeOptions=s=>({...s,outputChannelCount:s.outputChannelCount!==void 0?s.outputChannelCount:s.numberOfInputs===1&&s.numberOfOutputs===1?[s.channelCount]:Array.from({length:s.numberOfOutputs},()=>1)}),sanitizeChannelSplitterOptions=s=>({...s,channelCount:s.numberOfOutputs}),sanitizePeriodicWaveOptions=s=>{const{imag:e,real:t}=s;return e===void 0?t===void 0?{...s,imag:[0,0],real:[0,0]}:{...s,imag:Array.from(t,()=>0),real:t}:t===void 0?{...s,imag:e,real:Array.from(e,()=>0)}:{...s,imag:e,real:t}},setValueAtTimeUntilPossible=(s,e,t)=>{try{s.setValueAtTime(e,t)}catch(n){if(n.code!==9)throw n;setValueAtTimeUntilPossible(s,e,t+1e-7)}},testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport=s=>{const e=s.createBufferSource();e.start();try{e.start()}catch{return!0}return!1},testAudioBufferSourceNodeStartMethodOffsetClampingSupport=s=>{const e=s.createBufferSource(),t=s.createBuffer(1,1,44100);e.buffer=t;try{e.start(0,1)}catch{return!1}return!0},testAudioBufferSourceNodeStopMethodNullifiedBufferSupport=s=>{const e=s.createBufferSource();e.start();try{e.stop()}catch{return!1}return!0},testAudioScheduledSourceNodeStartMethodNegativeParametersSupport=s=>{const e=s.createOscillator();try{e.start(-1)}catch(t){return t instanceof RangeError}return!1},testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport=s=>{const e=s.createBuffer(1,1,44100),t=s.createBufferSource();t.buffer=e,t.start(),t.stop();try{return t.stop(),!0}catch{return!1}},testAudioScheduledSourceNodeStopMethodNegativeParametersSupport=s=>{const e=s.createOscillator();try{e.stop(-1)}catch(t){return t instanceof RangeError}return!1},testAudioWorkletNodeOptionsClonability=s=>{const{port1:e,port2:t}=new MessageChannel;try{e.postMessage(s)}finally{e.close(),t.close()}},testDomExceptionConstructorSupport=()=>{try{new DOMException}catch{return!1}return!0},testTransferablesSupport=()=>new Promise(s=>{const e=new ArrayBuffer(0),{port1:t,port2:n}=new MessageChannel;t.onmessage=({data:o})=>s(o!==null),n.postMessage(e,[e])}),wrapAudioBufferSourceNodeStartMethodOffsetClamping=s=>{s.start=(e=>(t=0,n=0,o)=>{const r=s.buffer,a=r===null?n:Math.min(r.duration,n);r!==null&&a>r.duration-.5/s.context.sampleRate?e.call(s,t,0,0):e.call(s,t,a,o)})(s.start)},wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls=(s,e)=>{const t=e.createGain();s.connect(t);const n=(o=>()=>{o.call(s,t),s.removeEventListener("ended",n)})(s.disconnect);s.addEventListener("ended",n),interceptConnections(s,t),s.stop=(o=>{let r=!1;return(a=0)=>{if(r)try{o.call(s,a)}catch{t.gain.setValueAtTime(0,a)}else o.call(s,a),r=!0}})(s.stop)},wrapEventListener=(s,e)=>t=>{const n={value:s};return Object.defineProperties(t,{currentTarget:n,target:n}),typeof e=="function"?e.call(s,t):e.handleEvent.call(s,t)},addActiveInputConnectionToAudioNode=createAddActiveInputConnectionToAudioNode(insertElementInSet),addPassiveInputConnectionToAudioNode=createAddPassiveInputConnectionToAudioNode(insertElementInSet),deleteActiveInputConnectionToAudioNode=createDeleteActiveInputConnectionToAudioNode(pickElementFromSet),audioNodeTailTimeStore=new WeakMap,getAudioNodeTailTime=createGetAudioNodeTailTime(audioNodeTailTimeStore),cacheTestResult=createCacheTestResult(new Map,new WeakMap),window$1=createWindow(),createNativeAnalyserNode=createNativeAnalyserNodeFactory(cacheTestResult,createIndexSizeError),getAudioNodeRenderer=createGetAudioNodeRenderer(getAudioNodeConnections),renderInputsOfAudioNode=createRenderInputsOfAudioNode(getAudioNodeConnections,getAudioNodeRenderer,isPartOfACycle),createAnalyserNodeRenderer=createAnalyserNodeRendererFactory(createNativeAnalyserNode,getNativeAudioNode,renderInputsOfAudioNode),getNativeContext=createGetNativeContext(CONTEXT_STORE),nativeOfflineAudioContextConstructor=createNativeOfflineAudioContextConstructor(window$1),isNativeOfflineAudioContext=createIsNativeOfflineAudioContext(nativeOfflineAudioContextConstructor),audioParamAudioNodeStore=new WeakMap,eventTargetConstructor=createEventTargetConstructor(wrapEventListener),nativeAudioContextConstructor=createNativeAudioContextConstructor(window$1),isNativeAudioContext=createIsNativeAudioContext(nativeAudioContextConstructor),isNativeAudioNode=createIsNativeAudioNode(window$1),isNativeAudioParam=createIsNativeAudioParam(window$1),nativeAudioWorkletNodeConstructor=createNativeAudioWorkletNodeConstructor(window$1),audioNodeConstructor=createAudioNodeConstructor(createAddAudioNodeConnections(AUDIO_NODE_CONNECTIONS_STORE),createAddConnectionToAudioNode(addActiveInputConnectionToAudioNode,addPassiveInputConnectionToAudioNode,connectNativeAudioNodeToNativeAudioNode,deleteActiveInputConnectionToAudioNode,disconnectNativeAudioNodeFromNativeAudioNode,getAudioNodeConnections,getAudioNodeTailTime,getEventListenersOfAudioNode,getNativeAudioNode,insertElementInSet,isActiveAudioNode,isPartOfACycle,isPassiveAudioNode),cacheTestResult,createIncrementCycleCounterFactory(CYCLE_COUNTERS,disconnectNativeAudioNodeFromNativeAudioNode,getAudioNodeConnections,getNativeAudioNode,getNativeAudioParam,isActiveAudioNode),createIndexSizeError,createInvalidAccessError,createNotSupportedError,createDecrementCycleCounter(connectNativeAudioNodeToNativeAudioNode,CYCLE_COUNTERS,getAudioNodeConnections,getNativeAudioNode,getNativeAudioParam,getNativeContext,isActiveAudioNode,isNativeOfflineAudioContext),createDetectCycles(audioParamAudioNodeStore,getAudioNodeConnections,getValueForKey),eventTargetConstructor,getNativeContext,isNativeAudioContext,isNativeAudioNode,isNativeAudioParam,isNativeOfflineAudioContext,nativeAudioWorkletNodeConstructor),analyserNodeConstructor=createAnalyserNodeConstructor(audioNodeConstructor,createAnalyserNodeRenderer,createIndexSizeError,createNativeAnalyserNode,getNativeContext,isNativeOfflineAudioContext),audioBufferStore=new WeakSet,nativeAudioBufferConstructor=createNativeAudioBufferConstructor(window$1),convertNumberToUnsignedLong=createConvertNumberToUnsignedLong(new Uint32Array(1)),wrapAudioBufferCopyChannelMethods=createWrapAudioBufferCopyChannelMethods(convertNumberToUnsignedLong,createIndexSizeError),wrapAudioBufferCopyChannelMethodsOutOfBounds=createWrapAudioBufferCopyChannelMethodsOutOfBounds(convertNumberToUnsignedLong),audioBufferConstructor=createAudioBufferConstructor(audioBufferStore,cacheTestResult,createNotSupportedError,nativeAudioBufferConstructor,nativeOfflineAudioContextConstructor,createTestAudioBufferConstructorSupport(nativeAudioBufferConstructor),wrapAudioBufferCopyChannelMethods,wrapAudioBufferCopyChannelMethodsOutOfBounds),addSilentConnection=createAddSilentConnection(createNativeGainNode),renderInputsOfAudioParam=createRenderInputsOfAudioParam(getAudioNodeRenderer,getAudioParamConnections,isPartOfACycle),connectAudioParam=createConnectAudioParam(renderInputsOfAudioParam),createNativeAudioBufferSourceNode=createNativeAudioBufferSourceNodeFactory(addSilentConnection,cacheTestResult,testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport,testAudioBufferSourceNodeStartMethodOffsetClampingSupport,testAudioBufferSourceNodeStopMethodNullifiedBufferSupport,testAudioScheduledSourceNodeStartMethodNegativeParametersSupport,testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport,testAudioScheduledSourceNodeStopMethodNegativeParametersSupport,wrapAudioBufferSourceNodeStartMethodOffsetClamping,createWrapAudioBufferSourceNodeStopMethodNullifiedBuffer(overwriteAccessors),wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls),renderAutomation=createRenderAutomation(createGetAudioParamRenderer(getAudioParamConnections),renderInputsOfAudioParam),createAudioBufferSourceNodeRenderer=createAudioBufferSourceNodeRendererFactory(connectAudioParam,createNativeAudioBufferSourceNode,getNativeAudioNode,renderAutomation,renderInputsOfAudioNode),createAudioParam=createAudioParamFactory(createAddAudioParamConnections(AUDIO_PARAM_CONNECTIONS_STORE),audioParamAudioNodeStore,AUDIO_PARAM_STORE,createAudioParamRenderer,createCancelAndHoldAutomationEvent,createCancelScheduledValuesAutomationEvent,createExponentialRampToValueAutomationEvent,createLinearRampToValueAutomationEvent,createSetTargetAutomationEvent,createSetValueAutomationEvent,createSetValueCurveAutomationEvent,nativeAudioContextConstructor,setValueAtTimeUntilPossible),audioBufferSourceNodeConstructor=createAudioBufferSourceNodeConstructor(audioNodeConstructor,createAudioBufferSourceNodeRenderer,createAudioParam,createInvalidStateError,createNativeAudioBufferSourceNode,getNativeContext,isNativeOfflineAudioContext,wrapEventListener),audioDestinationNodeConstructor=createAudioDestinationNodeConstructor(audioNodeConstructor,createAudioDestinationNodeRenderer,createIndexSizeError,createInvalidStateError,createNativeAudioDestinationNodeFactory(createNativeGainNode,overwriteAccessors),getNativeContext,isNativeOfflineAudioContext,renderInputsOfAudioNode),createBiquadFilterNodeRenderer=createBiquadFilterNodeRendererFactory(connectAudioParam,createNativeBiquadFilterNode,getNativeAudioNode,renderAutomation,renderInputsOfAudioNode),setAudioNodeTailTime=createSetAudioNodeTailTime(audioNodeTailTimeStore),biquadFilterNodeConstructor=createBiquadFilterNodeConstructor(audioNodeConstructor,createAudioParam,createBiquadFilterNodeRenderer,createInvalidAccessError,createNativeBiquadFilterNode,getNativeContext,isNativeOfflineAudioContext,setAudioNodeTailTime),monitorConnections=createMonitorConnections(insertElementInSet,isNativeAudioNode),wrapChannelMergerNode=createWrapChannelMergerNode(createInvalidStateError,monitorConnections),createNativeChannelMergerNode=createNativeChannelMergerNodeFactory(nativeAudioContextConstructor,wrapChannelMergerNode),createChannelMergerNodeRenderer=createChannelMergerNodeRendererFactory(createNativeChannelMergerNode,getNativeAudioNode,renderInputsOfAudioNode),channelMergerNodeConstructor=createChannelMergerNodeConstructor(audioNodeConstructor,createChannelMergerNodeRenderer,createNativeChannelMergerNode,getNativeContext,isNativeOfflineAudioContext),createChannelSplitterNodeRenderer=createChannelSplitterNodeRendererFactory(createNativeChannelSplitterNode,getNativeAudioNode,renderInputsOfAudioNode),channelSplitterNodeConstructor=createChannelSplitterNodeConstructor(audioNodeConstructor,createChannelSplitterNodeRenderer,createNativeChannelSplitterNode,getNativeContext,isNativeOfflineAudioContext,sanitizeChannelSplitterOptions),createNativeConstantSourceNodeFaker=createNativeConstantSourceNodeFakerFactory(addSilentConnection,createNativeAudioBufferSourceNode,createNativeGainNode,monitorConnections),createNativeConstantSourceNode=createNativeConstantSourceNodeFactory(addSilentConnection,cacheTestResult,createNativeConstantSourceNodeFaker,testAudioScheduledSourceNodeStartMethodNegativeParametersSupport,testAudioScheduledSourceNodeStopMethodNegativeParametersSupport),createConstantSourceNodeRenderer=createConstantSourceNodeRendererFactory(connectAudioParam,createNativeConstantSourceNode,getNativeAudioNode,renderAutomation,renderInputsOfAudioNode),constantSourceNodeConstructor=createConstantSourceNodeConstructor(audioNodeConstructor,createAudioParam,createConstantSourceNodeRenderer,createNativeConstantSourceNode,getNativeContext,isNativeOfflineAudioContext,wrapEventListener),createNativeConvolverNode=createNativeConvolverNodeFactory(createNotSupportedError,overwriteAccessors),createConvolverNodeRenderer=createConvolverNodeRendererFactory(createNativeConvolverNode,getNativeAudioNode,renderInputsOfAudioNode),convolverNodeConstructor=createConvolverNodeConstructor(audioNodeConstructor,createConvolverNodeRenderer,createNativeConvolverNode,getNativeContext,isNativeOfflineAudioContext,setAudioNodeTailTime),createDelayNodeRenderer=createDelayNodeRendererFactory(connectAudioParam,createNativeDelayNode,getNativeAudioNode,renderAutomation,renderInputsOfAudioNode),delayNodeConstructor=createDelayNodeConstructor(audioNodeConstructor,createAudioParam,createDelayNodeRenderer,createNativeDelayNode,getNativeContext,isNativeOfflineAudioContext,setAudioNodeTailTime),createNativeDynamicsCompressorNode=createNativeDynamicsCompressorNodeFactory(createNotSupportedError),createDynamicsCompressorNodeRenderer=createDynamicsCompressorNodeRendererFactory(connectAudioParam,createNativeDynamicsCompressorNode,getNativeAudioNode,renderAutomation,renderInputsOfAudioNode),dynamicsCompressorNodeConstructor=createDynamicsCompressorNodeConstructor(audioNodeConstructor,createAudioParam,createDynamicsCompressorNodeRenderer,createNativeDynamicsCompressorNode,createNotSupportedError,getNativeContext,isNativeOfflineAudioContext,setAudioNodeTailTime),createGainNodeRenderer=createGainNodeRendererFactory(connectAudioParam,createNativeGainNode,getNativeAudioNode,renderAutomation,renderInputsOfAudioNode),gainNodeConstructor=createGainNodeConstructor(audioNodeConstructor,createAudioParam,createGainNodeRenderer,createNativeGainNode,getNativeContext,isNativeOfflineAudioContext),createNativeIIRFilterNodeFaker=createNativeIIRFilterNodeFakerFactory(createInvalidAccessError,createInvalidStateError,createNativeScriptProcessorNode,createNotSupportedError),renderNativeOfflineAudioContext=createRenderNativeOfflineAudioContext(cacheTestResult,createNativeGainNode,createNativeScriptProcessorNode,createTestOfflineAudioContextCurrentTimeSupport(createNativeGainNode,nativeOfflineAudioContextConstructor)),createIIRFilterNodeRenderer=createIIRFilterNodeRendererFactory(createNativeAudioBufferSourceNode,getNativeAudioNode,nativeOfflineAudioContextConstructor,renderInputsOfAudioNode,renderNativeOfflineAudioContext),createNativeIIRFilterNode=createNativeIIRFilterNodeFactory(createNativeIIRFilterNodeFaker),iIRFilterNodeConstructor=createIIRFilterNodeConstructor(audioNodeConstructor,createNativeIIRFilterNode,createIIRFilterNodeRenderer,getNativeContext,isNativeOfflineAudioContext,setAudioNodeTailTime),createAudioListener=createAudioListenerFactory(createAudioParam,createNativeChannelMergerNode,createNativeConstantSourceNode,createNativeScriptProcessorNode,createNotSupportedError,getFirstSample,isNativeOfflineAudioContext,overwriteAccessors),unrenderedAudioWorkletNodeStore=new WeakMap,minimalBaseAudioContextConstructor=createMinimalBaseAudioContextConstructor(audioDestinationNodeConstructor,createAudioListener,eventTargetConstructor,isNativeOfflineAudioContext,unrenderedAudioWorkletNodeStore,wrapEventListener),createNativeOscillatorNode=createNativeOscillatorNodeFactory(addSilentConnection,cacheTestResult,testAudioScheduledSourceNodeStartMethodNegativeParametersSupport,testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport,testAudioScheduledSourceNodeStopMethodNegativeParametersSupport,wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls),createOscillatorNodeRenderer=createOscillatorNodeRendererFactory(connectAudioParam,createNativeOscillatorNode,getNativeAudioNode,renderAutomation,renderInputsOfAudioNode),oscillatorNodeConstructor=createOscillatorNodeConstructor(audioNodeConstructor,createAudioParam,createNativeOscillatorNode,createOscillatorNodeRenderer,getNativeContext,isNativeOfflineAudioContext,wrapEventListener),createConnectedNativeAudioBufferSourceNode=createConnectedNativeAudioBufferSourceNodeFactory(createNativeAudioBufferSourceNode),createNativeWaveShaperNodeFaker=createNativeWaveShaperNodeFakerFactory(createConnectedNativeAudioBufferSourceNode,createInvalidStateError,createNativeGainNode,isDCCurve,monitorConnections),createNativeWaveShaperNode=createNativeWaveShaperNodeFactory(createConnectedNativeAudioBufferSourceNode,createInvalidStateError,createNativeWaveShaperNodeFaker,isDCCurve,monitorConnections,nativeAudioContextConstructor,overwriteAccessors),createNativePannerNodeFaker=createNativePannerNodeFakerFactory(connectNativeAudioNodeToNativeAudioNode,createInvalidStateError,createNativeChannelMergerNode,createNativeGainNode,createNativeScriptProcessorNode,createNativeWaveShaperNode,createNotSupportedError,disconnectNativeAudioNodeFromNativeAudioNode,getFirstSample,monitorConnections),createNativePannerNode=createNativePannerNodeFactory(createNativePannerNodeFaker),createPannerNodeRenderer=createPannerNodeRendererFactory(connectAudioParam,createNativeChannelMergerNode,createNativeConstantSourceNode,createNativeGainNode,createNativePannerNode,getNativeAudioNode,nativeOfflineAudioContextConstructor,renderAutomation,renderInputsOfAudioNode,renderNativeOfflineAudioContext),pannerNodeConstructor=createPannerNodeConstructor(audioNodeConstructor,createAudioParam,createNativePannerNode,createPannerNodeRenderer,getNativeContext,isNativeOfflineAudioContext,setAudioNodeTailTime),createNativePeriodicWave=createNativePeriodicWaveFactory(createIndexSizeError),periodicWaveConstructor=createPeriodicWaveConstructor(createNativePeriodicWave,getNativeContext,new WeakSet,sanitizePeriodicWaveOptions),nativeStereoPannerNodeFakerFactory=createNativeStereoPannerNodeFakerFactory(createNativeChannelMergerNode,createNativeChannelSplitterNode,createNativeGainNode,createNativeWaveShaperNode,createNotSupportedError,monitorConnections),createNativeStereoPannerNode=createNativeStereoPannerNodeFactory(nativeStereoPannerNodeFakerFactory,createNotSupportedError),createStereoPannerNodeRenderer=createStereoPannerNodeRendererFactory(connectAudioParam,createNativeStereoPannerNode,getNativeAudioNode,renderAutomation,renderInputsOfAudioNode),stereoPannerNodeConstructor=createStereoPannerNodeConstructor(audioNodeConstructor,createAudioParam,createNativeStereoPannerNode,createStereoPannerNodeRenderer,getNativeContext,isNativeOfflineAudioContext),createWaveShaperNodeRenderer=createWaveShaperNodeRendererFactory(createNativeWaveShaperNode,getNativeAudioNode,renderInputsOfAudioNode),waveShaperNodeConstructor=createWaveShaperNodeConstructor(audioNodeConstructor,createInvalidStateError,createNativeWaveShaperNode,createWaveShaperNodeRenderer,getNativeContext,isNativeOfflineAudioContext,setAudioNodeTailTime),isSecureContext=createIsSecureContext(window$1),exposeCurrentFrameAndCurrentTime=createExposeCurrentFrameAndCurrentTime(window$1),backupOfflineAudioContextStore=new WeakMap,getOrCreateBackupOfflineAudioContext=createGetOrCreateBackupOfflineAudioContext(backupOfflineAudioContextStore,nativeOfflineAudioContextConstructor),addAudioWorkletModule=isSecureContext?createAddAudioWorkletModule(cacheTestResult,createNotSupportedError,createEvaluateSource(window$1),exposeCurrentFrameAndCurrentTime,createFetchSource(createAbortError),getNativeContext,getOrCreateBackupOfflineAudioContext,isNativeOfflineAudioContext,nativeAudioWorkletNodeConstructor,new WeakMap,new WeakMap,createTestAudioWorkletProcessorPostMessageSupport(nativeAudioWorkletNodeConstructor,nativeOfflineAudioContextConstructor),window$1):void 0,isNativeContext=createIsNativeContext(isNativeAudioContext,isNativeOfflineAudioContext),decodeAudioData=createDecodeAudioData(audioBufferStore,cacheTestResult,createDataCloneError,createEncodingError,new WeakSet,getNativeContext,isNativeContext,testAudioBufferCopyChannelMethodsOutOfBoundsSupport,testPromiseSupport,wrapAudioBufferCopyChannelMethods,wrapAudioBufferCopyChannelMethodsOutOfBounds),baseAudioContextConstructor=createBaseAudioContextConstructor(addAudioWorkletModule,analyserNodeConstructor,audioBufferConstructor,audioBufferSourceNodeConstructor,biquadFilterNodeConstructor,channelMergerNodeConstructor,channelSplitterNodeConstructor,constantSourceNodeConstructor,convolverNodeConstructor,decodeAudioData,delayNodeConstructor,dynamicsCompressorNodeConstructor,gainNodeConstructor,iIRFilterNodeConstructor,minimalBaseAudioContextConstructor,oscillatorNodeConstructor,pannerNodeConstructor,periodicWaveConstructor,stereoPannerNodeConstructor,waveShaperNodeConstructor),mediaElementAudioSourceNodeConstructor=createMediaElementAudioSourceNodeConstructor(audioNodeConstructor,createNativeMediaElementAudioSourceNode,getNativeContext,isNativeOfflineAudioContext),mediaStreamAudioDestinationNodeConstructor=createMediaStreamAudioDestinationNodeConstructor(audioNodeConstructor,createNativeMediaStreamAudioDestinationNode,getNativeContext,isNativeOfflineAudioContext),mediaStreamAudioSourceNodeConstructor=createMediaStreamAudioSourceNodeConstructor(audioNodeConstructor,createNativeMediaStreamAudioSourceNode,getNativeContext,isNativeOfflineAudioContext),createNativeMediaStreamTrackAudioSourceNode=createNativeMediaStreamTrackAudioSourceNodeFactory(createInvalidStateError,isNativeOfflineAudioContext),mediaStreamTrackAudioSourceNodeConstructor=createMediaStreamTrackAudioSourceNodeConstructor(audioNodeConstructor,createNativeMediaStreamTrackAudioSourceNode,getNativeContext),audioContextConstructor=createAudioContextConstructor(baseAudioContextConstructor,createInvalidStateError,createNotSupportedError,createUnknownError,mediaElementAudioSourceNodeConstructor,mediaStreamAudioDestinationNodeConstructor,mediaStreamAudioSourceNodeConstructor,mediaStreamTrackAudioSourceNodeConstructor,nativeAudioContextConstructor),getUnrenderedAudioWorkletNodes=createGetUnrenderedAudioWorkletNodes(unrenderedAudioWorkletNodeStore),addUnrenderedAudioWorkletNode=createAddUnrenderedAudioWorkletNode(getUnrenderedAudioWorkletNodes),connectMultipleOutputs=createConnectMultipleOutputs(createIndexSizeError),deleteUnrenderedAudioWorkletNode=createDeleteUnrenderedAudioWorkletNode(getUnrenderedAudioWorkletNodes),disconnectMultipleOutputs=createDisconnectMultipleOutputs(createIndexSizeError),activeAudioWorkletNodeInputsStore=new WeakMap,getActiveAudioWorkletNodeInputs=createGetActiveAudioWorkletNodeInputs(activeAudioWorkletNodeInputsStore,getValueForKey),createNativeAudioWorkletNodeFaker=createNativeAudioWorkletNodeFakerFactory(connectMultipleOutputs,createIndexSizeError,createInvalidStateError,createNativeChannelMergerNode,createNativeChannelSplitterNode,createNativeConstantSourceNode,createNativeGainNode,createNativeScriptProcessorNode,createNotSupportedError,disconnectMultipleOutputs,exposeCurrentFrameAndCurrentTime,getActiveAudioWorkletNodeInputs,monitorConnections),createNativeAudioWorkletNode=createNativeAudioWorkletNodeFactory(createInvalidStateError,createNativeAudioWorkletNodeFaker,createNativeGainNode,createNotSupportedError,monitorConnections),createAudioWorkletNodeRenderer=createAudioWorkletNodeRendererFactory(connectAudioParam,connectMultipleOutputs,createNativeAudioBufferSourceNode,createNativeChannelMergerNode,createNativeChannelSplitterNode,createNativeConstantSourceNode,createNativeGainNode,deleteUnrenderedAudioWorkletNode,disconnectMultipleOutputs,exposeCurrentFrameAndCurrentTime,getNativeAudioNode,nativeAudioWorkletNodeConstructor,nativeOfflineAudioContextConstructor,renderAutomation,renderInputsOfAudioNode,renderNativeOfflineAudioContext),getBackupOfflineAudioContext=createGetBackupOfflineAudioContext(backupOfflineAudioContextStore),setActiveAudioWorkletNodeInputs=createSetActiveAudioWorkletNodeInputs(activeAudioWorkletNodeInputsStore),audioWorkletNodeConstructor=isSecureContext?createAudioWorkletNodeConstructor(addUnrenderedAudioWorkletNode,audioNodeConstructor,createAudioParam,createAudioWorkletNodeRenderer,createNativeAudioWorkletNode,getAudioNodeConnections,getBackupOfflineAudioContext,getNativeContext,isNativeOfflineAudioContext,nativeAudioWorkletNodeConstructor,sanitizeAudioWorkletNodeOptions,setActiveAudioWorkletNodeInputs,testAudioWorkletNodeOptionsClonability,wrapEventListener):void 0,createNativeOfflineAudioContext=createCreateNativeOfflineAudioContext(createNotSupportedError,nativeOfflineAudioContextConstructor),startRendering=createStartRendering(audioBufferStore,cacheTestResult,getAudioNodeRenderer,getUnrenderedAudioWorkletNodes,renderNativeOfflineAudioContext,testAudioBufferCopyChannelMethodsOutOfBoundsSupport,wrapAudioBufferCopyChannelMethods,wrapAudioBufferCopyChannelMethodsOutOfBounds),offlineAudioContextConstructor=createOfflineAudioContextConstructor(baseAudioContextConstructor,cacheTestResult,createInvalidStateError,createNativeOfflineAudioContext,startRendering),isAnyAudioContext=createIsAnyAudioContext(CONTEXT_STORE,isNativeAudioContext),isAnyAudioNode=createIsAnyAudioNode(AUDIO_NODE_STORE,isNativeAudioNode),isAnyAudioParam=createIsAnyAudioParam(AUDIO_PARAM_STORE,isNativeAudioParam),isAnyOfflineAudioContext=createIsAnyOfflineAudioContext(CONTEXT_STORE,isNativeOfflineAudioContext),isSupported=()=>createIsSupportedPromise(cacheTestResult,createTestAudioBufferCopyChannelMethodsSubarraySupport(nativeOfflineAudioContextConstructor),createTestAudioContextCloseMethodSupport(nativeAudioContextConstructor),createTestAudioContextDecodeAudioDataMethodTypeErrorSupport(nativeOfflineAudioContextConstructor),createTestAudioContextOptionsSupport(nativeAudioContextConstructor),createTestAudioNodeConnectMethodSupport(nativeOfflineAudioContextConstructor),createTestAudioWorkletProcessorNoOutputsSupport(nativeAudioWorkletNodeConstructor,nativeOfflineAudioContextConstructor),createTestChannelMergerNodeChannelCountSupport(nativeOfflineAudioContextConstructor),createTestConstantSourceNodeAccurateSchedulingSupport(nativeOfflineAudioContextConstructor),createTestConvolverNodeBufferReassignabilitySupport(nativeOfflineAudioContextConstructor),createTestConvolverNodeChannelCountSupport(nativeOfflineAudioContextConstructor),testDomExceptionConstructorSupport,createTestIsSecureContextSupport(window$1),createTestMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport(nativeAudioContextConstructor),createTestStereoPannerNodeDefaultValueSupport(nativeOfflineAudioContextConstructor),testTransferablesSupport);function assert(s,e){if(!s)throw new Error(e)}function assertRange(s,e,t=1/0){if(!(e<=s&&s<=t))throw new RangeError(`Value must be within [${e}, ${t}], got: ${s}`)}function assertContextRunning(s){!s.isOffline&&s.state!=="running"&&warn('The AudioContext is "suspended". Invoke Tone.start() from a user action to start the audio.')}let defaultLogger=console;function setLogger(s){defaultLogger=s}function log(...s){defaultLogger.log(...s)}function warn(...s){defaultLogger.warn(...s)}const Debug=Object.freeze(Object.defineProperty({__proto__:null,assert,assertContextRunning,assertRange,log,setLogger,warn},Symbol.toStringTag,{value:"Module"}));function isUndef(s){return typeof s>"u"}function isDefined(s){return!isUndef(s)}function isFunction(s){return typeof s=="function"}function isNumber(s){return typeof s=="number"}function isObject(s){return Object.prototype.toString.call(s)==="[object Object]"&&s.constructor===Object}function isBoolean(s){return typeof s=="boolean"}function isArray(s){return Array.isArray(s)}function isString(s){return typeof s=="string"}function isNote(s){return isString(s)&&/^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i.test(s)}function createAudioContext(s){return new audioContextConstructor(s)}function createOfflineAudioContext(s,e,t){return new offlineAudioContextConstructor(s,e,t)}const theWindow=typeof self=="object"?self:null,hasAudioContext=theWindow&&(theWindow.hasOwnProperty("AudioContext")||theWindow.hasOwnProperty("webkitAudioContext"));function createAudioWorkletNode(s,e,t){return assert(isDefined(audioWorkletNodeConstructor),"This node only works in a secure context (https or localhost)"),new audioWorkletNodeConstructor(s,e,t)}function __decorate(s,e,t,n){var o=arguments.length,r=o<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")r=Reflect.decorate(s,e,t,n);else for(var c=s.length-1;c>=0;c--)(a=s[c])&&(r=(o<3?a(r):o>3?a(e,t,r):a(e,t))||r);return o>3&&r&&Object.defineProperty(e,t,r),r}function __awaiter(s,e,t,n){function o(r){return r instanceof t?r:new t(function(a){a(r)})}return new(t||(t=Promise))(function(r,a){function c(d){try{u(n.next(d))}catch(f){a(f)}}function l(d){try{u(n.throw(d))}catch(f){a(f)}}function u(d){d.done?r(d.value):o(d.value).then(c,l)}u((n=n.apply(s,e||[])).next())})}typeof SuppressedError=="function"&&SuppressedError;class Ticker{constructor(e,t,n){this._callback=e,this._type=t,this._updateInterval=n,this._createClock()}_createWorker(){const e=new Blob([`
			// the initial timeout time
			let timeoutTime =  ${(this._updateInterval*1e3).toFixed(1)};
			// onmessage callback
			self.onmessage = function(msg){
				timeoutTime = parseInt(msg.data);
			};
			// the tick function which posts a message
			// and schedules a new tick
			function tick(){
				setTimeout(tick, timeoutTime);
				self.postMessage('tick');
			}
			// call tick initially
			tick();
			`],{type:"text/javascript"}),t=URL.createObjectURL(e),n=new Worker(t);n.onmessage=this._callback.bind(this),this._worker=n}_createTimeout(){this._timeout=setTimeout(()=>{this._createTimeout(),this._callback()},this._updateInterval*1e3)}_createClock(){if(this._type==="worker")try{this._createWorker()}catch{this._type="timeout",this._createClock()}else this._type==="timeout"&&this._createTimeout()}_disposeClock(){this._timeout&&(clearTimeout(this._timeout),this._timeout=0),this._worker&&(this._worker.terminate(),this._worker.onmessage=null)}get updateInterval(){return this._updateInterval}set updateInterval(e){this._updateInterval=Math.max(e,128/44100),this._type==="worker"&&this._worker.postMessage(Math.max(e*1e3,1))}get type(){return this._type}set type(e){this._disposeClock(),this._type=e,this._createClock()}dispose(){this._disposeClock()}}function isAudioParam(s){return isAnyAudioParam(s)}function isAudioNode(s){return isAnyAudioNode(s)}function isOfflineAudioContext(s){return isAnyOfflineAudioContext(s)}function isAudioContext(s){return isAnyAudioContext(s)}function isAudioBuffer(s){return s instanceof AudioBuffer}function noCopy(s,e){return s==="value"||isAudioParam(e)||isAudioNode(e)||isAudioBuffer(e)}function deepMerge(s,...e){if(!e.length)return s;const t=e.shift();if(isObject(s)&&isObject(t))for(const n in t)noCopy(n,t[n])?s[n]=t[n]:isObject(t[n])?(s[n]||Object.assign(s,{[n]:{}}),deepMerge(s[n],t[n])):Object.assign(s,{[n]:t[n]});return deepMerge(s,...e)}function deepEquals(s,e){return s.length===e.length&&s.every((t,n)=>e[n]===t)}function optionsFromArguments(s,e,t=[],n){const o={},r=Array.from(e);if(isObject(r[0])&&n&&!Reflect.has(r[0],n)&&(Object.keys(r[0]).some(c=>Reflect.has(s,c))||(deepMerge(o,{[n]:r[0]}),t.splice(t.indexOf(n),1),r.shift())),r.length===1&&isObject(r[0]))deepMerge(o,r[0]);else for(let a=0;a<t.length;a++)isDefined(r[a])&&(o[t[a]]=r[a]);return deepMerge(s,o)}function getDefaultsFromInstance(s){return s.constructor.getDefaults()}function defaultArg(s,e){return isUndef(s)?e:s}function omitFromObject(s,e){return e.forEach(t=>{Reflect.has(s,t)&&delete s[t]}),s}/**
 * Tone.js
 * @author Yotam Mann
 * @license http://opensource.org/licenses/MIT MIT License
 * @copyright 2014-2019 Yotam Mann
 */let Tone$1=class{constructor(){this.debug=!1,this._wasDisposed=!1}static getDefaults(){return{}}log(...e){(this.debug||theWindow&&this.toString()===theWindow.TONE_DEBUG_CLASS)&&log(this,...e)}dispose(){return this._wasDisposed=!0,this}get disposed(){return this._wasDisposed}toString(){return this.name}};Tone$1.version=version;const EPSILON=1e-6;function GT(s,e){return s>e+EPSILON}function GTE(s,e){return GT(s,e)||EQ(s,e)}function LT(s,e){return s+EPSILON<e}function EQ(s,e){return Math.abs(s-e)<EPSILON}function clamp(s,e,t){return Math.max(Math.min(s,t),e)}class Timeline extends Tone$1{constructor(){super(),this.name="Timeline",this._timeline=[];const e=optionsFromArguments(Timeline.getDefaults(),arguments,["memory"]);this.memory=e.memory,this.increasing=e.increasing}static getDefaults(){return{memory:1/0,increasing:!1}}get length(){return this._timeline.length}add(e){if(assert(Reflect.has(e,"time"),"Timeline: events must have a time attribute"),e.time=e.time.valueOf(),this.increasing&&this.length){const t=this._timeline[this.length-1];assert(GTE(e.time,t.time),"The time must be greater than or equal to the last scheduled time"),this._timeline.push(e)}else{const t=this._search(e.time);this._timeline.splice(t+1,0,e)}if(this.length>this.memory){const t=this.length-this.memory;this._timeline.splice(0,t)}return this}remove(e){const t=this._timeline.indexOf(e);return t!==-1&&this._timeline.splice(t,1),this}get(e,t="time"){const n=this._search(e,t);return n!==-1?this._timeline[n]:null}peek(){return this._timeline[0]}shift(){return this._timeline.shift()}getAfter(e,t="time"){const n=this._search(e,t);return n+1<this._timeline.length?this._timeline[n+1]:null}getBefore(e){const t=this._timeline.length;if(t>0&&this._timeline[t-1].time<e)return this._timeline[t-1];const n=this._search(e);return n-1>=0?this._timeline[n-1]:null}cancel(e){if(this._timeline.length>1){let t=this._search(e);if(t>=0)if(EQ(this._timeline[t].time,e)){for(let n=t;n>=0&&EQ(this._timeline[n].time,e);n--)t=n;this._timeline=this._timeline.slice(0,t)}else this._timeline=this._timeline.slice(0,t+1);else this._timeline=[]}else this._timeline.length===1&&GTE(this._timeline[0].time,e)&&(this._timeline=[]);return this}cancelBefore(e){const t=this._search(e);return t>=0&&(this._timeline=this._timeline.slice(t+1)),this}previousEvent(e){const t=this._timeline.indexOf(e);return t>0?this._timeline[t-1]:null}_search(e,t="time"){if(this._timeline.length===0)return-1;let n=0;const o=this._timeline.length;let r=o;if(o>0&&this._timeline[o-1][t]<=e)return o-1;for(;n<r;){let a=Math.floor(n+(r-n)/2);const c=this._timeline[a],l=this._timeline[a+1];if(EQ(c[t],e)){for(let u=a;u<this._timeline.length;u++){const d=this._timeline[u];if(EQ(d[t],e))a=u;else break}return a}else{if(LT(c[t],e)&&GT(l[t],e))return a;GT(c[t],e)?r=a:n=a+1}}return-1}_iterate(e,t=0,n=this._timeline.length-1){this._timeline.slice(t,n+1).forEach(e)}forEach(e){return this._iterate(e),this}forEachBefore(e,t){const n=this._search(e);return n!==-1&&this._iterate(t,0,n),this}forEachAfter(e,t){const n=this._search(e);return this._iterate(t,n+1),this}forEachBetween(e,t,n){let o=this._search(e),r=this._search(t);return o!==-1&&r!==-1?(this._timeline[o].time!==e&&(o+=1),this._timeline[r].time===t&&(r-=1),this._iterate(n,o,r)):o===-1&&this._iterate(n,0,r),this}forEachFrom(e,t){let n=this._search(e);for(;n>=0&&this._timeline[n].time>=e;)n--;return this._iterate(t,n+1),this}forEachAtTime(e,t){const n=this._search(e);if(n!==-1&&EQ(this._timeline[n].time,e)){let o=n;for(let r=n;r>=0&&EQ(this._timeline[r].time,e);r--)o=r;this._iterate(r=>{t(r)},o,n)}return this}dispose(){return super.dispose(),this._timeline=[],this}}const notifyNewContext=[];function onContextInit(s){notifyNewContext.push(s)}function initializeContext(s){notifyNewContext.forEach(e=>e(s))}const notifyCloseContext=[];function onContextClose(s){notifyCloseContext.push(s)}function closeContext(s){notifyCloseContext.forEach(e=>e(s))}class Emitter extends Tone$1{constructor(){super(...arguments),this.name="Emitter"}on(e,t){return e.split(/\W+/).forEach(o=>{isUndef(this._events)&&(this._events={}),this._events.hasOwnProperty(o)||(this._events[o]=[]),this._events[o].push(t)}),this}once(e,t){const n=(...o)=>{t(...o),this.off(e,n)};return this.on(e,n),this}off(e,t){return e.split(/\W+/).forEach(o=>{if(isUndef(this._events)&&(this._events={}),this._events.hasOwnProperty(e))if(isUndef(t))this._events[e]=[];else{const r=this._events[e];for(let a=r.length-1;a>=0;a--)r[a]===t&&r.splice(a,1)}}),this}emit(e,...t){if(this._events&&this._events.hasOwnProperty(e)){const n=this._events[e].slice(0);for(let o=0,r=n.length;o<r;o++)n[o].apply(this,t)}return this}static mixin(e){["on","once","off","emit"].forEach(t=>{const n=Object.getOwnPropertyDescriptor(Emitter.prototype,t);Object.defineProperty(e.prototype,t,n)})}dispose(){return super.dispose(),this._events=void 0,this}}class BaseContext extends Emitter{constructor(){super(...arguments),this.isOffline=!1}toJSON(){return{}}}class Context extends BaseContext{constructor(){super(),this.name="Context",this._constants=new Map,this._timeouts=new Timeline,this._timeoutIds=0,this._initialized=!1,this.isOffline=!1,this._workletModules=new Map;const e=optionsFromArguments(Context.getDefaults(),arguments,["context"]);e.context?this._context=e.context:this._context=createAudioContext({latencyHint:e.latencyHint}),this._ticker=new Ticker(this.emit.bind(this,"tick"),e.clockSource,e.updateInterval),this.on("tick",this._timeoutLoop.bind(this)),this._context.onstatechange=()=>{this.emit("statechange",this.state)},this._setLatencyHint(e.latencyHint),this.lookAhead=e.lookAhead}static getDefaults(){return{clockSource:"worker",latencyHint:"interactive",lookAhead:.1,updateInterval:.05}}initialize(){return this._initialized||(initializeContext(this),this._initialized=!0),this}createAnalyser(){return this._context.createAnalyser()}createOscillator(){return this._context.createOscillator()}createBufferSource(){return this._context.createBufferSource()}createBiquadFilter(){return this._context.createBiquadFilter()}createBuffer(e,t,n){return this._context.createBuffer(e,t,n)}createChannelMerger(e){return this._context.createChannelMerger(e)}createChannelSplitter(e){return this._context.createChannelSplitter(e)}createConstantSource(){return this._context.createConstantSource()}createConvolver(){return this._context.createConvolver()}createDelay(e){return this._context.createDelay(e)}createDynamicsCompressor(){return this._context.createDynamicsCompressor()}createGain(){return this._context.createGain()}createIIRFilter(e,t){return this._context.createIIRFilter(e,t)}createPanner(){return this._context.createPanner()}createPeriodicWave(e,t,n){return this._context.createPeriodicWave(e,t,n)}createStereoPanner(){return this._context.createStereoPanner()}createWaveShaper(){return this._context.createWaveShaper()}createMediaStreamSource(e){return assert(isAudioContext(this._context),"Not available if OfflineAudioContext"),this._context.createMediaStreamSource(e)}createMediaElementSource(e){return assert(isAudioContext(this._context),"Not available if OfflineAudioContext"),this._context.createMediaElementSource(e)}createMediaStreamDestination(){return assert(isAudioContext(this._context),"Not available if OfflineAudioContext"),this._context.createMediaStreamDestination()}decodeAudioData(e){return this._context.decodeAudioData(e)}get currentTime(){return this._context.currentTime}get state(){return this._context.state}get sampleRate(){return this._context.sampleRate}get listener(){return this.initialize(),this._listener}set listener(e){assert(!this._initialized,"The listener cannot be set after initialization."),this._listener=e}get transport(){return this.initialize(),this._transport}set transport(e){assert(!this._initialized,"The transport cannot be set after initialization."),this._transport=e}get draw(){return this.initialize(),this._draw}set draw(e){assert(!this._initialized,"Draw cannot be set after initialization."),this._draw=e}get destination(){return this.initialize(),this._destination}set destination(e){assert(!this._initialized,"The destination cannot be set after initialization."),this._destination=e}createAudioWorkletNode(e,t){return createAudioWorkletNode(this.rawContext,e,t)}addAudioWorkletModule(e,t){return __awaiter(this,void 0,void 0,function*(){assert(isDefined(this.rawContext.audioWorklet),"AudioWorkletNode is only available in a secure context (https or localhost)"),this._workletModules.has(t)||this._workletModules.set(t,this.rawContext.audioWorklet.addModule(e)),yield this._workletModules.get(t)})}workletsAreReady(){return __awaiter(this,void 0,void 0,function*(){const e=[];this._workletModules.forEach(t=>e.push(t)),yield Promise.all(e)})}get updateInterval(){return this._ticker.updateInterval}set updateInterval(e){this._ticker.updateInterval=e}get clockSource(){return this._ticker.type}set clockSource(e){this._ticker.type=e}get latencyHint(){return this._latencyHint}_setLatencyHint(e){let t=0;if(this._latencyHint=e,isString(e))switch(e){case"interactive":t=.1;break;case"playback":t=.5;break;case"balanced":t=.25;break}this.lookAhead=t,this.updateInterval=t/2}get rawContext(){return this._context}now(){return this._context.currentTime+this.lookAhead}immediate(){return this._context.currentTime}resume(){return isAudioContext(this._context)?this._context.resume():Promise.resolve()}close(){return __awaiter(this,void 0,void 0,function*(){isAudioContext(this._context)&&(yield this._context.close()),this._initialized&&closeContext(this)})}getConstant(e){if(this._constants.has(e))return this._constants.get(e);{const t=this._context.createBuffer(1,128,this._context.sampleRate),n=t.getChannelData(0);for(let r=0;r<n.length;r++)n[r]=e;const o=this._context.createBufferSource();return o.channelCount=1,o.channelCountMode="explicit",o.buffer=t,o.loop=!0,o.start(0),this._constants.set(e,o),o}}dispose(){return super.dispose(),this._ticker.dispose(),this._timeouts.dispose(),Object.keys(this._constants).map(e=>this._constants[e].disconnect()),this}_timeoutLoop(){const e=this.now();let t=this._timeouts.peek();for(;this._timeouts.length&&t&&t.time<=e;)t.callback(),this._timeouts.shift(),t=this._timeouts.peek()}setTimeout(e,t){this._timeoutIds++;const n=this.now();return this._timeouts.add({callback:e,id:this._timeoutIds,time:n+t}),this._timeoutIds}clearTimeout(e){return this._timeouts.forEach(t=>{t.id===e&&this._timeouts.remove(t)}),this}clearInterval(e){return this.clearTimeout(e)}setInterval(e,t){const n=++this._timeoutIds,o=()=>{const r=this.now();this._timeouts.add({callback:()=>{e(),o()},id:n,time:r+t})};return o(),n}}class DummyContext extends BaseContext{constructor(){super(...arguments),this.lookAhead=0,this.latencyHint=0,this.isOffline=!1}createAnalyser(){return{}}createOscillator(){return{}}createBufferSource(){return{}}createBiquadFilter(){return{}}createBuffer(e,t,n){return{}}createChannelMerger(e){return{}}createChannelSplitter(e){return{}}createConstantSource(){return{}}createConvolver(){return{}}createDelay(e){return{}}createDynamicsCompressor(){return{}}createGain(){return{}}createIIRFilter(e,t){return{}}createPanner(){return{}}createPeriodicWave(e,t,n){return{}}createStereoPanner(){return{}}createWaveShaper(){return{}}createMediaStreamSource(e){return{}}createMediaElementSource(e){return{}}createMediaStreamDestination(){return{}}decodeAudioData(e){return Promise.resolve({})}createAudioWorkletNode(e,t){return{}}get rawContext(){return{}}addAudioWorkletModule(e,t){return __awaiter(this,void 0,void 0,function*(){return Promise.resolve()})}resume(){return Promise.resolve()}setTimeout(e,t){return 0}clearTimeout(e){return this}setInterval(e,t){return 0}clearInterval(e){return this}getConstant(e){return{}}get currentTime(){return 0}get state(){return{}}get sampleRate(){return 0}get listener(){return{}}get transport(){return{}}get draw(){return{}}set draw(e){}get destination(){return{}}set destination(e){}now(){return 0}immediate(){return 0}}function readOnly(s,e){isArray(e)?e.forEach(t=>readOnly(s,t)):Object.defineProperty(s,e,{enumerable:!0,writable:!1})}function writable(s,e){isArray(e)?e.forEach(t=>writable(s,t)):Object.defineProperty(s,e,{writable:!0})}const noOp=()=>{};class ToneAudioBuffer extends Tone$1{constructor(){super(),this.name="ToneAudioBuffer",this.onload=noOp;const e=optionsFromArguments(ToneAudioBuffer.getDefaults(),arguments,["url","onload","onerror"]);this.reverse=e.reverse,this.onload=e.onload,e.url&&isAudioBuffer(e.url)||e.url instanceof ToneAudioBuffer?this.set(e.url):isString(e.url)&&this.load(e.url).catch(e.onerror)}static getDefaults(){return{onerror:noOp,onload:noOp,reverse:!1}}get sampleRate(){return this._buffer?this._buffer.sampleRate:getContext().sampleRate}set(e){return e instanceof ToneAudioBuffer?e.loaded?this._buffer=e.get():e.onload=()=>{this.set(e),this.onload(this)}:this._buffer=e,this._reversed&&this._reverse(),this}get(){return this._buffer}load(e){return __awaiter(this,void 0,void 0,function*(){const t=ToneAudioBuffer.load(e).then(n=>{this.set(n),this.onload(this)});ToneAudioBuffer.downloads.push(t);try{yield t}finally{const n=ToneAudioBuffer.downloads.indexOf(t);ToneAudioBuffer.downloads.splice(n,1)}return this})}dispose(){return super.dispose(),this._buffer=void 0,this}fromArray(e){const t=isArray(e)&&e[0].length>0,n=t?e.length:1,o=t?e[0].length:e.length,r=getContext(),a=r.createBuffer(n,o,r.sampleRate),c=!t&&n===1?[e]:e;for(let l=0;l<n;l++)a.copyToChannel(c[l],l);return this._buffer=a,this}toMono(e){if(isNumber(e))this.fromArray(this.toArray(e));else{let t=new Float32Array(this.length);const n=this.numberOfChannels;for(let o=0;o<n;o++){const r=this.toArray(o);for(let a=0;a<r.length;a++)t[a]+=r[a]}t=t.map(o=>o/n),this.fromArray(t)}return this}toArray(e){if(isNumber(e))return this.getChannelData(e);if(this.numberOfChannels===1)return this.toArray(0);{const t=[];for(let n=0;n<this.numberOfChannels;n++)t[n]=this.getChannelData(n);return t}}getChannelData(e){return this._buffer?this._buffer.getChannelData(e):new Float32Array(0)}slice(e,t=this.duration){const n=Math.floor(e*this.sampleRate),o=Math.floor(t*this.sampleRate);assert(n<o,"The start time must be less than the end time");const r=o-n,a=getContext().createBuffer(this.numberOfChannels,r,this.sampleRate);for(let c=0;c<this.numberOfChannels;c++)a.copyToChannel(this.getChannelData(c).subarray(n,o),c);return new ToneAudioBuffer(a)}_reverse(){if(this.loaded)for(let e=0;e<this.numberOfChannels;e++)this.getChannelData(e).reverse();return this}get loaded(){return this.length>0}get duration(){return this._buffer?this._buffer.duration:0}get length(){return this._buffer?this._buffer.length:0}get numberOfChannels(){return this._buffer?this._buffer.numberOfChannels:0}get reverse(){return this._reversed}set reverse(e){this._reversed!==e&&(this._reversed=e,this._reverse())}static fromArray(e){return new ToneAudioBuffer().fromArray(e)}static fromUrl(e){return __awaiter(this,void 0,void 0,function*(){return yield new ToneAudioBuffer().load(e)})}static load(e){return __awaiter(this,void 0,void 0,function*(){const t=e.match(/\[([^\]\[]+\|.+)\]$/);if(t){const c=t[1].split("|");let l=c[0];for(const u of c)if(ToneAudioBuffer.supportsType(u)){l=u;break}e=e.replace(t[0],l)}const n=ToneAudioBuffer.baseUrl===""||ToneAudioBuffer.baseUrl.endsWith("/")?ToneAudioBuffer.baseUrl:ToneAudioBuffer.baseUrl+"/",o=yield fetch(n+e);if(!o.ok)throw new Error(`could not load url: ${e}`);const r=yield o.arrayBuffer();return yield getContext().decodeAudioData(r)})}static supportsType(e){const t=e.split("."),n=t[t.length-1];return document.createElement("audio").canPlayType("audio/"+n)!==""}static loaded(){return __awaiter(this,void 0,void 0,function*(){for(yield Promise.resolve();ToneAudioBuffer.downloads.length;)yield ToneAudioBuffer.downloads[0]})}}ToneAudioBuffer.baseUrl="";ToneAudioBuffer.downloads=[];class OfflineContext extends Context{constructor(){super({clockSource:"offline",context:isOfflineAudioContext(arguments[0])?arguments[0]:createOfflineAudioContext(arguments[0],arguments[1]*arguments[2],arguments[2]),lookAhead:0,updateInterval:isOfflineAudioContext(arguments[0])?128/arguments[0].sampleRate:128/arguments[2]}),this.name="OfflineContext",this._currentTime=0,this.isOffline=!0,this._duration=isOfflineAudioContext(arguments[0])?arguments[0].length/arguments[0].sampleRate:arguments[1]}now(){return this._currentTime}get currentTime(){return this._currentTime}_renderClock(e){return __awaiter(this,void 0,void 0,function*(){let t=0;for(;this._duration-this._currentTime>=0;){this.emit("tick"),this._currentTime+=128/this.sampleRate,t++;const n=Math.floor(this.sampleRate/128);e&&t%n===0&&(yield new Promise(o=>setTimeout(o,1)))}})}render(e=!0){return __awaiter(this,void 0,void 0,function*(){yield this.workletsAreReady(),yield this._renderClock(e);const t=yield this._context.startRendering();return new ToneAudioBuffer(t)})}close(){return Promise.resolve()}}const dummyContext=new DummyContext;let globalContext=dummyContext;function getContext(){return globalContext===dummyContext&&hasAudioContext&&setContext(new Context),globalContext}function setContext(s){isAudioContext(s)?globalContext=new Context(s):isOfflineAudioContext(s)?globalContext=new OfflineContext(s):globalContext=s}function start(){return globalContext.resume()}if(theWindow&&!theWindow.TONE_SILENCE_LOGGING){const e=` * Tone.js v${version} * `;console.log(`%c${e}`,"background: #000; color: #fff")}function dbToGain(s){return Math.pow(10,s/20)}function gainToDb(s){return 20*(Math.log(s)/Math.LN10)}function intervalToFrequencyRatio(s){return Math.pow(2,s/12)}let A4=440;function getA4(){return A4}function setA4(s){A4=s}function ftom(s){return Math.round(ftomf(s))}function ftomf(s){return 69+12*Math.log2(s/A4)}function mtof(s){return A4*Math.pow(2,(s-69)/12)}class TimeBaseClass extends Tone$1{constructor(e,t,n){super(),this.defaultUnits="s",this._val=t,this._units=n,this.context=e,this._expressions=this._getExpressions()}_getExpressions(){return{hz:{method:e=>this._frequencyToUnits(parseFloat(e)),regexp:/^(\d+(?:\.\d+)?)hz$/i},i:{method:e=>this._ticksToUnits(parseInt(e,10)),regexp:/^(\d+)i$/i},m:{method:e=>this._beatsToUnits(parseInt(e,10)*this._getTimeSignature()),regexp:/^(\d+)m$/i},n:{method:(e,t)=>{const n=parseInt(e,10),o=t==="."?1.5:1;return n===1?this._beatsToUnits(this._getTimeSignature())*o:this._beatsToUnits(4/n)*o},regexp:/^(\d+)n(\.?)$/i},number:{method:e=>this._expressions[this.defaultUnits].method.call(this,e),regexp:/^(\d+(?:\.\d+)?)$/},s:{method:e=>this._secondsToUnits(parseFloat(e)),regexp:/^(\d+(?:\.\d+)?)s$/},samples:{method:e=>parseInt(e,10)/this.context.sampleRate,regexp:/^(\d+)samples$/},t:{method:e=>{const t=parseInt(e,10);return this._beatsToUnits(8/(Math.floor(t)*3))},regexp:/^(\d+)t$/i},tr:{method:(e,t,n)=>{let o=0;return e&&e!=="0"&&(o+=this._beatsToUnits(this._getTimeSignature()*parseFloat(e))),t&&t!=="0"&&(o+=this._beatsToUnits(parseFloat(t))),n&&n!=="0"&&(o+=this._beatsToUnits(parseFloat(n)/4)),o},regexp:/^(\d+(?:\.\d+)?):(\d+(?:\.\d+)?):?(\d+(?:\.\d+)?)?$/}}}valueOf(){if(this._val instanceof TimeBaseClass&&this.fromType(this._val),isUndef(this._val))return this._noArg();if(isString(this._val)&&isUndef(this._units)){for(const e in this._expressions)if(this._expressions[e].regexp.test(this._val.trim())){this._units=e;break}}else if(isObject(this._val)){let e=0;for(const t in this._val)if(isDefined(this._val[t])){const n=this._val[t],o=new this.constructor(this.context,t).valueOf()*n;e+=o}return e}if(isDefined(this._units)){const e=this._expressions[this._units],t=this._val.toString().trim().match(e.regexp);return t?e.method.apply(this,t.slice(1)):e.method.call(this,this._val)}else return isString(this._val)?parseFloat(this._val):this._val}_frequencyToUnits(e){return 1/e}_beatsToUnits(e){return 60/this._getBpm()*e}_secondsToUnits(e){return e}_ticksToUnits(e){return e*this._beatsToUnits(1)/this._getPPQ()}_noArg(){return this._now()}_getBpm(){return this.context.transport.bpm.value}_getTimeSignature(){return this.context.transport.timeSignature}_getPPQ(){return this.context.transport.PPQ}fromType(e){switch(this._units=void 0,this.defaultUnits){case"s":this._val=e.toSeconds();break;case"i":this._val=e.toTicks();break;case"hz":this._val=e.toFrequency();break;case"midi":this._val=e.toMidi();break}return this}toFrequency(){return 1/this.toSeconds()}toSamples(){return this.toSeconds()*this.context.sampleRate}toMilliseconds(){return this.toSeconds()*1e3}}class TimeClass extends TimeBaseClass{constructor(){super(...arguments),this.name="TimeClass"}_getExpressions(){return Object.assign(super._getExpressions(),{now:{method:e=>this._now()+new this.constructor(this.context,e).valueOf(),regexp:/^\+(.+)/},quantize:{method:e=>{const t=new TimeClass(this.context,e).valueOf();return this._secondsToUnits(this.context.transport.nextSubdivision(t))},regexp:/^@(.+)/}})}quantize(e,t=1){const n=new this.constructor(this.context,e).valueOf(),o=this.valueOf(),c=Math.round(o/n)*n-o;return o+c*t}toNotation(){const e=this.toSeconds(),t=["1m"];for(let r=1;r<9;r++){const a=Math.pow(2,r);t.push(a+"n."),t.push(a+"n"),t.push(a+"t")}t.push("0");let n=t[0],o=new TimeClass(this.context,t[0]).toSeconds();return t.forEach(r=>{const a=new TimeClass(this.context,r).toSeconds();Math.abs(a-e)<Math.abs(o-e)&&(n=r,o=a)}),n}toBarsBeatsSixteenths(){const e=this._beatsToUnits(1);let t=this.valueOf()/e;t=parseFloat(t.toFixed(4));const n=Math.floor(t/this._getTimeSignature());let o=t%1*4;t=Math.floor(t)%this._getTimeSignature();const r=o.toString();return r.length>3&&(o=parseFloat(parseFloat(r).toFixed(3))),[n,t,o].join(":")}toTicks(){const e=this._beatsToUnits(1),t=this.valueOf()/e;return Math.round(t*this._getPPQ())}toSeconds(){return this.valueOf()}toMidi(){return ftom(this.toFrequency())}_now(){return this.context.now()}}function Time(s,e){return new TimeClass(getContext(),s,e)}class FrequencyClass extends TimeClass{constructor(){super(...arguments),this.name="Frequency",this.defaultUnits="hz"}static get A4(){return getA4()}static set A4(e){setA4(e)}_getExpressions(){return Object.assign({},super._getExpressions(),{midi:{regexp:/^(\d+(?:\.\d+)?midi)/,method(e){return this.defaultUnits==="midi"?e:FrequencyClass.mtof(e)}},note:{regexp:/^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i,method(e,t){const o=noteToScaleIndex[e.toLowerCase()]+(parseInt(t,10)+1)*12;return this.defaultUnits==="midi"?o:FrequencyClass.mtof(o)}},tr:{regexp:/^(\d+(?:\.\d+)?):(\d+(?:\.\d+)?):?(\d+(?:\.\d+)?)?/,method(e,t,n){let o=1;return e&&e!=="0"&&(o*=this._beatsToUnits(this._getTimeSignature()*parseFloat(e))),t&&t!=="0"&&(o*=this._beatsToUnits(parseFloat(t))),n&&n!=="0"&&(o*=this._beatsToUnits(parseFloat(n)/4)),o}}})}transpose(e){return new FrequencyClass(this.context,this.valueOf()*intervalToFrequencyRatio(e))}harmonize(e){return e.map(t=>this.transpose(t))}toMidi(){return ftom(this.valueOf())}toNote(){const e=this.toFrequency(),t=Math.log2(e/FrequencyClass.A4);let n=Math.round(12*t)+57;const o=Math.floor(n/12);return o<0&&(n+=-12*o),scaleIndexToNote[n%12]+o.toString()}toSeconds(){return 1/super.toSeconds()}toTicks(){const e=this._beatsToUnits(1),t=this.valueOf()/e;return Math.floor(t*this._getPPQ())}_noArg(){return 0}_frequencyToUnits(e){return e}_ticksToUnits(e){return 1/(e*60/(this._getBpm()*this._getPPQ()))}_beatsToUnits(e){return 1/super._beatsToUnits(e)}_secondsToUnits(e){return 1/e}static mtof(e){return mtof(e)}static ftom(e){return ftom(e)}}const noteToScaleIndex={cbb:-2,cb:-1,c:0,"c#":1,cx:2,dbb:0,db:1,d:2,"d#":3,dx:4,ebb:2,eb:3,e:4,"e#":5,ex:6,fbb:3,fb:4,f:5,"f#":6,fx:7,gbb:5,gb:6,g:7,"g#":8,gx:9,abb:7,ab:8,a:9,"a#":10,ax:11,bbb:9,bb:10,b:11,"b#":12,bx:13},scaleIndexToNote=["C","C#","D","D#","E","F","F#","G","G#","A","A#","B"];function Frequency(s,e){return new FrequencyClass(getContext(),s,e)}class TransportTimeClass extends TimeClass{constructor(){super(...arguments),this.name="TransportTime"}_now(){return this.context.transport.seconds}}function TransportTime(s,e){return new TransportTimeClass(getContext(),s,e)}class ToneWithContext extends Tone$1{constructor(){super();const e=optionsFromArguments(ToneWithContext.getDefaults(),arguments,["context"]);this.defaultContext?this.context=this.defaultContext:this.context=e.context}static getDefaults(){return{context:getContext()}}now(){return this.context.currentTime+this.context.lookAhead}immediate(){return this.context.currentTime}get sampleTime(){return 1/this.context.sampleRate}get blockTime(){return 128/this.context.sampleRate}toSeconds(e){return new TimeClass(this.context,e).toSeconds()}toFrequency(e){return new FrequencyClass(this.context,e).toFrequency()}toTicks(e){return new TransportTimeClass(this.context,e).toTicks()}_getPartialProperties(e){const t=this.get();return Object.keys(t).forEach(n=>{isUndef(e[n])&&delete t[n]}),t}get(){const e=getDefaultsFromInstance(this);return Object.keys(e).forEach(t=>{if(Reflect.has(this,t)){const n=this[t];isDefined(n)&&isDefined(n.value)&&isDefined(n.setValueAtTime)?e[t]=n.value:n instanceof ToneWithContext?e[t]=n._getPartialProperties(e[t]):isArray(n)||isNumber(n)||isString(n)||isBoolean(n)?e[t]=n:delete e[t]}}),e}set(e){return Object.keys(e).forEach(t=>{Reflect.has(this,t)&&isDefined(this[t])&&(this[t]&&isDefined(this[t].value)&&isDefined(this[t].setValueAtTime)?this[t].value!==e[t]&&(this[t].value=e[t]):this[t]instanceof ToneWithContext?this[t].set(e[t]):this[t]=e[t])}),this}}class StateTimeline extends Timeline{constructor(e="stopped"){super(),this.name="StateTimeline",this._initial=e,this.setStateAtTime(this._initial,0)}getValueAtTime(e){const t=this.get(e);return t!==null?t.state:this._initial}setStateAtTime(e,t,n){return assertRange(t,0),this.add(Object.assign({},n,{state:e,time:t})),this}getLastState(e,t){const n=this._search(t);for(let o=n;o>=0;o--){const r=this._timeline[o];if(r.state===e)return r}}getNextState(e,t){const n=this._search(t);if(n!==-1)for(let o=n;o<this._timeline.length;o++){const r=this._timeline[o];if(r.state===e)return r}}}class Param extends ToneWithContext{constructor(){super(optionsFromArguments(Param.getDefaults(),arguments,["param","units","convert"])),this.name="Param",this.overridden=!1,this._minOutput=1e-7;const e=optionsFromArguments(Param.getDefaults(),arguments,["param","units","convert"]);for(assert(isDefined(e.param)&&(isAudioParam(e.param)||e.param instanceof Param),"param must be an AudioParam");!isAudioParam(e.param);)e.param=e.param._param;this._swappable=isDefined(e.swappable)?e.swappable:!1,this._swappable?(this.input=this.context.createGain(),this._param=e.param,this.input.connect(this._param)):this._param=this.input=e.param,this._events=new Timeline(1e3),this._initialValue=this._param.defaultValue,this.units=e.units,this.convert=e.convert,this._minValue=e.minValue,this._maxValue=e.maxValue,isDefined(e.value)&&e.value!==this._toType(this._initialValue)&&this.setValueAtTime(e.value,0)}static getDefaults(){return Object.assign(ToneWithContext.getDefaults(),{convert:!0,units:"number"})}get value(){const e=this.now();return this.getValueAtTime(e)}set value(e){this.cancelScheduledValues(this.now()),this.setValueAtTime(e,this.now())}get minValue(){return isDefined(this._minValue)?this._minValue:this.units==="time"||this.units==="frequency"||this.units==="normalRange"||this.units==="positive"||this.units==="transportTime"||this.units==="ticks"||this.units==="bpm"||this.units==="hertz"||this.units==="samples"?0:this.units==="audioRange"?-1:this.units==="decibels"?-1/0:this._param.minValue}get maxValue(){return isDefined(this._maxValue)?this._maxValue:this.units==="normalRange"||this.units==="audioRange"?1:this._param.maxValue}_is(e,t){return this.units===t}_assertRange(e){return isDefined(this.maxValue)&&isDefined(this.minValue)&&assertRange(e,this._fromType(this.minValue),this._fromType(this.maxValue)),e}_fromType(e){return this.convert&&!this.overridden?this._is(e,"time")?this.toSeconds(e):this._is(e,"decibels")?dbToGain(e):this._is(e,"frequency")?this.toFrequency(e):e:this.overridden?0:e}_toType(e){return this.convert&&this.units==="decibels"?gainToDb(e):e}setValueAtTime(e,t){const n=this.toSeconds(t),o=this._fromType(e);return assert(isFinite(o)&&isFinite(n),`Invalid argument(s) to setValueAtTime: ${JSON.stringify(e)}, ${JSON.stringify(t)}`),this._assertRange(o),this.log(this.units,"setValueAtTime",e,n),this._events.add({time:n,type:"setValueAtTime",value:o}),this._param.setValueAtTime(o,n),this}getValueAtTime(e){const t=Math.max(this.toSeconds(e),0),n=this._events.getAfter(t),o=this._events.get(t);let r=this._initialValue;if(o===null)r=this._initialValue;else if(o.type==="setTargetAtTime"&&(n===null||n.type==="setValueAtTime")){const a=this._events.getBefore(o.time);let c;a===null?c=this._initialValue:c=a.value,o.type==="setTargetAtTime"&&(r=this._exponentialApproach(o.time,c,o.value,o.constant,t))}else if(n===null)r=o.value;else if(n.type==="linearRampToValueAtTime"||n.type==="exponentialRampToValueAtTime"){let a=o.value;if(o.type==="setTargetAtTime"){const c=this._events.getBefore(o.time);c===null?a=this._initialValue:a=c.value}n.type==="linearRampToValueAtTime"?r=this._linearInterpolate(o.time,a,n.time,n.value,t):r=this._exponentialInterpolate(o.time,a,n.time,n.value,t)}else r=o.value;return this._toType(r)}setRampPoint(e){e=this.toSeconds(e);let t=this.getValueAtTime(e);return this.cancelAndHoldAtTime(e),this._fromType(t)===0&&(t=this._toType(this._minOutput)),this.setValueAtTime(t,e),this}linearRampToValueAtTime(e,t){const n=this._fromType(e),o=this.toSeconds(t);return assert(isFinite(n)&&isFinite(o),`Invalid argument(s) to linearRampToValueAtTime: ${JSON.stringify(e)}, ${JSON.stringify(t)}`),this._assertRange(n),this._events.add({time:o,type:"linearRampToValueAtTime",value:n}),this.log(this.units,"linearRampToValueAtTime",e,o),this._param.linearRampToValueAtTime(n,o),this}exponentialRampToValueAtTime(e,t){let n=this._fromType(e);n=EQ(n,0)?this._minOutput:n,this._assertRange(n);const o=this.toSeconds(t);return assert(isFinite(n)&&isFinite(o),`Invalid argument(s) to exponentialRampToValueAtTime: ${JSON.stringify(e)}, ${JSON.stringify(t)}`),this._events.add({time:o,type:"exponentialRampToValueAtTime",value:n}),this.log(this.units,"exponentialRampToValueAtTime",e,o),this._param.exponentialRampToValueAtTime(n,o),this}exponentialRampTo(e,t,n){return n=this.toSeconds(n),this.setRampPoint(n),this.exponentialRampToValueAtTime(e,n+this.toSeconds(t)),this}linearRampTo(e,t,n){return n=this.toSeconds(n),this.setRampPoint(n),this.linearRampToValueAtTime(e,n+this.toSeconds(t)),this}targetRampTo(e,t,n){return n=this.toSeconds(n),this.setRampPoint(n),this.exponentialApproachValueAtTime(e,n,t),this}exponentialApproachValueAtTime(e,t,n){t=this.toSeconds(t),n=this.toSeconds(n);const o=Math.log(n+1)/Math.log(200);return this.setTargetAtTime(e,t,o),this.cancelAndHoldAtTime(t+n*.9),this.linearRampToValueAtTime(e,t+n),this}setTargetAtTime(e,t,n){const o=this._fromType(e);assert(isFinite(n)&&n>0,"timeConstant must be a number greater than 0");const r=this.toSeconds(t);return this._assertRange(o),assert(isFinite(o)&&isFinite(r),`Invalid argument(s) to setTargetAtTime: ${JSON.stringify(e)}, ${JSON.stringify(t)}`),this._events.add({constant:n,time:r,type:"setTargetAtTime",value:o}),this.log(this.units,"setTargetAtTime",e,r,n),this._param.setTargetAtTime(o,r,n),this}setValueCurveAtTime(e,t,n,o=1){n=this.toSeconds(n),t=this.toSeconds(t);const r=this._fromType(e[0])*o;this.setValueAtTime(this._toType(r),t);const a=n/(e.length-1);for(let c=1;c<e.length;c++){const l=this._fromType(e[c])*o;this.linearRampToValueAtTime(this._toType(l),t+c*a)}return this}cancelScheduledValues(e){const t=this.toSeconds(e);return assert(isFinite(t),`Invalid argument to cancelScheduledValues: ${JSON.stringify(e)}`),this._events.cancel(t),this._param.cancelScheduledValues(t),this.log(this.units,"cancelScheduledValues",t),this}cancelAndHoldAtTime(e){const t=this.toSeconds(e),n=this._fromType(this.getValueAtTime(t));assert(isFinite(t),`Invalid argument to cancelAndHoldAtTime: ${JSON.stringify(e)}`),this.log(this.units,"cancelAndHoldAtTime",t,"value="+n);const o=this._events.get(t),r=this._events.getAfter(t);return o&&EQ(o.time,t)?r?(this._param.cancelScheduledValues(r.time),this._events.cancel(r.time)):(this._param.cancelAndHoldAtTime(t),this._events.cancel(t+this.sampleTime)):r&&(this._param.cancelScheduledValues(r.time),this._events.cancel(r.time),r.type==="linearRampToValueAtTime"?this.linearRampToValueAtTime(this._toType(n),t):r.type==="exponentialRampToValueAtTime"&&this.exponentialRampToValueAtTime(this._toType(n),t)),this._events.add({time:t,type:"setValueAtTime",value:n}),this._param.setValueAtTime(n,t),this}rampTo(e,t=.1,n){return this.units==="frequency"||this.units==="bpm"||this.units==="decibels"?this.exponentialRampTo(e,t,n):this.linearRampTo(e,t,n),this}apply(e){const t=this.context.currentTime;e.setValueAtTime(this.getValueAtTime(t),t);const n=this._events.get(t);if(n&&n.type==="setTargetAtTime"){const o=this._events.getAfter(n.time),r=o?o.time:t+2,a=(r-t)/10;for(let c=t;c<r;c+=a)e.linearRampToValueAtTime(this.getValueAtTime(c),c)}return this._events.forEachAfter(this.context.currentTime,o=>{o.type==="cancelScheduledValues"?e.cancelScheduledValues(o.time):o.type==="setTargetAtTime"?e.setTargetAtTime(o.value,o.time,o.constant):e[o.type](o.value,o.time)}),this}setParam(e){assert(this._swappable,"The Param must be assigned as 'swappable' in the constructor");const t=this.input;return t.disconnect(this._param),this.apply(e),this._param=e,t.connect(this._param),this}dispose(){return super.dispose(),this._events.dispose(),this}get defaultValue(){return this._toType(this._param.defaultValue)}_exponentialApproach(e,t,n,o,r){return n+(t-n)*Math.exp(-(r-e)/o)}_linearInterpolate(e,t,n,o,r){return t+(o-t)*((r-e)/(n-e))}_exponentialInterpolate(e,t,n,o,r){return t*Math.pow(o/t,(r-e)/(n-e))}}class ToneAudioNode extends ToneWithContext{constructor(){super(...arguments),this.name="ToneAudioNode",this._internalChannels=[]}get numberOfInputs(){return isDefined(this.input)?isAudioParam(this.input)||this.input instanceof Param?1:this.input.numberOfInputs:0}get numberOfOutputs(){return isDefined(this.output)?this.output.numberOfOutputs:0}_isAudioNode(e){return isDefined(e)&&(e instanceof ToneAudioNode||isAudioNode(e))}_getInternalNodes(){const e=this._internalChannels.slice(0);return this._isAudioNode(this.input)&&e.push(this.input),this._isAudioNode(this.output)&&this.input!==this.output&&e.push(this.output),e}_setChannelProperties(e){this._getInternalNodes().forEach(n=>{n.channelCount=e.channelCount,n.channelCountMode=e.channelCountMode,n.channelInterpretation=e.channelInterpretation})}_getChannelProperties(){const e=this._getInternalNodes();assert(e.length>0,"ToneAudioNode does not have any internal nodes");const t=e[0];return{channelCount:t.channelCount,channelCountMode:t.channelCountMode,channelInterpretation:t.channelInterpretation}}get channelCount(){return this._getChannelProperties().channelCount}set channelCount(e){const t=this._getChannelProperties();this._setChannelProperties(Object.assign(t,{channelCount:e}))}get channelCountMode(){return this._getChannelProperties().channelCountMode}set channelCountMode(e){const t=this._getChannelProperties();this._setChannelProperties(Object.assign(t,{channelCountMode:e}))}get channelInterpretation(){return this._getChannelProperties().channelInterpretation}set channelInterpretation(e){const t=this._getChannelProperties();this._setChannelProperties(Object.assign(t,{channelInterpretation:e}))}connect(e,t=0,n=0){return connect(this,e,t,n),this}toDestination(){return this.connect(this.context.destination),this}toMaster(){return warn("toMaster() has been renamed toDestination()"),this.toDestination()}disconnect(e,t=0,n=0){return disconnect(this,e,t,n),this}chain(...e){return connectSeries(this,...e),this}fan(...e){return e.forEach(t=>this.connect(t)),this}dispose(){return super.dispose(),isDefined(this.input)&&(this.input instanceof ToneAudioNode?this.input.dispose():isAudioNode(this.input)&&this.input.disconnect()),isDefined(this.output)&&(this.output instanceof ToneAudioNode?this.output.dispose():isAudioNode(this.output)&&this.output.disconnect()),this._internalChannels=[],this}}function connectSeries(...s){const e=s.shift();s.reduce((t,n)=>(t instanceof ToneAudioNode?t.connect(n):isAudioNode(t)&&connect(t,n),n),e)}function connect(s,e,t=0,n=0){for(assert(isDefined(s),"Cannot connect from undefined node"),assert(isDefined(e),"Cannot connect to undefined node"),(e instanceof ToneAudioNode||isAudioNode(e))&&assert(e.numberOfInputs>0,"Cannot connect to node with no inputs"),assert(s.numberOfOutputs>0,"Cannot connect from node with no outputs");e instanceof ToneAudioNode||e instanceof Param;)isDefined(e.input)&&(e=e.input);for(;s instanceof ToneAudioNode;)isDefined(s.output)&&(s=s.output);isAudioParam(e)?s.connect(e,t):s.connect(e,t,n)}function disconnect(s,e,t=0,n=0){if(isDefined(e))for(;e instanceof ToneAudioNode;)e=e.input;for(;!isAudioNode(s);)isDefined(s.output)&&(s=s.output);isAudioParam(e)?s.disconnect(e,t):isAudioNode(e)?s.disconnect(e,t,n):s.disconnect()}class Gain extends ToneAudioNode{constructor(){super(optionsFromArguments(Gain.getDefaults(),arguments,["gain","units"])),this.name="Gain",this._gainNode=this.context.createGain(),this.input=this._gainNode,this.output=this._gainNode;const e=optionsFromArguments(Gain.getDefaults(),arguments,["gain","units"]);this.gain=new Param({context:this.context,convert:e.convert,param:this._gainNode.gain,units:e.units,value:e.gain,minValue:e.minValue,maxValue:e.maxValue}),readOnly(this,"gain")}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{convert:!0,gain:1,units:"gain"})}dispose(){return super.dispose(),this._gainNode.disconnect(),this.gain.dispose(),this}}class OneShotSource extends ToneAudioNode{constructor(e){super(e),this.onended=noOp,this._startTime=-1,this._stopTime=-1,this._timeout=-1,this.output=new Gain({context:this.context,gain:0}),this._gainNode=this.output,this.getStateAtTime=function(t){const n=this.toSeconds(t);return this._startTime!==-1&&n>=this._startTime&&(this._stopTime===-1||n<=this._stopTime)?"started":"stopped"},this._fadeIn=e.fadeIn,this._fadeOut=e.fadeOut,this._curve=e.curve,this.onended=e.onended}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{curve:"linear",fadeIn:0,fadeOut:0,onended:noOp})}_startGain(e,t=1){assert(this._startTime===-1,"Source cannot be started more than once");const n=this.toSeconds(this._fadeIn);return this._startTime=e+n,this._startTime=Math.max(this._startTime,this.context.currentTime),n>0?(this._gainNode.gain.setValueAtTime(0,e),this._curve==="linear"?this._gainNode.gain.linearRampToValueAtTime(t,e+n):this._gainNode.gain.exponentialApproachValueAtTime(t,e,n)):this._gainNode.gain.setValueAtTime(t,e),this}stop(e){return this.log("stop",e),this._stopGain(this.toSeconds(e)),this}_stopGain(e){assert(this._startTime!==-1,"'start' must be called before 'stop'"),this.cancelStop();const t=this.toSeconds(this._fadeOut);return this._stopTime=this.toSeconds(e)+t,this._stopTime=Math.max(this._stopTime,this.context.currentTime),t>0?this._curve==="linear"?this._gainNode.gain.linearRampTo(0,t,e):this._gainNode.gain.targetRampTo(0,t,e):(this._gainNode.gain.cancelAndHoldAtTime(e),this._gainNode.gain.setValueAtTime(0,e)),this.context.clearTimeout(this._timeout),this._timeout=this.context.setTimeout(()=>{const n=this._curve==="exponential"?t*2:0;this._stopSource(this.now()+n),this._onended()},this._stopTime-this.context.currentTime),this}_onended(){if(this.onended!==noOp&&(this.onended(this),this.onended=noOp,!this.context.isOffline)){const e=()=>this.dispose();typeof window.requestIdleCallback<"u"?window.requestIdleCallback(e):setTimeout(e,1e3)}}get state(){return this.getStateAtTime(this.now())}cancelStop(){return this.log("cancelStop"),assert(this._startTime!==-1,"Source is not started"),this._gainNode.gain.cancelScheduledValues(this._startTime+this.sampleTime),this.context.clearTimeout(this._timeout),this._stopTime=-1,this}dispose(){return super.dispose(),this._gainNode.disconnect(),this}}class ToneConstantSource extends OneShotSource{constructor(){super(optionsFromArguments(ToneConstantSource.getDefaults(),arguments,["offset"])),this.name="ToneConstantSource",this._source=this.context.createConstantSource();const e=optionsFromArguments(ToneConstantSource.getDefaults(),arguments,["offset"]);connect(this._source,this._gainNode),this.offset=new Param({context:this.context,convert:e.convert,param:this._source.offset,units:e.units,value:e.offset,minValue:e.minValue,maxValue:e.maxValue})}static getDefaults(){return Object.assign(OneShotSource.getDefaults(),{convert:!0,offset:1,units:"number"})}start(e){const t=this.toSeconds(e);return this.log("start",t),this._startGain(t),this._source.start(t),this}_stopSource(e){this._source.stop(e)}dispose(){return super.dispose(),this.state==="started"&&this.stop(),this._source.disconnect(),this.offset.dispose(),this}}class Signal extends ToneAudioNode{constructor(){super(optionsFromArguments(Signal.getDefaults(),arguments,["value","units"])),this.name="Signal",this.override=!0;const e=optionsFromArguments(Signal.getDefaults(),arguments,["value","units"]);this.output=this._constantSource=new ToneConstantSource({context:this.context,convert:e.convert,offset:e.value,units:e.units,minValue:e.minValue,maxValue:e.maxValue}),this._constantSource.start(0),this.input=this._param=this._constantSource.offset}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{convert:!0,units:"number",value:0})}connect(e,t=0,n=0){return connectSignal(this,e,t,n),this}dispose(){return super.dispose(),this._param.dispose(),this._constantSource.dispose(),this}setValueAtTime(e,t){return this._param.setValueAtTime(e,t),this}getValueAtTime(e){return this._param.getValueAtTime(e)}setRampPoint(e){return this._param.setRampPoint(e),this}linearRampToValueAtTime(e,t){return this._param.linearRampToValueAtTime(e,t),this}exponentialRampToValueAtTime(e,t){return this._param.exponentialRampToValueAtTime(e,t),this}exponentialRampTo(e,t,n){return this._param.exponentialRampTo(e,t,n),this}linearRampTo(e,t,n){return this._param.linearRampTo(e,t,n),this}targetRampTo(e,t,n){return this._param.targetRampTo(e,t,n),this}exponentialApproachValueAtTime(e,t,n){return this._param.exponentialApproachValueAtTime(e,t,n),this}setTargetAtTime(e,t,n){return this._param.setTargetAtTime(e,t,n),this}setValueCurveAtTime(e,t,n,o){return this._param.setValueCurveAtTime(e,t,n,o),this}cancelScheduledValues(e){return this._param.cancelScheduledValues(e),this}cancelAndHoldAtTime(e){return this._param.cancelAndHoldAtTime(e),this}rampTo(e,t,n){return this._param.rampTo(e,t,n),this}get value(){return this._param.value}set value(e){this._param.value=e}get convert(){return this._param.convert}set convert(e){this._param.convert=e}get units(){return this._param.units}get overridden(){return this._param.overridden}set overridden(e){this._param.overridden=e}get maxValue(){return this._param.maxValue}get minValue(){return this._param.minValue}apply(e){return this._param.apply(e),this}}function connectSignal(s,e,t,n){(e instanceof Param||isAudioParam(e)||e instanceof Signal&&e.override)&&(e.cancelScheduledValues(0),e.setValueAtTime(0,0),e instanceof Signal&&(e.overridden=!0)),connect(s,e,t,n)}class TickParam extends Param{constructor(){super(optionsFromArguments(TickParam.getDefaults(),arguments,["value"])),this.name="TickParam",this._events=new Timeline(1/0),this._multiplier=1;const e=optionsFromArguments(TickParam.getDefaults(),arguments,["value"]);this._multiplier=e.multiplier,this._events.cancel(0),this._events.add({ticks:0,time:0,type:"setValueAtTime",value:this._fromType(e.value)}),this.setValueAtTime(e.value,0)}static getDefaults(){return Object.assign(Param.getDefaults(),{multiplier:1,units:"hertz",value:1})}setTargetAtTime(e,t,n){t=this.toSeconds(t),this.setRampPoint(t);const o=this._fromType(e),r=this._events.get(t),a=Math.round(Math.max(1/n,1));for(let c=0;c<=a;c++){const l=n*c+t,u=this._exponentialApproach(r.time,r.value,o,n,l);this.linearRampToValueAtTime(this._toType(u),l)}return this}setValueAtTime(e,t){const n=this.toSeconds(t);super.setValueAtTime(e,t);const o=this._events.get(n),r=this._events.previousEvent(o),a=this._getTicksUntilEvent(r,n);return o.ticks=Math.max(a,0),this}linearRampToValueAtTime(e,t){const n=this.toSeconds(t);super.linearRampToValueAtTime(e,t);const o=this._events.get(n),r=this._events.previousEvent(o),a=this._getTicksUntilEvent(r,n);return o.ticks=Math.max(a,0),this}exponentialRampToValueAtTime(e,t){t=this.toSeconds(t);const n=this._fromType(e),o=this._events.get(t),r=Math.round(Math.max((t-o.time)*10,1)),a=(t-o.time)/r;for(let c=0;c<=r;c++){const l=a*c+o.time,u=this._exponentialInterpolate(o.time,o.value,t,n,l);this.linearRampToValueAtTime(this._toType(u),l)}return this}_getTicksUntilEvent(e,t){if(e===null)e={ticks:0,time:0,type:"setValueAtTime",value:0};else if(isUndef(e.ticks)){const a=this._events.previousEvent(e);e.ticks=this._getTicksUntilEvent(a,e.time)}const n=this._fromType(this.getValueAtTime(e.time));let o=this._fromType(this.getValueAtTime(t));const r=this._events.get(t);return r&&r.time===t&&r.type==="setValueAtTime"&&(o=this._fromType(this.getValueAtTime(t-this.sampleTime))),.5*(t-e.time)*(n+o)+e.ticks}getTicksAtTime(e){const t=this.toSeconds(e),n=this._events.get(t);return Math.max(this._getTicksUntilEvent(n,t),0)}getDurationOfTicks(e,t){const n=this.toSeconds(t),o=this.getTicksAtTime(t);return this.getTimeOfTick(o+e)-n}getTimeOfTick(e){const t=this._events.get(e,"ticks"),n=this._events.getAfter(e,"ticks");if(t&&t.ticks===e)return t.time;if(t&&n&&n.type==="linearRampToValueAtTime"&&t.value!==n.value){const o=this._fromType(this.getValueAtTime(t.time)),a=(this._fromType(this.getValueAtTime(n.time))-o)/(n.time-t.time),c=Math.sqrt(Math.pow(o,2)-2*a*(t.ticks-e)),l=(-o+c)/a,u=(-o-c)/a;return(l>0?l:u)+t.time}else return t?t.value===0?1/0:t.time+(e-t.ticks)/t.value:e/this._initialValue}ticksToTime(e,t){return this.getDurationOfTicks(e,t)}timeToTicks(e,t){const n=this.toSeconds(t),o=this.toSeconds(e),r=this.getTicksAtTime(n);return this.getTicksAtTime(n+o)-r}_fromType(e){return this.units==="bpm"&&this.multiplier?1/(60/e/this.multiplier):super._fromType(e)}_toType(e){return this.units==="bpm"&&this.multiplier?e/this.multiplier*60:super._toType(e)}get multiplier(){return this._multiplier}set multiplier(e){const t=this.value;this._multiplier=e,this.cancelScheduledValues(0),this.setValueAtTime(t,0)}}class TickSignal extends Signal{constructor(){super(optionsFromArguments(TickSignal.getDefaults(),arguments,["value"])),this.name="TickSignal";const e=optionsFromArguments(TickSignal.getDefaults(),arguments,["value"]);this.input=this._param=new TickParam({context:this.context,convert:e.convert,multiplier:e.multiplier,param:this._constantSource.offset,units:e.units,value:e.value})}static getDefaults(){return Object.assign(Signal.getDefaults(),{multiplier:1,units:"hertz",value:1})}ticksToTime(e,t){return this._param.ticksToTime(e,t)}timeToTicks(e,t){return this._param.timeToTicks(e,t)}getTimeOfTick(e){return this._param.getTimeOfTick(e)}getDurationOfTicks(e,t){return this._param.getDurationOfTicks(e,t)}getTicksAtTime(e){return this._param.getTicksAtTime(e)}get multiplier(){return this._param.multiplier}set multiplier(e){this._param.multiplier=e}dispose(){return super.dispose(),this._param.dispose(),this}}class TickSource extends ToneWithContext{constructor(){super(optionsFromArguments(TickSource.getDefaults(),arguments,["frequency"])),this.name="TickSource",this._state=new StateTimeline,this._tickOffset=new Timeline;const e=optionsFromArguments(TickSource.getDefaults(),arguments,["frequency"]);this.frequency=new TickSignal({context:this.context,units:e.units,value:e.frequency}),readOnly(this,"frequency"),this._state.setStateAtTime("stopped",0),this.setTicksAtTime(0,0)}static getDefaults(){return Object.assign({frequency:1,units:"hertz"},ToneWithContext.getDefaults())}get state(){return this.getStateAtTime(this.now())}start(e,t){const n=this.toSeconds(e);return this._state.getValueAtTime(n)!=="started"&&(this._state.setStateAtTime("started",n),isDefined(t)&&this.setTicksAtTime(t,n)),this}stop(e){const t=this.toSeconds(e);if(this._state.getValueAtTime(t)==="stopped"){const n=this._state.get(t);n&&n.time>0&&(this._tickOffset.cancel(n.time),this._state.cancel(n.time))}return this._state.cancel(t),this._state.setStateAtTime("stopped",t),this.setTicksAtTime(0,t),this}pause(e){const t=this.toSeconds(e);return this._state.getValueAtTime(t)==="started"&&this._state.setStateAtTime("paused",t),this}cancel(e){return e=this.toSeconds(e),this._state.cancel(e),this._tickOffset.cancel(e),this}getTicksAtTime(e){const t=this.toSeconds(e),n=this._state.getLastState("stopped",t),o={state:"paused",time:t};this._state.add(o);let r=n,a=0;return this._state.forEachBetween(n.time,t+this.sampleTime,c=>{let l=r.time;const u=this._tickOffset.get(c.time);u&&u.time>=r.time&&(a=u.ticks,l=u.time),r.state==="started"&&c.state!=="started"&&(a+=this.frequency.getTicksAtTime(c.time)-this.frequency.getTicksAtTime(l)),r=c}),this._state.remove(o),a}get ticks(){return this.getTicksAtTime(this.now())}set ticks(e){this.setTicksAtTime(e,this.now())}get seconds(){return this.getSecondsAtTime(this.now())}set seconds(e){const t=this.now(),n=this.frequency.timeToTicks(e,t);this.setTicksAtTime(n,t)}getSecondsAtTime(e){e=this.toSeconds(e);const t=this._state.getLastState("stopped",e),n={state:"paused",time:e};this._state.add(n);let o=t,r=0;return this._state.forEachBetween(t.time,e+this.sampleTime,a=>{let c=o.time;const l=this._tickOffset.get(a.time);l&&l.time>=o.time&&(r=l.seconds,c=l.time),o.state==="started"&&a.state!=="started"&&(r+=a.time-c),o=a}),this._state.remove(n),r}setTicksAtTime(e,t){return t=this.toSeconds(t),this._tickOffset.cancel(t),this._tickOffset.add({seconds:this.frequency.getDurationOfTicks(e,t),ticks:e,time:t}),this}getStateAtTime(e){return e=this.toSeconds(e),this._state.getValueAtTime(e)}getTimeOfTick(e,t=this.now()){const n=this._tickOffset.get(t),o=this._state.get(t),r=Math.max(n.time,o.time),a=this.frequency.getTicksAtTime(r)+e-n.ticks;return this.frequency.getTimeOfTick(a)}forEachTickBetween(e,t,n){let o=this._state.get(e);this._state.forEachBetween(e,t,a=>{o&&o.state==="started"&&a.state!=="started"&&this.forEachTickBetween(Math.max(o.time,e),a.time-this.sampleTime,n),o=a});let r=null;if(o&&o.state==="started"){const a=Math.max(o.time,e),c=this.frequency.getTicksAtTime(a),l=this.frequency.getTicksAtTime(o.time),u=c-l;let d=Math.ceil(u)-u;d=EQ(d,1)?0:d;let f=this.frequency.getTimeOfTick(c+d);for(;f<t;){try{n(f,Math.round(this.getTicksAtTime(f)))}catch(m){r=m;break}f+=this.frequency.getDurationOfTicks(1,f)}}if(r)throw r;return this}dispose(){return super.dispose(),this._state.dispose(),this._tickOffset.dispose(),this.frequency.dispose(),this}}class Clock extends ToneWithContext{constructor(){super(optionsFromArguments(Clock.getDefaults(),arguments,["callback","frequency"])),this.name="Clock",this.callback=noOp,this._lastUpdate=0,this._state=new StateTimeline("stopped"),this._boundLoop=this._loop.bind(this);const e=optionsFromArguments(Clock.getDefaults(),arguments,["callback","frequency"]);this.callback=e.callback,this._tickSource=new TickSource({context:this.context,frequency:e.frequency,units:e.units}),this._lastUpdate=0,this.frequency=this._tickSource.frequency,readOnly(this,"frequency"),this._state.setStateAtTime("stopped",0),this.context.on("tick",this._boundLoop)}static getDefaults(){return Object.assign(ToneWithContext.getDefaults(),{callback:noOp,frequency:1,units:"hertz"})}get state(){return this._state.getValueAtTime(this.now())}start(e,t){assertContextRunning(this.context);const n=this.toSeconds(e);return this.log("start",n),this._state.getValueAtTime(n)!=="started"&&(this._state.setStateAtTime("started",n),this._tickSource.start(n,t),n<this._lastUpdate&&this.emit("start",n,t)),this}stop(e){const t=this.toSeconds(e);return this.log("stop",t),this._state.cancel(t),this._state.setStateAtTime("stopped",t),this._tickSource.stop(t),t<this._lastUpdate&&this.emit("stop",t),this}pause(e){const t=this.toSeconds(e);return this._state.getValueAtTime(t)==="started"&&(this._state.setStateAtTime("paused",t),this._tickSource.pause(t),t<this._lastUpdate&&this.emit("pause",t)),this}get ticks(){return Math.ceil(this.getTicksAtTime(this.now()))}set ticks(e){this._tickSource.ticks=e}get seconds(){return this._tickSource.seconds}set seconds(e){this._tickSource.seconds=e}getSecondsAtTime(e){return this._tickSource.getSecondsAtTime(e)}setTicksAtTime(e,t){return this._tickSource.setTicksAtTime(e,t),this}getTimeOfTick(e,t=this.now()){return this._tickSource.getTimeOfTick(e,t)}getTicksAtTime(e){return this._tickSource.getTicksAtTime(e)}nextTickTime(e,t){const n=this.toSeconds(t),o=this.getTicksAtTime(n);return this._tickSource.getTimeOfTick(o+e,n)}_loop(){const e=this._lastUpdate,t=this.now();this._lastUpdate=t,this.log("loop",e,t),e!==t&&(this._state.forEachBetween(e,t,n=>{switch(n.state){case"started":const o=this._tickSource.getTicksAtTime(n.time);this.emit("start",n.time,o);break;case"stopped":n.time!==0&&this.emit("stop",n.time);break;case"paused":this.emit("pause",n.time);break}}),this._tickSource.forEachTickBetween(e,t,(n,o)=>{this.callback(n,o)}))}getStateAtTime(e){const t=this.toSeconds(e);return this._state.getValueAtTime(t)}dispose(){return super.dispose(),this.context.off("tick",this._boundLoop),this._tickSource.dispose(),this._state.dispose(),this}}Emitter.mixin(Clock);class Delay extends ToneAudioNode{constructor(){super(optionsFromArguments(Delay.getDefaults(),arguments,["delayTime","maxDelay"])),this.name="Delay";const e=optionsFromArguments(Delay.getDefaults(),arguments,["delayTime","maxDelay"]),t=this.toSeconds(e.maxDelay);this._maxDelay=Math.max(t,this.toSeconds(e.delayTime)),this._delayNode=this.input=this.output=this.context.createDelay(t),this.delayTime=new Param({context:this.context,param:this._delayNode.delayTime,units:"time",value:e.delayTime,minValue:0,maxValue:this.maxDelay}),readOnly(this,"delayTime")}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{delayTime:0,maxDelay:1})}get maxDelay(){return this._maxDelay}dispose(){return super.dispose(),this._delayNode.disconnect(),this.delayTime.dispose(),this}}function Offline(s,e,t=2,n=getContext().sampleRate){return __awaiter(this,void 0,void 0,function*(){const o=getContext(),r=new OfflineContext(t,e,n);setContext(r),yield s(r);const a=r.render();setContext(o);const c=yield a;return new ToneAudioBuffer(c)})}class ToneAudioBuffers extends Tone$1{constructor(){super(),this.name="ToneAudioBuffers",this._buffers=new Map,this._loadingCount=0;const e=optionsFromArguments(ToneAudioBuffers.getDefaults(),arguments,["urls","onload","baseUrl"],"urls");this.baseUrl=e.baseUrl,Object.keys(e.urls).forEach(t=>{this._loadingCount++;const n=e.urls[t];this.add(t,n,this._bufferLoaded.bind(this,e.onload),e.onerror)})}static getDefaults(){return{baseUrl:"",onerror:noOp,onload:noOp,urls:{}}}has(e){return this._buffers.has(e.toString())}get(e){return assert(this.has(e),`ToneAudioBuffers has no buffer named: ${e}`),this._buffers.get(e.toString())}_bufferLoaded(e){this._loadingCount--,this._loadingCount===0&&e&&e()}get loaded(){return Array.from(this._buffers).every(([e,t])=>t.loaded)}add(e,t,n=noOp,o=noOp){return isString(t)?this._buffers.set(e.toString(),new ToneAudioBuffer(this.baseUrl+t,n,o)):this._buffers.set(e.toString(),new ToneAudioBuffer(t,n,o)),this}dispose(){return super.dispose(),this._buffers.forEach(e=>e.dispose()),this._buffers.clear(),this}}class MidiClass extends FrequencyClass{constructor(){super(...arguments),this.name="MidiClass",this.defaultUnits="midi"}_frequencyToUnits(e){return ftom(super._frequencyToUnits(e))}_ticksToUnits(e){return ftom(super._ticksToUnits(e))}_beatsToUnits(e){return ftom(super._beatsToUnits(e))}_secondsToUnits(e){return ftom(super._secondsToUnits(e))}toMidi(){return this.valueOf()}toFrequency(){return mtof(this.toMidi())}transpose(e){return new MidiClass(this.context,this.toMidi()+e)}}function Midi(s,e){return new MidiClass(getContext(),s,e)}class TicksClass extends TransportTimeClass{constructor(){super(...arguments),this.name="Ticks",this.defaultUnits="i"}_now(){return this.context.transport.ticks}_beatsToUnits(e){return this._getPPQ()*e}_secondsToUnits(e){return Math.floor(e/(60/this._getBpm())*this._getPPQ())}_ticksToUnits(e){return e}toTicks(){return this.valueOf()}toSeconds(){return this.valueOf()/this._getPPQ()*(60/this._getBpm())}}function Ticks(s,e){return new TicksClass(getContext(),s,e)}let Draw$1=class extends ToneWithContext{constructor(){super(...arguments),this.name="Draw",this.expiration=.25,this.anticipation=.008,this._events=new Timeline,this._boundDrawLoop=this._drawLoop.bind(this),this._animationFrame=-1}schedule(e,t){return this._events.add({callback:e,time:this.toSeconds(t)}),this._events.length===1&&(this._animationFrame=requestAnimationFrame(this._boundDrawLoop)),this}cancel(e){return this._events.cancel(this.toSeconds(e)),this}_drawLoop(){const e=this.context.currentTime;for(;this._events.length&&this._events.peek().time-this.anticipation<=e;){const t=this._events.shift();t&&e-t.time<=this.expiration&&t.callback()}this._events.length>0&&(this._animationFrame=requestAnimationFrame(this._boundDrawLoop))}dispose(){return super.dispose(),this._events.dispose(),cancelAnimationFrame(this._animationFrame),this}};onContextInit(s=>{s.draw=new Draw$1({context:s})});onContextClose(s=>{s.draw.dispose()});class IntervalTimeline extends Tone$1{constructor(){super(...arguments),this.name="IntervalTimeline",this._root=null,this._length=0}add(e){assert(isDefined(e.time),"Events must have a time property"),assert(isDefined(e.duration),"Events must have a duration parameter"),e.time=e.time.valueOf();let t=new IntervalNode(e.time,e.time+e.duration,e);for(this._root===null?this._root=t:this._root.insert(t),this._length++;t!==null;)t.updateHeight(),t.updateMax(),this._rebalance(t),t=t.parent;return this}remove(e){if(this._root!==null){const t=[];this._root.search(e.time,t);for(const n of t)if(n.event===e){this._removeNode(n),this._length--;break}}return this}get length(){return this._length}cancel(e){return this.forEachFrom(e,t=>this.remove(t)),this}_setRoot(e){this._root=e,this._root!==null&&(this._root.parent=null)}_replaceNodeInParent(e,t){e.parent!==null?(e.isLeftChild()?e.parent.left=t:e.parent.right=t,this._rebalance(e.parent)):this._setRoot(t)}_removeNode(e){if(e.left===null&&e.right===null)this._replaceNodeInParent(e,null);else if(e.right===null)this._replaceNodeInParent(e,e.left);else if(e.left===null)this._replaceNodeInParent(e,e.right);else{const t=e.getBalance();let n,o=null;if(t>0)if(e.left.right===null)n=e.left,n.right=e.right,o=n;else{for(n=e.left.right;n.right!==null;)n=n.right;n.parent&&(n.parent.right=n.left,o=n.parent,n.left=e.left,n.right=e.right)}else if(e.right.left===null)n=e.right,n.left=e.left,o=n;else{for(n=e.right.left;n.left!==null;)n=n.left;n.parent&&(n.parent.left=n.right,o=n.parent,n.left=e.left,n.right=e.right)}e.parent!==null?e.isLeftChild()?e.parent.left=n:e.parent.right=n:this._setRoot(n),o&&this._rebalance(o)}e.dispose()}_rotateLeft(e){const t=e.parent,n=e.isLeftChild(),o=e.right;o&&(e.right=o.left,o.left=e),t!==null?n?t.left=o:t.right=o:this._setRoot(o)}_rotateRight(e){const t=e.parent,n=e.isLeftChild(),o=e.left;o&&(e.left=o.right,o.right=e),t!==null?n?t.left=o:t.right=o:this._setRoot(o)}_rebalance(e){const t=e.getBalance();t>1&&e.left?e.left.getBalance()<0?this._rotateLeft(e.left):this._rotateRight(e):t<-1&&e.right&&(e.right.getBalance()>0?this._rotateRight(e.right):this._rotateLeft(e))}get(e){if(this._root!==null){const t=[];if(this._root.search(e,t),t.length>0){let n=t[0];for(let o=1;o<t.length;o++)t[o].low>n.low&&(n=t[o]);return n.event}}return null}forEach(e){if(this._root!==null){const t=[];this._root.traverse(n=>t.push(n)),t.forEach(n=>{n.event&&e(n.event)})}return this}forEachAtTime(e,t){if(this._root!==null){const n=[];this._root.search(e,n),n.forEach(o=>{o.event&&t(o.event)})}return this}forEachFrom(e,t){if(this._root!==null){const n=[];this._root.searchAfter(e,n),n.forEach(o=>{o.event&&t(o.event)})}return this}dispose(){return super.dispose(),this._root!==null&&this._root.traverse(e=>e.dispose()),this._root=null,this}}class IntervalNode{constructor(e,t,n){this._left=null,this._right=null,this.parent=null,this.height=0,this.event=n,this.low=e,this.high=t,this.max=this.high}insert(e){e.low<=this.low?this.left===null?this.left=e:this.left.insert(e):this.right===null?this.right=e:this.right.insert(e)}search(e,t){e>this.max||(this.left!==null&&this.left.search(e,t),this.low<=e&&this.high>e&&t.push(this),!(this.low>e)&&this.right!==null&&this.right.search(e,t))}searchAfter(e,t){this.low>=e&&(t.push(this),this.left!==null&&this.left.searchAfter(e,t)),this.right!==null&&this.right.searchAfter(e,t)}traverse(e){e(this),this.left!==null&&this.left.traverse(e),this.right!==null&&this.right.traverse(e)}updateHeight(){this.left!==null&&this.right!==null?this.height=Math.max(this.left.height,this.right.height)+1:this.right!==null?this.height=this.right.height+1:this.left!==null?this.height=this.left.height+1:this.height=0}updateMax(){this.max=this.high,this.left!==null&&(this.max=Math.max(this.max,this.left.max)),this.right!==null&&(this.max=Math.max(this.max,this.right.max))}getBalance(){let e=0;return this.left!==null&&this.right!==null?e=this.left.height-this.right.height:this.left!==null?e=this.left.height+1:this.right!==null&&(e=-(this.right.height+1)),e}isLeftChild(){return this.parent!==null&&this.parent.left===this}get left(){return this._left}set left(e){this._left=e,e!==null&&(e.parent=this),this.updateHeight(),this.updateMax()}get right(){return this._right}set right(e){this._right=e,e!==null&&(e.parent=this),this.updateHeight(),this.updateMax()}dispose(){this.parent=null,this._left=null,this._right=null,this.event=null}}const Units=Object.freeze(Object.defineProperty({__proto__:null},Symbol.toStringTag,{value:"Module"}));class Volume extends ToneAudioNode{constructor(){super(optionsFromArguments(Volume.getDefaults(),arguments,["volume"])),this.name="Volume";const e=optionsFromArguments(Volume.getDefaults(),arguments,["volume"]);this.input=this.output=new Gain({context:this.context,gain:e.volume,units:"decibels"}),this.volume=this.output.gain,readOnly(this,"volume"),this._unmutedVolume=e.volume,this.mute=e.mute}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{mute:!1,volume:0})}get mute(){return this.volume.value===-1/0}set mute(e){!this.mute&&e?(this._unmutedVolume=this.volume.value,this.volume.value=-1/0):this.mute&&!e&&(this.volume.value=this._unmutedVolume)}dispose(){return super.dispose(),this.input.dispose(),this.volume.dispose(),this}}let Destination$1=class Ne extends ToneAudioNode{constructor(){super(optionsFromArguments(Ne.getDefaults(),arguments)),this.name="Destination",this.input=new Volume({context:this.context}),this.output=new Gain({context:this.context}),this.volume=this.input.volume;const e=optionsFromArguments(Ne.getDefaults(),arguments);connectSeries(this.input,this.output,this.context.rawContext.destination),this.mute=e.mute,this._internalChannels=[this.input,this.context.rawContext.destination,this.output]}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{mute:!1,volume:0})}get mute(){return this.input.mute}set mute(e){this.input.mute=e}chain(...e){return this.input.disconnect(),e.unshift(this.input),e.push(this.output),connectSeries(...e),this}get maxChannelCount(){return this.context.rawContext.destination.maxChannelCount}dispose(){return super.dispose(),this.volume.dispose(),this}};onContextInit(s=>{s.destination=new Destination$1({context:s})});onContextClose(s=>{s.destination.dispose()});class TimelineValue extends Tone$1{constructor(e){super(),this.name="TimelineValue",this._timeline=new Timeline({memory:10}),this._initialValue=e}set(e,t){return this._timeline.add({value:e,time:t}),this}get(e){const t=this._timeline.get(e);return t?t.value:this._initialValue}}class TransportEvent{constructor(e,t){this.id=TransportEvent._eventId++;const n=Object.assign(TransportEvent.getDefaults(),t);this.transport=e,this.callback=n.callback,this._once=n.once,this.time=n.time}static getDefaults(){return{callback:noOp,once:!1,time:0}}invoke(e){this.callback&&(this.callback(e),this._once&&this.transport.clear(this.id))}dispose(){return this.callback=void 0,this}}TransportEvent._eventId=0;class TransportRepeatEvent extends TransportEvent{constructor(e,t){super(e,t),this._currentId=-1,this._nextId=-1,this._nextTick=this.time,this._boundRestart=this._restart.bind(this);const n=Object.assign(TransportRepeatEvent.getDefaults(),t);this.duration=new TicksClass(e.context,n.duration).valueOf(),this._interval=new TicksClass(e.context,n.interval).valueOf(),this._nextTick=n.time,this.transport.on("start",this._boundRestart),this.transport.on("loopStart",this._boundRestart),this.context=this.transport.context,this._restart()}static getDefaults(){return Object.assign({},TransportEvent.getDefaults(),{duration:1/0,interval:1,once:!1})}invoke(e){this._createEvents(e),super.invoke(e)}_createEvents(e){const t=this.transport.getTicksAtTime(e);t>=this.time&&t>=this._nextTick&&this._nextTick+this._interval<this.time+this.duration&&(this._nextTick+=this._interval,this._currentId=this._nextId,this._nextId=this.transport.scheduleOnce(this.invoke.bind(this),new TicksClass(this.context,this._nextTick).toSeconds()))}_restart(e){this.transport.clear(this._currentId),this.transport.clear(this._nextId),this._nextTick=this.time;const t=this.transport.getTicksAtTime(e);t>this.time&&(this._nextTick=this.time+Math.ceil((t-this.time)/this._interval)*this._interval),this._currentId=this.transport.scheduleOnce(this.invoke.bind(this),new TicksClass(this.context,this._nextTick).toSeconds()),this._nextTick+=this._interval,this._nextId=this.transport.scheduleOnce(this.invoke.bind(this),new TicksClass(this.context,this._nextTick).toSeconds())}dispose(){return super.dispose(),this.transport.clear(this._currentId),this.transport.clear(this._nextId),this.transport.off("start",this._boundRestart),this.transport.off("loopStart",this._boundRestart),this}}let Transport$1=class Se extends ToneWithContext{constructor(){super(optionsFromArguments(Se.getDefaults(),arguments)),this.name="Transport",this._loop=new TimelineValue(!1),this._loopStart=0,this._loopEnd=0,this._scheduledEvents={},this._timeline=new Timeline,this._repeatedEvents=new IntervalTimeline,this._syncedSignals=[],this._swingAmount=0;const e=optionsFromArguments(Se.getDefaults(),arguments);this._ppq=e.ppq,this._clock=new Clock({callback:this._processTick.bind(this),context:this.context,frequency:0,units:"bpm"}),this._bindClockEvents(),this.bpm=this._clock.frequency,this._clock.frequency.multiplier=e.ppq,this.bpm.setValueAtTime(e.bpm,0),readOnly(this,"bpm"),this._timeSignature=e.timeSignature,this._swingTicks=e.ppq/2}static getDefaults(){return Object.assign(ToneWithContext.getDefaults(),{bpm:120,loopEnd:"4m",loopStart:0,ppq:192,swing:0,swingSubdivision:"8n",timeSignature:4})}_processTick(e,t){if(this._loop.get(e)&&t>=this._loopEnd&&(this.emit("loopEnd",e),this._clock.setTicksAtTime(this._loopStart,e),t=this._loopStart,this.emit("loopStart",e,this._clock.getSecondsAtTime(e)),this.emit("loop",e)),this._swingAmount>0&&t%this._ppq!==0&&t%(this._swingTicks*2)!==0){const n=t%(this._swingTicks*2)/(this._swingTicks*2),o=Math.sin(n*Math.PI)*this._swingAmount;e+=new TicksClass(this.context,this._swingTicks*2/3).toSeconds()*o}this._timeline.forEachAtTime(t,n=>n.invoke(e))}schedule(e,t){const n=new TransportEvent(this,{callback:e,time:new TransportTimeClass(this.context,t).toTicks()});return this._addEvent(n,this._timeline)}scheduleRepeat(e,t,n,o=1/0){const r=new TransportRepeatEvent(this,{callback:e,duration:new TimeClass(this.context,o).toTicks(),interval:new TimeClass(this.context,t).toTicks(),time:new TransportTimeClass(this.context,n).toTicks()});return this._addEvent(r,this._repeatedEvents)}scheduleOnce(e,t){const n=new TransportEvent(this,{callback:e,once:!0,time:new TransportTimeClass(this.context,t).toTicks()});return this._addEvent(n,this._timeline)}clear(e){if(this._scheduledEvents.hasOwnProperty(e)){const t=this._scheduledEvents[e.toString()];t.timeline.remove(t.event),t.event.dispose(),delete this._scheduledEvents[e.toString()]}return this}_addEvent(e,t){return this._scheduledEvents[e.id.toString()]={event:e,timeline:t},t.add(e),e.id}cancel(e=0){const t=this.toTicks(e);return this._timeline.forEachFrom(t,n=>this.clear(n.id)),this._repeatedEvents.forEachFrom(t,n=>this.clear(n.id)),this}_bindClockEvents(){this._clock.on("start",(e,t)=>{t=new TicksClass(this.context,t).toSeconds(),this.emit("start",e,t)}),this._clock.on("stop",e=>{this.emit("stop",e)}),this._clock.on("pause",e=>{this.emit("pause",e)})}get state(){return this._clock.getStateAtTime(this.now())}start(e,t){let n;return isDefined(t)&&(n=this.toTicks(t)),this._clock.start(e,n),this}stop(e){return this._clock.stop(e),this}pause(e){return this._clock.pause(e),this}toggle(e){return e=this.toSeconds(e),this._clock.getStateAtTime(e)!=="started"?this.start(e):this.stop(e),this}get timeSignature(){return this._timeSignature}set timeSignature(e){isArray(e)&&(e=e[0]/e[1]*4),this._timeSignature=e}get loopStart(){return new TimeClass(this.context,this._loopStart,"i").toSeconds()}set loopStart(e){this._loopStart=this.toTicks(e)}get loopEnd(){return new TimeClass(this.context,this._loopEnd,"i").toSeconds()}set loopEnd(e){this._loopEnd=this.toTicks(e)}get loop(){return this._loop.get(this.now())}set loop(e){this._loop.set(e,this.now())}setLoopPoints(e,t){return this.loopStart=e,this.loopEnd=t,this}get swing(){return this._swingAmount}set swing(e){this._swingAmount=e}get swingSubdivision(){return new TicksClass(this.context,this._swingTicks).toNotation()}set swingSubdivision(e){this._swingTicks=this.toTicks(e)}get position(){const e=this.now(),t=this._clock.getTicksAtTime(e);return new TicksClass(this.context,t).toBarsBeatsSixteenths()}set position(e){const t=this.toTicks(e);this.ticks=t}get seconds(){return this._clock.seconds}set seconds(e){const t=this.now(),n=this._clock.frequency.timeToTicks(e,t);this.ticks=n}get progress(){if(this.loop){const e=this.now();return(this._clock.getTicksAtTime(e)-this._loopStart)/(this._loopEnd-this._loopStart)}else return 0}get ticks(){return this._clock.ticks}set ticks(e){if(this._clock.ticks!==e){const t=this.now();if(this.state==="started"){const n=this._clock.getTicksAtTime(t),o=this._clock.frequency.getDurationOfTicks(Math.ceil(n)-n,t),r=t+o;this.emit("stop",r),this._clock.setTicksAtTime(e,r),this.emit("start",r,this._clock.getSecondsAtTime(r))}else this._clock.setTicksAtTime(e,t)}}getTicksAtTime(e){return Math.round(this._clock.getTicksAtTime(e))}getSecondsAtTime(e){return this._clock.getSecondsAtTime(e)}get PPQ(){return this._clock.frequency.multiplier}set PPQ(e){this._clock.frequency.multiplier=e}nextSubdivision(e){if(e=this.toTicks(e),this.state!=="started")return 0;{const t=this.now(),n=this.getTicksAtTime(t),o=e-n%e;return this._clock.nextTickTime(o,t)}}syncSignal(e,t){if(!t){const o=this.now();if(e.getValueAtTime(o)!==0){const a=1/(60/this.bpm.getValueAtTime(o)/this.PPQ);t=e.getValueAtTime(o)/a}else t=0}const n=new Gain(t);return this.bpm.connect(n),n.connect(e._param),this._syncedSignals.push({initial:e.value,ratio:n,signal:e}),e.value=0,this}unsyncSignal(e){for(let t=this._syncedSignals.length-1;t>=0;t--){const n=this._syncedSignals[t];n.signal===e&&(n.ratio.dispose(),n.signal.value=n.initial,this._syncedSignals.splice(t,1))}return this}dispose(){return super.dispose(),this._clock.dispose(),writable(this,"bpm"),this._timeline.dispose(),this._repeatedEvents.dispose(),this}};Emitter.mixin(Transport$1);onContextInit(s=>{s.transport=new Transport$1({context:s})});onContextClose(s=>{s.transport.dispose()});class Source extends ToneAudioNode{constructor(e){super(e),this.input=void 0,this._state=new StateTimeline("stopped"),this._synced=!1,this._scheduled=[],this._syncedStart=noOp,this._syncedStop=noOp,this._state.memory=100,this._state.increasing=!0,this._volume=this.output=new Volume({context:this.context,mute:e.mute,volume:e.volume}),this.volume=this._volume.volume,readOnly(this,"volume"),this.onstop=e.onstop}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{mute:!1,onstop:noOp,volume:0})}get state(){return this._synced?this.context.transport.state==="started"?this._state.getValueAtTime(this.context.transport.seconds):"stopped":this._state.getValueAtTime(this.now())}get mute(){return this._volume.mute}set mute(e){this._volume.mute=e}_clampToCurrentTime(e){return this._synced?e:Math.max(e,this.context.currentTime)}start(e,t,n){let o=isUndef(e)&&this._synced?this.context.transport.seconds:this.toSeconds(e);if(o=this._clampToCurrentTime(o),!this._synced&&this._state.getValueAtTime(o)==="started")assert(GT(o,this._state.get(o).time),"Start time must be strictly greater than previous start time"),this._state.cancel(o),this._state.setStateAtTime("started",o),this.log("restart",o),this.restart(o,t,n);else if(this.log("start",o),this._state.setStateAtTime("started",o),this._synced){const r=this._state.get(o);r&&(r.offset=this.toSeconds(defaultArg(t,0)),r.duration=n?this.toSeconds(n):void 0);const a=this.context.transport.schedule(c=>{this._start(c,t,n)},o);this._scheduled.push(a),this.context.transport.state==="started"&&this.context.transport.getSecondsAtTime(this.immediate())>o&&this._syncedStart(this.now(),this.context.transport.seconds)}else assertContextRunning(this.context),this._start(o,t,n);return this}stop(e){let t=isUndef(e)&&this._synced?this.context.transport.seconds:this.toSeconds(e);if(t=this._clampToCurrentTime(t),this._state.getValueAtTime(t)==="started"||isDefined(this._state.getNextState("started",t))){if(this.log("stop",t),!this._synced)this._stop(t);else{const n=this.context.transport.schedule(this._stop.bind(this),t);this._scheduled.push(n)}this._state.cancel(t),this._state.setStateAtTime("stopped",t)}return this}restart(e,t,n){return e=this.toSeconds(e),this._state.getValueAtTime(e)==="started"&&(this._state.cancel(e),this._restart(e,t,n)),this}sync(){return this._synced||(this._synced=!0,this._syncedStart=(e,t)=>{if(t>0){const n=this._state.get(t);if(n&&n.state==="started"&&n.time!==t){const o=t-this.toSeconds(n.time);let r;n.duration&&(r=this.toSeconds(n.duration)-o),this._start(e,this.toSeconds(n.offset)+o,r)}}},this._syncedStop=e=>{const t=this.context.transport.getSecondsAtTime(Math.max(e-this.sampleTime,0));this._state.getValueAtTime(t)==="started"&&this._stop(e)},this.context.transport.on("start",this._syncedStart),this.context.transport.on("loopStart",this._syncedStart),this.context.transport.on("stop",this._syncedStop),this.context.transport.on("pause",this._syncedStop),this.context.transport.on("loopEnd",this._syncedStop)),this}unsync(){return this._synced&&(this.context.transport.off("stop",this._syncedStop),this.context.transport.off("pause",this._syncedStop),this.context.transport.off("loopEnd",this._syncedStop),this.context.transport.off("start",this._syncedStart),this.context.transport.off("loopStart",this._syncedStart)),this._synced=!1,this._scheduled.forEach(e=>this.context.transport.clear(e)),this._scheduled=[],this._state.cancel(0),this._stop(0),this}dispose(){return super.dispose(),this.onstop=noOp,this.unsync(),this._volume.dispose(),this._state.dispose(),this}}class ToneBufferSource extends OneShotSource{constructor(){super(optionsFromArguments(ToneBufferSource.getDefaults(),arguments,["url","onload"])),this.name="ToneBufferSource",this._source=this.context.createBufferSource(),this._internalChannels=[this._source],this._sourceStarted=!1,this._sourceStopped=!1;const e=optionsFromArguments(ToneBufferSource.getDefaults(),arguments,["url","onload"]);connect(this._source,this._gainNode),this._source.onended=()=>this._stopSource(),this.playbackRate=new Param({context:this.context,param:this._source.playbackRate,units:"positive",value:e.playbackRate}),this.loop=e.loop,this.loopStart=e.loopStart,this.loopEnd=e.loopEnd,this._buffer=new ToneAudioBuffer(e.url,e.onload,e.onerror),this._internalChannels.push(this._source)}static getDefaults(){return Object.assign(OneShotSource.getDefaults(),{url:new ToneAudioBuffer,loop:!1,loopEnd:0,loopStart:0,onload:noOp,onerror:noOp,playbackRate:1})}get fadeIn(){return this._fadeIn}set fadeIn(e){this._fadeIn=e}get fadeOut(){return this._fadeOut}set fadeOut(e){this._fadeOut=e}get curve(){return this._curve}set curve(e){this._curve=e}start(e,t,n,o=1){assert(this.buffer.loaded,"buffer is either not set or not loaded");const r=this.toSeconds(e);this._startGain(r,o),this.loop?t=defaultArg(t,this.loopStart):t=defaultArg(t,0);let a=Math.max(this.toSeconds(t),0);if(this.loop){const c=this.toSeconds(this.loopEnd)||this.buffer.duration,l=this.toSeconds(this.loopStart),u=c-l;GTE(a,c)&&(a=(a-l)%u+l),EQ(a,this.buffer.duration)&&(a=0)}if(this._source.buffer=this.buffer.get(),this._source.loopEnd=this.toSeconds(this.loopEnd)||this.buffer.duration,LT(a,this.buffer.duration)&&(this._sourceStarted=!0,this._source.start(r,a)),isDefined(n)){let c=this.toSeconds(n);c=Math.max(c,0),this.stop(r+c)}return this}_stopSource(e){!this._sourceStopped&&this._sourceStarted&&(this._sourceStopped=!0,this._source.stop(this.toSeconds(e)),this._onended())}get loopStart(){return this._source.loopStart}set loopStart(e){this._source.loopStart=this.toSeconds(e)}get loopEnd(){return this._source.loopEnd}set loopEnd(e){this._source.loopEnd=this.toSeconds(e)}get buffer(){return this._buffer}set buffer(e){this._buffer.set(e)}get loop(){return this._source.loop}set loop(e){this._source.loop=e,this._sourceStarted&&this.cancelStop()}dispose(){return super.dispose(),this._source.onended=null,this._source.disconnect(),this._buffer.dispose(),this.playbackRate.dispose(),this}}class Noise extends Source{constructor(){super(optionsFromArguments(Noise.getDefaults(),arguments,["type"])),this.name="Noise",this._source=null;const e=optionsFromArguments(Noise.getDefaults(),arguments,["type"]);this._playbackRate=e.playbackRate,this.type=e.type,this._fadeIn=e.fadeIn,this._fadeOut=e.fadeOut}static getDefaults(){return Object.assign(Source.getDefaults(),{fadeIn:0,fadeOut:0,playbackRate:1,type:"white"})}get type(){return this._type}set type(e){if(assert(e in _noiseBuffers,"Noise: invalid type: "+e),this._type!==e&&(this._type=e,this.state==="started")){const t=this.now();this._stop(t),this._start(t)}}get playbackRate(){return this._playbackRate}set playbackRate(e){this._playbackRate=e,this._source&&(this._source.playbackRate.value=e)}_start(e){const t=_noiseBuffers[this._type];this._source=new ToneBufferSource({url:t,context:this.context,fadeIn:this._fadeIn,fadeOut:this._fadeOut,loop:!0,onended:()=>this.onstop(this),playbackRate:this._playbackRate}).connect(this.output),this._source.start(this.toSeconds(e),Math.random()*(t.duration-.001))}_stop(e){this._source&&(this._source.stop(this.toSeconds(e)),this._source=null)}get fadeIn(){return this._fadeIn}set fadeIn(e){this._fadeIn=e,this._source&&(this._source.fadeIn=this._fadeIn)}get fadeOut(){return this._fadeOut}set fadeOut(e){this._fadeOut=e,this._source&&(this._source.fadeOut=this._fadeOut)}_restart(e){this._stop(e),this._start(e)}dispose(){return super.dispose(),this._source&&this._source.disconnect(),this}}const BUFFER_LENGTH=44100*5,NUM_CHANNELS=2,_noiseCache={brown:null,pink:null,white:null},_noiseBuffers={get brown(){if(!_noiseCache.brown){const s=[];for(let e=0;e<NUM_CHANNELS;e++){const t=new Float32Array(BUFFER_LENGTH);s[e]=t;let n=0;for(let o=0;o<BUFFER_LENGTH;o++){const r=Math.random()*2-1;t[o]=(n+.02*r)/1.02,n=t[o],t[o]*=3.5}}_noiseCache.brown=new ToneAudioBuffer().fromArray(s)}return _noiseCache.brown},get pink(){if(!_noiseCache.pink){const s=[];for(let e=0;e<NUM_CHANNELS;e++){const t=new Float32Array(BUFFER_LENGTH);s[e]=t;let n,o,r,a,c,l,u;n=o=r=a=c=l=u=0;for(let d=0;d<BUFFER_LENGTH;d++){const f=Math.random()*2-1;n=.99886*n+f*.0555179,o=.99332*o+f*.0750759,r=.969*r+f*.153852,a=.8665*a+f*.3104856,c=.55*c+f*.5329522,l=-.7616*l-f*.016898,t[d]=n+o+r+a+c+l+u+f*.5362,t[d]*=.11,u=f*.115926}}_noiseCache.pink=new ToneAudioBuffer().fromArray(s)}return _noiseCache.pink},get white(){if(!_noiseCache.white){const s=[];for(let e=0;e<NUM_CHANNELS;e++){const t=new Float32Array(BUFFER_LENGTH);s[e]=t;for(let n=0;n<BUFFER_LENGTH;n++)t[n]=Math.random()*2-1}_noiseCache.white=new ToneAudioBuffer().fromArray(s)}return _noiseCache.white}};class UserMedia extends ToneAudioNode{constructor(){super(optionsFromArguments(UserMedia.getDefaults(),arguments,["volume"])),this.name="UserMedia";const e=optionsFromArguments(UserMedia.getDefaults(),arguments,["volume"]);this._volume=this.output=new Volume({context:this.context,volume:e.volume}),this.volume=this._volume.volume,readOnly(this,"volume"),this.mute=e.mute}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{mute:!1,volume:0})}open(e){return __awaiter(this,void 0,void 0,function*(){assert(UserMedia.supported,"UserMedia is not supported"),this.state==="started"&&this.close();const t=yield UserMedia.enumerateDevices();isNumber(e)?this._device=t[e]:(this._device=t.find(r=>r.label===e||r.deviceId===e),!this._device&&t.length>0&&(this._device=t[0]),assert(isDefined(this._device),`No matching device ${e}`));const n={audio:{echoCancellation:!1,sampleRate:this.context.sampleRate,noiseSuppression:!1,mozNoiseSuppression:!1}};this._device&&(n.audio.deviceId=this._device.deviceId);const o=yield navigator.mediaDevices.getUserMedia(n);if(!this._stream){this._stream=o;const r=this.context.createMediaStreamSource(o);connect(r,this.output),this._mediaStream=r}return this})}close(){return this._stream&&this._mediaStream&&(this._stream.getAudioTracks().forEach(e=>{e.stop()}),this._stream=void 0,this._mediaStream.disconnect(),this._mediaStream=void 0),this._device=void 0,this}static enumerateDevices(){return __awaiter(this,void 0,void 0,function*(){return(yield navigator.mediaDevices.enumerateDevices()).filter(t=>t.kind==="audioinput")})}get state(){return this._stream&&this._stream.active?"started":"stopped"}get deviceId(){if(this._device)return this._device.deviceId}get groupId(){if(this._device)return this._device.groupId}get label(){if(this._device)return this._device.label}get mute(){return this._volume.mute}set mute(e){this._volume.mute=e}dispose(){return super.dispose(),this.close(),this._volume.dispose(),this.volume.dispose(),this}static get supported(){return isDefined(navigator.mediaDevices)&&isDefined(navigator.mediaDevices.getUserMedia)}}function generateWaveform(s,e){return __awaiter(this,void 0,void 0,function*(){const t=e/s.context.sampleRate,n=new OfflineContext(1,t,s.context.sampleRate);return new s.constructor(Object.assign(s.get(),{frequency:2/t,detune:0,context:n})).toDestination().start(0),(yield n.render()).getChannelData(0)})}class ToneOscillatorNode extends OneShotSource{constructor(){super(optionsFromArguments(ToneOscillatorNode.getDefaults(),arguments,["frequency","type"])),this.name="ToneOscillatorNode",this._oscillator=this.context.createOscillator(),this._internalChannels=[this._oscillator];const e=optionsFromArguments(ToneOscillatorNode.getDefaults(),arguments,["frequency","type"]);connect(this._oscillator,this._gainNode),this.type=e.type,this.frequency=new Param({context:this.context,param:this._oscillator.frequency,units:"frequency",value:e.frequency}),this.detune=new Param({context:this.context,param:this._oscillator.detune,units:"cents",value:e.detune}),readOnly(this,["frequency","detune"])}static getDefaults(){return Object.assign(OneShotSource.getDefaults(),{detune:0,frequency:440,type:"sine"})}start(e){const t=this.toSeconds(e);return this.log("start",t),this._startGain(t),this._oscillator.start(t),this}_stopSource(e){this._oscillator.stop(e)}setPeriodicWave(e){return this._oscillator.setPeriodicWave(e),this}get type(){return this._oscillator.type}set type(e){this._oscillator.type=e}dispose(){return super.dispose(),this.state==="started"&&this.stop(),this._oscillator.disconnect(),this.frequency.dispose(),this.detune.dispose(),this}}class Oscillator extends Source{constructor(){super(optionsFromArguments(Oscillator.getDefaults(),arguments,["frequency","type"])),this.name="Oscillator",this._oscillator=null;const e=optionsFromArguments(Oscillator.getDefaults(),arguments,["frequency","type"]);this.frequency=new Signal({context:this.context,units:"frequency",value:e.frequency}),readOnly(this,"frequency"),this.detune=new Signal({context:this.context,units:"cents",value:e.detune}),readOnly(this,"detune"),this._partials=e.partials,this._partialCount=e.partialCount,this._type=e.type,e.partialCount&&e.type!=="custom"&&(this._type=this.baseType+e.partialCount.toString()),this.phase=e.phase}static getDefaults(){return Object.assign(Source.getDefaults(),{detune:0,frequency:440,partialCount:0,partials:[],phase:0,type:"sine"})}_start(e){const t=this.toSeconds(e),n=new ToneOscillatorNode({context:this.context,onended:()=>this.onstop(this)});this._oscillator=n,this._wave?this._oscillator.setPeriodicWave(this._wave):this._oscillator.type=this._type,this._oscillator.connect(this.output),this.frequency.connect(this._oscillator.frequency),this.detune.connect(this._oscillator.detune),this._oscillator.start(t)}_stop(e){const t=this.toSeconds(e);this._oscillator&&this._oscillator.stop(t)}_restart(e){const t=this.toSeconds(e);return this.log("restart",t),this._oscillator&&this._oscillator.cancelStop(),this._state.cancel(t),this}syncFrequency(){return this.context.transport.syncSignal(this.frequency),this}unsyncFrequency(){return this.context.transport.unsyncSignal(this.frequency),this}_getCachedPeriodicWave(){if(this._type==="custom")return Oscillator._periodicWaveCache.find(t=>t.phase===this._phase&&deepEquals(t.partials,this._partials));{const e=Oscillator._periodicWaveCache.find(t=>t.type===this._type&&t.phase===this._phase);return this._partialCount=e?e.partialCount:this._partialCount,e}}get type(){return this._type}set type(e){this._type=e;const t=["sine","square","sawtooth","triangle"].indexOf(e)!==-1;if(this._phase===0&&t)this._wave=void 0,this._partialCount=0,this._oscillator!==null&&(this._oscillator.type=e);else{const n=this._getCachedPeriodicWave();if(isDefined(n)){const{partials:o,wave:r}=n;this._wave=r,this._partials=o,this._oscillator!==null&&this._oscillator.setPeriodicWave(this._wave)}else{const[o,r]=this._getRealImaginary(e,this._phase),a=this.context.createPeriodicWave(o,r);this._wave=a,this._oscillator!==null&&this._oscillator.setPeriodicWave(this._wave),Oscillator._periodicWaveCache.push({imag:r,partialCount:this._partialCount,partials:this._partials,phase:this._phase,real:o,type:this._type,wave:this._wave}),Oscillator._periodicWaveCache.length>100&&Oscillator._periodicWaveCache.shift()}}}get baseType(){return this._type.replace(this.partialCount.toString(),"")}set baseType(e){this.partialCount&&this._type!=="custom"&&e!=="custom"?this.type=e+this.partialCount:this.type=e}get partialCount(){return this._partialCount}set partialCount(e){assertRange(e,0);let t=this._type;const n=/^(sine|triangle|square|sawtooth)(\d+)$/.exec(this._type);if(n&&(t=n[1]),this._type!=="custom")e===0?this.type=t:this.type=t+e.toString();else{const o=new Float32Array(e);this._partials.forEach((r,a)=>o[a]=r),this._partials=Array.from(o),this.type=this._type}}_getRealImaginary(e,t){let o=2048;const r=new Float32Array(o),a=new Float32Array(o);let c=1;if(e==="custom"){if(c=this._partials.length+1,this._partialCount=this._partials.length,o=c,this._partials.length===0)return[r,a]}else{const l=/^(sine|triangle|square|sawtooth)(\d+)$/.exec(e);l?(c=parseInt(l[2],10)+1,this._partialCount=parseInt(l[2],10),e=l[1],c=Math.max(c,2),o=c):this._partialCount=0,this._partials=[]}for(let l=1;l<o;++l){const u=2/(l*Math.PI);let d;switch(e){case"sine":d=l<=c?1:0,this._partials[l-1]=d;break;case"square":d=l&1?2*u:0,this._partials[l-1]=d;break;case"sawtooth":d=u*(l&1?1:-1),this._partials[l-1]=d;break;case"triangle":l&1?d=2*(u*u)*(l-1>>1&1?-1:1):d=0,this._partials[l-1]=d;break;case"custom":d=this._partials[l-1];break;default:throw new TypeError("Oscillator: invalid type: "+e)}d!==0?(r[l]=-d*Math.sin(t*l),a[l]=d*Math.cos(t*l)):(r[l]=0,a[l]=0)}return[r,a]}_inverseFFT(e,t,n){let o=0;const r=e.length;for(let a=0;a<r;a++)o+=e[a]*Math.cos(a*n)+t[a]*Math.sin(a*n);return o}getInitialValue(){const[e,t]=this._getRealImaginary(this._type,0);let n=0;const o=Math.PI*2,r=32;for(let a=0;a<r;a++)n=Math.max(this._inverseFFT(e,t,a/r*o),n);return clamp(-this._inverseFFT(e,t,this._phase)/n,-1,1)}get partials(){return this._partials.slice(0,this.partialCount)}set partials(e){this._partials=e,this._partialCount=this._partials.length,e.length&&(this.type="custom")}get phase(){return this._phase*(180/Math.PI)}set phase(e){this._phase=e*Math.PI/180,this.type=this._type}asArray(e=1024){return __awaiter(this,void 0,void 0,function*(){return generateWaveform(this,e)})}dispose(){return super.dispose(),this._oscillator!==null&&this._oscillator.dispose(),this._wave=void 0,this.frequency.dispose(),this.detune.dispose(),this}}Oscillator._periodicWaveCache=[];class SignalOperator extends ToneAudioNode{constructor(){super(Object.assign(optionsFromArguments(SignalOperator.getDefaults(),arguments,["context"])))}connect(e,t=0,n=0){return connectSignal(this,e,t,n),this}}class WaveShaper extends SignalOperator{constructor(){super(Object.assign(optionsFromArguments(WaveShaper.getDefaults(),arguments,["mapping","length"]))),this.name="WaveShaper",this._shaper=this.context.createWaveShaper(),this.input=this._shaper,this.output=this._shaper;const e=optionsFromArguments(WaveShaper.getDefaults(),arguments,["mapping","length"]);isArray(e.mapping)||e.mapping instanceof Float32Array?this.curve=Float32Array.from(e.mapping):isFunction(e.mapping)&&this.setMap(e.mapping,e.length)}static getDefaults(){return Object.assign(Signal.getDefaults(),{length:1024})}setMap(e,t=1024){const n=new Float32Array(t);for(let o=0,r=t;o<r;o++){const a=o/(r-1)*2-1;n[o]=e(a,o)}return this.curve=n,this}get curve(){return this._shaper.curve}set curve(e){this._shaper.curve=e}get oversample(){return this._shaper.oversample}set oversample(e){const t=["none","2x","4x"].some(n=>n.includes(e));assert(t,"oversampling must be either 'none', '2x', or '4x'"),this._shaper.oversample=e}dispose(){return super.dispose(),this._shaper.disconnect(),this}}class AudioToGain extends SignalOperator{constructor(){super(...arguments),this.name="AudioToGain",this._norm=new WaveShaper({context:this.context,mapping:e=>(e+1)/2}),this.input=this._norm,this.output=this._norm}dispose(){return super.dispose(),this._norm.dispose(),this}}class Multiply extends Signal{constructor(){super(Object.assign(optionsFromArguments(Multiply.getDefaults(),arguments,["value"]))),this.name="Multiply",this.override=!1;const e=optionsFromArguments(Multiply.getDefaults(),arguments,["value"]);this._mult=this.input=this.output=new Gain({context:this.context,minValue:e.minValue,maxValue:e.maxValue}),this.factor=this._param=this._mult.gain,this.factor.setValueAtTime(e.value,0)}static getDefaults(){return Object.assign(Signal.getDefaults(),{value:0})}dispose(){return super.dispose(),this._mult.dispose(),this}}class AMOscillator extends Source{constructor(){super(optionsFromArguments(AMOscillator.getDefaults(),arguments,["frequency","type","modulationType"])),this.name="AMOscillator",this._modulationScale=new AudioToGain({context:this.context}),this._modulationNode=new Gain({context:this.context});const e=optionsFromArguments(AMOscillator.getDefaults(),arguments,["frequency","type","modulationType"]);this._carrier=new Oscillator({context:this.context,detune:e.detune,frequency:e.frequency,onstop:()=>this.onstop(this),phase:e.phase,type:e.type}),this.frequency=this._carrier.frequency,this.detune=this._carrier.detune,this._modulator=new Oscillator({context:this.context,phase:e.phase,type:e.modulationType}),this.harmonicity=new Multiply({context:this.context,units:"positive",value:e.harmonicity}),this.frequency.chain(this.harmonicity,this._modulator.frequency),this._modulator.chain(this._modulationScale,this._modulationNode.gain),this._carrier.chain(this._modulationNode,this.output),readOnly(this,["frequency","detune","harmonicity"])}static getDefaults(){return Object.assign(Oscillator.getDefaults(),{harmonicity:1,modulationType:"square"})}_start(e){this._modulator.start(e),this._carrier.start(e)}_stop(e){this._modulator.stop(e),this._carrier.stop(e)}_restart(e){this._modulator.restart(e),this._carrier.restart(e)}get type(){return this._carrier.type}set type(e){this._carrier.type=e}get baseType(){return this._carrier.baseType}set baseType(e){this._carrier.baseType=e}get partialCount(){return this._carrier.partialCount}set partialCount(e){this._carrier.partialCount=e}get modulationType(){return this._modulator.type}set modulationType(e){this._modulator.type=e}get phase(){return this._carrier.phase}set phase(e){this._carrier.phase=e,this._modulator.phase=e}get partials(){return this._carrier.partials}set partials(e){this._carrier.partials=e}asArray(e=1024){return __awaiter(this,void 0,void 0,function*(){return generateWaveform(this,e)})}dispose(){return super.dispose(),this.frequency.dispose(),this.detune.dispose(),this.harmonicity.dispose(),this._carrier.dispose(),this._modulator.dispose(),this._modulationNode.dispose(),this._modulationScale.dispose(),this}}class FMOscillator extends Source{constructor(){super(optionsFromArguments(FMOscillator.getDefaults(),arguments,["frequency","type","modulationType"])),this.name="FMOscillator",this._modulationNode=new Gain({context:this.context,gain:0});const e=optionsFromArguments(FMOscillator.getDefaults(),arguments,["frequency","type","modulationType"]);this._carrier=new Oscillator({context:this.context,detune:e.detune,frequency:0,onstop:()=>this.onstop(this),phase:e.phase,type:e.type}),this.detune=this._carrier.detune,this.frequency=new Signal({context:this.context,units:"frequency",value:e.frequency}),this._modulator=new Oscillator({context:this.context,phase:e.phase,type:e.modulationType}),this.harmonicity=new Multiply({context:this.context,units:"positive",value:e.harmonicity}),this.modulationIndex=new Multiply({context:this.context,units:"positive",value:e.modulationIndex}),this.frequency.connect(this._carrier.frequency),this.frequency.chain(this.harmonicity,this._modulator.frequency),this.frequency.chain(this.modulationIndex,this._modulationNode),this._modulator.connect(this._modulationNode.gain),this._modulationNode.connect(this._carrier.frequency),this._carrier.connect(this.output),this.detune.connect(this._modulator.detune),readOnly(this,["modulationIndex","frequency","detune","harmonicity"])}static getDefaults(){return Object.assign(Oscillator.getDefaults(),{harmonicity:1,modulationIndex:2,modulationType:"square"})}_start(e){this._modulator.start(e),this._carrier.start(e)}_stop(e){this._modulator.stop(e),this._carrier.stop(e)}_restart(e){return this._modulator.restart(e),this._carrier.restart(e),this}get type(){return this._carrier.type}set type(e){this._carrier.type=e}get baseType(){return this._carrier.baseType}set baseType(e){this._carrier.baseType=e}get partialCount(){return this._carrier.partialCount}set partialCount(e){this._carrier.partialCount=e}get modulationType(){return this._modulator.type}set modulationType(e){this._modulator.type=e}get phase(){return this._carrier.phase}set phase(e){this._carrier.phase=e,this._modulator.phase=e}get partials(){return this._carrier.partials}set partials(e){this._carrier.partials=e}asArray(e=1024){return __awaiter(this,void 0,void 0,function*(){return generateWaveform(this,e)})}dispose(){return super.dispose(),this.frequency.dispose(),this.harmonicity.dispose(),this._carrier.dispose(),this._modulator.dispose(),this._modulationNode.dispose(),this.modulationIndex.dispose(),this}}class PulseOscillator extends Source{constructor(){super(optionsFromArguments(PulseOscillator.getDefaults(),arguments,["frequency","width"])),this.name="PulseOscillator",this._widthGate=new Gain({context:this.context,gain:0}),this._thresh=new WaveShaper({context:this.context,mapping:t=>t<=0?-1:1});const e=optionsFromArguments(PulseOscillator.getDefaults(),arguments,["frequency","width"]);this.width=new Signal({context:this.context,units:"audioRange",value:e.width}),this._triangle=new Oscillator({context:this.context,detune:e.detune,frequency:e.frequency,onstop:()=>this.onstop(this),phase:e.phase,type:"triangle"}),this.frequency=this._triangle.frequency,this.detune=this._triangle.detune,this._triangle.chain(this._thresh,this.output),this.width.chain(this._widthGate,this._thresh),readOnly(this,["width","frequency","detune"])}static getDefaults(){return Object.assign(Source.getDefaults(),{detune:0,frequency:440,phase:0,type:"pulse",width:.2})}_start(e){e=this.toSeconds(e),this._triangle.start(e),this._widthGate.gain.setValueAtTime(1,e)}_stop(e){e=this.toSeconds(e),this._triangle.stop(e),this._widthGate.gain.cancelScheduledValues(e),this._widthGate.gain.setValueAtTime(0,e)}_restart(e){this._triangle.restart(e),this._widthGate.gain.cancelScheduledValues(e),this._widthGate.gain.setValueAtTime(1,e)}get phase(){return this._triangle.phase}set phase(e){this._triangle.phase=e}get type(){return"pulse"}get baseType(){return"pulse"}get partials(){return[]}get partialCount(){return 0}set carrierType(e){this._triangle.type=e}asArray(e=1024){return __awaiter(this,void 0,void 0,function*(){return generateWaveform(this,e)})}dispose(){return super.dispose(),this._triangle.dispose(),this.width.dispose(),this._widthGate.dispose(),this._thresh.dispose(),this}}class FatOscillator extends Source{constructor(){super(optionsFromArguments(FatOscillator.getDefaults(),arguments,["frequency","type","spread"])),this.name="FatOscillator",this._oscillators=[];const e=optionsFromArguments(FatOscillator.getDefaults(),arguments,["frequency","type","spread"]);this.frequency=new Signal({context:this.context,units:"frequency",value:e.frequency}),this.detune=new Signal({context:this.context,units:"cents",value:e.detune}),this._spread=e.spread,this._type=e.type,this._phase=e.phase,this._partials=e.partials,this._partialCount=e.partialCount,this.count=e.count,readOnly(this,["frequency","detune"])}static getDefaults(){return Object.assign(Oscillator.getDefaults(),{count:3,spread:20,type:"sawtooth"})}_start(e){e=this.toSeconds(e),this._forEach(t=>t.start(e))}_stop(e){e=this.toSeconds(e),this._forEach(t=>t.stop(e))}_restart(e){this._forEach(t=>t.restart(e))}_forEach(e){for(let t=0;t<this._oscillators.length;t++)e(this._oscillators[t],t)}get type(){return this._type}set type(e){this._type=e,this._forEach(t=>t.type=e)}get spread(){return this._spread}set spread(e){if(this._spread=e,this._oscillators.length>1){const t=-e/2,n=e/(this._oscillators.length-1);this._forEach((o,r)=>o.detune.value=t+n*r)}}get count(){return this._oscillators.length}set count(e){if(assertRange(e,1),this._oscillators.length!==e){this._forEach(t=>t.dispose()),this._oscillators=[];for(let t=0;t<e;t++){const n=new Oscillator({context:this.context,volume:-6-e*1.1,type:this._type,phase:this._phase+t/e*360,partialCount:this._partialCount,onstop:t===0?()=>this.onstop(this):noOp});this.type==="custom"&&(n.partials=this._partials),this.frequency.connect(n.frequency),this.detune.connect(n.detune),n.detune.overridden=!1,n.connect(this.output),this._oscillators[t]=n}this.spread=this._spread,this.state==="started"&&this._forEach(t=>t.start())}}get phase(){return this._phase}set phase(e){this._phase=e,this._forEach((t,n)=>t.phase=this._phase+n/this.count*360)}get baseType(){return this._oscillators[0].baseType}set baseType(e){this._forEach(t=>t.baseType=e),this._type=this._oscillators[0].type}get partials(){return this._oscillators[0].partials}set partials(e){this._partials=e,this._partialCount=this._partials.length,e.length&&(this._type="custom",this._forEach(t=>t.partials=e))}get partialCount(){return this._oscillators[0].partialCount}set partialCount(e){this._partialCount=e,this._forEach(t=>t.partialCount=e),this._type=this._oscillators[0].type}asArray(e=1024){return __awaiter(this,void 0,void 0,function*(){return generateWaveform(this,e)})}dispose(){return super.dispose(),this.frequency.dispose(),this.detune.dispose(),this._forEach(e=>e.dispose()),this}}class PWMOscillator extends Source{constructor(){super(optionsFromArguments(PWMOscillator.getDefaults(),arguments,["frequency","modulationFrequency"])),this.name="PWMOscillator",this.sourceType="pwm",this._scale=new Multiply({context:this.context,value:2});const e=optionsFromArguments(PWMOscillator.getDefaults(),arguments,["frequency","modulationFrequency"]);this._pulse=new PulseOscillator({context:this.context,frequency:e.modulationFrequency}),this._pulse.carrierType="sine",this.modulationFrequency=this._pulse.frequency,this._modulator=new Oscillator({context:this.context,detune:e.detune,frequency:e.frequency,onstop:()=>this.onstop(this),phase:e.phase}),this.frequency=this._modulator.frequency,this.detune=this._modulator.detune,this._modulator.chain(this._scale,this._pulse.width),this._pulse.connect(this.output),readOnly(this,["modulationFrequency","frequency","detune"])}static getDefaults(){return Object.assign(Source.getDefaults(),{detune:0,frequency:440,modulationFrequency:.4,phase:0,type:"pwm"})}_start(e){e=this.toSeconds(e),this._modulator.start(e),this._pulse.start(e)}_stop(e){e=this.toSeconds(e),this._modulator.stop(e),this._pulse.stop(e)}_restart(e){this._modulator.restart(e),this._pulse.restart(e)}get type(){return"pwm"}get baseType(){return"pwm"}get partials(){return[]}get partialCount(){return 0}get phase(){return this._modulator.phase}set phase(e){this._modulator.phase=e}asArray(e=1024){return __awaiter(this,void 0,void 0,function*(){return generateWaveform(this,e)})}dispose(){return super.dispose(),this._pulse.dispose(),this._scale.dispose(),this._modulator.dispose(),this}}const OmniOscillatorSourceMap={am:AMOscillator,fat:FatOscillator,fm:FMOscillator,oscillator:Oscillator,pulse:PulseOscillator,pwm:PWMOscillator};class OmniOscillator extends Source{constructor(){super(optionsFromArguments(OmniOscillator.getDefaults(),arguments,["frequency","type"])),this.name="OmniOscillator";const e=optionsFromArguments(OmniOscillator.getDefaults(),arguments,["frequency","type"]);this.frequency=new Signal({context:this.context,units:"frequency",value:e.frequency}),this.detune=new Signal({context:this.context,units:"cents",value:e.detune}),readOnly(this,["frequency","detune"]),this.set(e)}static getDefaults(){return Object.assign(Oscillator.getDefaults(),FMOscillator.getDefaults(),AMOscillator.getDefaults(),FatOscillator.getDefaults(),PulseOscillator.getDefaults(),PWMOscillator.getDefaults())}_start(e){this._oscillator.start(e)}_stop(e){this._oscillator.stop(e)}_restart(e){return this._oscillator.restart(e),this}get type(){let e="";return["am","fm","fat"].some(t=>this._sourceType===t)&&(e=this._sourceType),e+this._oscillator.type}set type(e){e.substr(0,2)==="fm"?(this._createNewOscillator("fm"),this._oscillator=this._oscillator,this._oscillator.type=e.substr(2)):e.substr(0,2)==="am"?(this._createNewOscillator("am"),this._oscillator=this._oscillator,this._oscillator.type=e.substr(2)):e.substr(0,3)==="fat"?(this._createNewOscillator("fat"),this._oscillator=this._oscillator,this._oscillator.type=e.substr(3)):e==="pwm"?(this._createNewOscillator("pwm"),this._oscillator=this._oscillator):e==="pulse"?this._createNewOscillator("pulse"):(this._createNewOscillator("oscillator"),this._oscillator=this._oscillator,this._oscillator.type=e)}get partials(){return this._oscillator.partials}set partials(e){!this._getOscType(this._oscillator,"pulse")&&!this._getOscType(this._oscillator,"pwm")&&(this._oscillator.partials=e)}get partialCount(){return this._oscillator.partialCount}set partialCount(e){!this._getOscType(this._oscillator,"pulse")&&!this._getOscType(this._oscillator,"pwm")&&(this._oscillator.partialCount=e)}set(e){return Reflect.has(e,"type")&&e.type&&(this.type=e.type),super.set(e),this}_createNewOscillator(e){if(e!==this._sourceType){this._sourceType=e;const t=OmniOscillatorSourceMap[e],n=this.now();if(this._oscillator){const o=this._oscillator;o.stop(n),this.context.setTimeout(()=>o.dispose(),this.blockTime)}this._oscillator=new t({context:this.context}),this.frequency.connect(this._oscillator.frequency),this.detune.connect(this._oscillator.detune),this._oscillator.connect(this.output),this._oscillator.onstop=()=>this.onstop(this),this.state==="started"&&this._oscillator.start(n)}}get phase(){return this._oscillator.phase}set phase(e){this._oscillator.phase=e}get sourceType(){return this._sourceType}set sourceType(e){let t="sine";this._oscillator.type!=="pwm"&&this._oscillator.type!=="pulse"&&(t=this._oscillator.type),e==="fm"?this.type="fm"+t:e==="am"?this.type="am"+t:e==="fat"?this.type="fat"+t:e==="oscillator"?this.type=t:e==="pulse"?this.type="pulse":e==="pwm"&&(this.type="pwm")}_getOscType(e,t){return e instanceof OmniOscillatorSourceMap[t]}get baseType(){return this._oscillator.baseType}set baseType(e){!this._getOscType(this._oscillator,"pulse")&&!this._getOscType(this._oscillator,"pwm")&&e!=="pulse"&&e!=="pwm"&&(this._oscillator.baseType=e)}get width(){if(this._getOscType(this._oscillator,"pulse"))return this._oscillator.width}get count(){if(this._getOscType(this._oscillator,"fat"))return this._oscillator.count}set count(e){this._getOscType(this._oscillator,"fat")&&isNumber(e)&&(this._oscillator.count=e)}get spread(){if(this._getOscType(this._oscillator,"fat"))return this._oscillator.spread}set spread(e){this._getOscType(this._oscillator,"fat")&&isNumber(e)&&(this._oscillator.spread=e)}get modulationType(){if(this._getOscType(this._oscillator,"fm")||this._getOscType(this._oscillator,"am"))return this._oscillator.modulationType}set modulationType(e){(this._getOscType(this._oscillator,"fm")||this._getOscType(this._oscillator,"am"))&&isString(e)&&(this._oscillator.modulationType=e)}get modulationIndex(){if(this._getOscType(this._oscillator,"fm"))return this._oscillator.modulationIndex}get harmonicity(){if(this._getOscType(this._oscillator,"fm")||this._getOscType(this._oscillator,"am"))return this._oscillator.harmonicity}get modulationFrequency(){if(this._getOscType(this._oscillator,"pwm"))return this._oscillator.modulationFrequency}asArray(e=1024){return __awaiter(this,void 0,void 0,function*(){return generateWaveform(this,e)})}dispose(){return super.dispose(),this.detune.dispose(),this.frequency.dispose(),this._oscillator.dispose(),this}}class Add extends Signal{constructor(){super(Object.assign(optionsFromArguments(Add.getDefaults(),arguments,["value"]))),this.override=!1,this.name="Add",this._sum=new Gain({context:this.context}),this.input=this._sum,this.output=this._sum,this.addend=this._param,connectSeries(this._constantSource,this._sum)}static getDefaults(){return Object.assign(Signal.getDefaults(),{value:0})}dispose(){return super.dispose(),this._sum.dispose(),this}}class Scale extends SignalOperator{constructor(){super(Object.assign(optionsFromArguments(Scale.getDefaults(),arguments,["min","max"]))),this.name="Scale";const e=optionsFromArguments(Scale.getDefaults(),arguments,["min","max"]);this._mult=this.input=new Multiply({context:this.context,value:e.max-e.min}),this._add=this.output=new Add({context:this.context,value:e.min}),this._min=e.min,this._max=e.max,this.input.connect(this.output)}static getDefaults(){return Object.assign(SignalOperator.getDefaults(),{max:1,min:0})}get min(){return this._min}set min(e){this._min=e,this._setRange()}get max(){return this._max}set max(e){this._max=e,this._setRange()}_setRange(){this._add.value=this._min,this._mult.value=this._max-this._min}dispose(){return super.dispose(),this._add.dispose(),this._mult.dispose(),this}}class Zero extends SignalOperator{constructor(){super(Object.assign(optionsFromArguments(Zero.getDefaults(),arguments))),this.name="Zero",this._gain=new Gain({context:this.context}),this.output=this._gain,this.input=void 0,connect(this.context.getConstant(0),this._gain)}dispose(){return super.dispose(),disconnect(this.context.getConstant(0),this._gain),this}}class LFO extends ToneAudioNode{constructor(){super(optionsFromArguments(LFO.getDefaults(),arguments,["frequency","min","max"])),this.name="LFO",this._stoppedValue=0,this._units="number",this.convert=!0,this._fromType=Param.prototype._fromType,this._toType=Param.prototype._toType,this._is=Param.prototype._is,this._clampValue=Param.prototype._clampValue;const e=optionsFromArguments(LFO.getDefaults(),arguments,["frequency","min","max"]);this._oscillator=new Oscillator(e),this.frequency=this._oscillator.frequency,this._amplitudeGain=new Gain({context:this.context,gain:e.amplitude,units:"normalRange"}),this.amplitude=this._amplitudeGain.gain,this._stoppedSignal=new Signal({context:this.context,units:"audioRange",value:0}),this._zeros=new Zero({context:this.context}),this._a2g=new AudioToGain({context:this.context}),this._scaler=this.output=new Scale({context:this.context,max:e.max,min:e.min}),this.units=e.units,this.min=e.min,this.max=e.max,this._oscillator.chain(this._amplitudeGain,this._a2g,this._scaler),this._zeros.connect(this._a2g),this._stoppedSignal.connect(this._a2g),readOnly(this,["amplitude","frequency"]),this.phase=e.phase}static getDefaults(){return Object.assign(Oscillator.getDefaults(),{amplitude:1,frequency:"4n",max:1,min:0,type:"sine",units:"number"})}start(e){return e=this.toSeconds(e),this._stoppedSignal.setValueAtTime(0,e),this._oscillator.start(e),this}stop(e){return e=this.toSeconds(e),this._stoppedSignal.setValueAtTime(this._stoppedValue,e),this._oscillator.stop(e),this}sync(){return this._oscillator.sync(),this._oscillator.syncFrequency(),this}unsync(){return this._oscillator.unsync(),this._oscillator.unsyncFrequency(),this}_setStoppedValue(){this._stoppedValue=this._oscillator.getInitialValue(),this._stoppedSignal.value=this._stoppedValue}get min(){return this._toType(this._scaler.min)}set min(e){e=this._fromType(e),this._scaler.min=e}get max(){return this._toType(this._scaler.max)}set max(e){e=this._fromType(e),this._scaler.max=e}get type(){return this._oscillator.type}set type(e){this._oscillator.type=e,this._setStoppedValue()}get partials(){return this._oscillator.partials}set partials(e){this._oscillator.partials=e,this._setStoppedValue()}get phase(){return this._oscillator.phase}set phase(e){this._oscillator.phase=e,this._setStoppedValue()}get units(){return this._units}set units(e){const t=this.min,n=this.max;this._units=e,this.min=t,this.max=n}get state(){return this._oscillator.state}connect(e,t,n){return(e instanceof Param||e instanceof Signal)&&(this.convert=e.convert,this.units=e.units),connectSignal(this,e,t,n),this}dispose(){return super.dispose(),this._oscillator.dispose(),this._stoppedSignal.dispose(),this._zeros.dispose(),this._scaler.dispose(),this._a2g.dispose(),this._amplitudeGain.dispose(),this.amplitude.dispose(),this}}function range(s,e=1/0){const t=new WeakMap;return function(n,o){Reflect.defineProperty(n,o,{configurable:!0,enumerable:!0,get:function(){return t.get(this)},set:function(r){assertRange(r,s,e),t.set(this,r)}})}}function timeRange(s,e=1/0){const t=new WeakMap;return function(n,o){Reflect.defineProperty(n,o,{configurable:!0,enumerable:!0,get:function(){return t.get(this)},set:function(r){assertRange(this.toSeconds(r),s,e),t.set(this,r)}})}}class Player extends Source{constructor(){super(optionsFromArguments(Player.getDefaults(),arguments,["url","onload"])),this.name="Player",this._activeSources=new Set;const e=optionsFromArguments(Player.getDefaults(),arguments,["url","onload"]);this._buffer=new ToneAudioBuffer({onload:this._onload.bind(this,e.onload),onerror:e.onerror,reverse:e.reverse,url:e.url}),this.autostart=e.autostart,this._loop=e.loop,this._loopStart=e.loopStart,this._loopEnd=e.loopEnd,this._playbackRate=e.playbackRate,this.fadeIn=e.fadeIn,this.fadeOut=e.fadeOut}static getDefaults(){return Object.assign(Source.getDefaults(),{autostart:!1,fadeIn:0,fadeOut:0,loop:!1,loopEnd:0,loopStart:0,onload:noOp,onerror:noOp,playbackRate:1,reverse:!1})}load(e){return __awaiter(this,void 0,void 0,function*(){return yield this._buffer.load(e),this._onload(),this})}_onload(e=noOp){e(),this.autostart&&this.start()}_onSourceEnd(e){this.onstop(this),this._activeSources.delete(e),this._activeSources.size===0&&!this._synced&&this._state.getValueAtTime(this.now())==="started"&&(this._state.cancel(this.now()),this._state.setStateAtTime("stopped",this.now()))}start(e,t,n){return super.start(e,t,n),this}_start(e,t,n){this._loop?t=defaultArg(t,this._loopStart):t=defaultArg(t,0);const o=this.toSeconds(t),r=n;n=defaultArg(n,Math.max(this._buffer.duration-o,0));let a=this.toSeconds(n);a=a/this._playbackRate,e=this.toSeconds(e);const c=new ToneBufferSource({url:this._buffer,context:this.context,fadeIn:this.fadeIn,fadeOut:this.fadeOut,loop:this._loop,loopEnd:this._loopEnd,loopStart:this._loopStart,onended:this._onSourceEnd.bind(this),playbackRate:this._playbackRate}).connect(this.output);!this._loop&&!this._synced&&(this._state.cancel(e+a),this._state.setStateAtTime("stopped",e+a,{implicitEnd:!0})),this._activeSources.add(c),this._loop&&isUndef(r)?c.start(e,o):c.start(e,o,a-this.toSeconds(this.fadeOut))}_stop(e){const t=this.toSeconds(e);this._activeSources.forEach(n=>n.stop(t))}restart(e,t,n){return super.restart(e,t,n),this}_restart(e,t,n){this._stop(e),this._start(e,t,n)}seek(e,t){const n=this.toSeconds(t);if(this._state.getValueAtTime(n)==="started"){const o=this.toSeconds(e);this._stop(n),this._start(n,o)}return this}setLoopPoints(e,t){return this.loopStart=e,this.loopEnd=t,this}get loopStart(){return this._loopStart}set loopStart(e){this._loopStart=e,this.buffer.loaded&&assertRange(this.toSeconds(e),0,this.buffer.duration),this._activeSources.forEach(t=>{t.loopStart=e})}get loopEnd(){return this._loopEnd}set loopEnd(e){this._loopEnd=e,this.buffer.loaded&&assertRange(this.toSeconds(e),0,this.buffer.duration),this._activeSources.forEach(t=>{t.loopEnd=e})}get buffer(){return this._buffer}set buffer(e){this._buffer.set(e)}get loop(){return this._loop}set loop(e){if(this._loop!==e&&(this._loop=e,this._activeSources.forEach(t=>{t.loop=e}),e)){const t=this._state.getNextState("stopped",this.now());t&&this._state.cancel(t.time)}}get playbackRate(){return this._playbackRate}set playbackRate(e){this._playbackRate=e;const t=this.now(),n=this._state.getNextState("stopped",t);n&&n.implicitEnd&&(this._state.cancel(n.time),this._activeSources.forEach(o=>o.cancelStop())),this._activeSources.forEach(o=>{o.playbackRate.setValueAtTime(e,t)})}get reverse(){return this._buffer.reverse}set reverse(e){this._buffer.reverse=e}get loaded(){return this._buffer.loaded}dispose(){return super.dispose(),this._activeSources.forEach(e=>e.dispose()),this._activeSources.clear(),this._buffer.dispose(),this}}__decorate([timeRange(0)],Player.prototype,"fadeIn",void 0);__decorate([timeRange(0)],Player.prototype,"fadeOut",void 0);class Players extends ToneAudioNode{constructor(){super(optionsFromArguments(Players.getDefaults(),arguments,["urls","onload"],"urls")),this.name="Players",this.input=void 0,this._players=new Map;const e=optionsFromArguments(Players.getDefaults(),arguments,["urls","onload"],"urls");this._volume=this.output=new Volume({context:this.context,volume:e.volume}),this.volume=this._volume.volume,readOnly(this,"volume"),this._buffers=new ToneAudioBuffers({urls:e.urls,onload:e.onload,baseUrl:e.baseUrl,onerror:e.onerror}),this.mute=e.mute,this._fadeIn=e.fadeIn,this._fadeOut=e.fadeOut}static getDefaults(){return Object.assign(Source.getDefaults(),{baseUrl:"",fadeIn:0,fadeOut:0,mute:!1,onload:noOp,onerror:noOp,urls:{},volume:0})}get mute(){return this._volume.mute}set mute(e){this._volume.mute=e}get fadeIn(){return this._fadeIn}set fadeIn(e){this._fadeIn=e,this._players.forEach(t=>{t.fadeIn=e})}get fadeOut(){return this._fadeOut}set fadeOut(e){this._fadeOut=e,this._players.forEach(t=>{t.fadeOut=e})}get state(){return Array.from(this._players).some(([t,n])=>n.state==="started")?"started":"stopped"}has(e){return this._buffers.has(e)}player(e){if(assert(this.has(e),`No Player with the name ${e} exists on this object`),!this._players.has(e)){const t=new Player({context:this.context,fadeIn:this._fadeIn,fadeOut:this._fadeOut,url:this._buffers.get(e)}).connect(this.output);this._players.set(e,t)}return this._players.get(e)}get loaded(){return this._buffers.loaded}add(e,t,n){return assert(!this._buffers.has(e),"A buffer with that name already exists on this object"),this._buffers.add(e,t,n),this}stopAll(e){return this._players.forEach(t=>t.stop(e)),this}dispose(){return super.dispose(),this._volume.dispose(),this.volume.dispose(),this._players.forEach(e=>e.dispose()),this._buffers.dispose(),this}}class GrainPlayer extends Source{constructor(){super(optionsFromArguments(GrainPlayer.getDefaults(),arguments,["url","onload"])),this.name="GrainPlayer",this._loopStart=0,this._loopEnd=0,this._activeSources=[];const e=optionsFromArguments(GrainPlayer.getDefaults(),arguments,["url","onload"]);this.buffer=new ToneAudioBuffer({onload:e.onload,onerror:e.onerror,reverse:e.reverse,url:e.url}),this._clock=new Clock({context:this.context,callback:this._tick.bind(this),frequency:1/e.grainSize}),this._playbackRate=e.playbackRate,this._grainSize=e.grainSize,this._overlap=e.overlap,this.detune=e.detune,this.overlap=e.overlap,this.loop=e.loop,this.playbackRate=e.playbackRate,this.grainSize=e.grainSize,this.loopStart=e.loopStart,this.loopEnd=e.loopEnd,this.reverse=e.reverse,this._clock.on("stop",this._onstop.bind(this))}static getDefaults(){return Object.assign(Source.getDefaults(),{onload:noOp,onerror:noOp,overlap:.1,grainSize:.2,playbackRate:1,detune:0,loop:!1,loopStart:0,loopEnd:0,reverse:!1})}_start(e,t,n){t=defaultArg(t,0),t=this.toSeconds(t),e=this.toSeconds(e);const o=1/this._clock.frequency.getValueAtTime(e);this._clock.start(e,t/o),n&&this.stop(e+this.toSeconds(n))}restart(e,t,n){return super.restart(e,t,n),this}_restart(e,t,n){this._stop(e),this._start(e,t,n)}_stop(e){this._clock.stop(e)}_onstop(e){this._activeSources.forEach(t=>{t.fadeOut=0,t.stop(e)}),this.onstop(this)}_tick(e){const t=this._clock.getTicksAtTime(e),n=t*this._grainSize;if(this.log("offset",n),!this.loop&&n>this.buffer.duration){this.stop(e);return}const o=n<this._overlap?0:this._overlap,r=new ToneBufferSource({context:this.context,url:this.buffer,fadeIn:o,fadeOut:this._overlap,loop:this.loop,loopStart:this._loopStart,loopEnd:this._loopEnd,playbackRate:intervalToFrequencyRatio(this.detune/100)}).connect(this.output);r.start(e,this._grainSize*t),r.stop(e+this._grainSize/this.playbackRate),this._activeSources.push(r),r.onended=()=>{const a=this._activeSources.indexOf(r);a!==-1&&this._activeSources.splice(a,1)}}get playbackRate(){return this._playbackRate}set playbackRate(e){assertRange(e,.001),this._playbackRate=e,this.grainSize=this._grainSize}get loopStart(){return this._loopStart}set loopStart(e){this.buffer.loaded&&assertRange(this.toSeconds(e),0,this.buffer.duration),this._loopStart=this.toSeconds(e)}get loopEnd(){return this._loopEnd}set loopEnd(e){this.buffer.loaded&&assertRange(this.toSeconds(e),0,this.buffer.duration),this._loopEnd=this.toSeconds(e)}get reverse(){return this.buffer.reverse}set reverse(e){this.buffer.reverse=e}get grainSize(){return this._grainSize}set grainSize(e){this._grainSize=this.toSeconds(e),this._clock.frequency.setValueAtTime(this._playbackRate/this._grainSize,this.now())}get overlap(){return this._overlap}set overlap(e){const t=this.toSeconds(e);assertRange(t,0),this._overlap=t}get loaded(){return this.buffer.loaded}dispose(){return super.dispose(),this.buffer.dispose(),this._clock.dispose(),this._activeSources.forEach(e=>e.dispose()),this}}class Abs extends SignalOperator{constructor(){super(...arguments),this.name="Abs",this._abs=new WaveShaper({context:this.context,mapping:e=>Math.abs(e)<.001?0:Math.abs(e)}),this.input=this._abs,this.output=this._abs}dispose(){return super.dispose(),this._abs.dispose(),this}}class GainToAudio extends SignalOperator{constructor(){super(...arguments),this.name="GainToAudio",this._norm=new WaveShaper({context:this.context,mapping:e=>Math.abs(e)*2-1}),this.input=this._norm,this.output=this._norm}dispose(){return super.dispose(),this._norm.dispose(),this}}class Negate extends SignalOperator{constructor(){super(...arguments),this.name="Negate",this._multiply=new Multiply({context:this.context,value:-1}),this.input=this._multiply,this.output=this._multiply}dispose(){return super.dispose(),this._multiply.dispose(),this}}class Subtract extends Signal{constructor(){super(Object.assign(optionsFromArguments(Subtract.getDefaults(),arguments,["value"]))),this.override=!1,this.name="Subtract",this._sum=new Gain({context:this.context}),this.input=this._sum,this.output=this._sum,this._neg=new Negate({context:this.context}),this.subtrahend=this._param,connectSeries(this._constantSource,this._neg,this._sum)}static getDefaults(){return Object.assign(Signal.getDefaults(),{value:0})}dispose(){return super.dispose(),this._neg.dispose(),this._sum.dispose(),this}}class GreaterThanZero extends SignalOperator{constructor(){super(Object.assign(optionsFromArguments(GreaterThanZero.getDefaults(),arguments))),this.name="GreaterThanZero",this._thresh=this.output=new WaveShaper({context:this.context,length:127,mapping:e=>e<=0?0:1}),this._scale=this.input=new Multiply({context:this.context,value:1e4}),this._scale.connect(this._thresh)}dispose(){return super.dispose(),this._scale.dispose(),this._thresh.dispose(),this}}class GreaterThan extends Signal{constructor(){super(Object.assign(optionsFromArguments(GreaterThan.getDefaults(),arguments,["value"]))),this.name="GreaterThan",this.override=!1;const e=optionsFromArguments(GreaterThan.getDefaults(),arguments,["value"]);this._subtract=this.input=new Subtract({context:this.context,value:e.value}),this._gtz=this.output=new GreaterThanZero({context:this.context}),this.comparator=this._param=this._subtract.subtrahend,readOnly(this,"comparator"),this._subtract.connect(this._gtz)}static getDefaults(){return Object.assign(Signal.getDefaults(),{value:0})}dispose(){return super.dispose(),this._gtz.dispose(),this._subtract.dispose(),this.comparator.dispose(),this}}class Pow extends SignalOperator{constructor(){super(Object.assign(optionsFromArguments(Pow.getDefaults(),arguments,["value"]))),this.name="Pow";const e=optionsFromArguments(Pow.getDefaults(),arguments,["value"]);this._exponentScaler=this.input=this.output=new WaveShaper({context:this.context,mapping:this._expFunc(e.value),length:8192}),this._exponent=e.value}static getDefaults(){return Object.assign(SignalOperator.getDefaults(),{value:1})}_expFunc(e){return t=>Math.pow(Math.abs(t),e)}get value(){return this._exponent}set value(e){this._exponent=e,this._exponentScaler.setMap(this._expFunc(this._exponent))}dispose(){return super.dispose(),this._exponentScaler.dispose(),this}}class ScaleExp extends Scale{constructor(){super(Object.assign(optionsFromArguments(ScaleExp.getDefaults(),arguments,["min","max","exponent"]))),this.name="ScaleExp";const e=optionsFromArguments(ScaleExp.getDefaults(),arguments,["min","max","exponent"]);this.input=this._exp=new Pow({context:this.context,value:e.exponent}),this._exp.connect(this._mult)}static getDefaults(){return Object.assign(Scale.getDefaults(),{exponent:1})}get exponent(){return this._exp.value}set exponent(e){this._exp.value=e}dispose(){return super.dispose(),this._exp.dispose(),this}}class SyncedSignal extends Signal{constructor(){super(optionsFromArguments(Signal.getDefaults(),arguments,["value","units"])),this.name="SyncedSignal",this.override=!1;const e=optionsFromArguments(Signal.getDefaults(),arguments,["value","units"]);this._lastVal=e.value,this._synced=this.context.transport.scheduleRepeat(this._onTick.bind(this),"1i"),this._syncedCallback=this._anchorValue.bind(this),this.context.transport.on("start",this._syncedCallback),this.context.transport.on("pause",this._syncedCallback),this.context.transport.on("stop",this._syncedCallback),this._constantSource.disconnect(),this._constantSource.stop(0),this._constantSource=this.output=new ToneConstantSource({context:this.context,offset:e.value,units:e.units}).start(0),this.setValueAtTime(e.value,0)}_onTick(e){const t=super.getValueAtTime(this.context.transport.seconds);this._lastVal!==t&&(this._lastVal=t,this._constantSource.offset.setValueAtTime(t,e))}_anchorValue(e){const t=super.getValueAtTime(this.context.transport.seconds);this._lastVal=t,this._constantSource.offset.cancelAndHoldAtTime(e),this._constantSource.offset.setValueAtTime(t,e)}getValueAtTime(e){const t=new TransportTimeClass(this.context,e).toSeconds();return super.getValueAtTime(t)}setValueAtTime(e,t){const n=new TransportTimeClass(this.context,t).toSeconds();return super.setValueAtTime(e,n),this}linearRampToValueAtTime(e,t){const n=new TransportTimeClass(this.context,t).toSeconds();return super.linearRampToValueAtTime(e,n),this}exponentialRampToValueAtTime(e,t){const n=new TransportTimeClass(this.context,t).toSeconds();return super.exponentialRampToValueAtTime(e,n),this}setTargetAtTime(e,t,n){const o=new TransportTimeClass(this.context,t).toSeconds();return super.setTargetAtTime(e,o,n),this}cancelScheduledValues(e){const t=new TransportTimeClass(this.context,e).toSeconds();return super.cancelScheduledValues(t),this}setValueCurveAtTime(e,t,n,o){const r=new TransportTimeClass(this.context,t).toSeconds();return n=this.toSeconds(n),super.setValueCurveAtTime(e,r,n,o),this}cancelAndHoldAtTime(e){const t=new TransportTimeClass(this.context,e).toSeconds();return super.cancelAndHoldAtTime(t),this}setRampPoint(e){const t=new TransportTimeClass(this.context,e).toSeconds();return super.setRampPoint(t),this}exponentialRampTo(e,t,n){const o=new TransportTimeClass(this.context,n).toSeconds();return super.exponentialRampTo(e,t,o),this}linearRampTo(e,t,n){const o=new TransportTimeClass(this.context,n).toSeconds();return super.linearRampTo(e,t,o),this}targetRampTo(e,t,n){const o=new TransportTimeClass(this.context,n).toSeconds();return super.targetRampTo(e,t,o),this}dispose(){return super.dispose(),this.context.transport.clear(this._synced),this.context.transport.off("start",this._syncedCallback),this.context.transport.off("pause",this._syncedCallback),this.context.transport.off("stop",this._syncedCallback),this._constantSource.dispose(),this}}class Envelope extends ToneAudioNode{constructor(){super(optionsFromArguments(Envelope.getDefaults(),arguments,["attack","decay","sustain","release"])),this.name="Envelope",this._sig=new Signal({context:this.context,value:0}),this.output=this._sig,this.input=void 0;const e=optionsFromArguments(Envelope.getDefaults(),arguments,["attack","decay","sustain","release"]);this.attack=e.attack,this.decay=e.decay,this.sustain=e.sustain,this.release=e.release,this.attackCurve=e.attackCurve,this.releaseCurve=e.releaseCurve,this.decayCurve=e.decayCurve}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{attack:.01,attackCurve:"linear",decay:.1,decayCurve:"exponential",release:1,releaseCurve:"exponential",sustain:.5})}get value(){return this.getValueAtTime(this.now())}_getCurve(e,t){if(isString(e))return e;{let n;for(n in EnvelopeCurves)if(EnvelopeCurves[n][t]===e)return n;return e}}_setCurve(e,t,n){if(isString(n)&&Reflect.has(EnvelopeCurves,n)){const o=EnvelopeCurves[n];isObject(o)?e!=="_decayCurve"&&(this[e]=o[t]):this[e]=o}else if(isArray(n)&&e!=="_decayCurve")this[e]=n;else throw new Error("Envelope: invalid curve: "+n)}get attackCurve(){return this._getCurve(this._attackCurve,"In")}set attackCurve(e){this._setCurve("_attackCurve","In",e)}get releaseCurve(){return this._getCurve(this._releaseCurve,"Out")}set releaseCurve(e){this._setCurve("_releaseCurve","Out",e)}get decayCurve(){return this._decayCurve}set decayCurve(e){assert(["linear","exponential"].some(t=>t===e),`Invalid envelope curve: ${e}`),this._decayCurve=e}triggerAttack(e,t=1){this.log("triggerAttack",e,t),e=this.toSeconds(e);let o=this.toSeconds(this.attack);const r=this.toSeconds(this.decay),a=this.getValueAtTime(e);if(a>0){const c=1/o;o=(1-a)/c}if(o<this.sampleTime)this._sig.cancelScheduledValues(e),this._sig.setValueAtTime(t,e);else if(this._attackCurve==="linear")this._sig.linearRampTo(t,o,e);else if(this._attackCurve==="exponential")this._sig.targetRampTo(t,o,e);else{this._sig.cancelAndHoldAtTime(e);let c=this._attackCurve;for(let l=1;l<c.length;l++)if(c[l-1]<=a&&a<=c[l]){c=this._attackCurve.slice(l),c[0]=a;break}this._sig.setValueCurveAtTime(c,e,o,t)}if(r&&this.sustain<1){const c=t*this.sustain,l=e+o;this.log("decay",l),this._decayCurve==="linear"?this._sig.linearRampToValueAtTime(c,r+l):this._sig.exponentialApproachValueAtTime(c,l,r)}return this}triggerRelease(e){this.log("triggerRelease",e),e=this.toSeconds(e);const t=this.getValueAtTime(e);if(t>0){const n=this.toSeconds(this.release);n<this.sampleTime?this._sig.setValueAtTime(0,e):this._releaseCurve==="linear"?this._sig.linearRampTo(0,n,e):this._releaseCurve==="exponential"?this._sig.targetRampTo(0,n,e):(assert(isArray(this._releaseCurve),"releaseCurve must be either 'linear', 'exponential' or an array"),this._sig.cancelAndHoldAtTime(e),this._sig.setValueCurveAtTime(this._releaseCurve,e,n,t))}return this}getValueAtTime(e){return this._sig.getValueAtTime(e)}triggerAttackRelease(e,t,n=1){return t=this.toSeconds(t),this.triggerAttack(t,n),this.triggerRelease(t+this.toSeconds(e)),this}cancel(e){return this._sig.cancelScheduledValues(this.toSeconds(e)),this}connect(e,t=0,n=0){return connectSignal(this,e,t,n),this}asArray(e=1024){return __awaiter(this,void 0,void 0,function*(){const t=e/this.context.sampleRate,n=new OfflineContext(1,t,this.context.sampleRate),o=this.toSeconds(this.attack)+this.toSeconds(this.decay),r=o+this.toSeconds(this.release),a=r*.1,c=r+a,l=new this.constructor(Object.assign(this.get(),{attack:t*this.toSeconds(this.attack)/c,decay:t*this.toSeconds(this.decay)/c,release:t*this.toSeconds(this.release)/c,context:n}));return l._sig.toDestination(),l.triggerAttackRelease(t*(o+a)/c,0),(yield n.render()).getChannelData(0)})}dispose(){return super.dispose(),this._sig.dispose(),this}}__decorate([timeRange(0)],Envelope.prototype,"attack",void 0);__decorate([timeRange(0)],Envelope.prototype,"decay",void 0);__decorate([range(0,1)],Envelope.prototype,"sustain",void 0);__decorate([timeRange(0)],Envelope.prototype,"release",void 0);const EnvelopeCurves=(()=>{let e,t;const n=[];for(e=0;e<128;e++)n[e]=Math.sin(e/(128-1)*(Math.PI/2));const o=[],r=6.4;for(e=0;e<128-1;e++){t=e/(128-1);const m=Math.sin(t*(Math.PI*2)*r-Math.PI/2)+1;o[e]=m/10+t*.83}o[128-1]=1;const a=[],c=5;for(e=0;e<128;e++)a[e]=Math.ceil(e/(128-1)*c)/c;const l=[];for(e=0;e<128;e++)t=e/(128-1),l[e]=.5*(1-Math.cos(Math.PI*t));const u=[];for(e=0;e<128;e++){t=e/(128-1);const m=Math.pow(t,3)*4+.2,g=Math.cos(m*Math.PI*2*t);u[e]=Math.abs(g*(1-t))}function d(m){const g=new Array(m.length);for(let _=0;_<m.length;_++)g[_]=1-m[_];return g}function f(m){return m.slice(0).reverse()}return{bounce:{In:d(u),Out:u},cosine:{In:n,Out:f(n)},exponential:"exponential",linear:"linear",ripple:{In:o,Out:d(o)},sine:{In:l,Out:d(l)},step:{In:a,Out:d(a)}}})();class Instrument extends ToneAudioNode{constructor(){super(optionsFromArguments(Instrument.getDefaults(),arguments)),this._scheduledEvents=[],this._synced=!1,this._original_triggerAttack=this.triggerAttack,this._original_triggerRelease=this.triggerRelease;const e=optionsFromArguments(Instrument.getDefaults(),arguments);this._volume=this.output=new Volume({context:this.context,volume:e.volume}),this.volume=this._volume.volume,readOnly(this,"volume")}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{volume:0})}sync(){return this._syncState()&&(this._syncMethod("triggerAttack",1),this._syncMethod("triggerRelease",0)),this}_syncState(){let e=!1;return this._synced||(this._synced=!0,e=!0),e}_syncMethod(e,t){const n=this["_original_"+e]=this[e];this[e]=(...o)=>{const r=o[t],a=this.context.transport.schedule(c=>{o[t]=c,n.apply(this,o)},r);this._scheduledEvents.push(a)}}unsync(){return this._scheduledEvents.forEach(e=>this.context.transport.clear(e)),this._scheduledEvents=[],this._synced&&(this._synced=!1,this.triggerAttack=this._original_triggerAttack,this.triggerRelease=this._original_triggerRelease),this}triggerAttackRelease(e,t,n,o){const r=this.toSeconds(n),a=this.toSeconds(t);return this.triggerAttack(e,r,o),this.triggerRelease(r+a),this}dispose(){return super.dispose(),this._volume.dispose(),this.unsync(),this._scheduledEvents=[],this}}class Monophonic extends Instrument{constructor(){super(optionsFromArguments(Monophonic.getDefaults(),arguments));const e=optionsFromArguments(Monophonic.getDefaults(),arguments);this.portamento=e.portamento,this.onsilence=e.onsilence}static getDefaults(){return Object.assign(Instrument.getDefaults(),{detune:0,onsilence:noOp,portamento:0})}triggerAttack(e,t,n=1){this.log("triggerAttack",e,t,n);const o=this.toSeconds(t);return this._triggerEnvelopeAttack(o,n),this.setNote(e,o),this}triggerRelease(e){this.log("triggerRelease",e);const t=this.toSeconds(e);return this._triggerEnvelopeRelease(t),this}setNote(e,t){const n=this.toSeconds(t),o=e instanceof FrequencyClass?e.toFrequency():e;if(this.portamento>0&&this.getLevelAtTime(n)>.05){const r=this.toSeconds(this.portamento);this.frequency.exponentialRampTo(o,r,n)}else this.frequency.setValueAtTime(o,n);return this}}__decorate([timeRange(0)],Monophonic.prototype,"portamento",void 0);class AmplitudeEnvelope extends Envelope{constructor(){super(optionsFromArguments(AmplitudeEnvelope.getDefaults(),arguments,["attack","decay","sustain","release"])),this.name="AmplitudeEnvelope",this._gainNode=new Gain({context:this.context,gain:0}),this.output=this._gainNode,this.input=this._gainNode,this._sig.connect(this._gainNode.gain),this.output=this._gainNode,this.input=this._gainNode}dispose(){return super.dispose(),this._gainNode.dispose(),this}}class Synth extends Monophonic{constructor(){super(optionsFromArguments(Synth.getDefaults(),arguments)),this.name="Synth";const e=optionsFromArguments(Synth.getDefaults(),arguments);this.oscillator=new OmniOscillator(Object.assign({context:this.context,detune:e.detune,onstop:()=>this.onsilence(this)},e.oscillator)),this.frequency=this.oscillator.frequency,this.detune=this.oscillator.detune,this.envelope=new AmplitudeEnvelope(Object.assign({context:this.context},e.envelope)),this.oscillator.chain(this.envelope,this.output),readOnly(this,["oscillator","frequency","detune","envelope"])}static getDefaults(){return Object.assign(Monophonic.getDefaults(),{envelope:Object.assign(omitFromObject(Envelope.getDefaults(),Object.keys(ToneAudioNode.getDefaults())),{attack:.005,decay:.1,release:1,sustain:.3}),oscillator:Object.assign(omitFromObject(OmniOscillator.getDefaults(),[...Object.keys(Source.getDefaults()),"frequency","detune"]),{type:"triangle"})})}_triggerEnvelopeAttack(e,t){if(this.envelope.triggerAttack(e,t),this.oscillator.start(e),this.envelope.sustain===0){const n=this.toSeconds(this.envelope.attack),o=this.toSeconds(this.envelope.decay);this.oscillator.stop(e+n+o)}}_triggerEnvelopeRelease(e){this.envelope.triggerRelease(e),this.oscillator.stop(e+this.toSeconds(this.envelope.release))}getLevelAtTime(e){return e=this.toSeconds(e),this.envelope.getValueAtTime(e)}dispose(){return super.dispose(),this.oscillator.dispose(),this.envelope.dispose(),this}}class ModulationSynth extends Monophonic{constructor(){super(optionsFromArguments(ModulationSynth.getDefaults(),arguments)),this.name="ModulationSynth";const e=optionsFromArguments(ModulationSynth.getDefaults(),arguments);this._carrier=new Synth({context:this.context,oscillator:e.oscillator,envelope:e.envelope,onsilence:()=>this.onsilence(this),volume:-10}),this._modulator=new Synth({context:this.context,oscillator:e.modulation,envelope:e.modulationEnvelope,volume:-10}),this.oscillator=this._carrier.oscillator,this.envelope=this._carrier.envelope,this.modulation=this._modulator.oscillator,this.modulationEnvelope=this._modulator.envelope,this.frequency=new Signal({context:this.context,units:"frequency"}),this.detune=new Signal({context:this.context,value:e.detune,units:"cents"}),this.harmonicity=new Multiply({context:this.context,value:e.harmonicity,minValue:0}),this._modulationNode=new Gain({context:this.context,gain:0}),readOnly(this,["frequency","harmonicity","oscillator","envelope","modulation","modulationEnvelope","detune"])}static getDefaults(){return Object.assign(Monophonic.getDefaults(),{harmonicity:3,oscillator:Object.assign(omitFromObject(OmniOscillator.getDefaults(),[...Object.keys(Source.getDefaults()),"frequency","detune"]),{type:"sine"}),envelope:Object.assign(omitFromObject(Envelope.getDefaults(),Object.keys(ToneAudioNode.getDefaults())),{attack:.01,decay:.01,sustain:1,release:.5}),modulation:Object.assign(omitFromObject(OmniOscillator.getDefaults(),[...Object.keys(Source.getDefaults()),"frequency","detune"]),{type:"square"}),modulationEnvelope:Object.assign(omitFromObject(Envelope.getDefaults(),Object.keys(ToneAudioNode.getDefaults())),{attack:.5,decay:0,sustain:1,release:.5})})}_triggerEnvelopeAttack(e,t){this._carrier._triggerEnvelopeAttack(e,t),this._modulator._triggerEnvelopeAttack(e,t)}_triggerEnvelopeRelease(e){return this._carrier._triggerEnvelopeRelease(e),this._modulator._triggerEnvelopeRelease(e),this}getLevelAtTime(e){return e=this.toSeconds(e),this.envelope.getValueAtTime(e)}dispose(){return super.dispose(),this._carrier.dispose(),this._modulator.dispose(),this.frequency.dispose(),this.detune.dispose(),this.harmonicity.dispose(),this._modulationNode.dispose(),this}}class AMSynth extends ModulationSynth{constructor(){super(optionsFromArguments(AMSynth.getDefaults(),arguments)),this.name="AMSynth",this._modulationScale=new AudioToGain({context:this.context}),this.frequency.connect(this._carrier.frequency),this.frequency.chain(this.harmonicity,this._modulator.frequency),this.detune.fan(this._carrier.detune,this._modulator.detune),this._modulator.chain(this._modulationScale,this._modulationNode.gain),this._carrier.chain(this._modulationNode,this.output)}dispose(){return super.dispose(),this._modulationScale.dispose(),this}}class BiquadFilter extends ToneAudioNode{constructor(){super(optionsFromArguments(BiquadFilter.getDefaults(),arguments,["frequency","type"])),this.name="BiquadFilter";const e=optionsFromArguments(BiquadFilter.getDefaults(),arguments,["frequency","type"]);this._filter=this.context.createBiquadFilter(),this.input=this.output=this._filter,this.Q=new Param({context:this.context,units:"number",value:e.Q,param:this._filter.Q}),this.frequency=new Param({context:this.context,units:"frequency",value:e.frequency,param:this._filter.frequency}),this.detune=new Param({context:this.context,units:"cents",value:e.detune,param:this._filter.detune}),this.gain=new Param({context:this.context,units:"decibels",convert:!1,value:e.gain,param:this._filter.gain}),this.type=e.type}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{Q:1,type:"lowpass",frequency:350,detune:0,gain:0})}get type(){return this._filter.type}set type(e){assert(["lowpass","highpass","bandpass","lowshelf","highshelf","notch","allpass","peaking"].indexOf(e)!==-1,`Invalid filter type: ${e}`),this._filter.type=e}getFrequencyResponse(e=128){const t=new Float32Array(e);for(let a=0;a<e;a++){const l=Math.pow(a/e,2)*(2e4-20)+20;t[a]=l}const n=new Float32Array(e),o=new Float32Array(e),r=this.context.createBiquadFilter();return r.type=this.type,r.Q.value=this.Q.value,r.frequency.value=this.frequency.value,r.gain.value=this.gain.value,r.getFrequencyResponse(t,n,o),n}dispose(){return super.dispose(),this._filter.disconnect(),this.Q.dispose(),this.frequency.dispose(),this.gain.dispose(),this.detune.dispose(),this}}let Filter$2=class Te extends ToneAudioNode{constructor(){super(optionsFromArguments(Te.getDefaults(),arguments,["frequency","type","rolloff"])),this.name="Filter",this.input=new Gain({context:this.context}),this.output=new Gain({context:this.context}),this._filters=[];const e=optionsFromArguments(Te.getDefaults(),arguments,["frequency","type","rolloff"]);this._filters=[],this.Q=new Signal({context:this.context,units:"positive",value:e.Q}),this.frequency=new Signal({context:this.context,units:"frequency",value:e.frequency}),this.detune=new Signal({context:this.context,units:"cents",value:e.detune}),this.gain=new Signal({context:this.context,units:"decibels",convert:!1,value:e.gain}),this._type=e.type,this.rolloff=e.rolloff,readOnly(this,["detune","frequency","gain","Q"])}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{Q:1,detune:0,frequency:350,gain:0,rolloff:-12,type:"lowpass"})}get type(){return this._type}set type(e){assert(["lowpass","highpass","bandpass","lowshelf","highshelf","notch","allpass","peaking"].indexOf(e)!==-1,`Invalid filter type: ${e}`),this._type=e,this._filters.forEach(n=>n.type=e)}get rolloff(){return this._rolloff}set rolloff(e){const t=isNumber(e)?e:parseInt(e,10),n=[-12,-24,-48,-96];let o=n.indexOf(t);assert(o!==-1,`rolloff can only be ${n.join(", ")}`),o+=1,this._rolloff=t,this.input.disconnect(),this._filters.forEach(r=>r.disconnect()),this._filters=new Array(o);for(let r=0;r<o;r++){const a=new BiquadFilter({context:this.context});a.type=this._type,this.frequency.connect(a.frequency),this.detune.connect(a.detune),this.Q.connect(a.Q),this.gain.connect(a.gain),this._filters[r]=a}this._internalChannels=this._filters,connectSeries(this.input,...this._internalChannels,this.output)}getFrequencyResponse(e=128){const t=new BiquadFilter({frequency:this.frequency.value,gain:this.gain.value,Q:this.Q.value,type:this._type,detune:this.detune.value}),n=new Float32Array(e).map(()=>1);return this._filters.forEach(()=>{t.getFrequencyResponse(e).forEach((r,a)=>n[a]*=r)}),t.dispose(),n}dispose(){return super.dispose(),this._filters.forEach(e=>{e.dispose()}),writable(this,["detune","frequency","gain","Q"]),this.frequency.dispose(),this.Q.dispose(),this.detune.dispose(),this.gain.dispose(),this}};class FrequencyEnvelope extends Envelope{constructor(){super(optionsFromArguments(FrequencyEnvelope.getDefaults(),arguments,["attack","decay","sustain","release"])),this.name="FrequencyEnvelope";const e=optionsFromArguments(FrequencyEnvelope.getDefaults(),arguments,["attack","decay","sustain","release"]);this._octaves=e.octaves,this._baseFrequency=this.toFrequency(e.baseFrequency),this._exponent=this.input=new Pow({context:this.context,value:e.exponent}),this._scale=this.output=new Scale({context:this.context,min:this._baseFrequency,max:this._baseFrequency*Math.pow(2,this._octaves)}),this._sig.chain(this._exponent,this._scale)}static getDefaults(){return Object.assign(Envelope.getDefaults(),{baseFrequency:200,exponent:1,octaves:4})}get baseFrequency(){return this._baseFrequency}set baseFrequency(e){const t=this.toFrequency(e);assertRange(t,0),this._baseFrequency=t,this._scale.min=this._baseFrequency,this.octaves=this._octaves}get octaves(){return this._octaves}set octaves(e){this._octaves=e,this._scale.max=this._baseFrequency*Math.pow(2,e)}get exponent(){return this._exponent.value}set exponent(e){this._exponent.value=e}dispose(){return super.dispose(),this._exponent.dispose(),this._scale.dispose(),this}}class MonoSynth extends Monophonic{constructor(){super(optionsFromArguments(MonoSynth.getDefaults(),arguments)),this.name="MonoSynth";const e=optionsFromArguments(MonoSynth.getDefaults(),arguments);this.oscillator=new OmniOscillator(Object.assign(e.oscillator,{context:this.context,detune:e.detune,onstop:()=>this.onsilence(this)})),this.frequency=this.oscillator.frequency,this.detune=this.oscillator.detune,this.filter=new Filter$2(Object.assign(e.filter,{context:this.context})),this.filterEnvelope=new FrequencyEnvelope(Object.assign(e.filterEnvelope,{context:this.context})),this.envelope=new AmplitudeEnvelope(Object.assign(e.envelope,{context:this.context})),this.oscillator.chain(this.filter,this.envelope,this.output),this.filterEnvelope.connect(this.filter.frequency),readOnly(this,["oscillator","frequency","detune","filter","filterEnvelope","envelope"])}static getDefaults(){return Object.assign(Monophonic.getDefaults(),{envelope:Object.assign(omitFromObject(Envelope.getDefaults(),Object.keys(ToneAudioNode.getDefaults())),{attack:.005,decay:.1,release:1,sustain:.9}),filter:Object.assign(omitFromObject(Filter$2.getDefaults(),Object.keys(ToneAudioNode.getDefaults())),{Q:1,rolloff:-12,type:"lowpass"}),filterEnvelope:Object.assign(omitFromObject(FrequencyEnvelope.getDefaults(),Object.keys(ToneAudioNode.getDefaults())),{attack:.6,baseFrequency:200,decay:.2,exponent:2,octaves:3,release:2,sustain:.5}),oscillator:Object.assign(omitFromObject(OmniOscillator.getDefaults(),Object.keys(Source.getDefaults())),{type:"sawtooth"})})}_triggerEnvelopeAttack(e,t=1){if(this.envelope.triggerAttack(e,t),this.filterEnvelope.triggerAttack(e),this.oscillator.start(e),this.envelope.sustain===0){const n=this.toSeconds(this.envelope.attack),o=this.toSeconds(this.envelope.decay);this.oscillator.stop(e+n+o)}}_triggerEnvelopeRelease(e){this.envelope.triggerRelease(e),this.filterEnvelope.triggerRelease(e),this.oscillator.stop(e+this.toSeconds(this.envelope.release))}getLevelAtTime(e){return e=this.toSeconds(e),this.envelope.getValueAtTime(e)}dispose(){return super.dispose(),this.oscillator.dispose(),this.envelope.dispose(),this.filterEnvelope.dispose(),this.filter.dispose(),this}}class DuoSynth extends Monophonic{constructor(){super(optionsFromArguments(DuoSynth.getDefaults(),arguments)),this.name="DuoSynth";const e=optionsFromArguments(DuoSynth.getDefaults(),arguments);this.voice0=new MonoSynth(Object.assign(e.voice0,{context:this.context,onsilence:()=>this.onsilence(this)})),this.voice1=new MonoSynth(Object.assign(e.voice1,{context:this.context})),this.harmonicity=new Multiply({context:this.context,units:"positive",value:e.harmonicity}),this._vibrato=new LFO({frequency:e.vibratoRate,context:this.context,min:-50,max:50}),this._vibrato.start(),this.vibratoRate=this._vibrato.frequency,this._vibratoGain=new Gain({context:this.context,units:"normalRange",gain:e.vibratoAmount}),this.vibratoAmount=this._vibratoGain.gain,this.frequency=new Signal({context:this.context,units:"frequency",value:440}),this.detune=new Signal({context:this.context,units:"cents",value:e.detune}),this.frequency.connect(this.voice0.frequency),this.frequency.chain(this.harmonicity,this.voice1.frequency),this._vibrato.connect(this._vibratoGain),this._vibratoGain.fan(this.voice0.detune,this.voice1.detune),this.detune.fan(this.voice0.detune,this.voice1.detune),this.voice0.connect(this.output),this.voice1.connect(this.output),readOnly(this,["voice0","voice1","frequency","vibratoAmount","vibratoRate"])}getLevelAtTime(e){return e=this.toSeconds(e),this.voice0.envelope.getValueAtTime(e)+this.voice1.envelope.getValueAtTime(e)}static getDefaults(){return deepMerge(Monophonic.getDefaults(),{vibratoAmount:.5,vibratoRate:5,harmonicity:1.5,voice0:deepMerge(omitFromObject(MonoSynth.getDefaults(),Object.keys(Monophonic.getDefaults())),{filterEnvelope:{attack:.01,decay:0,sustain:1,release:.5},envelope:{attack:.01,decay:0,sustain:1,release:.5}}),voice1:deepMerge(omitFromObject(MonoSynth.getDefaults(),Object.keys(Monophonic.getDefaults())),{filterEnvelope:{attack:.01,decay:0,sustain:1,release:.5},envelope:{attack:.01,decay:0,sustain:1,release:.5}})})}_triggerEnvelopeAttack(e,t){this.voice0._triggerEnvelopeAttack(e,t),this.voice1._triggerEnvelopeAttack(e,t)}_triggerEnvelopeRelease(e){return this.voice0._triggerEnvelopeRelease(e),this.voice1._triggerEnvelopeRelease(e),this}dispose(){return super.dispose(),this.voice0.dispose(),this.voice1.dispose(),this.frequency.dispose(),this.detune.dispose(),this._vibrato.dispose(),this.vibratoRate.dispose(),this._vibratoGain.dispose(),this.harmonicity.dispose(),this}}class FMSynth extends ModulationSynth{constructor(){super(optionsFromArguments(FMSynth.getDefaults(),arguments)),this.name="FMSynth";const e=optionsFromArguments(FMSynth.getDefaults(),arguments);this.modulationIndex=new Multiply({context:this.context,value:e.modulationIndex}),this.frequency.connect(this._carrier.frequency),this.frequency.chain(this.harmonicity,this._modulator.frequency),this.frequency.chain(this.modulationIndex,this._modulationNode),this.detune.fan(this._carrier.detune,this._modulator.detune),this._modulator.connect(this._modulationNode.gain),this._modulationNode.connect(this._carrier.frequency),this._carrier.connect(this.output)}static getDefaults(){return Object.assign(ModulationSynth.getDefaults(),{modulationIndex:10})}dispose(){return super.dispose(),this.modulationIndex.dispose(),this}}const inharmRatios=[1,1.483,1.932,2.546,2.63,3.897];class MetalSynth extends Monophonic{constructor(){super(optionsFromArguments(MetalSynth.getDefaults(),arguments)),this.name="MetalSynth",this._oscillators=[],this._freqMultipliers=[];const e=optionsFromArguments(MetalSynth.getDefaults(),arguments);this.detune=new Signal({context:this.context,units:"cents",value:e.detune}),this.frequency=new Signal({context:this.context,units:"frequency"}),this._amplitude=new Gain({context:this.context,gain:0}).connect(this.output),this._highpass=new Filter$2({Q:0,context:this.context,type:"highpass"}).connect(this._amplitude);for(let t=0;t<inharmRatios.length;t++){const n=new FMOscillator({context:this.context,harmonicity:e.harmonicity,modulationIndex:e.modulationIndex,modulationType:"square",onstop:t===0?()=>this.onsilence(this):noOp,type:"square"});n.connect(this._highpass),this._oscillators[t]=n;const o=new Multiply({context:this.context,value:inharmRatios[t]});this._freqMultipliers[t]=o,this.frequency.chain(o,n.frequency),this.detune.connect(n.detune)}this._filterFreqScaler=new Scale({context:this.context,max:7e3,min:this.toFrequency(e.resonance)}),this.envelope=new Envelope({attack:e.envelope.attack,attackCurve:"linear",context:this.context,decay:e.envelope.decay,release:e.envelope.release,sustain:0}),this.envelope.chain(this._filterFreqScaler,this._highpass.frequency),this.envelope.connect(this._amplitude.gain),this._octaves=e.octaves,this.octaves=e.octaves}static getDefaults(){return deepMerge(Monophonic.getDefaults(),{envelope:Object.assign(omitFromObject(Envelope.getDefaults(),Object.keys(ToneAudioNode.getDefaults())),{attack:.001,decay:1.4,release:.2}),harmonicity:5.1,modulationIndex:32,octaves:1.5,resonance:4e3})}_triggerEnvelopeAttack(e,t=1){return this.envelope.triggerAttack(e,t),this._oscillators.forEach(n=>n.start(e)),this.envelope.sustain===0&&this._oscillators.forEach(n=>{n.stop(e+this.toSeconds(this.envelope.attack)+this.toSeconds(this.envelope.decay))}),this}_triggerEnvelopeRelease(e){return this.envelope.triggerRelease(e),this._oscillators.forEach(t=>t.stop(e+this.toSeconds(this.envelope.release))),this}getLevelAtTime(e){return e=this.toSeconds(e),this.envelope.getValueAtTime(e)}get modulationIndex(){return this._oscillators[0].modulationIndex.value}set modulationIndex(e){this._oscillators.forEach(t=>t.modulationIndex.value=e)}get harmonicity(){return this._oscillators[0].harmonicity.value}set harmonicity(e){this._oscillators.forEach(t=>t.harmonicity.value=e)}get resonance(){return this._filterFreqScaler.min}set resonance(e){this._filterFreqScaler.min=this.toFrequency(e),this.octaves=this._octaves}get octaves(){return this._octaves}set octaves(e){this._octaves=e,this._filterFreqScaler.max=this._filterFreqScaler.min*Math.pow(2,e)}dispose(){return super.dispose(),this._oscillators.forEach(e=>e.dispose()),this._freqMultipliers.forEach(e=>e.dispose()),this.frequency.dispose(),this.detune.dispose(),this._filterFreqScaler.dispose(),this._amplitude.dispose(),this.envelope.dispose(),this._highpass.dispose(),this}}class MembraneSynth extends Synth{constructor(){super(optionsFromArguments(MembraneSynth.getDefaults(),arguments)),this.name="MembraneSynth",this.portamento=0;const e=optionsFromArguments(MembraneSynth.getDefaults(),arguments);this.pitchDecay=e.pitchDecay,this.octaves=e.octaves,readOnly(this,["oscillator","envelope"])}static getDefaults(){return deepMerge(Monophonic.getDefaults(),Synth.getDefaults(),{envelope:{attack:.001,attackCurve:"exponential",decay:.4,release:1.4,sustain:.01},octaves:10,oscillator:{type:"sine"},pitchDecay:.05})}setNote(e,t){const n=this.toSeconds(t),o=this.toFrequency(e instanceof FrequencyClass?e.toFrequency():e),r=o*this.octaves;return this.oscillator.frequency.setValueAtTime(r,n),this.oscillator.frequency.exponentialRampToValueAtTime(o,n+this.toSeconds(this.pitchDecay)),this}dispose(){return super.dispose(),this}}__decorate([range(0)],MembraneSynth.prototype,"octaves",void 0);__decorate([timeRange(0)],MembraneSynth.prototype,"pitchDecay",void 0);class NoiseSynth extends Instrument{constructor(){super(optionsFromArguments(NoiseSynth.getDefaults(),arguments)),this.name="NoiseSynth";const e=optionsFromArguments(NoiseSynth.getDefaults(),arguments);this.noise=new Noise(Object.assign({context:this.context},e.noise)),this.envelope=new AmplitudeEnvelope(Object.assign({context:this.context},e.envelope)),this.noise.chain(this.envelope,this.output)}static getDefaults(){return Object.assign(Instrument.getDefaults(),{envelope:Object.assign(omitFromObject(Envelope.getDefaults(),Object.keys(ToneAudioNode.getDefaults())),{decay:.1,sustain:0}),noise:Object.assign(omitFromObject(Noise.getDefaults(),Object.keys(Source.getDefaults())),{type:"white"})})}triggerAttack(e,t=1){return e=this.toSeconds(e),this.envelope.triggerAttack(e,t),this.noise.start(e),this.envelope.sustain===0&&this.noise.stop(e+this.toSeconds(this.envelope.attack)+this.toSeconds(this.envelope.decay)),this}triggerRelease(e){return e=this.toSeconds(e),this.envelope.triggerRelease(e),this.noise.stop(e+this.toSeconds(this.envelope.release)),this}sync(){return this._syncState()&&(this._syncMethod("triggerAttack",0),this._syncMethod("triggerRelease",0)),this}triggerAttackRelease(e,t,n=1){return t=this.toSeconds(t),e=this.toSeconds(e),this.triggerAttack(t,n),this.triggerRelease(t+e),this}dispose(){return super.dispose(),this.noise.dispose(),this.envelope.dispose(),this}}const workletContext=new Set;function addToWorklet(s){workletContext.add(s)}function registerProcessor(s,e){const t=`registerProcessor("${s}", ${e})`;workletContext.add(t)}function getWorkletGlobalScope(){return Array.from(workletContext).join(`
`)}class ToneAudioWorklet extends ToneAudioNode{constructor(e){super(e),this.name="ToneAudioWorklet",this.workletOptions={},this.onprocessorerror=noOp;const t=URL.createObjectURL(new Blob([getWorkletGlobalScope()],{type:"text/javascript"})),n=this._audioWorkletName();this._dummyGain=this.context.createGain(),this._dummyParam=this._dummyGain.gain,this.context.addAudioWorkletModule(t,n).then(()=>{this.disposed||(this._worklet=this.context.createAudioWorkletNode(n,this.workletOptions),this._worklet.onprocessorerror=this.onprocessorerror.bind(this),this.onReady(this._worklet))})}dispose(){return super.dispose(),this._dummyGain.disconnect(),this._worklet&&(this._worklet.port.postMessage("dispose"),this._worklet.disconnect()),this}}const toneAudioWorkletProcessor=`
	/**
	 * The base AudioWorkletProcessor for use in Tone.js. Works with the [[ToneAudioWorklet]]. 
	 */
	class ToneAudioWorkletProcessor extends AudioWorkletProcessor {

		constructor(options) {
			
			super(options);
			/**
			 * If the processor was disposed or not. Keep alive until it's disposed.
			 */
			this.disposed = false;
		   	/** 
			 * The number of samples in the processing block
			 */
			this.blockSize = 128;
			/**
			 * the sample rate
			 */
			this.sampleRate = sampleRate;

			this.port.onmessage = (event) => {
				// when it receives a dispose 
				if (event.data === "dispose") {
					this.disposed = true;
				}
			};
		}
	}
`;addToWorklet(toneAudioWorkletProcessor);const singleIOProcess=`
	/**
	 * Abstract class for a single input/output processor. 
	 * has a 'generate' function which processes one sample at a time
	 */
	class SingleIOProcessor extends ToneAudioWorkletProcessor {

		constructor(options) {
			super(Object.assign(options, {
				numberOfInputs: 1,
				numberOfOutputs: 1
			}));
			/**
			 * Holds the name of the parameter and a single value of that
			 * parameter at the current sample
			 * @type { [name: string]: number }
			 */
			this.params = {}
		}

		/**
		 * Generate an output sample from the input sample and parameters
		 * @abstract
		 * @param input number
		 * @param channel number
		 * @param parameters { [name: string]: number }
		 * @returns number
		 */
		generate(){}

		/**
		 * Update the private params object with the 
		 * values of the parameters at the given index
		 * @param parameters { [name: string]: Float32Array },
		 * @param index number
		 */
		updateParams(parameters, index) {
			for (const paramName in parameters) {
				const param = parameters[paramName];
				if (param.length > 1) {
					this.params[paramName] = parameters[paramName][index];
				} else {
					this.params[paramName] = parameters[paramName][0];
				}
			}
		}

		/**
		 * Process a single frame of the audio
		 * @param inputs Float32Array[][]
		 * @param outputs Float32Array[][]
		 */
		process(inputs, outputs, parameters) {
			const input = inputs[0];
			const output = outputs[0];
			// get the parameter values
			const channelCount = Math.max(input && input.length || 0, output.length);
			for (let sample = 0; sample < this.blockSize; sample++) {
				this.updateParams(parameters, sample);
				for (let channel = 0; channel < channelCount; channel++) {
					const inputSample = input && input.length ? input[channel][sample] : 0;
					output[channel][sample] = this.generate(inputSample, channel, this.params);
				}
			}
			return !this.disposed;
		}
	};
`;addToWorklet(singleIOProcess);const delayLine=`
	/**
	 * A multichannel buffer for use within an AudioWorkletProcessor as a delay line
	 */
	class DelayLine {
		
		constructor(size, channels) {
			this.buffer = [];
			this.writeHead = []
			this.size = size;

			// create the empty channels
			for (let i = 0; i < channels; i++) {
				this.buffer[i] = new Float32Array(this.size);
				this.writeHead[i] = 0;
			}
		}

		/**
		 * Push a value onto the end
		 * @param channel number
		 * @param value number
		 */
		push(channel, value) {
			this.writeHead[channel] += 1;
			if (this.writeHead[channel] > this.size) {
				this.writeHead[channel] = 0;
			}
			this.buffer[channel][this.writeHead[channel]] = value;
		}

		/**
		 * Get the recorded value of the channel given the delay
		 * @param channel number
		 * @param delay number delay samples
		 */
		get(channel, delay) {
			let readHead = this.writeHead[channel] - Math.floor(delay);
			if (readHead < 0) {
				readHead += this.size;
			}
			return this.buffer[channel][readHead];
		}
	}
`;addToWorklet(delayLine);const workletName$1="feedback-comb-filter",feedbackCombFilter=`
	class FeedbackCombFilterWorklet extends SingleIOProcessor {

		constructor(options) {
			super(options);
			this.delayLine = new DelayLine(this.sampleRate, options.channelCount || 2);
		}

		static get parameterDescriptors() {
			return [{
				name: "delayTime",
				defaultValue: 0.1,
				minValue: 0,
				maxValue: 1,
				automationRate: "k-rate"
			}, {
				name: "feedback",
				defaultValue: 0.5,
				minValue: 0,
				maxValue: 0.9999,
				automationRate: "k-rate"
			}];
		}

		generate(input, channel, parameters) {
			const delayedSample = this.delayLine.get(channel, parameters.delayTime * this.sampleRate);
			this.delayLine.push(channel, input + delayedSample * parameters.feedback);
			return delayedSample;
		}
	}
`;registerProcessor(workletName$1,feedbackCombFilter);class FeedbackCombFilter extends ToneAudioWorklet{constructor(){super(optionsFromArguments(FeedbackCombFilter.getDefaults(),arguments,["delayTime","resonance"])),this.name="FeedbackCombFilter";const e=optionsFromArguments(FeedbackCombFilter.getDefaults(),arguments,["delayTime","resonance"]);this.input=new Gain({context:this.context}),this.output=new Gain({context:this.context}),this.delayTime=new Param({context:this.context,value:e.delayTime,units:"time",minValue:0,maxValue:1,param:this._dummyParam,swappable:!0}),this.resonance=new Param({context:this.context,value:e.resonance,units:"normalRange",param:this._dummyParam,swappable:!0}),readOnly(this,["resonance","delayTime"])}_audioWorkletName(){return workletName$1}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{delayTime:.1,resonance:.5})}onReady(e){connectSeries(this.input,e,this.output);const t=e.parameters.get("delayTime");this.delayTime.setParam(t);const n=e.parameters.get("feedback");this.resonance.setParam(n)}dispose(){return super.dispose(),this.input.dispose(),this.output.dispose(),this.delayTime.dispose(),this.resonance.dispose(),this}}class OnePoleFilter extends ToneAudioNode{constructor(){super(optionsFromArguments(OnePoleFilter.getDefaults(),arguments,["frequency","type"])),this.name="OnePoleFilter";const e=optionsFromArguments(OnePoleFilter.getDefaults(),arguments,["frequency","type"]);this._frequency=e.frequency,this._type=e.type,this.input=new Gain({context:this.context}),this.output=new Gain({context:this.context}),this._createFilter()}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{frequency:880,type:"lowpass"})}_createFilter(){const e=this._filter,t=this.toFrequency(this._frequency),n=1/(2*Math.PI*t);if(this._type==="lowpass"){const o=1/(n*this.context.sampleRate),r=o-1;this._filter=this.context.createIIRFilter([o,0],[1,r])}else{const o=1/(n*this.context.sampleRate)-1;this._filter=this.context.createIIRFilter([1,-1],[1,o])}this.input.chain(this._filter,this.output),e&&this.context.setTimeout(()=>{this.disposed||(this.input.disconnect(e),e.disconnect())},this.blockTime)}get frequency(){return this._frequency}set frequency(e){this._frequency=e,this._createFilter()}get type(){return this._type}set type(e){this._type=e,this._createFilter()}getFrequencyResponse(e=128){const t=new Float32Array(e);for(let r=0;r<e;r++){const c=Math.pow(r/e,2)*(2e4-20)+20;t[r]=c}const n=new Float32Array(e),o=new Float32Array(e);return this._filter.getFrequencyResponse(t,n,o),n}dispose(){return super.dispose(),this.input.dispose(),this.output.dispose(),this._filter.disconnect(),this}}class LowpassCombFilter extends ToneAudioNode{constructor(){super(optionsFromArguments(LowpassCombFilter.getDefaults(),arguments,["delayTime","resonance","dampening"])),this.name="LowpassCombFilter";const e=optionsFromArguments(LowpassCombFilter.getDefaults(),arguments,["delayTime","resonance","dampening"]);this._combFilter=this.output=new FeedbackCombFilter({context:this.context,delayTime:e.delayTime,resonance:e.resonance}),this.delayTime=this._combFilter.delayTime,this.resonance=this._combFilter.resonance,this._lowpass=this.input=new OnePoleFilter({context:this.context,frequency:e.dampening,type:"lowpass"}),this._lowpass.connect(this._combFilter)}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{dampening:3e3,delayTime:.1,resonance:.5})}get dampening(){return this._lowpass.frequency}set dampening(e){this._lowpass.frequency=e}dispose(){return super.dispose(),this._combFilter.dispose(),this._lowpass.dispose(),this}}class PluckSynth extends Instrument{constructor(){super(optionsFromArguments(PluckSynth.getDefaults(),arguments)),this.name="PluckSynth";const e=optionsFromArguments(PluckSynth.getDefaults(),arguments);this._noise=new Noise({context:this.context,type:"pink"}),this.attackNoise=e.attackNoise,this._lfcf=new LowpassCombFilter({context:this.context,dampening:e.dampening,resonance:e.resonance}),this.resonance=e.resonance,this.release=e.release,this._noise.connect(this._lfcf),this._lfcf.connect(this.output)}static getDefaults(){return deepMerge(Instrument.getDefaults(),{attackNoise:1,dampening:4e3,resonance:.7,release:1})}get dampening(){return this._lfcf.dampening}set dampening(e){this._lfcf.dampening=e}triggerAttack(e,t){const n=this.toFrequency(e);t=this.toSeconds(t);const o=1/n;return this._lfcf.delayTime.setValueAtTime(o,t),this._noise.start(t),this._noise.stop(t+o*this.attackNoise),this._lfcf.resonance.cancelScheduledValues(t),this._lfcf.resonance.setValueAtTime(this.resonance,t),this}triggerRelease(e){return this._lfcf.resonance.linearRampTo(0,this.release,e),this}dispose(){return super.dispose(),this._noise.dispose(),this._lfcf.dispose(),this}}class PolySynth extends Instrument{constructor(){super(optionsFromArguments(PolySynth.getDefaults(),arguments,["voice","options"])),this.name="PolySynth",this._availableVoices=[],this._activeVoices=[],this._voices=[],this._gcTimeout=-1,this._averageActiveVoices=0;const e=optionsFromArguments(PolySynth.getDefaults(),arguments,["voice","options"]);assert(!isNumber(e.voice),"DEPRECATED: The polyphony count is no longer the first argument.");const t=e.voice.getDefaults();this.options=Object.assign(t,e.options),this.voice=e.voice,this.maxPolyphony=e.maxPolyphony,this._dummyVoice=this._getNextAvailableVoice();const n=this._voices.indexOf(this._dummyVoice);this._voices.splice(n,1),this._gcTimeout=this.context.setInterval(this._collectGarbage.bind(this),1)}static getDefaults(){return Object.assign(Instrument.getDefaults(),{maxPolyphony:32,options:{},voice:Synth})}get activeVoices(){return this._activeVoices.length}_makeVoiceAvailable(e){this._availableVoices.push(e);const t=this._activeVoices.findIndex(n=>n.voice===e);this._activeVoices.splice(t,1)}_getNextAvailableVoice(){if(this._availableVoices.length)return this._availableVoices.shift();if(this._voices.length<this.maxPolyphony){const e=new this.voice(Object.assign(this.options,{context:this.context,onsilence:this._makeVoiceAvailable.bind(this)}));return e.connect(this.output),this._voices.push(e),e}else warn("Max polyphony exceeded. Note dropped.")}_collectGarbage(){if(this._averageActiveVoices=Math.max(this._averageActiveVoices*.95,this.activeVoices),this._availableVoices.length&&this._voices.length>Math.ceil(this._averageActiveVoices+1)){const e=this._availableVoices.shift(),t=this._voices.indexOf(e);this._voices.splice(t,1),this.context.isOffline||e.dispose()}}_triggerAttack(e,t,n){e.forEach(o=>{const r=new MidiClass(this.context,o).toMidi(),a=this._getNextAvailableVoice();a&&(a.triggerAttack(o,t,n),this._activeVoices.push({midi:r,voice:a,released:!1}),this.log("triggerAttack",o,t))})}_triggerRelease(e,t){e.forEach(n=>{const o=new MidiClass(this.context,n).toMidi(),r=this._activeVoices.find(({midi:a,released:c})=>a===o&&!c);r&&(r.voice.triggerRelease(t),r.released=!0,this.log("triggerRelease",n,t))})}_scheduleEvent(e,t,n,o){assert(!this.disposed,"Synth was already disposed"),n<=this.now()?e==="attack"?this._triggerAttack(t,n,o):this._triggerRelease(t,n):this.context.setTimeout(()=>{this._scheduleEvent(e,t,n,o)},n-this.now())}triggerAttack(e,t,n){Array.isArray(e)||(e=[e]);const o=this.toSeconds(t);return this._scheduleEvent("attack",e,o,n),this}triggerRelease(e,t){Array.isArray(e)||(e=[e]);const n=this.toSeconds(t);return this._scheduleEvent("release",e,n),this}triggerAttackRelease(e,t,n,o){const r=this.toSeconds(n);if(this.triggerAttack(e,r,o),isArray(t)){assert(isArray(e),"If the duration is an array, the notes must also be an array"),e=e;for(let a=0;a<e.length;a++){const c=t[Math.min(a,t.length-1)],l=this.toSeconds(c);assert(l>0,"The duration must be greater than 0"),this.triggerRelease(e[a],r+l)}}else{const a=this.toSeconds(t);assert(a>0,"The duration must be greater than 0"),this.triggerRelease(e,r+a)}return this}sync(){return this._syncState()&&(this._syncMethod("triggerAttack",1),this._syncMethod("triggerRelease",1)),this}set(e){const t=omitFromObject(e,["onsilence","context"]);return this.options=deepMerge(this.options,t),this._voices.forEach(n=>n.set(t)),this._dummyVoice.set(t),this}get(){return this._dummyVoice.get()}releaseAll(e){const t=this.toSeconds(e);return this._activeVoices.forEach(({voice:n})=>{n.triggerRelease(t)}),this}dispose(){return super.dispose(),this._dummyVoice.dispose(),this._voices.forEach(e=>e.dispose()),this._activeVoices=[],this._availableVoices=[],this.context.clearInterval(this._gcTimeout),this}}class Sampler extends Instrument{constructor(){super(optionsFromArguments(Sampler.getDefaults(),arguments,["urls","onload","baseUrl"],"urls")),this.name="Sampler",this._activeSources=new Map;const e=optionsFromArguments(Sampler.getDefaults(),arguments,["urls","onload","baseUrl"],"urls"),t={};Object.keys(e.urls).forEach(n=>{const o=parseInt(n,10);if(assert(isNote(n)||isNumber(o)&&isFinite(o),`url key is neither a note or midi pitch: ${n}`),isNote(n)){const r=new FrequencyClass(this.context,n).toMidi();t[r]=e.urls[n]}else isNumber(o)&&isFinite(o)&&(t[o]=e.urls[o])}),this._buffers=new ToneAudioBuffers({urls:t,onload:e.onload,baseUrl:e.baseUrl,onerror:e.onerror}),this.attack=e.attack,this.release=e.release,this.curve=e.curve,this._buffers.loaded&&Promise.resolve().then(e.onload)}static getDefaults(){return Object.assign(Instrument.getDefaults(),{attack:0,baseUrl:"",curve:"exponential",onload:noOp,onerror:noOp,release:.1,urls:{}})}_findClosest(e){let n=0;for(;n<96;){if(this._buffers.has(e+n))return-n;if(this._buffers.has(e-n))return n;n++}throw new Error(`No available buffers for note: ${e}`)}triggerAttack(e,t,n=1){return this.log("triggerAttack",e,t,n),Array.isArray(e)||(e=[e]),e.forEach(o=>{const r=ftomf(new FrequencyClass(this.context,o).toFrequency()),a=Math.round(r),c=r-a,l=this._findClosest(a),u=a-l,d=this._buffers.get(u),f=intervalToFrequencyRatio(l+c),m=new ToneBufferSource({url:d,context:this.context,curve:this.curve,fadeIn:this.attack,fadeOut:this.release,playbackRate:f}).connect(this.output);m.start(t,0,d.duration/f,n),isArray(this._activeSources.get(a))||this._activeSources.set(a,[]),this._activeSources.get(a).push(m),m.onended=()=>{if(this._activeSources&&this._activeSources.has(a)){const g=this._activeSources.get(a),_=g.indexOf(m);_!==-1&&g.splice(_,1)}}}),this}triggerRelease(e,t){return this.log("triggerRelease",e,t),Array.isArray(e)||(e=[e]),e.forEach(n=>{const o=new FrequencyClass(this.context,n).toMidi();if(this._activeSources.has(o)&&this._activeSources.get(o).length){const r=this._activeSources.get(o);t=this.toSeconds(t),r.forEach(a=>{a.stop(t)}),this._activeSources.set(o,[])}}),this}releaseAll(e){const t=this.toSeconds(e);return this._activeSources.forEach(n=>{for(;n.length;)n.shift().stop(t)}),this}sync(){return this._syncState()&&(this._syncMethod("triggerAttack",1),this._syncMethod("triggerRelease",1)),this}triggerAttackRelease(e,t,n,o=1){const r=this.toSeconds(n);return this.triggerAttack(e,r,o),isArray(t)?(assert(isArray(e),"notes must be an array when duration is array"),e.forEach((a,c)=>{const l=t[Math.min(c,t.length-1)];this.triggerRelease(a,r+this.toSeconds(l))})):this.triggerRelease(e,r+this.toSeconds(t)),this}add(e,t,n){if(assert(isNote(e)||isFinite(e),`note must be a pitch or midi: ${e}`),isNote(e)){const o=new FrequencyClass(this.context,e).toMidi();this._buffers.add(o,t,n)}else this._buffers.add(e,t,n);return this}get loaded(){return this._buffers.loaded}dispose(){return super.dispose(),this._buffers.dispose(),this._activeSources.forEach(e=>{e.forEach(t=>t.dispose())}),this._activeSources.clear(),this}}__decorate([timeRange(0)],Sampler.prototype,"attack",void 0);__decorate([timeRange(0)],Sampler.prototype,"release",void 0);class ToneEvent extends ToneWithContext{constructor(){super(optionsFromArguments(ToneEvent.getDefaults(),arguments,["callback","value"])),this.name="ToneEvent",this._state=new StateTimeline("stopped"),this._startOffset=0;const e=optionsFromArguments(ToneEvent.getDefaults(),arguments,["callback","value"]);this._loop=e.loop,this.callback=e.callback,this.value=e.value,this._loopStart=this.toTicks(e.loopStart),this._loopEnd=this.toTicks(e.loopEnd),this._playbackRate=e.playbackRate,this._probability=e.probability,this._humanize=e.humanize,this.mute=e.mute,this._playbackRate=e.playbackRate,this._state.increasing=!0,this._rescheduleEvents()}static getDefaults(){return Object.assign(ToneWithContext.getDefaults(),{callback:noOp,humanize:!1,loop:!1,loopEnd:"1m",loopStart:0,mute:!1,playbackRate:1,probability:1,value:null})}_rescheduleEvents(e=-1){this._state.forEachFrom(e,t=>{let n;if(t.state==="started"){t.id!==-1&&this.context.transport.clear(t.id);const o=t.time+Math.round(this.startOffset/this._playbackRate);if(this._loop===!0||isNumber(this._loop)&&this._loop>1){n=1/0,isNumber(this._loop)&&(n=this._loop*this._getLoopDuration());const r=this._state.getAfter(o);r!==null&&(n=Math.min(n,r.time-o)),n!==1/0&&(this._state.setStateAtTime("stopped",o+n+1,{id:-1}),n=new TicksClass(this.context,n));const a=new TicksClass(this.context,this._getLoopDuration());t.id=this.context.transport.scheduleRepeat(this._tick.bind(this),a,new TicksClass(this.context,o),n)}else t.id=this.context.transport.schedule(this._tick.bind(this),new TicksClass(this.context,o))}})}get state(){return this._state.getValueAtTime(this.context.transport.ticks)}get startOffset(){return this._startOffset}set startOffset(e){this._startOffset=e}get probability(){return this._probability}set probability(e){this._probability=e}get humanize(){return this._humanize}set humanize(e){this._humanize=e}start(e){const t=this.toTicks(e);return this._state.getValueAtTime(t)==="stopped"&&(this._state.add({id:-1,state:"started",time:t}),this._rescheduleEvents(t)),this}stop(e){this.cancel(e);const t=this.toTicks(e);if(this._state.getValueAtTime(t)==="started"){this._state.setStateAtTime("stopped",t,{id:-1});const n=this._state.getBefore(t);let o=t;n!==null&&(o=n.time),this._rescheduleEvents(o)}return this}cancel(e){e=defaultArg(e,-1/0);const t=this.toTicks(e);return this._state.forEachFrom(t,n=>{this.context.transport.clear(n.id)}),this._state.cancel(t),this}_tick(e){const t=this.context.transport.getTicksAtTime(e);if(!this.mute&&this._state.getValueAtTime(t)==="started"){if(this.probability<1&&Math.random()>this.probability)return;if(this.humanize){let n=.02;isBoolean(this.humanize)||(n=this.toSeconds(this.humanize)),e+=(Math.random()*2-1)*n}this.callback(e,this.value)}}_getLoopDuration(){return Math.round((this._loopEnd-this._loopStart)/this._playbackRate)}get loop(){return this._loop}set loop(e){this._loop=e,this._rescheduleEvents()}get playbackRate(){return this._playbackRate}set playbackRate(e){this._playbackRate=e,this._rescheduleEvents()}get loopEnd(){return new TicksClass(this.context,this._loopEnd).toSeconds()}set loopEnd(e){this._loopEnd=this.toTicks(e),this._loop&&this._rescheduleEvents()}get loopStart(){return new TicksClass(this.context,this._loopStart).toSeconds()}set loopStart(e){this._loopStart=this.toTicks(e),this._loop&&this._rescheduleEvents()}get progress(){if(this._loop){const e=this.context.transport.ticks,t=this._state.get(e);if(t!==null&&t.state==="started"){const n=this._getLoopDuration();return(e-t.time)%n/n}else return 0}else return 0}dispose(){return super.dispose(),this.cancel(),this._state.dispose(),this}}class Loop extends ToneWithContext{constructor(){super(optionsFromArguments(Loop.getDefaults(),arguments,["callback","interval"])),this.name="Loop";const e=optionsFromArguments(Loop.getDefaults(),arguments,["callback","interval"]);this._event=new ToneEvent({context:this.context,callback:this._tick.bind(this),loop:!0,loopEnd:e.interval,playbackRate:e.playbackRate,probability:e.probability}),this.callback=e.callback,this.iterations=e.iterations}static getDefaults(){return Object.assign(ToneWithContext.getDefaults(),{interval:"4n",callback:noOp,playbackRate:1,iterations:1/0,probability:1,mute:!1,humanize:!1})}start(e){return this._event.start(e),this}stop(e){return this._event.stop(e),this}cancel(e){return this._event.cancel(e),this}_tick(e){this.callback(e)}get state(){return this._event.state}get progress(){return this._event.progress}get interval(){return this._event.loopEnd}set interval(e){this._event.loopEnd=e}get playbackRate(){return this._event.playbackRate}set playbackRate(e){this._event.playbackRate=e}get humanize(){return this._event.humanize}set humanize(e){this._event.humanize=e}get probability(){return this._event.probability}set probability(e){this._event.probability=e}get mute(){return this._event.mute}set mute(e){this._event.mute=e}get iterations(){return this._event.loop===!0?1/0:this._event.loop}set iterations(e){e===1/0?this._event.loop=!0:this._event.loop=e}dispose(){return super.dispose(),this._event.dispose(),this}}class Part extends ToneEvent{constructor(){super(optionsFromArguments(Part.getDefaults(),arguments,["callback","events"])),this.name="Part",this._state=new StateTimeline("stopped"),this._events=new Set;const e=optionsFromArguments(Part.getDefaults(),arguments,["callback","events"]);this._state.increasing=!0,e.events.forEach(t=>{isArray(t)?this.add(t[0],t[1]):this.add(t)})}static getDefaults(){return Object.assign(ToneEvent.getDefaults(),{events:[]})}start(e,t){const n=this.toTicks(e);if(this._state.getValueAtTime(n)!=="started"){t=defaultArg(t,this._loop?this._loopStart:0),this._loop?t=defaultArg(t,this._loopStart):t=defaultArg(t,0);const o=this.toTicks(t);this._state.add({id:-1,offset:o,state:"started",time:n}),this._forEach(r=>{this._startNote(r,n,o)})}return this}_startNote(e,t,n){t-=n,this._loop?e.startOffset>=this._loopStart&&e.startOffset<this._loopEnd?(e.startOffset<n&&(t+=this._getLoopDuration()),e.start(new TicksClass(this.context,t))):e.startOffset<this._loopStart&&e.startOffset>=n&&(e.loop=!1,e.start(new TicksClass(this.context,t))):e.startOffset>=n&&e.start(new TicksClass(this.context,t))}get startOffset(){return this._startOffset}set startOffset(e){this._startOffset=e,this._forEach(t=>{t.startOffset+=this._startOffset})}stop(e){const t=this.toTicks(e);return this._state.cancel(t),this._state.setStateAtTime("stopped",t),this._forEach(n=>{n.stop(e)}),this}at(e,t){const n=new TransportTimeClass(this.context,e).toTicks(),o=new TicksClass(this.context,1).toSeconds(),r=this._events.values();let a=r.next();for(;!a.done;){const c=a.value;if(Math.abs(n-c.startOffset)<o)return isDefined(t)&&(c.value=t),c;a=r.next()}return isDefined(t)?(this.add(e,t),this.at(e)):null}add(e,t){e instanceof Object&&Reflect.has(e,"time")&&(t=e,e=t.time);const n=this.toTicks(e);let o;return t instanceof ToneEvent?(o=t,o.callback=this._tick.bind(this)):o=new ToneEvent({callback:this._tick.bind(this),context:this.context,value:t}),o.startOffset=n,o.set({humanize:this.humanize,loop:this.loop,loopEnd:this.loopEnd,loopStart:this.loopStart,playbackRate:this.playbackRate,probability:this.probability}),this._events.add(o),this._restartEvent(o),this}_restartEvent(e){this._state.forEach(t=>{t.state==="started"?this._startNote(e,t.time,t.offset):e.stop(new TicksClass(this.context,t.time))})}remove(e,t){return isObject(e)&&e.hasOwnProperty("time")&&(t=e,e=t.time),e=this.toTicks(e),this._events.forEach(n=>{n.startOffset===e&&(isUndef(t)||isDefined(t)&&n.value===t)&&(this._events.delete(n),n.dispose())}),this}clear(){return this._forEach(e=>e.dispose()),this._events.clear(),this}cancel(e){return this._forEach(t=>t.cancel(e)),this._state.cancel(this.toTicks(e)),this}_forEach(e){return this._events&&this._events.forEach(t=>{t instanceof Part?t._forEach(e):e(t)}),this}_setAll(e,t){this._forEach(n=>{n[e]=t})}_tick(e,t){this.mute||this.callback(e,t)}_testLoopBoundries(e){this._loop&&(e.startOffset<this._loopStart||e.startOffset>=this._loopEnd)?e.cancel(0):e.state==="stopped"&&this._restartEvent(e)}get probability(){return this._probability}set probability(e){this._probability=e,this._setAll("probability",e)}get humanize(){return this._humanize}set humanize(e){this._humanize=e,this._setAll("humanize",e)}get loop(){return this._loop}set loop(e){this._loop=e,this._forEach(t=>{t.loopStart=this.loopStart,t.loopEnd=this.loopEnd,t.loop=e,this._testLoopBoundries(t)})}get loopEnd(){return new TicksClass(this.context,this._loopEnd).toSeconds()}set loopEnd(e){this._loopEnd=this.toTicks(e),this._loop&&this._forEach(t=>{t.loopEnd=e,this._testLoopBoundries(t)})}get loopStart(){return new TicksClass(this.context,this._loopStart).toSeconds()}set loopStart(e){this._loopStart=this.toTicks(e),this._loop&&this._forEach(t=>{t.loopStart=this.loopStart,this._testLoopBoundries(t)})}get playbackRate(){return this._playbackRate}set playbackRate(e){this._playbackRate=e,this._setAll("playbackRate",e)}get length(){return this._events.size}dispose(){return super.dispose(),this.clear(),this}}function*upPatternGen(s){let e=0;for(;e<s.length;)e=clampToArraySize(e,s),yield s[e],e++}function*downPatternGen(s){let e=s.length-1;for(;e>=0;)e=clampToArraySize(e,s),yield s[e],e--}function*infiniteGen(s,e){for(;;)yield*e(s)}function clampToArraySize(s,e){return clamp(s,0,e.length-1)}function*alternatingGenerator(s,e){let t=e?0:s.length-1;for(;;)t=clampToArraySize(t,s),yield s[t],e?(t++,t>=s.length-1&&(e=!1)):(t--,t<=0&&(e=!0))}function*jumpUp(s){let e=0,t=0;for(;e<s.length;)e=clampToArraySize(e,s),yield s[e],t++,e+=t%2?2:-1}function*jumpDown(s){let e=s.length-1,t=0;for(;e>=0;)e=clampToArraySize(e,s),yield s[e],t++,e+=t%2?-2:1}function*randomGen(s){for(;;){const e=Math.floor(Math.random()*s.length);yield s[e]}}function*randomOnce(s){const e=[];for(let t=0;t<s.length;t++)e.push(t);for(;e.length>0;){const t=e.splice(Math.floor(e.length*Math.random()),1),n=clampToArraySize(t[0],s);yield s[n]}}function*randomWalk(s){let e=Math.floor(Math.random()*s.length);for(;;)e===0?e++:e===s.length-1||Math.random()<.5?e--:e++,yield s[e]}function*PatternGenerator(s,e="up",t=0){switch(assert(s.length>0,"The array must have more than one value in it"),e){case"up":yield*infiniteGen(s,upPatternGen);case"down":yield*infiniteGen(s,downPatternGen);case"upDown":yield*alternatingGenerator(s,!0);case"downUp":yield*alternatingGenerator(s,!1);case"alternateUp":yield*infiniteGen(s,jumpUp);case"alternateDown":yield*infiniteGen(s,jumpDown);case"random":yield*randomGen(s);case"randomOnce":yield*infiniteGen(s,randomOnce);case"randomWalk":yield*randomWalk(s)}}class Pattern extends Loop{constructor(){super(optionsFromArguments(Pattern.getDefaults(),arguments,["callback","values","pattern"])),this.name="Pattern";const e=optionsFromArguments(Pattern.getDefaults(),arguments,["callback","values","pattern"]);this.callback=e.callback,this._values=e.values,this._pattern=PatternGenerator(e.values,e.pattern),this._type=e.pattern}static getDefaults(){return Object.assign(Loop.getDefaults(),{pattern:"up",values:[],callback:noOp})}_tick(e){const t=this._pattern.next();this._value=t.value,this.callback(e,this._value)}get values(){return this._values}set values(e){this._values=e,this.pattern=this._type}get value(){return this._value}get pattern(){return this._type}set pattern(e){this._type=e,this._pattern=PatternGenerator(this._values,this._type)}}class Sequence extends ToneEvent{constructor(){super(optionsFromArguments(Sequence.getDefaults(),arguments,["callback","events","subdivision"])),this.name="Sequence",this._part=new Part({callback:this._seqCallback.bind(this),context:this.context}),this._events=[],this._eventsArray=[];const e=optionsFromArguments(Sequence.getDefaults(),arguments,["callback","events","subdivision"]);this._subdivision=this.toTicks(e.subdivision),this.events=e.events,this.loop=e.loop,this.loopStart=e.loopStart,this.loopEnd=e.loopEnd,this.playbackRate=e.playbackRate,this.probability=e.probability,this.humanize=e.humanize,this.mute=e.mute,this.playbackRate=e.playbackRate}static getDefaults(){return Object.assign(omitFromObject(ToneEvent.getDefaults(),["value"]),{events:[],loop:!0,loopEnd:0,loopStart:0,subdivision:"8n"})}_seqCallback(e,t){t!==null&&this.callback(e,t)}get events(){return this._events}set events(e){this.clear(),this._eventsArray=e,this._events=this._createSequence(this._eventsArray),this._eventsUpdated()}start(e,t){return this._part.start(e,t&&this._indexTime(t)),this}stop(e){return this._part.stop(e),this}get subdivision(){return new TicksClass(this.context,this._subdivision).toSeconds()}_createSequence(e){return new Proxy(e,{get:(t,n)=>t[n],set:(t,n,o)=>(isString(n)&&isFinite(parseInt(n,10))&&isArray(o)?t[n]=this._createSequence(o):t[n]=o,this._eventsUpdated(),!0)})}_eventsUpdated(){this._part.clear(),this._rescheduleSequence(this._eventsArray,this._subdivision,this.startOffset),this.loopEnd=this.loopEnd}_rescheduleSequence(e,t,n){e.forEach((o,r)=>{const a=r*t+n;if(isArray(o))this._rescheduleSequence(o,t/o.length,a);else{const c=new TicksClass(this.context,a,"i").toSeconds();this._part.add(c,o)}})}_indexTime(e){return new TicksClass(this.context,e*this._subdivision+this.startOffset).toSeconds()}clear(){return this._part.clear(),this}dispose(){return super.dispose(),this._part.dispose(),this}get loop(){return this._part.loop}set loop(e){this._part.loop=e}get loopStart(){return this._loopStart}set loopStart(e){this._loopStart=e,this._part.loopStart=this._indexTime(e)}get loopEnd(){return this._loopEnd}set loopEnd(e){this._loopEnd=e,e===0?this._part.loopEnd=this._indexTime(this._eventsArray.length):this._part.loopEnd=this._indexTime(e)}get startOffset(){return this._part.startOffset}set startOffset(e){this._part.startOffset=e}get playbackRate(){return this._part.playbackRate}set playbackRate(e){this._part.playbackRate=e}get probability(){return this._part.probability}set probability(e){this._part.probability=e}get progress(){return this._part.progress}get humanize(){return this._part.humanize}set humanize(e){this._part.humanize=e}get length(){return this._part.length}}class CrossFade extends ToneAudioNode{constructor(){super(Object.assign(optionsFromArguments(CrossFade.getDefaults(),arguments,["fade"]))),this.name="CrossFade",this._panner=this.context.createStereoPanner(),this._split=this.context.createChannelSplitter(2),this._g2a=new GainToAudio({context:this.context}),this.a=new Gain({context:this.context,gain:0}),this.b=new Gain({context:this.context,gain:0}),this.output=new Gain({context:this.context}),this._internalChannels=[this.a,this.b];const e=optionsFromArguments(CrossFade.getDefaults(),arguments,["fade"]);this.fade=new Signal({context:this.context,units:"normalRange",value:e.fade}),readOnly(this,"fade"),this.context.getConstant(1).connect(this._panner),this._panner.connect(this._split),this._panner.channelCount=1,this._panner.channelCountMode="explicit",connect(this._split,this.a.gain,0),connect(this._split,this.b.gain,1),this.fade.chain(this._g2a,this._panner.pan),this.a.connect(this.output),this.b.connect(this.output)}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{fade:.5})}dispose(){return super.dispose(),this.a.dispose(),this.b.dispose(),this.output.dispose(),this.fade.dispose(),this._g2a.dispose(),this._panner.disconnect(),this._split.disconnect(),this}}class Effect extends ToneAudioNode{constructor(e){super(e),this.name="Effect",this._dryWet=new CrossFade({context:this.context}),this.wet=this._dryWet.fade,this.effectSend=new Gain({context:this.context}),this.effectReturn=new Gain({context:this.context}),this.input=new Gain({context:this.context}),this.output=this._dryWet,this.input.fan(this._dryWet.a,this.effectSend),this.effectReturn.connect(this._dryWet.b),this.wet.setValueAtTime(e.wet,0),this._internalChannels=[this.effectReturn,this.effectSend],readOnly(this,"wet")}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{wet:1})}connectEffect(e){return this._internalChannels.push(e),this.effectSend.chain(e,this.effectReturn),this}dispose(){return super.dispose(),this._dryWet.dispose(),this.effectSend.dispose(),this.effectReturn.dispose(),this.wet.dispose(),this}}class LFOEffect extends Effect{constructor(e){super(e),this.name="LFOEffect",this._lfo=new LFO({context:this.context,frequency:e.frequency,amplitude:e.depth}),this.depth=this._lfo.amplitude,this.frequency=this._lfo.frequency,this.type=e.type,readOnly(this,["frequency","depth"])}static getDefaults(){return Object.assign(Effect.getDefaults(),{frequency:1,type:"sine",depth:1})}start(e){return this._lfo.start(e),this}stop(e){return this._lfo.stop(e),this}sync(){return this._lfo.sync(),this}unsync(){return this._lfo.unsync(),this}get type(){return this._lfo.type}set type(e){this._lfo.type=e}dispose(){return super.dispose(),this._lfo.dispose(),this.frequency.dispose(),this.depth.dispose(),this}}class AutoFilter extends LFOEffect{constructor(){super(optionsFromArguments(AutoFilter.getDefaults(),arguments,["frequency","baseFrequency","octaves"])),this.name="AutoFilter";const e=optionsFromArguments(AutoFilter.getDefaults(),arguments,["frequency","baseFrequency","octaves"]);this.filter=new Filter$2(Object.assign(e.filter,{context:this.context})),this.connectEffect(this.filter),this._lfo.connect(this.filter.frequency),this.octaves=e.octaves,this.baseFrequency=e.baseFrequency}static getDefaults(){return Object.assign(LFOEffect.getDefaults(),{baseFrequency:200,octaves:2.6,filter:{type:"lowpass",rolloff:-12,Q:1}})}get baseFrequency(){return this._lfo.min}set baseFrequency(e){this._lfo.min=this.toFrequency(e),this.octaves=this._octaves}get octaves(){return this._octaves}set octaves(e){this._octaves=e,this._lfo.max=this._lfo.min*Math.pow(2,e)}dispose(){return super.dispose(),this.filter.dispose(),this}}class Panner extends ToneAudioNode{constructor(){super(Object.assign(optionsFromArguments(Panner.getDefaults(),arguments,["pan"]))),this.name="Panner",this._panner=this.context.createStereoPanner(),this.input=this._panner,this.output=this._panner;const e=optionsFromArguments(Panner.getDefaults(),arguments,["pan"]);this.pan=new Param({context:this.context,param:this._panner.pan,value:e.pan,minValue:-1,maxValue:1}),this._panner.channelCount=e.channelCount,this._panner.channelCountMode="explicit",readOnly(this,"pan")}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{pan:0,channelCount:1})}dispose(){return super.dispose(),this._panner.disconnect(),this.pan.dispose(),this}}class AutoPanner extends LFOEffect{constructor(){super(optionsFromArguments(AutoPanner.getDefaults(),arguments,["frequency"])),this.name="AutoPanner";const e=optionsFromArguments(AutoPanner.getDefaults(),arguments,["frequency"]);this._panner=new Panner({context:this.context,channelCount:e.channelCount}),this.connectEffect(this._panner),this._lfo.connect(this._panner.pan),this._lfo.min=-1,this._lfo.max=1}static getDefaults(){return Object.assign(LFOEffect.getDefaults(),{channelCount:1})}dispose(){return super.dispose(),this._panner.dispose(),this}}class Follower extends ToneAudioNode{constructor(){super(optionsFromArguments(Follower.getDefaults(),arguments,["smoothing"])),this.name="Follower";const e=optionsFromArguments(Follower.getDefaults(),arguments,["smoothing"]);this._abs=this.input=new Abs({context:this.context}),this._lowpass=this.output=new OnePoleFilter({context:this.context,frequency:1/this.toSeconds(e.smoothing),type:"lowpass"}),this._abs.connect(this._lowpass),this._smoothing=e.smoothing}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{smoothing:.05})}get smoothing(){return this._smoothing}set smoothing(e){this._smoothing=e,this._lowpass.frequency=1/this.toSeconds(this.smoothing)}dispose(){return super.dispose(),this._abs.dispose(),this._lowpass.dispose(),this}}class AutoWah extends Effect{constructor(){super(optionsFromArguments(AutoWah.getDefaults(),arguments,["baseFrequency","octaves","sensitivity"])),this.name="AutoWah";const e=optionsFromArguments(AutoWah.getDefaults(),arguments,["baseFrequency","octaves","sensitivity"]);this._follower=new Follower({context:this.context,smoothing:e.follower}),this._sweepRange=new ScaleExp({context:this.context,min:0,max:1,exponent:.5}),this._baseFrequency=this.toFrequency(e.baseFrequency),this._octaves=e.octaves,this._inputBoost=new Gain({context:this.context}),this._bandpass=new Filter$2({context:this.context,rolloff:-48,frequency:0,Q:e.Q}),this._peaking=new Filter$2({context:this.context,type:"peaking"}),this._peaking.gain.value=e.gain,this.gain=this._peaking.gain,this.Q=this._bandpass.Q,this.effectSend.chain(this._inputBoost,this._follower,this._sweepRange),this._sweepRange.connect(this._bandpass.frequency),this._sweepRange.connect(this._peaking.frequency),this.effectSend.chain(this._bandpass,this._peaking,this.effectReturn),this._setSweepRange(),this.sensitivity=e.sensitivity,readOnly(this,["gain","Q"])}static getDefaults(){return Object.assign(Effect.getDefaults(),{baseFrequency:100,octaves:6,sensitivity:0,Q:2,gain:2,follower:.2})}get octaves(){return this._octaves}set octaves(e){this._octaves=e,this._setSweepRange()}get follower(){return this._follower.smoothing}set follower(e){this._follower.smoothing=e}get baseFrequency(){return this._baseFrequency}set baseFrequency(e){this._baseFrequency=this.toFrequency(e),this._setSweepRange()}get sensitivity(){return gainToDb(1/this._inputBoost.gain.value)}set sensitivity(e){this._inputBoost.gain.value=1/dbToGain(e)}_setSweepRange(){this._sweepRange.min=this._baseFrequency,this._sweepRange.max=Math.min(this._baseFrequency*Math.pow(2,this._octaves),this.context.sampleRate/2)}dispose(){return super.dispose(),this._follower.dispose(),this._sweepRange.dispose(),this._bandpass.dispose(),this._peaking.dispose(),this._inputBoost.dispose(),this}}const workletName="bit-crusher",bitCrusherWorklet=`
	class BitCrusherWorklet extends SingleIOProcessor {

		static get parameterDescriptors() {
			return [{
				name: "bits",
				defaultValue: 12,
				minValue: 1,
				maxValue: 16,
				automationRate: 'k-rate'
			}];
		}

		generate(input, _channel, parameters) {
			const step = Math.pow(0.5, parameters.bits - 1);
			const val = step * Math.floor(input / step + 0.5);
			return val;
		}
	}
`;registerProcessor(workletName,bitCrusherWorklet);class BitCrusher extends Effect{constructor(){super(optionsFromArguments(BitCrusher.getDefaults(),arguments,["bits"])),this.name="BitCrusher";const e=optionsFromArguments(BitCrusher.getDefaults(),arguments,["bits"]);this._bitCrusherWorklet=new BitCrusherWorklet({context:this.context,bits:e.bits}),this.connectEffect(this._bitCrusherWorklet),this.bits=this._bitCrusherWorklet.bits}static getDefaults(){return Object.assign(Effect.getDefaults(),{bits:4})}dispose(){return super.dispose(),this._bitCrusherWorklet.dispose(),this}}class BitCrusherWorklet extends ToneAudioWorklet{constructor(){super(optionsFromArguments(BitCrusherWorklet.getDefaults(),arguments)),this.name="BitCrusherWorklet";const e=optionsFromArguments(BitCrusherWorklet.getDefaults(),arguments);this.input=new Gain({context:this.context}),this.output=new Gain({context:this.context}),this.bits=new Param({context:this.context,value:e.bits,units:"positive",minValue:1,maxValue:16,param:this._dummyParam,swappable:!0})}static getDefaults(){return Object.assign(ToneAudioWorklet.getDefaults(),{bits:12})}_audioWorkletName(){return workletName}onReady(e){connectSeries(this.input,e,this.output);const t=e.parameters.get("bits");this.bits.setParam(t)}dispose(){return super.dispose(),this.input.dispose(),this.output.dispose(),this.bits.dispose(),this}}class Chebyshev extends Effect{constructor(){super(optionsFromArguments(Chebyshev.getDefaults(),arguments,["order"])),this.name="Chebyshev";const e=optionsFromArguments(Chebyshev.getDefaults(),arguments,["order"]);this._shaper=new WaveShaper({context:this.context,length:4096}),this._order=e.order,this.connectEffect(this._shaper),this.order=e.order,this.oversample=e.oversample}static getDefaults(){return Object.assign(Effect.getDefaults(),{order:1,oversample:"none"})}_getCoefficient(e,t,n){return n.has(t)||(t===0?n.set(t,0):t===1?n.set(t,e):n.set(t,2*e*this._getCoefficient(e,t-1,n)-this._getCoefficient(e,t-2,n))),n.get(t)}get order(){return this._order}set order(e){this._order=e,this._shaper.setMap(t=>this._getCoefficient(t,e,new Map))}get oversample(){return this._shaper.oversample}set oversample(e){this._shaper.oversample=e}dispose(){return super.dispose(),this._shaper.dispose(),this}}class Split extends ToneAudioNode{constructor(){super(optionsFromArguments(Split.getDefaults(),arguments,["channels"])),this.name="Split";const e=optionsFromArguments(Split.getDefaults(),arguments,["channels"]);this._splitter=this.input=this.output=this.context.createChannelSplitter(e.channels),this._internalChannels=[this._splitter]}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{channels:2})}dispose(){return super.dispose(),this._splitter.disconnect(),this}}class Merge extends ToneAudioNode{constructor(){super(optionsFromArguments(Merge.getDefaults(),arguments,["channels"])),this.name="Merge";const e=optionsFromArguments(Merge.getDefaults(),arguments,["channels"]);this._merger=this.output=this.input=this.context.createChannelMerger(e.channels)}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{channels:2})}dispose(){return super.dispose(),this._merger.disconnect(),this}}class StereoEffect extends ToneAudioNode{constructor(e){super(e),this.name="StereoEffect",this.input=new Gain({context:this.context}),this.input.channelCount=2,this.input.channelCountMode="explicit",this._dryWet=this.output=new CrossFade({context:this.context,fade:e.wet}),this.wet=this._dryWet.fade,this._split=new Split({context:this.context,channels:2}),this._merge=new Merge({context:this.context,channels:2}),this.input.connect(this._split),this.input.connect(this._dryWet.a),this._merge.connect(this._dryWet.b),readOnly(this,["wet"])}connectEffectLeft(...e){this._split.connect(e[0],0,0),connectSeries(...e),connect(e[e.length-1],this._merge,0,0)}connectEffectRight(...e){this._split.connect(e[0],1,0),connectSeries(...e),connect(e[e.length-1],this._merge,0,1)}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{wet:1})}dispose(){return super.dispose(),this._dryWet.dispose(),this._split.dispose(),this._merge.dispose(),this}}class StereoFeedbackEffect extends StereoEffect{constructor(e){super(e),this.feedback=new Signal({context:this.context,value:e.feedback,units:"normalRange"}),this._feedbackL=new Gain({context:this.context}),this._feedbackR=new Gain({context:this.context}),this._feedbackSplit=new Split({context:this.context,channels:2}),this._feedbackMerge=new Merge({context:this.context,channels:2}),this._merge.connect(this._feedbackSplit),this._feedbackMerge.connect(this._split),this._feedbackSplit.connect(this._feedbackL,0,0),this._feedbackL.connect(this._feedbackMerge,0,0),this._feedbackSplit.connect(this._feedbackR,1,0),this._feedbackR.connect(this._feedbackMerge,0,1),this.feedback.fan(this._feedbackL.gain,this._feedbackR.gain),readOnly(this,["feedback"])}static getDefaults(){return Object.assign(StereoEffect.getDefaults(),{feedback:.5})}dispose(){return super.dispose(),this.feedback.dispose(),this._feedbackL.dispose(),this._feedbackR.dispose(),this._feedbackSplit.dispose(),this._feedbackMerge.dispose(),this}}class Chorus extends StereoFeedbackEffect{constructor(){super(optionsFromArguments(Chorus.getDefaults(),arguments,["frequency","delayTime","depth"])),this.name="Chorus";const e=optionsFromArguments(Chorus.getDefaults(),arguments,["frequency","delayTime","depth"]);this._depth=e.depth,this._delayTime=e.delayTime/1e3,this._lfoL=new LFO({context:this.context,frequency:e.frequency,min:0,max:1}),this._lfoR=new LFO({context:this.context,frequency:e.frequency,min:0,max:1,phase:180}),this._delayNodeL=new Delay({context:this.context}),this._delayNodeR=new Delay({context:this.context}),this.frequency=this._lfoL.frequency,readOnly(this,["frequency"]),this._lfoL.frequency.connect(this._lfoR.frequency),this.connectEffectLeft(this._delayNodeL),this.connectEffectRight(this._delayNodeR),this._lfoL.connect(this._delayNodeL.delayTime),this._lfoR.connect(this._delayNodeR.delayTime),this.depth=this._depth,this.type=e.type,this.spread=e.spread}static getDefaults(){return Object.assign(StereoFeedbackEffect.getDefaults(),{frequency:1.5,delayTime:3.5,depth:.7,type:"sine",spread:180,feedback:0,wet:.5})}get depth(){return this._depth}set depth(e){this._depth=e;const t=this._delayTime*e;this._lfoL.min=Math.max(this._delayTime-t,0),this._lfoL.max=this._delayTime+t,this._lfoR.min=Math.max(this._delayTime-t,0),this._lfoR.max=this._delayTime+t}get delayTime(){return this._delayTime*1e3}set delayTime(e){this._delayTime=e/1e3,this.depth=this._depth}get type(){return this._lfoL.type}set type(e){this._lfoL.type=e,this._lfoR.type=e}get spread(){return this._lfoR.phase-this._lfoL.phase}set spread(e){this._lfoL.phase=90-e/2,this._lfoR.phase=e/2+90}start(e){return this._lfoL.start(e),this._lfoR.start(e),this}stop(e){return this._lfoL.stop(e),this._lfoR.stop(e),this}sync(){return this._lfoL.sync(),this._lfoR.sync(),this}unsync(){return this._lfoL.unsync(),this._lfoR.unsync(),this}dispose(){return super.dispose(),this._lfoL.dispose(),this._lfoR.dispose(),this._delayNodeL.dispose(),this._delayNodeR.dispose(),this.frequency.dispose(),this}}class Distortion extends Effect{constructor(){super(optionsFromArguments(Distortion.getDefaults(),arguments,["distortion"])),this.name="Distortion";const e=optionsFromArguments(Distortion.getDefaults(),arguments,["distortion"]);this._shaper=new WaveShaper({context:this.context,length:4096}),this._distortion=e.distortion,this.connectEffect(this._shaper),this.distortion=e.distortion,this.oversample=e.oversample}static getDefaults(){return Object.assign(Effect.getDefaults(),{distortion:.4,oversample:"none"})}get distortion(){return this._distortion}set distortion(e){this._distortion=e;const t=e*100,n=Math.PI/180;this._shaper.setMap(o=>Math.abs(o)<.001?0:(3+t)*o*20*n/(Math.PI+t*Math.abs(o)))}get oversample(){return this._shaper.oversample}set oversample(e){this._shaper.oversample=e}dispose(){return super.dispose(),this._shaper.dispose(),this}}class FeedbackEffect extends Effect{constructor(e){super(e),this.name="FeedbackEffect",this._feedbackGain=new Gain({context:this.context,gain:e.feedback,units:"normalRange"}),this.feedback=this._feedbackGain.gain,readOnly(this,"feedback"),this.effectReturn.chain(this._feedbackGain,this.effectSend)}static getDefaults(){return Object.assign(Effect.getDefaults(),{feedback:.125})}dispose(){return super.dispose(),this._feedbackGain.dispose(),this.feedback.dispose(),this}}class FeedbackDelay extends FeedbackEffect{constructor(){super(optionsFromArguments(FeedbackDelay.getDefaults(),arguments,["delayTime","feedback"])),this.name="FeedbackDelay";const e=optionsFromArguments(FeedbackDelay.getDefaults(),arguments,["delayTime","feedback"]);this._delayNode=new Delay({context:this.context,delayTime:e.delayTime,maxDelay:e.maxDelay}),this.delayTime=this._delayNode.delayTime,this.connectEffect(this._delayNode),readOnly(this,"delayTime")}static getDefaults(){return Object.assign(FeedbackEffect.getDefaults(),{delayTime:.25,maxDelay:1})}dispose(){return super.dispose(),this._delayNode.dispose(),this.delayTime.dispose(),this}}class PhaseShiftAllpass extends ToneAudioNode{constructor(e){super(e),this.name="PhaseShiftAllpass",this.input=new Gain({context:this.context}),this.output=new Gain({context:this.context}),this.offset90=new Gain({context:this.context});const t=[.6923878,.9360654322959,.988229522686,.9987488452737],n=[.4021921162426,.856171088242,.9722909545651,.9952884791278];this._bank0=this._createAllPassFilterBank(t),this._bank1=this._createAllPassFilterBank(n),this._oneSampleDelay=this.context.createIIRFilter([0,1],[1,0]),connectSeries(this.input,...this._bank0,this._oneSampleDelay,this.output),connectSeries(this.input,...this._bank1,this.offset90)}_createAllPassFilterBank(e){return e.map(n=>{const o=[[n*n,0,-1],[1,0,-(n*n)]];return this.context.createIIRFilter(o[0],o[1])})}dispose(){return super.dispose(),this.input.dispose(),this.output.dispose(),this.offset90.dispose(),this._bank0.forEach(e=>e.disconnect()),this._bank1.forEach(e=>e.disconnect()),this._oneSampleDelay.disconnect(),this}}class FrequencyShifter extends Effect{constructor(){super(optionsFromArguments(FrequencyShifter.getDefaults(),arguments,["frequency"])),this.name="FrequencyShifter";const e=optionsFromArguments(FrequencyShifter.getDefaults(),arguments,["frequency"]);this.frequency=new Signal({context:this.context,units:"frequency",value:e.frequency,minValue:-this.context.sampleRate/2,maxValue:this.context.sampleRate/2}),this._sine=new ToneOscillatorNode({context:this.context,type:"sine"}),this._cosine=new Oscillator({context:this.context,phase:-90,type:"sine"}),this._sineMultiply=new Multiply({context:this.context}),this._cosineMultiply=new Multiply({context:this.context}),this._negate=new Negate({context:this.context}),this._add=new Add({context:this.context}),this._phaseShifter=new PhaseShiftAllpass({context:this.context}),this.effectSend.connect(this._phaseShifter),this.frequency.fan(this._sine.frequency,this._cosine.frequency),this._phaseShifter.offset90.connect(this._cosineMultiply),this._cosine.connect(this._cosineMultiply.factor),this._phaseShifter.connect(this._sineMultiply),this._sine.connect(this._sineMultiply.factor),this._sineMultiply.connect(this._negate),this._cosineMultiply.connect(this._add),this._negate.connect(this._add.addend),this._add.connect(this.effectReturn);const t=this.immediate();this._sine.start(t),this._cosine.start(t)}static getDefaults(){return Object.assign(Effect.getDefaults(),{frequency:0})}dispose(){return super.dispose(),this.frequency.dispose(),this._add.dispose(),this._cosine.dispose(),this._cosineMultiply.dispose(),this._negate.dispose(),this._phaseShifter.dispose(),this._sine.dispose(),this._sineMultiply.dispose(),this}}const combFilterTunings=[1557/44100,1617/44100,1491/44100,1422/44100,1277/44100,1356/44100,1188/44100,1116/44100],allpassFilterFrequencies=[225,556,441,341];class Freeverb extends StereoEffect{constructor(){super(optionsFromArguments(Freeverb.getDefaults(),arguments,["roomSize","dampening"])),this.name="Freeverb",this._combFilters=[],this._allpassFiltersL=[],this._allpassFiltersR=[];const e=optionsFromArguments(Freeverb.getDefaults(),arguments,["roomSize","dampening"]);this.roomSize=new Signal({context:this.context,value:e.roomSize,units:"normalRange"}),this._allpassFiltersL=allpassFilterFrequencies.map(t=>{const n=this.context.createBiquadFilter();return n.type="allpass",n.frequency.value=t,n}),this._allpassFiltersR=allpassFilterFrequencies.map(t=>{const n=this.context.createBiquadFilter();return n.type="allpass",n.frequency.value=t,n}),this._combFilters=combFilterTunings.map((t,n)=>{const o=new LowpassCombFilter({context:this.context,dampening:e.dampening,delayTime:t});return n<combFilterTunings.length/2?this.connectEffectLeft(o,...this._allpassFiltersL):this.connectEffectRight(o,...this._allpassFiltersR),this.roomSize.connect(o.resonance),o}),readOnly(this,["roomSize"])}static getDefaults(){return Object.assign(StereoEffect.getDefaults(),{roomSize:.7,dampening:3e3})}get dampening(){return this._combFilters[0].dampening}set dampening(e){this._combFilters.forEach(t=>t.dampening=e)}dispose(){return super.dispose(),this._allpassFiltersL.forEach(e=>e.disconnect()),this._allpassFiltersR.forEach(e=>e.disconnect()),this._combFilters.forEach(e=>e.dispose()),this.roomSize.dispose(),this}}const combFilterDelayTimes=[1687/25e3,1601/25e3,2053/25e3,2251/25e3],combFilterResonances=[.773,.802,.753,.733],allpassFilterFreqs=[347,113,37];class JCReverb extends StereoEffect{constructor(){super(optionsFromArguments(JCReverb.getDefaults(),arguments,["roomSize"])),this.name="JCReverb",this._allpassFilters=[],this._feedbackCombFilters=[];const e=optionsFromArguments(JCReverb.getDefaults(),arguments,["roomSize"]);this.roomSize=new Signal({context:this.context,value:e.roomSize,units:"normalRange"}),this._scaleRoomSize=new Scale({context:this.context,min:-.733,max:.197}),this._allpassFilters=allpassFilterFreqs.map(t=>{const n=this.context.createBiquadFilter();return n.type="allpass",n.frequency.value=t,n}),this._feedbackCombFilters=combFilterDelayTimes.map((t,n)=>{const o=new FeedbackCombFilter({context:this.context,delayTime:t});return this._scaleRoomSize.connect(o.resonance),o.resonance.value=combFilterResonances[n],n<combFilterDelayTimes.length/2?this.connectEffectLeft(...this._allpassFilters,o):this.connectEffectRight(...this._allpassFilters,o),o}),this.roomSize.connect(this._scaleRoomSize),readOnly(this,["roomSize"])}static getDefaults(){return Object.assign(StereoEffect.getDefaults(),{roomSize:.5})}dispose(){return super.dispose(),this._allpassFilters.forEach(e=>e.disconnect()),this._feedbackCombFilters.forEach(e=>e.dispose()),this.roomSize.dispose(),this._scaleRoomSize.dispose(),this}}class StereoXFeedbackEffect extends StereoFeedbackEffect{constructor(e){super(e),this._feedbackL.disconnect(),this._feedbackL.connect(this._feedbackMerge,0,1),this._feedbackR.disconnect(),this._feedbackR.connect(this._feedbackMerge,0,0),readOnly(this,["feedback"])}}class PingPongDelay extends StereoXFeedbackEffect{constructor(){super(optionsFromArguments(PingPongDelay.getDefaults(),arguments,["delayTime","feedback"])),this.name="PingPongDelay";const e=optionsFromArguments(PingPongDelay.getDefaults(),arguments,["delayTime","feedback"]);this._leftDelay=new Delay({context:this.context,maxDelay:e.maxDelay}),this._rightDelay=new Delay({context:this.context,maxDelay:e.maxDelay}),this._rightPreDelay=new Delay({context:this.context,maxDelay:e.maxDelay}),this.delayTime=new Signal({context:this.context,units:"time",value:e.delayTime}),this.connectEffectLeft(this._leftDelay),this.connectEffectRight(this._rightPreDelay,this._rightDelay),this.delayTime.fan(this._leftDelay.delayTime,this._rightDelay.delayTime,this._rightPreDelay.delayTime),this._feedbackL.disconnect(),this._feedbackL.connect(this._rightDelay),readOnly(this,["delayTime"])}static getDefaults(){return Object.assign(StereoXFeedbackEffect.getDefaults(),{delayTime:.25,maxDelay:1})}dispose(){return super.dispose(),this._leftDelay.dispose(),this._rightDelay.dispose(),this._rightPreDelay.dispose(),this.delayTime.dispose(),this}}class PitchShift extends FeedbackEffect{constructor(){super(optionsFromArguments(PitchShift.getDefaults(),arguments,["pitch"])),this.name="PitchShift";const e=optionsFromArguments(PitchShift.getDefaults(),arguments,["pitch"]);this._frequency=new Signal({context:this.context}),this._delayA=new Delay({maxDelay:1,context:this.context}),this._lfoA=new LFO({context:this.context,min:0,max:.1,type:"sawtooth"}).connect(this._delayA.delayTime),this._delayB=new Delay({maxDelay:1,context:this.context}),this._lfoB=new LFO({context:this.context,min:0,max:.1,type:"sawtooth",phase:180}).connect(this._delayB.delayTime),this._crossFade=new CrossFade({context:this.context}),this._crossFadeLFO=new LFO({context:this.context,min:0,max:1,type:"triangle",phase:90}).connect(this._crossFade.fade),this._feedbackDelay=new Delay({delayTime:e.delayTime,context:this.context}),this.delayTime=this._feedbackDelay.delayTime,readOnly(this,"delayTime"),this._pitch=e.pitch,this._windowSize=e.windowSize,this._delayA.connect(this._crossFade.a),this._delayB.connect(this._crossFade.b),this._frequency.fan(this._lfoA.frequency,this._lfoB.frequency,this._crossFadeLFO.frequency),this.effectSend.fan(this._delayA,this._delayB),this._crossFade.chain(this._feedbackDelay,this.effectReturn);const t=this.now();this._lfoA.start(t),this._lfoB.start(t),this._crossFadeLFO.start(t),this.windowSize=this._windowSize}static getDefaults(){return Object.assign(FeedbackEffect.getDefaults(),{pitch:0,windowSize:.1,delayTime:0,feedback:0})}get pitch(){return this._pitch}set pitch(e){this._pitch=e;let t=0;e<0?(this._lfoA.min=0,this._lfoA.max=this._windowSize,this._lfoB.min=0,this._lfoB.max=this._windowSize,t=intervalToFrequencyRatio(e-1)+1):(this._lfoA.min=this._windowSize,this._lfoA.max=0,this._lfoB.min=this._windowSize,this._lfoB.max=0,t=intervalToFrequencyRatio(e)-1),this._frequency.value=t*(1.2/this._windowSize)}get windowSize(){return this._windowSize}set windowSize(e){this._windowSize=this.toSeconds(e),this.pitch=this._pitch}dispose(){return super.dispose(),this._frequency.dispose(),this._delayA.dispose(),this._delayB.dispose(),this._lfoA.dispose(),this._lfoB.dispose(),this._crossFade.dispose(),this._crossFadeLFO.dispose(),this._feedbackDelay.dispose(),this}}class Phaser extends StereoEffect{constructor(){super(optionsFromArguments(Phaser.getDefaults(),arguments,["frequency","octaves","baseFrequency"])),this.name="Phaser";const e=optionsFromArguments(Phaser.getDefaults(),arguments,["frequency","octaves","baseFrequency"]);this._lfoL=new LFO({context:this.context,frequency:e.frequency,min:0,max:1}),this._lfoR=new LFO({context:this.context,frequency:e.frequency,min:0,max:1,phase:180}),this._baseFrequency=this.toFrequency(e.baseFrequency),this._octaves=e.octaves,this.Q=new Signal({context:this.context,value:e.Q,units:"positive"}),this._filtersL=this._makeFilters(e.stages,this._lfoL),this._filtersR=this._makeFilters(e.stages,this._lfoR),this.frequency=this._lfoL.frequency,this.frequency.value=e.frequency,this.connectEffectLeft(...this._filtersL),this.connectEffectRight(...this._filtersR),this._lfoL.frequency.connect(this._lfoR.frequency),this.baseFrequency=e.baseFrequency,this.octaves=e.octaves,this._lfoL.start(),this._lfoR.start(),readOnly(this,["frequency","Q"])}static getDefaults(){return Object.assign(StereoEffect.getDefaults(),{frequency:.5,octaves:3,stages:10,Q:10,baseFrequency:350})}_makeFilters(e,t){const n=[];for(let o=0;o<e;o++){const r=this.context.createBiquadFilter();r.type="allpass",this.Q.connect(r.Q),t.connect(r.frequency),n.push(r)}return n}get octaves(){return this._octaves}set octaves(e){this._octaves=e;const t=this._baseFrequency*Math.pow(2,e);this._lfoL.max=t,this._lfoR.max=t}get baseFrequency(){return this._baseFrequency}set baseFrequency(e){this._baseFrequency=this.toFrequency(e),this._lfoL.min=this._baseFrequency,this._lfoR.min=this._baseFrequency,this.octaves=this._octaves}dispose(){return super.dispose(),this.Q.dispose(),this._lfoL.dispose(),this._lfoR.dispose(),this._filtersL.forEach(e=>e.disconnect()),this._filtersR.forEach(e=>e.disconnect()),this.frequency.dispose(),this}}let Reverb$2=class be extends Effect{constructor(){super(optionsFromArguments(be.getDefaults(),arguments,["decay"])),this.name="Reverb",this._convolver=this.context.createConvolver(),this.ready=Promise.resolve();const e=optionsFromArguments(be.getDefaults(),arguments,["decay"]);this._decay=e.decay,this._preDelay=e.preDelay,this.generate(),this.connectEffect(this._convolver)}static getDefaults(){return Object.assign(Effect.getDefaults(),{decay:1.5,preDelay:.01})}get decay(){return this._decay}set decay(e){e=this.toSeconds(e),assertRange(e,.001),this._decay=e,this.generate()}get preDelay(){return this._preDelay}set preDelay(e){e=this.toSeconds(e),assertRange(e,0),this._preDelay=e,this.generate()}generate(){return __awaiter(this,void 0,void 0,function*(){const e=this.ready,t=new OfflineContext(2,this._decay+this._preDelay,this.context.sampleRate),n=new Noise({context:t}),o=new Noise({context:t}),r=new Merge({context:t});n.connect(r,0,0),o.connect(r,0,1);const a=new Gain({context:t}).toDestination();r.connect(a),n.start(0),o.start(0),a.gain.setValueAtTime(0,0),a.gain.setValueAtTime(1,this._preDelay),a.gain.exponentialApproachValueAtTime(0,this._preDelay,this.decay);const c=t.render();return this.ready=c.then(noOp),yield e,this._convolver.buffer=(yield c).get(),this})}dispose(){return super.dispose(),this._convolver.disconnect(),this}};class MidSideSplit extends ToneAudioNode{constructor(){super(optionsFromArguments(MidSideSplit.getDefaults(),arguments)),this.name="MidSideSplit",this._split=this.input=new Split({channels:2,context:this.context}),this._midAdd=new Add({context:this.context}),this.mid=new Multiply({context:this.context,value:Math.SQRT1_2}),this._sideSubtract=new Subtract({context:this.context}),this.side=new Multiply({context:this.context,value:Math.SQRT1_2}),this._split.connect(this._midAdd,0),this._split.connect(this._midAdd.addend,1),this._split.connect(this._sideSubtract,0),this._split.connect(this._sideSubtract.subtrahend,1),this._midAdd.connect(this.mid),this._sideSubtract.connect(this.side)}dispose(){return super.dispose(),this.mid.dispose(),this.side.dispose(),this._midAdd.dispose(),this._sideSubtract.dispose(),this._split.dispose(),this}}class MidSideMerge extends ToneAudioNode{constructor(){super(optionsFromArguments(MidSideMerge.getDefaults(),arguments)),this.name="MidSideMerge",this.mid=new Gain({context:this.context}),this.side=new Gain({context:this.context}),this._left=new Add({context:this.context}),this._leftMult=new Multiply({context:this.context,value:Math.SQRT1_2}),this._right=new Subtract({context:this.context}),this._rightMult=new Multiply({context:this.context,value:Math.SQRT1_2}),this._merge=this.output=new Merge({context:this.context}),this.mid.fan(this._left),this.side.connect(this._left.addend),this.mid.connect(this._right),this.side.connect(this._right.subtrahend),this._left.connect(this._leftMult),this._right.connect(this._rightMult),this._leftMult.connect(this._merge,0,0),this._rightMult.connect(this._merge,0,1)}dispose(){return super.dispose(),this.mid.dispose(),this.side.dispose(),this._leftMult.dispose(),this._rightMult.dispose(),this._left.dispose(),this._right.dispose(),this}}class MidSideEffect extends Effect{constructor(e){super(e),this.name="MidSideEffect",this._midSideMerge=new MidSideMerge({context:this.context}),this._midSideSplit=new MidSideSplit({context:this.context}),this._midSend=this._midSideSplit.mid,this._sideSend=this._midSideSplit.side,this._midReturn=this._midSideMerge.mid,this._sideReturn=this._midSideMerge.side,this.effectSend.connect(this._midSideSplit),this._midSideMerge.connect(this.effectReturn)}connectEffectMid(...e){this._midSend.chain(...e,this._midReturn)}connectEffectSide(...e){this._sideSend.chain(...e,this._sideReturn)}dispose(){return super.dispose(),this._midSideSplit.dispose(),this._midSideMerge.dispose(),this._midSend.dispose(),this._sideSend.dispose(),this._midReturn.dispose(),this._sideReturn.dispose(),this}}class StereoWidener extends MidSideEffect{constructor(){super(optionsFromArguments(StereoWidener.getDefaults(),arguments,["width"])),this.name="StereoWidener";const e=optionsFromArguments(StereoWidener.getDefaults(),arguments,["width"]);this.width=new Signal({context:this.context,value:e.width,units:"normalRange"}),readOnly(this,["width"]),this._twoTimesWidthMid=new Multiply({context:this.context,value:2}),this._twoTimesWidthSide=new Multiply({context:this.context,value:2}),this._midMult=new Multiply({context:this.context}),this._twoTimesWidthMid.connect(this._midMult.factor),this.connectEffectMid(this._midMult),this._oneMinusWidth=new Subtract({context:this.context}),this._oneMinusWidth.connect(this._twoTimesWidthMid),connect(this.context.getConstant(1),this._oneMinusWidth),this.width.connect(this._oneMinusWidth.subtrahend),this._sideMult=new Multiply({context:this.context}),this.width.connect(this._twoTimesWidthSide),this._twoTimesWidthSide.connect(this._sideMult.factor),this.connectEffectSide(this._sideMult)}static getDefaults(){return Object.assign(MidSideEffect.getDefaults(),{width:.5})}dispose(){return super.dispose(),this.width.dispose(),this._midMult.dispose(),this._sideMult.dispose(),this._twoTimesWidthMid.dispose(),this._twoTimesWidthSide.dispose(),this._oneMinusWidth.dispose(),this}}class Tremolo extends StereoEffect{constructor(){super(optionsFromArguments(Tremolo.getDefaults(),arguments,["frequency","depth"])),this.name="Tremolo";const e=optionsFromArguments(Tremolo.getDefaults(),arguments,["frequency","depth"]);this._lfoL=new LFO({context:this.context,type:e.type,min:1,max:0}),this._lfoR=new LFO({context:this.context,type:e.type,min:1,max:0}),this._amplitudeL=new Gain({context:this.context}),this._amplitudeR=new Gain({context:this.context}),this.frequency=new Signal({context:this.context,value:e.frequency,units:"frequency"}),this.depth=new Signal({context:this.context,value:e.depth,units:"normalRange"}),readOnly(this,["frequency","depth"]),this.connectEffectLeft(this._amplitudeL),this.connectEffectRight(this._amplitudeR),this._lfoL.connect(this._amplitudeL.gain),this._lfoR.connect(this._amplitudeR.gain),this.frequency.fan(this._lfoL.frequency,this._lfoR.frequency),this.depth.fan(this._lfoR.amplitude,this._lfoL.amplitude),this.spread=e.spread}static getDefaults(){return Object.assign(StereoEffect.getDefaults(),{frequency:10,type:"sine",depth:.5,spread:180})}start(e){return this._lfoL.start(e),this._lfoR.start(e),this}stop(e){return this._lfoL.stop(e),this._lfoR.stop(e),this}sync(){return this._lfoL.sync(),this._lfoR.sync(),this.context.transport.syncSignal(this.frequency),this}unsync(){return this._lfoL.unsync(),this._lfoR.unsync(),this.context.transport.unsyncSignal(this.frequency),this}get type(){return this._lfoL.type}set type(e){this._lfoL.type=e,this._lfoR.type=e}get spread(){return this._lfoR.phase-this._lfoL.phase}set spread(e){this._lfoL.phase=90-e/2,this._lfoR.phase=e/2+90}dispose(){return super.dispose(),this._lfoL.dispose(),this._lfoR.dispose(),this._amplitudeL.dispose(),this._amplitudeR.dispose(),this.frequency.dispose(),this.depth.dispose(),this}}class Vibrato extends Effect{constructor(){super(optionsFromArguments(Vibrato.getDefaults(),arguments,["frequency","depth"])),this.name="Vibrato";const e=optionsFromArguments(Vibrato.getDefaults(),arguments,["frequency","depth"]);this._delayNode=new Delay({context:this.context,delayTime:0,maxDelay:e.maxDelay}),this._lfo=new LFO({context:this.context,type:e.type,min:0,max:e.maxDelay,frequency:e.frequency,phase:-90}).start().connect(this._delayNode.delayTime),this.frequency=this._lfo.frequency,this.depth=this._lfo.amplitude,this.depth.value=e.depth,readOnly(this,["frequency","depth"]),this.effectSend.chain(this._delayNode,this.effectReturn)}static getDefaults(){return Object.assign(Effect.getDefaults(),{maxDelay:.005,frequency:5,depth:.1,type:"sine"})}get type(){return this._lfo.type}set type(e){this._lfo.type=e}dispose(){return super.dispose(),this._delayNode.dispose(),this._lfo.dispose(),this.frequency.dispose(),this.depth.dispose(),this}}class Analyser extends ToneAudioNode{constructor(){super(optionsFromArguments(Analyser.getDefaults(),arguments,["type","size"])),this.name="Analyser",this._analysers=[],this._buffers=[];const e=optionsFromArguments(Analyser.getDefaults(),arguments,["type","size"]);this.input=this.output=this._gain=new Gain({context:this.context}),this._split=new Split({context:this.context,channels:e.channels}),this.input.connect(this._split),assertRange(e.channels,1);for(let t=0;t<e.channels;t++)this._analysers[t]=this.context.createAnalyser(),this._split.connect(this._analysers[t],t,0);this.size=e.size,this.type=e.type}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{size:1024,smoothing:.8,type:"fft",channels:1})}getValue(){return this._analysers.forEach((e,t)=>{const n=this._buffers[t];this._type==="fft"?e.getFloatFrequencyData(n):this._type==="waveform"&&e.getFloatTimeDomainData(n)}),this.channels===1?this._buffers[0]:this._buffers}get size(){return this._analysers[0].frequencyBinCount}set size(e){this._analysers.forEach((t,n)=>{t.fftSize=e*2,this._buffers[n]=new Float32Array(e)})}get channels(){return this._analysers.length}get type(){return this._type}set type(e){assert(e==="waveform"||e==="fft",`Analyser: invalid type: ${e}`),this._type=e}get smoothing(){return this._analysers[0].smoothingTimeConstant}set smoothing(e){this._analysers.forEach(t=>t.smoothingTimeConstant=e)}dispose(){return super.dispose(),this._analysers.forEach(e=>e.disconnect()),this._split.dispose(),this._gain.dispose(),this}}class MeterBase extends ToneAudioNode{constructor(){super(optionsFromArguments(MeterBase.getDefaults(),arguments)),this.name="MeterBase",this.input=this.output=this._analyser=new Analyser({context:this.context,size:256,type:"waveform"})}dispose(){return super.dispose(),this._analyser.dispose(),this}}class Meter extends MeterBase{constructor(){super(optionsFromArguments(Meter.getDefaults(),arguments,["smoothing"])),this.name="Meter",this._rms=0;const e=optionsFromArguments(Meter.getDefaults(),arguments,["smoothing"]);this.input=this.output=this._analyser=new Analyser({context:this.context,size:256,type:"waveform",channels:e.channels}),this.smoothing=e.smoothing,this.normalRange=e.normalRange}static getDefaults(){return Object.assign(MeterBase.getDefaults(),{smoothing:.8,normalRange:!1,channels:1})}getLevel(){return warn("'getLevel' has been changed to 'getValue'"),this.getValue()}getValue(){const e=this._analyser.getValue(),n=(this.channels===1?[e]:e).map(o=>{const r=o.reduce((c,l)=>c+l*l,0),a=Math.sqrt(r/o.length);return this._rms=Math.max(a,this._rms*this.smoothing),this.normalRange?this._rms:gainToDb(this._rms)});return this.channels===1?n[0]:n}get channels(){return this._analyser.channels}dispose(){return super.dispose(),this._analyser.dispose(),this}}class FFT extends MeterBase{constructor(){super(optionsFromArguments(FFT.getDefaults(),arguments,["size"])),this.name="FFT";const e=optionsFromArguments(FFT.getDefaults(),arguments,["size"]);this.normalRange=e.normalRange,this._analyser.type="fft",this.size=e.size}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{normalRange:!1,size:1024,smoothing:.8})}getValue(){return this._analyser.getValue().map(t=>this.normalRange?dbToGain(t):t)}get size(){return this._analyser.size}set size(e){this._analyser.size=e}get smoothing(){return this._analyser.smoothing}set smoothing(e){this._analyser.smoothing=e}getFrequencyOfIndex(e){return assert(0<=e&&e<this.size,`index must be greater than or equal to 0 and less than ${this.size}`),e*this.context.sampleRate/(this.size*2)}}class DCMeter extends MeterBase{constructor(){super(optionsFromArguments(DCMeter.getDefaults(),arguments)),this.name="DCMeter",this._analyser.type="waveform",this._analyser.size=256}getValue(){return this._analyser.getValue()[0]}}class Waveform extends MeterBase{constructor(){super(optionsFromArguments(Waveform.getDefaults(),arguments,["size"])),this.name="Waveform";const e=optionsFromArguments(Waveform.getDefaults(),arguments,["size"]);this._analyser.type="waveform",this.size=e.size}static getDefaults(){return Object.assign(MeterBase.getDefaults(),{size:1024})}getValue(){return this._analyser.getValue()}get size(){return this._analyser.size}set size(e){this._analyser.size=e}}class Solo extends ToneAudioNode{constructor(){super(optionsFromArguments(Solo.getDefaults(),arguments,["solo"])),this.name="Solo";const e=optionsFromArguments(Solo.getDefaults(),arguments,["solo"]);this.input=this.output=new Gain({context:this.context}),Solo._allSolos.has(this.context)||Solo._allSolos.set(this.context,new Set),Solo._allSolos.get(this.context).add(this),this.solo=e.solo}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{solo:!1})}get solo(){return this._isSoloed()}set solo(e){e?this._addSolo():this._removeSolo(),Solo._allSolos.get(this.context).forEach(t=>t._updateSolo())}get muted(){return this.input.gain.value===0}_addSolo(){Solo._soloed.has(this.context)||Solo._soloed.set(this.context,new Set),Solo._soloed.get(this.context).add(this)}_removeSolo(){Solo._soloed.has(this.context)&&Solo._soloed.get(this.context).delete(this)}_isSoloed(){return Solo._soloed.has(this.context)&&Solo._soloed.get(this.context).has(this)}_noSolos(){return!Solo._soloed.has(this.context)||Solo._soloed.has(this.context)&&Solo._soloed.get(this.context).size===0}_updateSolo(){this._isSoloed()?this.input.gain.value=1:this._noSolos()?this.input.gain.value=1:this.input.gain.value=0}dispose(){return super.dispose(),Solo._allSolos.get(this.context).delete(this),this._removeSolo(),this}}Solo._allSolos=new Map;Solo._soloed=new Map;class PanVol extends ToneAudioNode{constructor(){super(optionsFromArguments(PanVol.getDefaults(),arguments,["pan","volume"])),this.name="PanVol";const e=optionsFromArguments(PanVol.getDefaults(),arguments,["pan","volume"]);this._panner=this.input=new Panner({context:this.context,pan:e.pan,channelCount:e.channelCount}),this.pan=this._panner.pan,this._volume=this.output=new Volume({context:this.context,volume:e.volume}),this.volume=this._volume.volume,this._panner.connect(this._volume),this.mute=e.mute,readOnly(this,["pan","volume"])}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{mute:!1,pan:0,volume:0,channelCount:1})}get mute(){return this._volume.mute}set mute(e){this._volume.mute=e}dispose(){return super.dispose(),this._panner.dispose(),this.pan.dispose(),this._volume.dispose(),this.volume.dispose(),this}}class Channel extends ToneAudioNode{constructor(){super(optionsFromArguments(Channel.getDefaults(),arguments,["volume","pan"])),this.name="Channel";const e=optionsFromArguments(Channel.getDefaults(),arguments,["volume","pan"]);this._solo=this.input=new Solo({solo:e.solo,context:this.context}),this._panVol=this.output=new PanVol({context:this.context,pan:e.pan,volume:e.volume,mute:e.mute,channelCount:e.channelCount}),this.pan=this._panVol.pan,this.volume=this._panVol.volume,this._solo.connect(this._panVol),readOnly(this,["pan","volume"])}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{pan:0,volume:0,mute:!1,solo:!1,channelCount:1})}get solo(){return this._solo.solo}set solo(e){this._solo.solo=e}get muted(){return this._solo.muted||this.mute}get mute(){return this._panVol.mute}set mute(e){this._panVol.mute=e}_getBus(e){return Channel.buses.has(e)||Channel.buses.set(e,new Gain({context:this.context})),Channel.buses.get(e)}send(e,t=0){const n=this._getBus(e),o=new Gain({context:this.context,units:"decibels",gain:t});return this.connect(o),o.connect(n),o}receive(e){return this._getBus(e).connect(this),this}dispose(){return super.dispose(),this._panVol.dispose(),this.pan.dispose(),this.volume.dispose(),this._solo.dispose(),this}}Channel.buses=new Map;class Mono extends ToneAudioNode{constructor(){super(optionsFromArguments(Mono.getDefaults(),arguments)),this.name="Mono",this.input=new Gain({context:this.context}),this._merge=this.output=new Merge({channels:2,context:this.context}),this.input.connect(this._merge,0,0),this.input.connect(this._merge,0,1)}dispose(){return super.dispose(),this._merge.dispose(),this.input.dispose(),this}}class MultibandSplit extends ToneAudioNode{constructor(){super(optionsFromArguments(MultibandSplit.getDefaults(),arguments,["lowFrequency","highFrequency"])),this.name="MultibandSplit",this.input=new Gain({context:this.context}),this.output=void 0,this.low=new Filter$2({context:this.context,frequency:0,type:"lowpass"}),this._lowMidFilter=new Filter$2({context:this.context,frequency:0,type:"highpass"}),this.mid=new Filter$2({context:this.context,frequency:0,type:"lowpass"}),this.high=new Filter$2({context:this.context,frequency:0,type:"highpass"}),this._internalChannels=[this.low,this.mid,this.high];const e=optionsFromArguments(MultibandSplit.getDefaults(),arguments,["lowFrequency","highFrequency"]);this.lowFrequency=new Signal({context:this.context,units:"frequency",value:e.lowFrequency}),this.highFrequency=new Signal({context:this.context,units:"frequency",value:e.highFrequency}),this.Q=new Signal({context:this.context,units:"positive",value:e.Q}),this.input.fan(this.low,this.high),this.input.chain(this._lowMidFilter,this.mid),this.lowFrequency.fan(this.low.frequency,this._lowMidFilter.frequency),this.highFrequency.fan(this.mid.frequency,this.high.frequency),this.Q.connect(this.low.Q),this.Q.connect(this._lowMidFilter.Q),this.Q.connect(this.mid.Q),this.Q.connect(this.high.Q),readOnly(this,["high","mid","low","highFrequency","lowFrequency"])}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{Q:1,highFrequency:2500,lowFrequency:400})}dispose(){return super.dispose(),writable(this,["high","mid","low","highFrequency","lowFrequency"]),this.low.dispose(),this._lowMidFilter.dispose(),this.mid.dispose(),this.high.dispose(),this.lowFrequency.dispose(),this.highFrequency.dispose(),this.Q.dispose(),this}}let Listener$1=class extends ToneAudioNode{constructor(){super(...arguments),this.name="Listener",this.positionX=new Param({context:this.context,param:this.context.rawContext.listener.positionX}),this.positionY=new Param({context:this.context,param:this.context.rawContext.listener.positionY}),this.positionZ=new Param({context:this.context,param:this.context.rawContext.listener.positionZ}),this.forwardX=new Param({context:this.context,param:this.context.rawContext.listener.forwardX}),this.forwardY=new Param({context:this.context,param:this.context.rawContext.listener.forwardY}),this.forwardZ=new Param({context:this.context,param:this.context.rawContext.listener.forwardZ}),this.upX=new Param({context:this.context,param:this.context.rawContext.listener.upX}),this.upY=new Param({context:this.context,param:this.context.rawContext.listener.upY}),this.upZ=new Param({context:this.context,param:this.context.rawContext.listener.upZ})}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{positionX:0,positionY:0,positionZ:0,forwardX:0,forwardY:0,forwardZ:-1,upX:0,upY:1,upZ:0})}dispose(){return super.dispose(),this.positionX.dispose(),this.positionY.dispose(),this.positionZ.dispose(),this.forwardX.dispose(),this.forwardY.dispose(),this.forwardZ.dispose(),this.upX.dispose(),this.upY.dispose(),this.upZ.dispose(),this}};onContextInit(s=>{s.listener=new Listener$1({context:s})});onContextClose(s=>{s.listener.dispose()});class Panner3D extends ToneAudioNode{constructor(){super(optionsFromArguments(Panner3D.getDefaults(),arguments,["positionX","positionY","positionZ"])),this.name="Panner3D";const e=optionsFromArguments(Panner3D.getDefaults(),arguments,["positionX","positionY","positionZ"]);this._panner=this.input=this.output=this.context.createPanner(),this.panningModel=e.panningModel,this.maxDistance=e.maxDistance,this.distanceModel=e.distanceModel,this.coneOuterGain=e.coneOuterGain,this.coneOuterAngle=e.coneOuterAngle,this.coneInnerAngle=e.coneInnerAngle,this.refDistance=e.refDistance,this.rolloffFactor=e.rolloffFactor,this.positionX=new Param({context:this.context,param:this._panner.positionX,value:e.positionX}),this.positionY=new Param({context:this.context,param:this._panner.positionY,value:e.positionY}),this.positionZ=new Param({context:this.context,param:this._panner.positionZ,value:e.positionZ}),this.orientationX=new Param({context:this.context,param:this._panner.orientationX,value:e.orientationX}),this.orientationY=new Param({context:this.context,param:this._panner.orientationY,value:e.orientationY}),this.orientationZ=new Param({context:this.context,param:this._panner.orientationZ,value:e.orientationZ})}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{coneInnerAngle:360,coneOuterAngle:360,coneOuterGain:0,distanceModel:"inverse",maxDistance:1e4,orientationX:0,orientationY:0,orientationZ:0,panningModel:"equalpower",positionX:0,positionY:0,positionZ:0,refDistance:1,rolloffFactor:1})}setPosition(e,t,n){return this.positionX.value=e,this.positionY.value=t,this.positionZ.value=n,this}setOrientation(e,t,n){return this.orientationX.value=e,this.orientationY.value=t,this.orientationZ.value=n,this}get panningModel(){return this._panner.panningModel}set panningModel(e){this._panner.panningModel=e}get refDistance(){return this._panner.refDistance}set refDistance(e){this._panner.refDistance=e}get rolloffFactor(){return this._panner.rolloffFactor}set rolloffFactor(e){this._panner.rolloffFactor=e}get distanceModel(){return this._panner.distanceModel}set distanceModel(e){this._panner.distanceModel=e}get coneInnerAngle(){return this._panner.coneInnerAngle}set coneInnerAngle(e){this._panner.coneInnerAngle=e}get coneOuterAngle(){return this._panner.coneOuterAngle}set coneOuterAngle(e){this._panner.coneOuterAngle=e}get coneOuterGain(){return this._panner.coneOuterGain}set coneOuterGain(e){this._panner.coneOuterGain=e}get maxDistance(){return this._panner.maxDistance}set maxDistance(e){this._panner.maxDistance=e}dispose(){return super.dispose(),this._panner.disconnect(),this.orientationX.dispose(),this.orientationY.dispose(),this.orientationZ.dispose(),this.positionX.dispose(),this.positionY.dispose(),this.positionZ.dispose(),this}}class Recorder extends ToneAudioNode{constructor(){super(optionsFromArguments(Recorder.getDefaults(),arguments)),this.name="Recorder";const e=optionsFromArguments(Recorder.getDefaults(),arguments);this.input=new Gain({context:this.context}),assert(Recorder.supported,"Media Recorder API is not available"),this._stream=this.context.createMediaStreamDestination(),this.input.connect(this._stream),this._recorder=new MediaRecorder(this._stream.stream,{mimeType:e.mimeType})}static getDefaults(){return ToneAudioNode.getDefaults()}get mimeType(){return this._recorder.mimeType}static get supported(){return theWindow!==null&&Reflect.has(theWindow,"MediaRecorder")}get state(){return this._recorder.state==="inactive"?"stopped":this._recorder.state==="paused"?"paused":"started"}start(){return __awaiter(this,void 0,void 0,function*(){assert(this.state!=="started","Recorder is already started");const e=new Promise(t=>{const n=()=>{this._recorder.removeEventListener("start",n,!1),t()};this._recorder.addEventListener("start",n,!1)});return this._recorder.start(),yield e})}stop(){return __awaiter(this,void 0,void 0,function*(){assert(this.state!=="stopped","Recorder is not started");const e=new Promise(t=>{const n=o=>{this._recorder.removeEventListener("dataavailable",n,!1),t(o.data)};this._recorder.addEventListener("dataavailable",n,!1)});return this._recorder.stop(),yield e})}pause(){return assert(this.state==="started","Recorder must be started"),this._recorder.pause(),this}dispose(){return super.dispose(),this.input.dispose(),this._stream.disconnect(),this}}class Compressor extends ToneAudioNode{constructor(){super(optionsFromArguments(Compressor.getDefaults(),arguments,["threshold","ratio"])),this.name="Compressor",this._compressor=this.context.createDynamicsCompressor(),this.input=this._compressor,this.output=this._compressor;const e=optionsFromArguments(Compressor.getDefaults(),arguments,["threshold","ratio"]);this.threshold=new Param({minValue:this._compressor.threshold.minValue,maxValue:this._compressor.threshold.maxValue,context:this.context,convert:!1,param:this._compressor.threshold,units:"decibels",value:e.threshold}),this.attack=new Param({minValue:this._compressor.attack.minValue,maxValue:this._compressor.attack.maxValue,context:this.context,param:this._compressor.attack,units:"time",value:e.attack}),this.release=new Param({minValue:this._compressor.release.minValue,maxValue:this._compressor.release.maxValue,context:this.context,param:this._compressor.release,units:"time",value:e.release}),this.knee=new Param({minValue:this._compressor.knee.minValue,maxValue:this._compressor.knee.maxValue,context:this.context,convert:!1,param:this._compressor.knee,units:"decibels",value:e.knee}),this.ratio=new Param({minValue:this._compressor.ratio.minValue,maxValue:this._compressor.ratio.maxValue,context:this.context,convert:!1,param:this._compressor.ratio,units:"positive",value:e.ratio}),readOnly(this,["knee","release","attack","ratio","threshold"])}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{attack:.003,knee:30,ratio:12,release:.25,threshold:-24})}get reduction(){return this._compressor.reduction}dispose(){return super.dispose(),this._compressor.disconnect(),this.attack.dispose(),this.release.dispose(),this.threshold.dispose(),this.ratio.dispose(),this.knee.dispose(),this}}class Gate extends ToneAudioNode{constructor(){super(Object.assign(optionsFromArguments(Gate.getDefaults(),arguments,["threshold","smoothing"]))),this.name="Gate";const e=optionsFromArguments(Gate.getDefaults(),arguments,["threshold","smoothing"]);this._follower=new Follower({context:this.context,smoothing:e.smoothing}),this._gt=new GreaterThan({context:this.context,value:dbToGain(e.threshold)}),this.input=new Gain({context:this.context}),this._gate=this.output=new Gain({context:this.context}),this.input.connect(this._gate),this.input.chain(this._follower,this._gt,this._gate.gain)}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{smoothing:.1,threshold:-40})}get threshold(){return gainToDb(this._gt.value)}set threshold(e){this._gt.value=dbToGain(e)}get smoothing(){return this._follower.smoothing}set smoothing(e){this._follower.smoothing=e}dispose(){return super.dispose(),this.input.dispose(),this._follower.dispose(),this._gt.dispose(),this._gate.dispose(),this}}class Limiter extends ToneAudioNode{constructor(){super(Object.assign(optionsFromArguments(Limiter.getDefaults(),arguments,["threshold"]))),this.name="Limiter";const e=optionsFromArguments(Limiter.getDefaults(),arguments,["threshold"]);this._compressor=this.input=this.output=new Compressor({context:this.context,ratio:20,attack:.003,release:.01,threshold:e.threshold}),this.threshold=this._compressor.threshold,readOnly(this,"threshold")}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{threshold:-12})}get reduction(){return this._compressor.reduction}dispose(){return super.dispose(),this._compressor.dispose(),this.threshold.dispose(),this}}class MidSideCompressor extends ToneAudioNode{constructor(){super(Object.assign(optionsFromArguments(MidSideCompressor.getDefaults(),arguments))),this.name="MidSideCompressor";const e=optionsFromArguments(MidSideCompressor.getDefaults(),arguments);this._midSideSplit=this.input=new MidSideSplit({context:this.context}),this._midSideMerge=this.output=new MidSideMerge({context:this.context}),this.mid=new Compressor(Object.assign(e.mid,{context:this.context})),this.side=new Compressor(Object.assign(e.side,{context:this.context})),this._midSideSplit.mid.chain(this.mid,this._midSideMerge.mid),this._midSideSplit.side.chain(this.side,this._midSideMerge.side),readOnly(this,["mid","side"])}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{mid:{ratio:3,threshold:-24,release:.03,attack:.02,knee:16},side:{ratio:6,threshold:-30,release:.25,attack:.03,knee:10}})}dispose(){return super.dispose(),this.mid.dispose(),this.side.dispose(),this._midSideSplit.dispose(),this._midSideMerge.dispose(),this}}class MultibandCompressor extends ToneAudioNode{constructor(){super(Object.assign(optionsFromArguments(MultibandCompressor.getDefaults(),arguments))),this.name="MultibandCompressor";const e=optionsFromArguments(MultibandCompressor.getDefaults(),arguments);this._splitter=this.input=new MultibandSplit({context:this.context,lowFrequency:e.lowFrequency,highFrequency:e.highFrequency}),this.lowFrequency=this._splitter.lowFrequency,this.highFrequency=this._splitter.highFrequency,this.output=new Gain({context:this.context}),this.low=new Compressor(Object.assign(e.low,{context:this.context})),this.mid=new Compressor(Object.assign(e.mid,{context:this.context})),this.high=new Compressor(Object.assign(e.high,{context:this.context})),this._splitter.low.chain(this.low,this.output),this._splitter.mid.chain(this.mid,this.output),this._splitter.high.chain(this.high,this.output),readOnly(this,["high","mid","low","highFrequency","lowFrequency"])}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{lowFrequency:250,highFrequency:2e3,low:{ratio:6,threshold:-30,release:.25,attack:.03,knee:10},mid:{ratio:3,threshold:-24,release:.03,attack:.02,knee:16},high:{ratio:3,threshold:-24,release:.03,attack:.02,knee:16}})}dispose(){return super.dispose(),this._splitter.dispose(),this.low.dispose(),this.mid.dispose(),this.high.dispose(),this.output.dispose(),this}}class EQ3 extends ToneAudioNode{constructor(){super(optionsFromArguments(EQ3.getDefaults(),arguments,["low","mid","high"])),this.name="EQ3",this.output=new Gain({context:this.context}),this._internalChannels=[];const e=optionsFromArguments(EQ3.getDefaults(),arguments,["low","mid","high"]);this.input=this._multibandSplit=new MultibandSplit({context:this.context,highFrequency:e.highFrequency,lowFrequency:e.lowFrequency}),this._lowGain=new Gain({context:this.context,gain:e.low,units:"decibels"}),this._midGain=new Gain({context:this.context,gain:e.mid,units:"decibels"}),this._highGain=new Gain({context:this.context,gain:e.high,units:"decibels"}),this.low=this._lowGain.gain,this.mid=this._midGain.gain,this.high=this._highGain.gain,this.Q=this._multibandSplit.Q,this.lowFrequency=this._multibandSplit.lowFrequency,this.highFrequency=this._multibandSplit.highFrequency,this._multibandSplit.low.chain(this._lowGain,this.output),this._multibandSplit.mid.chain(this._midGain,this.output),this._multibandSplit.high.chain(this._highGain,this.output),readOnly(this,["low","mid","high","lowFrequency","highFrequency"]),this._internalChannels=[this._multibandSplit]}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{high:0,highFrequency:2500,low:0,lowFrequency:400,mid:0})}dispose(){return super.dispose(),writable(this,["low","mid","high","lowFrequency","highFrequency"]),this._multibandSplit.dispose(),this.lowFrequency.dispose(),this.highFrequency.dispose(),this._lowGain.dispose(),this._midGain.dispose(),this._highGain.dispose(),this.low.dispose(),this.mid.dispose(),this.high.dispose(),this.Q.dispose(),this}}class Convolver extends ToneAudioNode{constructor(){super(optionsFromArguments(Convolver.getDefaults(),arguments,["url","onload"])),this.name="Convolver",this._convolver=this.context.createConvolver();const e=optionsFromArguments(Convolver.getDefaults(),arguments,["url","onload"]);this._buffer=new ToneAudioBuffer(e.url,t=>{this.buffer=t,e.onload()}),this.input=new Gain({context:this.context}),this.output=new Gain({context:this.context}),this._buffer.loaded&&(this.buffer=this._buffer),this.normalize=e.normalize,this.input.chain(this._convolver,this.output)}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{normalize:!0,onload:noOp})}load(e){return __awaiter(this,void 0,void 0,function*(){this.buffer=yield this._buffer.load(e)})}get buffer(){return this._buffer.length?this._buffer:null}set buffer(e){e&&this._buffer.set(e),this._convolver.buffer&&(this.input.disconnect(),this._convolver.disconnect(),this._convolver=this.context.createConvolver(),this.input.chain(this._convolver,this.output));const t=this._buffer.get();this._convolver.buffer=t||null}get normalize(){return this._convolver.normalize}set normalize(e){this._convolver.normalize=e}dispose(){return super.dispose(),this._buffer.dispose(),this._convolver.disconnect(),this}}function now(){return getContext().now()}function immediate(){return getContext().immediate()}const Transport=getContext().transport;function getTransport(){return getContext().transport}const Destination=getContext().destination,Master=getContext().destination;function getDestination(){return getContext().destination}const Listener=getContext().listener;function getListener(){return getContext().listener}const Draw=getContext().draw;function getDraw(){return getContext().draw}const context=getContext();function loaded(){return ToneAudioBuffer.loaded()}const Buffer=ToneAudioBuffer,Buffers=ToneAudioBuffers,BufferSource=ToneBufferSource,Tone=Object.freeze(Object.defineProperty({__proto__:null,AMOscillator,AMSynth,Abs,Add,AmplitudeEnvelope,Analyser,AudioToGain,AutoFilter,AutoPanner,AutoWah,BaseContext,BiquadFilter,BitCrusher,Buffer,BufferSource,Buffers,Channel,Chebyshev,Chorus,Clock,Compressor,Context,Convolver,CrossFade,DCMeter,Delay,Destination,Distortion,Draw,DuoSynth,EQ3,Emitter,Envelope,FFT,FMOscillator,FMSynth,FatOscillator,FeedbackCombFilter,FeedbackDelay,Filter:Filter$2,Follower,Freeverb,Frequency,FrequencyClass,FrequencyEnvelope,FrequencyShifter,Gain,GainToAudio,Gate,GrainPlayer,GreaterThan,GreaterThanZero,IntervalTimeline,JCReverb,LFO,Limiter,Listener,Loop,LowpassCombFilter,Master,MembraneSynth,Merge,MetalSynth,Meter,MidSideCompressor,MidSideMerge,MidSideSplit,Midi,MidiClass,Mono,MonoSynth,MultibandCompressor,MultibandSplit,Multiply,Negate,Noise,NoiseSynth,Offline,OfflineContext,OmniOscillator,OnePoleFilter,Oscillator,PWMOscillator,PanVol,Panner,Panner3D,Param,Part,Pattern,Phaser,PingPongDelay,PitchShift,Player,Players,PluckSynth,PolySynth,Pow,PulseOscillator,Recorder,Reverb:Reverb$2,Sampler,Scale,ScaleExp,Sequence,Signal,Solo,Split,StateTimeline,StereoWidener,Subtract,SyncedSignal,Synth,Ticks,TicksClass,Time,TimeClass,Timeline,ToneAudioBuffer,ToneAudioBuffers,ToneAudioNode,ToneBufferSource,ToneEvent,ToneOscillatorNode,Transport,TransportTime,TransportTimeClass,Tremolo,Unit:Units,UserMedia,Vibrato,Volume,WaveShaper,Waveform,Zero,connect,connectSeries,connectSignal,context,dbToGain,debug:Debug,defaultArg,disconnect,ftom,gainToDb,getContext,getDestination,getDraw,getListener,getTransport,immediate,intervalToFrequencyRatio,isArray,isBoolean,isDefined,isFunction,isNote,isNumber,isObject,isString,isUndef,loaded,mtof,now,optionsFromArguments,setContext,start,supported:isSupported,version},Symbol.toStringTag,{value:"Module"})),Module_vue_vue_type_style_index_0_scoped_de033260_lang="",_sfc_main$g={inject:["ACM"],props:{moduleName:String,moduleType:String,createdCoordsX:Number,createdCoordsY:Number,moduleId:Number},created(){this.createdCoords=[this.createdCoordsX,this.createdCoordsY],this.currentPosition={x:this.createdCoordsX,y:this.createdCoordsY},this.startPosition={x:this.createdCoordsX,y:this.createdCoordsY},this.lastPosition={x:this.currentPosition.x,y:this.currentPosition.y}},mounted(){this.ACM.addNode(this.moduleId,this.moduleType)},data(){return{isDragging:!1,startPosition:{x:0,y:0},currentPosition:{x:0,y:0}}},computed:{elementStyles(){return{top:`${this.currentPosition.y}px`,left:`${this.currentPosition.x}px`}}},methods:{startDragging(s){s.ctrlKey||(this.isDragging=!0,this.startPosition={x:s.clientX-this.currentPosition.x,y:s.clientY-this.currentPosition.y},window.addEventListener("mousemove",this.handleDrag),window.addEventListener("mouseup",this.stopDragging))},handleDrag(s){if(this.isDragging){this.currentPosition={x:s.clientX-this.startPosition.x,y:s.clientY-this.startPosition.y};let e=this.currentPosition.x-this.lastPosition.x,t=this.currentPosition.y-this.lastPosition.y;this.$emit("module-moved",this.moduleId,e,t),this.lastPosition={x:this.currentPosition.x,y:this.currentPosition.y}}},stopDragging(){this.isDragging=!1,window.removeEventListener("mousemove",this.handleDrag),window.removeEventListener("mouseup",this.stopDragging)},handleModulePortClick(){console.log("module port clicked and passed")},removeModule(){this.$emit("remove-module",this.moduleId);var s=new Event("remove-module-"+this.moduleId);dispatchEvent(s)},test(){console.log("test")},printModule(){console.log("LOL")}}},_hoisted_1$g={class:"module-control-area"};function _sfc_render$f(s,e,t,n,o,r){return openBlock(),createElementBlock("div",{class:"module",style:normalizeStyle(r.elementStyles)},[createBaseVNode("div",{class:"module-title",onMousedown:e[0]||(e[0]=(...a)=>r.startDragging&&r.startDragging(...a))},toDisplayString(t.moduleName)+" ",33),createBaseVNode("div",_hoisted_1$g,[renderSlot(s.$slots,"default",{},void 0,!0)])],4)}const Module=_export_sfc(_sfc_main$g,[["render",_sfc_render$f],["__scopeId","data-v-de033260"]]);function mapValue(s,e,t,n,o){return((s-e)/(t-e)*(o-n)+n).toFixed(2)}const Knob_vue_vue_type_style_index_0_scoped_b103a8fe_lang="",_sfc_main$f={props:{parameter:String,label:String,initialValue:Number,from:Number,to:Number},emits:{updateknobvalue:null},created(){this.currentKnobValue=this.initialValue,this.currentAngle=mapValue(this.currentKnobValue,this.from,this.to,-135,135),this.currentAngle=parseFloat(this.currentAngle)},data(){return{currentKnobValue:0,isDraggingKnob:!1,currentAngle:0,startPosition:{x:Number,y:Number},draggingDirection:0}},methods:{startDraggingKnob(s){s.ctrlKey||(this.isDraggingKnob=!0,this.startPosition={x:s.clientX,y:s.clientY},this.draggingDirection=0,window.addEventListener("mousemove",this.handleDragKnob),window.addEventListener("mouseup",this.stopDraggingKnob))},handleDragKnob(s){if(this.draggingDirection=s.clientX-this.startPosition.x,this.draggingDirection=this.draggingDirection/Math.abs(this.draggingDirection),this.draggingDirection==0&&(this.draggingDirection=1),this.isDraggingKnob&&this.draggingDirection!=0){if(this.currentAngle=this.currentAngle+10*this.draggingDirection,Math.abs(this.currentAngle)>=135){let e=this.currentAngle/Math.abs(this.currentAngle);this.currentAngle=135*e}this.currentKnobValue=mapValue(this.currentAngle,-135,135,this.from,this.to)}isNaN(this.currentKnobValue)&&(this.currentKnobValue=this.from,this.currentAngle=-135,this.draggingDirection=0),this.updateKnobValue()},stopDraggingKnob(){this.isDraggingKnob=!1,window.removeEventListener("mousemove",this.handleDragKnob),window.removeEventListener("mouseup",this.stopDraggingKnob)},updateKnobValue(){this.$emit("updateknobvalue",[this.parameter,this.currentKnobValue])}}},_withScopeId$6=s=>(pushScopeId("data-v-b103a8fe"),s=s(),popScopeId(),s),_hoisted_1$f={class:"wrapper"},_hoisted_2$e={class:"label parameter"},_hoisted_3$d={class:"knob"},_hoisted_4$a={class:"label label-l"},_hoisted_5$a=_withScopeId$6(()=>createBaseVNode("div",{class:"knob_inner_pointer",id:"knob-pointer"},null,-1)),_hoisted_6$8=[_hoisted_5$a],_hoisted_7$7={key:0,class:"current-value",id:"current-value"},_hoisted_8$6={class:"label label-r"};function _sfc_render$e(s,e,t,n,o,r){return openBlock(),createElementBlock("div",_hoisted_1$f,[createBaseVNode("div",_hoisted_2$e,toDisplayString(t.label),1),createBaseVNode("div",_hoisted_3$d,[createBaseVNode("div",_hoisted_4$a,toDisplayString(t.from),1),createBaseVNode("div",{class:"knob_inner",id:"knob-inner",style:normalizeStyle({transform:"rotate("+o.currentAngle+"deg)"}),onMousedown:e[0]||(e[0]=(...a)=>r.startDraggingKnob&&r.startDraggingKnob(...a))},_hoisted_6$8,36),o.isDraggingKnob?(openBlock(),createElementBlock("div",_hoisted_7$7,toDisplayString(o.currentKnobValue),1)):createCommentVNode("",!0),createBaseVNode("div",_hoisted_8$6,toDisplayString(t.to),1)])])}const Knob=_export_sfc(_sfc_main$f,[["render",_sfc_render$e],["__scopeId","data-v-b103a8fe"]]),Port_vue_vue_type_style_index_0_scoped_ec8d1b04_lang="",_sfc_main$e={emits:{portClicked:null,portMouseMoved:null,portMouseStopMove:null,portHovered:null,portOut:null},props:{parameter:String,type:String,ID:Number,modId:Number},data(){return{portType:"OUT",normalColor:"rgb(255, 255, 255)",hoverColor:"rgb(255, 255, 255)",circleColor:"rgb(150,150, 150)",circleBorderColor:"rgb(255, 255, 255)",squareColor:"rgb(255, 255, 255)",portID:0}},created(){this.portType=this.type,this.portType==="IN"?(this.normalColor="rgb(0, 0, 0)",this.hoverColor="rgb(75, 75, 75)"):(this.normalColor="rgb(220, 220, 220)",this.hoverColor="rgb(170, 170, 170)"),this.squareColor=this.normalColor,this.ID!=null&&(this.portID=this.ID),this.parentModuleID=this.modId,this.circleRef="innerCircle"+this.parentModuleID+this.portID},computed:{generateDefaultRef(){return"innerCircle"+this.parentModuleID+this.portID}},methods:{handlePortMouseOver(){if(this.squareColor=this.hoverColor,this.portType=="IN"){const e=document.getElementById(this.circleRef).getBoundingClientRect(),t=e.left+e.width/2,n=e.top+e.height/2;this.$emit("portHovered",this.portID,t,n)}},handlePortMouseOut(){this.squareColor=this.normalColor,this.$emit("portOut",this.portID)},handlePortMouseClick(s){if(this.portType=="OUT"){const t=document.getElementById(this.circleRef).getBoundingClientRect(),n=t.left+t.width/2,o=t.top+t.height/2;this.$emit("portClicked",this.portID,n,o),window.addEventListener("mousemove",this.handlePortMouseMove),window.addEventListener("mouseup",this.handlePortStopMove)}},handlePortMouseMove(s){console.log("aaaa"),this.$emit("portMouseMoved",s.clientX,s.clientY)},handlePortStopMove(s){const t=document.getElementById(this.circleRef).getBoundingClientRect(),n=t.left+t.width/2,o=t.top+t.height/2;this.$emit("portMouseStopMove",this.modId,this.portID,n,o),window.removeEventListener("mousemove",this.handlePortMouseMove),window.removeEventListener("mouseup",this.handlePortStopMove)},handlePortMouseUp(){console.log("mouseup!")}}},_hoisted_1$e=["id"],_hoisted_2$d={class:"portName"};function _sfc_render$d(s,e,t,n,o,r){return openBlock(),createElementBlock(Fragment,null,[createBaseVNode("div",{class:"container",onMouseover:e[0]||(e[0]=(...a)=>r.handlePortMouseOver&&r.handlePortMouseOver(...a)),onMouseout:e[1]||(e[1]=(...a)=>r.handlePortMouseOut&&r.handlePortMouseOut(...a)),onMousedown:e[2]||(e[2]=(...a)=>r.handlePortMouseClick&&r.handlePortMouseClick(...a))},[createBaseVNode("div",{class:"square",style:normalizeStyle({backgroundColor:o.squareColor})},[createBaseVNode("div",{class:"circle",style:normalizeStyle({backgroundColor:o.circleColor,borderColor:o.circleBorderColor})},[createBaseVNode("div",{class:"innerCircle",id:this.circleRef||r.generateDefaultRef,ref:this.circleRef||r.generateDefaultRef},null,8,_hoisted_1$e)],4)],4)],32),createBaseVNode("div",_hoisted_2$d,toDisplayString(t.parameter),1)],64)}const Port=_export_sfc(_sfc_main$e,[["render",_sfc_render$d],["__scopeId","data-v-ec8d1b04"]]),BasicOsc_vue_vue_type_style_index_0_lang="",_sfc_main$d={inject:["ACM"],components:{Knob,Port},created(){this.selectedWaveType="sine"},data(){return{selectedWaveType:"sine"}},methods:{knobUpdatedValue(s){var e,t;s!=null&&(e=s[0],t=parseFloat(s[1])),this.ACM.updateModuleParameter(this.$parent.moduleId,e,t)},handlePortClick(s,e,t){console.log("parent",this.$parent.moduleId),this.$emit("portClicked",this.$parent.moduleId,s,e,t)},handlePortMouseMove(s,e){this.$emit("modulePortMouseMoved",s,e)},handlePortMouseStopMove(s,e,t,n){console.log("stopped moving ",s),this.$emit("modulePortMouseStopMove",s,e,t,n)},handlePortHover(s,e,t){this.$emit("modulePortHover",this.$parent.moduleId,s,e,t)},handlePortOut(s){this.$emit("modulePortOut",this.$parent.moduleId,s)},handleWaveTypeChange(){console.log(this.selectedWaveType),this.ACM.updateModuleParameter(this.$parent.moduleId,"type",this.selectedWaveType)}}},_hoisted_1$d={class:"mainDivBO"},_hoisted_2$c={class:"knobClass"},_hoisted_3$c=createBaseVNode("br",null,null,-1),_hoisted_4$9={class:"knobClass2"},_hoisted_5$9={class:"knobClass3"},_hoisted_6$7=createBaseVNode("option",null,"sine",-1),_hoisted_7$6=createBaseVNode("option",null,"triangle",-1),_hoisted_8$5=createBaseVNode("option",null,"sawtooth",-1),_hoisted_9$5=createBaseVNode("option",null,"square",-1),_hoisted_10$5=[_hoisted_6$7,_hoisted_7$6,_hoisted_8$5,_hoisted_9$5],_hoisted_11$4={class:"portContainer"};function _sfc_render$c(s,e,t,n,o,r){return openBlock(),createElementBlock("div",_hoisted_1$d,[createBaseVNode("div",_hoisted_2$c,[(openBlock(),createBlock(resolveDynamicComponent("Knob"),{onUpdateknobvalue:r.knobUpdatedValue,parameter:"frequency",label:"FREQ",initialValue:440,from:20,to:4e3},null,40,["onUpdateknobvalue"])),_hoisted_3$c]),createBaseVNode("div",_hoisted_4$9,[(openBlock(),createBlock(resolveDynamicComponent("Knob"),{onUpdateknobvalue:r.knobUpdatedValue,parameter:"ADSRattack",label:"ATK",initialValue:.1,from:0,to:2},null,40,["onUpdateknobvalue"])),(openBlock(),createBlock(resolveDynamicComponent("Knob"),{onUpdateknobvalue:r.knobUpdatedValue,parameter:"ADSRdecay",label:"DEC",initialValue:1,from:0,to:2},null,40,["onUpdateknobvalue"]))]),createBaseVNode("div",_hoisted_5$9,[(openBlock(),createBlock(resolveDynamicComponent("Knob"),{onUpdateknobvalue:r.knobUpdatedValue,parameter:"ADSRsustain",label:"SUS",initialValue:.5,from:0,to:1},null,40,["onUpdateknobvalue"])),(openBlock(),createBlock(resolveDynamicComponent("Knob"),{onUpdateknobvalue:r.knobUpdatedValue,parameter:"ADSRrelease",label:"REL",initialValue:.5,from:0,to:5},null,40,["onUpdateknobvalue"]))]),withDirectives(createBaseVNode("select",{"onUpdate:modelValue":e[0]||(e[0]=a=>o.selectedWaveType=a),onChange:e[1]||(e[1]=(...a)=>r.handleWaveTypeChange&&r.handleWaveTypeChange(...a))},_hoisted_10$5,544),[[vModelSelect,o.selectedWaveType]]),createBaseVNode("div",_hoisted_11$4,[(openBlock(),createBlock(resolveDynamicComponent("Port"),{onPortClicked:r.handlePortClick,onPortMouseMoved:r.handlePortMouseMove,onPortMouseStopMove:r.handlePortMouseStopMove,onPortHovered:r.handlePortHover,onPortOut:r.handlePortOut,type:"IN",parameter:"FREQ",modId:this.$parent.moduleId,ID:0},null,40,["onPortClicked","onPortMouseMoved","onPortMouseStopMove","onPortHovered","onPortOut","modId"])),(openBlock(),createBlock(resolveDynamicComponent("Port"),{onPortClicked:r.handlePortClick,onPortMouseMoved:r.handlePortMouseMove,onPortMouseStopMove:r.handlePortMouseStopMove,onPortHovered:r.handlePortHover,onPortOut:r.handlePortOut,type:"OUT",parameter:"OUT",modId:this.$parent.moduleId,ID:1},null,40,["onPortClicked","onPortMouseMoved","onPortMouseStopMove","onPortHovered","onPortOut","modId"]))])])}const BasicOsc$1=_export_sfc(_sfc_main$d,[["render",_sfc_render$c]]),AudioOut_vue_vue_type_style_index_0_lang="",_sfc_main$c={components:{Port},methods:{handlePortClick(s,e,t){this.$emit("portClicked",this.$parent.moduleId,s,e,t)},handlePortMouseMove(s,e){this.$emit("modulePortMouseMoved",s,e)},handlePortMouseStopMove(s,e,t){this.$emit("modulePortMouseStopMove",this.$parent.moduleId,s,e,t)},handlePortHover(s,e,t){this.$emit("modulePortHover",this.$parent.moduleId,s,e,t)},handlePortOut(s){this.$emit("modulePortOut",this.$parent.moduleId,s)}}},_hoisted_1$c={class:"mainDivAO"};function _sfc_render$b(s,e,t,n,o,r){return openBlock(),createElementBlock("div",_hoisted_1$c,[(openBlock(),createBlock(resolveDynamicComponent("Port"),{onPortClicked:r.handlePortClick,onPortMouseMoved:r.handlePortMouseMove,onPortMouseStopMove:r.handlePortMouseStopMove,onPortHovered:r.handlePortHover,onPortOut:r.handlePortOut,type:"IN",parameter:"OUT",ID:0},null,40,["onPortClicked","onPortMouseMoved","onPortMouseStopMove","onPortHovered","onPortOut"]))])}const AudioOut$1=_export_sfc(_sfc_main$c,[["render",_sfc_render$b]]),MidiIn_vue_vue_type_style_index_0_lang="",_sfc_main$b={inject:["ACM","oct"],components:{Port},data(){return{activeKey:null,keyNotes:["a","w","s","e","d","f","t","g","y","h","u","j"],midiNotes:[60,61,62,63,64,65,66,67,68,69,70,71]}},emits:["portClicked","modulePortMouseMoved","modulePortMouseStopMove","modulePortHover","modulePortOut"],created(){window.addEventListener("keydown",this.playKeyPressed),window.addEventListener("keyup",this.playKeyReleased),window.addEventListener("remove-module-"+this.$parent.moduleId,this.removeModuleListeners)},methods:{playKeyPressed(s){let e=s.key.toLowerCase();if(e=="x"){this.oct=this.oct+1,this.oct>7&&(this.oct=7);return}else if(e=="z"){this.oct=this.oct-1,this.oct<1&&(this.oct=1);return}let t=this.oct-4,n=this.getMidiKey(e)+12*t;this.activeKey!=e&&(this.setActiveKey(e),this.ACM.keyPlayed(n,this.$parent.moduleId))},setActiveKey(s){this.activeKey=s},playKeyReleased(s){if(this.activeKey==s.key.toLowerCase()){this.activeKey=null;let e=this.oct-4,t=this.getMidiKey(s.key.toLowerCase())+12*e;this.ACM.keyReleased(t,this.$parent.moduleId)}},getMidiKey(s){let e=this.keyNotes.indexOf(s);return this.midiNotes[e]},removeModuleListeners(){window.removeEventListener("keydown",this.playKeyPressed),window.removeEventListener("keyup",this.playKeyReleased),window.removeEventListener("remove-module"+this.$parent.moduleId,this.removeModuleListeners)},handlePortClick(s,e,t){console.log("parent",this.$parent.moduleId),this.$emit("portClicked",this.$parent.moduleId,s,e,t)},handlePortMouseMove(s,e){this.$emit("modulePortMouseMoved",s,e)},handlePortMouseStopMove(s,e,t,n){console.log("stopped moving ",s),this.$emit("modulePortMouseStopMove",s,e,t,n)},handlePortHover(s,e,t){this.$emit("modulePortHover",this.$parent.moduleId,s,e,t)},handlePortOut(s){this.$emit("modulePortOut",this.$parent.moduleId,s)}}},_hoisted_1$b={class:"mainDivMI"},_hoisted_2$b=createBaseVNode("br",null,null,-1),_hoisted_3$b=createBaseVNode("br",null,null,-1),_hoisted_4$8={class:"set"},_hoisted_5$8={class:"portContainerMidiIn"};function _sfc_render$a(s,e,t,n,o,r){return openBlock(),createElementBlock(Fragment,null,[createBaseVNode("div",_hoisted_1$b,[createBaseVNode("div",null,[createTextVNode(" Oct: "+toDisplayString(r.oct)+" ",1),_hoisted_2$b,createTextVNode("(z and x "),_hoisted_3$b,createTextVNode("to change)")]),createBaseVNode("ul",_hoisted_4$8,[createBaseVNode("li",{class:normalizeClass(["white c",{"w-active":o.activeKey==="a"}]),onClick:e[0]||(e[0]=a=>r.setActiveKey("a"))},null,2),createBaseVNode("li",{class:normalizeClass(["black cs",{"b-active":o.activeKey==="w"}]),onClick:e[1]||(e[1]=a=>r.setActiveKey("w"))},null,2),createBaseVNode("li",{class:normalizeClass(["white d",{"w-active":o.activeKey==="s"}]),onClick:e[2]||(e[2]=a=>r.setActiveKey("s"))},null,2),createBaseVNode("li",{class:normalizeClass(["black ds",{"b-active":o.activeKey==="e"}]),onClick:e[3]||(e[3]=a=>r.setActiveKey("e"))},null,2),createBaseVNode("li",{class:normalizeClass(["white e",{"w-active":o.activeKey==="d"}]),onClick:e[4]||(e[4]=a=>r.setActiveKey("d"))},null,2),createBaseVNode("li",{class:normalizeClass(["white f",{"w-active":o.activeKey==="f"}]),onClick:e[5]||(e[5]=a=>r.setActiveKey("f"))},null,2),createBaseVNode("li",{class:normalizeClass(["black fs",{"b-active":o.activeKey==="t"}]),onClick:e[6]||(e[6]=a=>r.setActiveKey("t"))},null,2),createBaseVNode("li",{class:normalizeClass(["white g",{"w-active":o.activeKey==="g"}]),onClick:e[7]||(e[7]=a=>r.setActiveKey("g"))},null,2),createBaseVNode("li",{class:normalizeClass(["black gs",{"b-active":o.activeKey==="y"}]),onClick:e[8]||(e[8]=a=>r.setActiveKey("y"))},null,2),createBaseVNode("li",{class:normalizeClass(["white a",{"w-active":o.activeKey==="h"}]),onClick:e[9]||(e[9]=a=>r.setActiveKey("h"))},null,2),createBaseVNode("li",{class:normalizeClass(["black as",{"b-active":o.activeKey==="u"}]),onClick:e[10]||(e[10]=a=>r.setActiveKey("u"))},null,2),createBaseVNode("li",{class:normalizeClass(["white b",{"w-active":o.activeKey==="j"}]),onClick:e[11]||(e[11]=a=>r.setActiveKey("j"))},null,2)])]),createBaseVNode("div",_hoisted_5$8,[(openBlock(),createBlock(resolveDynamicComponent("Port"),{onPortClicked:r.handlePortClick,onPortMouseMoved:r.handlePortMouseMove,onPortMouseStopMove:r.handlePortMouseStopMove,onPortHovered:r.handlePortHover,onPortOut:r.handlePortOut,type:"OUT",parameter:"V/OCT",modId:this.$parent.moduleId,ID:0},null,40,["onPortClicked","onPortMouseMoved","onPortMouseStopMove","onPortHovered","onPortOut","modId"]))])],64)}const MidiIn$1=_export_sfc(_sfc_main$b,[["render",_sfc_render$a]]),Theremin_vue_vue_type_style_index_0_lang="",_sfc_main$a={inject:["ACM"],components:{Knob,Port},created(){},data(){return{thereminIndicator:{x:0,y:0},movable:!1}},methods:{setMovable(s,e){this.movable=e,e&&(this.thereminIndicator.x=s.layerX,this.thereminIndicator.y=s.layerY)},handleThereminMouseOver(s){if(!this.movable)return;var e=s.target.getBoundingClientRect();this.thereminIndicator.x=s.pageX-e.left,this.thereminIndicator.y=s.pageY-e.top,this.thereminIndicator.y>300&&(this.thereminIndicator.y=300);let t=mapValue(this.thereminIndicator.x,0,300,65.41,2093),n=1-mapValue(this.thereminIndicator.y,0,300,0,1);n=30*Math.log10(n),this.ACM.updateModuleParameter(this.$parent.moduleId,"frequency",t),this.ACM.updateModuleParameter(this.$parent.moduleId,"volume",n)},handlePortClick(s,e,t){console.log("parent",this.$parent.moduleId),console.log(this.$parent),this.$emit("portClicked",this.$parent.moduleId,s,e,t)},handlePortMouseMove(s,e){this.$emit("modulePortMouseMoved",s,e)},handlePortMouseStopMove(s,e,t,n){console.log("stopped moving ",s),this.$emit("modulePortMouseStopMove",s,e,t,n)},handlePortHover(s,e,t){this.$emit("modulePortHover",this.$parent.moduleId,s,e,t)},handlePortOut(s){this.$emit("modulePortOut",this.$parent.moduleId,s)}}},_hoisted_1$a={class:"mainDivThe"},_hoisted_2$a=createBaseVNode("div",{class:"theremin-indications"},[createTextVNode(" Vertical axis: amplitude "),createBaseVNode("br"),createTextVNode(" Horizontal axis: pitch "),createBaseVNode("br"),createTextVNode(" Click and drag to move! "),createBaseVNode("br"),createTextVNode(" (just clicking won't update values!) ")],-1),_hoisted_3$a={class:"portContainerThe"};function _sfc_render$9(s,e,t,n,o,r){return openBlock(),createElementBlock("div",_hoisted_1$a,[createBaseVNode("div",{class:"thereminControlArea",onMousedown:e[0]||(e[0]=a=>r.setMovable(a,!0)),onMouseup:e[1]||(e[1]=a=>r.setMovable(a,!1)),onMousemove:e[2]||(e[2]=(...a)=>r.handleThereminMouseOver&&r.handleThereminMouseOver(...a))},[createBaseVNode("div",{class:"theremin-indicator",style:normalizeStyle({top:o.thereminIndicator.y+"px",left:o.thereminIndicator.x+"px"})},null,4)],32),_hoisted_2$a,createBaseVNode("div",_hoisted_3$a,[(openBlock(),createBlock(resolveDynamicComponent("Port"),{onPortClicked:r.handlePortClick,onPortMouseMoved:r.handlePortMouseMove,onPortMouseStopMove:r.handlePortMouseStopMove,onPortHovered:r.handlePortHover,onPortOut:r.handlePortOut,type:"OUT",parameter:"OUT",modId:this.$parent.moduleId,ID:0},null,40,["onPortClicked","onPortMouseMoved","onPortMouseStopMove","onPortHovered","onPortOut","modId"]))])])}const Theremin$1=_export_sfc(_sfc_main$a,[["render",_sfc_render$9]]),Reverb_vue_vue_type_style_index_0_lang="",_sfc_main$9={inject:["ACM"],components:{Knob,Port},created(){},data(){return{timeOutID:-1}},methods:{knobUpdatedValue(s){clearTimeout(this.timeOutID);var e,t;s!=null&&(e=s[0],t=parseFloat(s[1])),this.timeOutID=setTimeout(()=>{this.ACM.updateModuleParameter(this.$parent.moduleId,e,t)},100)},handlePortClick(s,e,t){console.log("parent",this.$parent.moduleId),this.$emit("portClicked",this.$parent.moduleId,s,e,t)},handlePortMouseMove(s,e){this.$emit("modulePortMouseMoved",s,e)},handlePortMouseStopMove(s,e,t,n){console.log("stopped moving ",s),this.$emit("modulePortMouseStopMove",s,e,t,n)},handlePortHover(s,e,t){this.$emit("modulePortHover",this.$parent.moduleId,s,e,t)},handlePortOut(s){this.$emit("modulePortOut",this.$parent.moduleId,s)}}},_hoisted_1$9={class:"mainDivRev"},_hoisted_2$9={class:"knobClassRev"},_hoisted_3$9={class:"portContainerRev"};function _sfc_render$8(s,e,t,n,o,r){return openBlock(),createElementBlock("div",_hoisted_1$9,[createBaseVNode("div",_hoisted_2$9,[(openBlock(),createBlock(resolveDynamicComponent("Knob"),{onUpdateknobvalue:r.knobUpdatedValue,parameter:"wet",label:"DRY/WET",initialValue:.5,from:0,to:1},null,40,["onUpdateknobvalue"]))]),createBaseVNode("div",_hoisted_3$9,[(openBlock(),createBlock(resolveDynamicComponent("Port"),{onPortClicked:r.handlePortClick,onPortMouseMoved:r.handlePortMouseMove,onPortMouseStopMove:r.handlePortMouseStopMove,onPortHovered:r.handlePortHover,onPortOut:r.handlePortOut,type:"IN",parameter:"IN",modId:this.$parent.moduleId,ID:0},null,40,["onPortClicked","onPortMouseMoved","onPortMouseStopMove","onPortHovered","onPortOut","modId"])),(openBlock(),createBlock(resolveDynamicComponent("Port"),{onPortClicked:r.handlePortClick,onPortMouseMoved:r.handlePortMouseMove,onPortMouseStopMove:r.handlePortMouseStopMove,onPortHovered:r.handlePortHover,onPortOut:r.handlePortOut,type:"OUT",parameter:"OUT",modId:this.$parent.moduleId,ID:1},null,40,["onPortClicked","onPortMouseMoved","onPortMouseStopMove","onPortHovered","onPortOut","modId"]))])])}const Reverb$1=_export_sfc(_sfc_main$9,[["render",_sfc_render$8]]),VCA_vue_vue_type_style_index_0_lang="",_sfc_main$8={inject:["ACM"],components:{Knob,Port},created(){},data(){return{}},methods:{knobUpdatedValue(s){var e,t;s!=null&&(e=s[0],t=parseFloat(s[1])),this.ACM.updateModuleParameter(this.$parent.moduleId,e,t)},handlePortClick(s,e,t){console.log("parent",this.$parent.moduleId),this.$emit("portClicked",this.$parent.moduleId,s,e,t)},handlePortMouseMove(s,e){this.$emit("modulePortMouseMoved",s,e)},handlePortMouseStopMove(s,e,t,n){console.log("stopped moving ",s),this.$emit("modulePortMouseStopMove",s,e,t,n)},handlePortHover(s,e,t){this.$emit("modulePortHover",this.$parent.moduleId,s,e,t)},handlePortOut(s){this.$emit("modulePortOut",this.$parent.moduleId,s)}}},_hoisted_1$8={class:"mainDivVCA"},_hoisted_2$8={class:"knobClassVCA"},_hoisted_3$8={class:"portContainerVCA"};function _sfc_render$7(s,e,t,n,o,r){return openBlock(),createElementBlock("div",_hoisted_1$8,[createBaseVNode("div",_hoisted_2$8,[(openBlock(),createBlock(resolveDynamicComponent("Knob"),{onUpdateknobvalue:r.knobUpdatedValue,parameter:"factor",label:"GAIN",initialValue:1,from:0,to:2},null,40,["onUpdateknobvalue"]))]),createBaseVNode("div",_hoisted_3$8,[(openBlock(),createBlock(resolveDynamicComponent("Port"),{onPortClicked:r.handlePortClick,onPortMouseMoved:r.handlePortMouseMove,onPortMouseStopMove:r.handlePortMouseStopMove,onPortHovered:r.handlePortHover,onPortOut:r.handlePortOut,type:"IN",parameter:"IN",modId:this.$parent.moduleId,ID:0},null,40,["onPortClicked","onPortMouseMoved","onPortMouseStopMove","onPortHovered","onPortOut","modId"])),(openBlock(),createBlock(resolveDynamicComponent("Port"),{onPortClicked:r.handlePortClick,onPortMouseMoved:r.handlePortMouseMove,onPortMouseStopMove:r.handlePortMouseStopMove,onPortHovered:r.handlePortHover,onPortOut:r.handlePortOut,type:"OUT",parameter:"OUT",modId:this.$parent.moduleId,ID:1},null,40,["onPortClicked","onPortMouseMoved","onPortMouseStopMove","onPortHovered","onPortOut","modId"]))])])}const VCA$2=_export_sfc(_sfc_main$8,[["render",_sfc_render$7]]),Filter_vue_vue_type_style_index_0_lang="",_sfc_main$7={inject:["ACM"],components:{Port,Knob},data(){return{selectedFilterType:"lowpass"}},emits:["portClicked","modulePortMouseMoved","modulePortMouseStopMove","modulePortHover","modulePortOut"],methods:{knobUpdatedValue(s){var e,t;s!=null&&(e=s[0],t=parseFloat(s[1])),this.ACM.updateModuleParameter(this.$parent.moduleId,e,t)},handlePortClick(s,e,t){console.log("parent",this.$parent.moduleId),this.$emit("portClicked",this.$parent.moduleId,s,e,t)},handlePortMouseMove(s,e){this.$emit("modulePortMouseMoved",s,e)},handlePortMouseStopMove(s,e,t,n){console.log("stopped moving ",s),this.$emit("modulePortMouseStopMove",s,e,t,n)},handlePortHover(s,e,t){this.$emit("modulePortHover",this.$parent.moduleId,s,e,t)},handlePortOut(s){this.$emit("modulePortOut",this.$parent.moduleId,s)},handleFilterTypeChange(){this.ACM.updateModuleParameter(this.$parent.moduleId,"type",this.selectedFilterType)}}},_hoisted_1$7={class:"mainDivFilter"},_hoisted_2$7={class:"knobClassFilter"},_hoisted_3$7={class:"portContainerFilter"},_hoisted_4$7=createBaseVNode("option",null,"lowpass",-1),_hoisted_5$7=createBaseVNode("option",null,"highpass",-1),_hoisted_6$6=createBaseVNode("option",null,"bandpass",-1),_hoisted_7$5=[_hoisted_4$7,_hoisted_5$7,_hoisted_6$6];function _sfc_render$6(s,e,t,n,o,r){return openBlock(),createElementBlock(Fragment,null,[createBaseVNode("div",_hoisted_1$7,[createBaseVNode("div",_hoisted_2$7,[(openBlock(),createBlock(resolveDynamicComponent("Knob"),{onUpdateknobvalue:r.knobUpdatedValue,parameter:"frequency",label:"FREQ",initialValue:1500,from:20,to:18e3},null,40,["onUpdateknobvalue"])),(openBlock(),createBlock(resolveDynamicComponent("Knob"),{onUpdateknobvalue:r.knobUpdatedValue,parameter:"Q",label:"Q",initialValue:0,from:0,to:10},null,40,["onUpdateknobvalue"]))])]),createBaseVNode("div",_hoisted_3$7,[withDirectives(createBaseVNode("select",{"onUpdate:modelValue":e[0]||(e[0]=a=>o.selectedFilterType=a),onChange:e[1]||(e[1]=(...a)=>r.handleFilterTypeChange&&r.handleFilterTypeChange(...a))},_hoisted_7$5,544),[[vModelSelect,o.selectedFilterType]]),(openBlock(),createBlock(resolveDynamicComponent("Port"),{onPortClicked:r.handlePortClick,onPortMouseMoved:r.handlePortMouseMove,onPortMouseStopMove:r.handlePortMouseStopMove,onPortHovered:r.handlePortHover,onPortOut:r.handlePortOut,type:"IN",parameter:"IN",modId:this.$parent.moduleId,ID:0},null,40,["onPortClicked","onPortMouseMoved","onPortMouseStopMove","onPortHovered","onPortOut","modId"])),(openBlock(),createBlock(resolveDynamicComponent("Port"),{onPortClicked:r.handlePortClick,onPortMouseMoved:r.handlePortMouseMove,onPortMouseStopMove:r.handlePortMouseStopMove,onPortHovered:r.handlePortHover,onPortOut:r.handlePortOut,type:"OUT",parameter:"OUT",modId:this.$parent.moduleId,ID:1},null,40,["onPortClicked","onPortMouseMoved","onPortMouseStopMove","onPortHovered","onPortOut","modId"]))])],64)}const Filter$1=_export_sfc(_sfc_main$7,[["render",_sfc_render$6]]);class ModuleConnection{constructor(e,t,n,o,r,a,c,l,u,d="red"){this.fromId=t,this.toId=n,this.fromPort=o,this.toPort=r,this.x1=a,this.y1=c,this.x2=l,this.y2=u,this.color=this.getRandomColor(),this.addConnectionToACM(e,this.fromId,this.toId,this.fromPort,this.toPort)}getRandomColor(){var e=["red","green","yellow","cyan","magenta","green"],t=e[Math.floor(Math.random()*e.length)];return t}printConnection(){console.log("fromId: "+this.fromId+" toId: "+this.toId+" fromPort: "+this.fromPort+" toPort: "+this.toPort+" x1: "+this.x1+" y1: "+this.y1+" x2: "+this.x2+" y2: "+this.y2)}addConnectionToACM(e,t,n,o,r){e.connectNodes(t,n,o,r)}}const categories=["Synth","Effects","I/O"],modules={synth:["osc"]},list_json={categories,modules},categories_content={0:["basic_osc","theremin"],1:["filter","reverb","VCA"],2:["audio_out","midi_in"]},basic_osc={name:"SVO",type:"synth",description:"A simple oscillator",preview_img_source:"./assets/images/oscillator.png",codename:"BasicOsc",parameters:{frequency:4402}},theremin={name:"Theremin",type:"synth",description:"A Theremin - like oscillator",preview_img_source:"./assets/images/theremin.png",codename:"Theremin",parameters:{frequency:4402}},filter={name:"Filter",type:"effect",description:"Lowpass / Highpass / Bandpass Filter",preview_img_source:"./assets/images/Filter.png",codename:"Filter",parameters:{}},reverb={name:"Reverb",type:"effect",description:"A basic reverb",preview_img_source:"./assets/images/reverb.png",codename:"Reverb",parameters:{}},VCA$1={name:"VCA",type:"effect",description:"Simple VCA/gain module. Not actually voltage controlled :|",preview_img_source:"./assets/images/VCA.png",codename:"VCA",parameters:{}},audio_out={name:"Audio Out",type:"I/O",description:"Audio output. Stereo only, sorry!",preview_img_source:"./assets/images/audio_out.png",codename:"AudioOut",parameters:{}},midi_in={name:"Keyboard Input",type:"I/O",description:"Midi input. For now only thorugh the computer keyboard",preview_img_source:"./assets/images/midi_in_key.png",codename:"MidiIn",parameters:{}},synth_info_json={categories_content,basic_osc,theremin,filter,reverb,VCA:VCA$1,audio_out,midi_in};typeof JSON.decycle!="function"&&(JSON.decycle=function(e,t){var n=new WeakMap;return function o(r,a){var c,l;return t!==void 0&&(r=t(r)),typeof r=="object"&&r!==null&&!(r instanceof Boolean)&&!(r instanceof Date)&&!(r instanceof Number)&&!(r instanceof RegExp)&&!(r instanceof String)?(c=n.get(r),c!==void 0?{$ref:c}:(n.set(r,a),Array.isArray(r)?(l=[],r.forEach(function(u,d){l[d]=o(u,a+"["+d+"]")})):(l={},Object.keys(r).forEach(function(u){l[u]=o(r[u],a+"["+JSON.stringify(u)+"]")})),l)):r}(e,"$")});typeof JSON.retrocycle!="function"&&(JSON.retrocycle=function retrocycle($){var px=/^\$(?:\[(?:\d+|"(?:[^\\"\u0000-\u001f]|\\(?:[\\"\/bfnrt]|u[0-9a-zA-Z]{4}))*")\])*$/;return function rez(value){value&&typeof value=="object"&&(Array.isArray(value)?value.forEach(function(element,i){if(typeof element=="object"&&element!==null){var path=element.$ref;typeof path=="string"&&px.test(path)?value[i]=eval(path):rez(element)}}):Object.keys(value).forEach(function(name){var item=value[name];if(typeof item=="object"&&item!==null){var path=item.$ref;typeof path=="string"&&px.test(path)?value[name]=eval(path):rez(item)}}))}($),$});const Playground_vue_vue_type_style_index_0_scoped_af294cd3_lang="",_withScopeId$5=s=>(pushScopeId("data-v-af294cd3"),s=s(),popScopeId(),s),_hoisted_1$6={style:{cursor:"default"}},_hoisted_2$6={key:0,id:"modulesScaffold",class:"modules-scaffold"},_hoisted_3$6=_withScopeId$5(()=>createBaseVNode("div",{class:"scaffoldTitle"}," MODULE SCAFFOLD ",-1)),_hoisted_4$6=["id","onClick"],_hoisted_5$6=["id"],_hoisted_6$5={key:0,class:"scaffoldCategoryContent"},_hoisted_7$4=["onClick"],_hoisted_8$4=["src"],_hoisted_9$4={class:"visualConnections"},_hoisted_10$4=["x1","y1","x2","y2"],_hoisted_11$3=["x1","y1","x2","y2","stroke"],_hoisted_12$3={class:"controls"},__default__={inject:["ACM"],components:{Module,BasicOsc:BasicOsc$1,AudioOut:AudioOut$1,MidiIn:MidiIn$1,Theremin:Theremin$1,Reverb:Reverb$1,VCA:VCA$2,Filter:Filter$1},data(){return{libButtonClicked:!1,contextMenuVisible:!1,contextMenuPosition:{x:0,y:0},modules:[],moduleName:"My Module",myJson:list_json,synth_info:synth_info_json,mod_categories:list_json.categories,categories_content:synth_info_json.categories_content,expandedCategories:[],connections:[],isDraggingPort:!1,dragPortPositionX:0,dragPortPositionY:0,mouseCurrentX:0,mouseCurrentY:0,makeConnectionPermanent:!1,lastHoveredPortModID:-1,lastHoveredPortID:-1,lastHoveredPortX:0,lastHoveredPortY:0,lastAssignedModuleId:-1,canMovePlayground:!1,playGroundMoveInitialX:0,playGroundMoveInitialY:0,playGroundXtranslate:0,playGroundYtranslate:0,presetId:null}},mounted(){let s=this.$route.params.presetId;s!=null&&s!=null&&this.loadPreset(s)},options:{isDragging(){return this.isDraggingPort}},methods:{isDragging(){return this.isDraggingPort},startPortDragging(s,e,t,n){this.dragPortPositionX=t,this.dragPortPositionY=n,this.isDraggingPort=!0,console.log("Starting"),console.log(this.dragPortPositionX,this.dragPortPositionY)},handlePortDragging(s,e){console.log("handling"),this.isDraggingPort&&(this.mouseCurrentX=s,this.mouseCurrentY=e)},stopPortDragging(s,e,t,n){this.isDraggingPort=!1,console.log("Module ID from: ",s),console.log("Last Hoevered module:",this.lastHoveredPortModID),console.log(this.isHoveringPort),this.isHoveringPort&&s!=this.lastHoveredPortModID&&(console.log("fff",s,this.lastHoveredPortModID),this.ACM.checkConnectionValidity(s,this.lastHoveredPortModID,e,this.lastHoveredPortID)?(this.connections.push(new ModuleConnection(this.ACM,s,this.lastHoveredPortModID,e,this.lastHoveredPortID,t-this.playGroundXtranslate,n-this.playGroundYtranslate,this.lastHoveredPortX-this.playGroundXtranslate,this.lastHoveredPortY-this.playGroundYtranslate)),this.connections[this.connections.length-1].printConnection()):console.log("Invalid connection")),this.isHoveringPort=!1},trackPort(s,e,t,n){this.lastHoveredPortModID=s,this.lastHoveredPortID=e,this.lastHoveredPortX=t,this.lastHoveredPortY=n,this.isHoveringPort=!0},stopTrackPort(){this.isHoveringPort=!1},moduleMovedUpdate(s,e,t){this.findUpdateConnectionsToModule(s,e,t),this.findUpdateConnectionsFromModule(s,e,t)},findUpdateConnectionsToModule(s,e,t){if(this.connections.length!=0)for(let n=0;n<this.connections.length;n++)this.connections[n].toId==s&&(this.connections[n].x2+=e,this.connections[n].y2+=t)},findUpdateConnectionsFromModule(s,e,t){if(this.connections.length!=0)for(let n=0;n<this.connections.length;n++)this.connections[n].fromId==s&&(this.connections[n].x1+=e,this.connections[n].y1+=t)},removeConnectionsWithModule(s){if(this.connections.length!=0)for(let e=0;e<this.connections.length;e++)(this.connections[e].fromId==s||this.connections[e].toId==s)&&this.connections.splice(e,1)},removeModule(s){this.removeConnectionsWithModule(s),this.ACM.removeNode(s);for(let e=0;e<this.modules.length;e++)this.modules[e].id==s&&this.modules.splice(e,1)},setVisibleContextMenu(s){console.log(this.contextMenuVisible),this.contextMenuVisible==!0?this.contextMenuVisible=!1:(this.contextMenuVisible=!0,this.contextMenuPosition={x:s.clientX,y:s.clientY}),s.target.parentElement.classList.contains("module"),console.log(s)},addModule(s,e=!1){if(!e){let t=synth_info_json[s].codename,n=this.lastAssignedModuleId+1;this.lastAssignedModuleId=n,this.modules.push({moduleName:s,type:t,id:n,createdCoordsX:Math.floor(Math.random()*600)+200-this.playGroundXtranslate,createdCoordsY:Math.floor(Math.random()*500)+100-this.playGroundYtranslate});return}this.modules.push({moduleName:s,inputPorts:[{id:1,x:10,y:50},{id:2,x:10,y:80}],outputPorts:[{id:1,x:190,y:50},{id:2,x:190,y:80}],createdCoordsX:this.contextMenuPosition.x,createdCoordsY:this.contextMenuPosition.y}),this.contextMenuVisible=!1},libraryButtonClicked(){this.libButtonClicked=!this.libButtonClicked,this.libButtonClicked?(document.getElementById("libButton").style.transform="translate(calc(24cqw), -50%) ",document.getElementById("libButton").innerHTML="arrow_back_ios_new"):(document.getElementById("libButton").innerHTML="arrow_forward_ios",document.getElementById("libButton").style.transform="translate(0px, -50%)")},toggleCategory(s){this.expandedCategories.includes(s)?(this.expandedCategories=this.expandedCategories.filter(e=>e!==s),document.getElementById("category_span"+s).innerHTML="arrow_drop_down"):(this.expandedCategories.push(s),document.getElementById("category_span"+s).innerHTML="arrow_drop_up")},isExpanded(s){return this.expandedCategories.includes(s)},clickedMainDiv(s,e){console.log(s),s.target.classList.contains("mainDiv")!=!1&&(this.canMovePlayground=e,e==!0?(s.target.classList.add("maindiv-grabbed"),this.playGroundMoveInitialX=s.clientX,this.playGroundMoveInitialY=s.clientY):s.target.classList.remove("maindiv-grabbed"))},moveMainDiv(s){this.canMovePlayground!=!1&&(console.log(s.clientX,s.clientY),console.log("moving the playground sire!"),this.playGroundXtranslate+=s.clientX-this.playGroundMoveInitialX,this.playGroundYtranslate+=s.clientY-this.playGroundMoveInitialY,this.playGroundMoveInitialX=s.clientX,this.playGroundMoveInitialY=s.clientY)},async savePreset(){console.log("saving preset!!!!");let s=prompt("Please enter the name of your preset","Preset Name");if(s==null||s=="")return;let e={preset_name:s,creator_id:1,public:!0},t={x:this.playGroundXtranslate,y:this.playGroundYtranslate,modules:this.modules,connections:this.connections,lastAssignedModuleId:this.lastAssignedModuleId},n=this.ACM.getData();var a={preset:{metadata:e,data:{playground_data:t,ACM_data:n}}};a=JSON.stringify(JSON.decycle(a)),this.sentData=a,console.log(a),fetch("https://syntha-backend-fef92fb3e9de.herokuapp.com/presets/new",{method:"POST",headers:{"Content-Type":"application/json"},body:a}).then(c=>c.json()).then(c=>{console.log("Success:",c),this.lastSavedId=c.preset_id}).catch(c=>{console.error("Error:",c)})},loadPreset(s){console.log("loading preset!!!!");const e={"Content-Type":"application/json"};fetch("https://syntha-backend-fef92fb3e9de.herokuapp.com/presets/"+s,{method:"GET",headers:e}).then(t=>t.json()).then(o=>{console.log(o);var n=JSON.retrocycle(o.result.preset);console.log(n);var o=n.data;console.log(o),o=JSON.parse(o),console.log(o),console.log("OG"),console.log(this.modules),this.modules=[],this.connections=[],this.lastAssignedModuleId=-1,this.modules=o.playground_data.modules,this.connections=o.playground_data.connections,this.playGroundXtranslate=o.playground_data.x,this.playGroundYtranslate=o.playground_data.y,this.lastAssignedModuleId=o.playground_data.lastAssignedModuleId,this.ACM.initializeFromPreset(o.ACM_data)})}}},_sfc_main$6=Object.assign(__default__,{__name:"Playground",setup(s){return(e,t)=>(openBlock(),createElementBlock(Fragment,null,[createBaseVNode("header",null,[createVNode(Toolbar,{onSavepreset:e.savePreset,onLoadpreset:e.loadPreset},null,8,["onSavepreset","onLoadpreset"])]),createBaseVNode("main",{onContextmenu:t[5]||(t[5]=withModifiers(n=>e.setVisibleContextMenu(n),["prevent"]))},[createBaseVNode("div",{class:"mainDiv",onMousedown:t[2]||(t[2]=n=>e.clickedMainDiv(n,!0)),onMouseup:t[3]||(t[3]=n=>e.clickedMainDiv(n,!1)),onMousemove:t[4]||(t[4]=(...n)=>e.moveMainDiv&&e.moveMainDiv(...n))},[createBaseVNode("div",_hoisted_1$6,[(openBlock(!0),createElementBlock(Fragment,null,renderList(e.modules,(n,o)=>(openBlock(),createElementBlock("div",{key:o},[createVNode(Module,{moduleName:n.moduleName,inputPorts:n.inputPorts,outputPorts:n.outputPorts,createdCoordsX:n.createdCoordsX,createdCoordsY:n.createdCoordsY,moduleId:n.id,moduleType:n.type,onContextmenu:t[0]||(t[0]=withModifiers(r=>e.setVisibleContextMenu(r),["prevent"])),onModuleMoved:e.moduleMovedUpdate,onRemoveModule:e.removeModule,style:normalizeStyle({transform:"translate("+e.playGroundXtranslate+"px,"+e.playGroundYtranslate+"px)"})},{default:withCtx(()=>[(openBlock(),createBlock(resolveDynamicComponent(n.type),{onPortClicked:e.startPortDragging,onModulePortMouseMoved:e.handlePortDragging,onModulePortMouseStopMove:e.stopPortDragging,onModulePortHover:e.trackPort,onModulePortOut:e.stopTrackPort},null,40,["onPortClicked","onModulePortMouseMoved","onModulePortMouseStopMove","onModulePortHover","onModulePortOut"]))]),_:2},1032,["moduleName","inputPorts","outputPorts","createdCoordsX","createdCoordsY","moduleId","moduleType","onModuleMoved","onRemoveModule","style"])]))),128))]),createBaseVNode("button",{id:"libButton",class:"libraryButton material-symbols-outlined",onClick:t[1]||(t[1]=(...n)=>e.libraryButtonClicked&&e.libraryButtonClicked(...n))},"arrow_forward_ios"),e.libButtonClicked?(openBlock(),createElementBlock("div",_hoisted_2$6,[_hoisted_3$6,(openBlock(!0),createElementBlock(Fragment,null,renderList(e.mod_categories,(n,o)=>(openBlock(),createElementBlock("div",{key:o},[createBaseVNode("div",{class:"scaffoldCategory",id:"category"+o,onClick:r=>e.toggleCategory(o)},[createTextVNode(toDisplayString(n.toLocaleUpperCase())+" ",1),createBaseVNode("span",{class:"material-symbols-outlined",id:"category_span"+o},"arrow_drop_down",8,_hoisted_5$6)],8,_hoisted_4$6),e.isExpanded(o)?(openBlock(),createElementBlock("div",_hoisted_6$5,[(openBlock(!0),createElementBlock(Fragment,null,renderList(e.categories_content[o],(r,a)=>(openBlock(),createElementBlock("div",{key:a,class:"scaffoldCategoryItem",onClick:c=>e.addModule(r)},[createBaseVNode("img",{src:"./src/assets/images/"+r+".png",class:"scaffoldCategoryItemImg"},null,8,_hoisted_8$4),createTextVNode(" "+toDisplayString(r),1)],8,_hoisted_7$4))),128))])):createCommentVNode("",!0)]))),128))])):createCommentVNode("",!0),(openBlock(),createElementBlock("svg",_hoisted_9$4,[e.isDragging()?(openBlock(),createElementBlock("line",{key:0,x1:e.dragPortPositionX,y1:e.dragPortPositionY,x2:e.mouseCurrentX,y2:e.mouseCurrentY,stroke:"blue","stroke-width":"2"},null,8,_hoisted_10$4)):createCommentVNode("",!0)])),(openBlock(!0),createElementBlock(Fragment,null,renderList(e.connections,(n,o)=>(openBlock(),createElementBlock("svg",{class:"visualConnections",key:o},[createBaseVNode("line",{x1:e.connections[o].x1+e.playGroundXtranslate,y1:e.connections[o].y1+e.playGroundYtranslate,x2:e.connections[o].x2+e.playGroundXtranslate,y2:e.connections[o].y2+e.playGroundYtranslate,stroke:e.connections[o].color,"stroke-width":"6"},null,8,_hoisted_11$3)]))),128))],32)],32),createBaseVNode("div",_hoisted_12$3,[createVNode(ControlsToolbar,{oncontextmenu:"return false;"})])],64))}}),Playground=_export_sfc(_sfc_main$6,[["__scopeId","data-v-af294cd3"]]),Login_vue_vue_type_style_index_0_scoped_a503d555_lang="",_sfc_main$5={data(){return{store,glowcolor:"rgb(112, 224, 255)",username:"",password:"",loginFailed:!1}},created(){localStorage.getItem("loggedIn")=="true"?this.loggedIn=!0:(localStorage.setItem("loggedIn","false"),this.loggedIn=!1)},methods:{openNav(){document.getElementById("myNav").style.width="100%"},closeNav(){document.getElementById("myNav").style.width="0%"},async sendData(s){console.log(this.username,this.password);var e={username:this.username,password:this.password};e=JSON.stringify(e),fetch("https://syntha-backend-fef92fb3e9de.herokuapp.com/users/"+s,{method:"POST",headers:{"Content-Type":"application/json"},body:e}).then(t=>t.json()).then(t=>{if(t.status!=200){console.log("Invalid Data"),this.loginFailed=!0;return}console.log("Success:",t),this.loginFailed=!1,localStorage.setItem("loggedIn","true"),localStorage.setItem("userId",t.user_id),this.$router.push("/syntha/")}).catch(t=>{console.error("Error:",t)})}}},__injectCSSVars__$2=()=>{useCssVars(s=>({"40ecbcd0":s.glowcolor}))},__setup__$2=_sfc_main$5.setup;_sfc_main$5.setup=__setup__$2?(s,e)=>(__injectCSSVars__$2(),__setup__$2(s,e)):__injectCSSVars__$2;const _withScopeId$4=s=>(pushScopeId("data-v-a503d555"),s=s(),popScopeId(),s),_hoisted_1$5={id:"myNav",class:"overlay"},_hoisted_2$5={class:"overlay-content"},_hoisted_3$5=_withScopeId$4(()=>createBaseVNode("br",null,null,-1)),_hoisted_4$5=_withScopeId$4(()=>createBaseVNode("br",null,null,-1)),_hoisted_5$5=_withScopeId$4(()=>createBaseVNode("br",null,null,-1)),_hoisted_6$4=_withScopeId$4(()=>createBaseVNode("br",null,null,-1)),_hoisted_7$3=_withScopeId$4(()=>createBaseVNode("br",null,null,-1)),_hoisted_8$3={class:"mainDivLogin"},_hoisted_9$3={class:"mainBoxOfSomething"},_hoisted_10$3=_withScopeId$4(()=>createBaseVNode("input",{type:"checkbox",id:"chk","aria-hidden":"true"},null,-1)),_hoisted_11$2={key:0,style:{"background-color":"red",color:"white","justify-content":"center","align-items":"center"}},_hoisted_12$2={class:"signup"},_hoisted_13$1=_withScopeId$4(()=>createBaseVNode("label",{for:"chk","aria-hidden":"true"},"SIGN UP",-1)),_hoisted_14$1={class:"login"},_hoisted_15$1=_withScopeId$4(()=>createBaseVNode("label",{for:"chk","aria-hidden":"true"},"LOGIN",-1));function _sfc_render$5(s,e,t,n,o,r){const a=resolveComponent("router-link");return openBlock(),createElementBlock(Fragment,null,[createBaseVNode("div",_hoisted_1$5,[createBaseVNode("a",{href:"javascript:void(0)",class:"closebtn",onClick:e[0]||(e[0]=c=>r.closeNav())},"×"),createBaseVNode("div",_hoisted_2$5,[createVNode(a,{to:"/syntha/"},{default:withCtx(()=>[createTextVNode("HOME")]),_:1}),_hoisted_3$5,createVNode(a,{to:"/syntha/workshop"},{default:withCtx(()=>[createTextVNode("LIBRARY")]),_:1}),_hoisted_4$5,createVNode(a,{to:"/syntha/account"},{default:withCtx(()=>[createTextVNode("ACCOUNT")]),_:1}),_hoisted_5$5,createVNode(a,{to:"/syntha/docs"},{default:withCtx(()=>[createTextVNode("DOCUMENTATION")]),_:1}),_hoisted_6$4,createVNode(a,{to:"/syntha/about"},{default:withCtx(()=>[createTextVNode("ABOUT")]),_:1}),_hoisted_7$3])]),createBaseVNode("div",_hoisted_8$3,[createBaseVNode("span",{class:"hamburger",style:{"font-size":"30px",cursor:"pointer"},onClick:e[1]||(e[1]=c=>r.openNav())},"☰"),createVNode(a,{class:"homebtnLogin",to:"/syntha/",style:{"text-decoration":"none"}},{default:withCtx(()=>[createTextVNode("☖")]),_:1}),createBaseVNode("div",_hoisted_9$3,[_hoisted_10$3,o.loginFailed?(openBlock(),createElementBlock("div",_hoisted_11$2," Signup/Login Failed. Bad credentials or already existing account. ")):createCommentVNode("",!0),createBaseVNode("div",_hoisted_12$2,[createBaseVNode("form",null,[_hoisted_13$1,withDirectives(createBaseVNode("input",{type:"username","onUpdate:modelValue":e[2]||(e[2]=c=>o.username=c),required:""},null,512),[[vModelText,o.username]]),withDirectives(createBaseVNode("input",{type:"password","onUpdate:modelValue":e[3]||(e[3]=c=>o.password=c),required:""},null,512),[[vModelText,o.password]]),createBaseVNode("button",{onClick:e[4]||(e[4]=withModifiers(c=>r.sendData("register"),["prevent"]))},"SIGN UP")])]),createBaseVNode("div",_hoisted_14$1,[createBaseVNode("form",null,[_hoisted_15$1,withDirectives(createBaseVNode("input",{type:"username","onUpdate:modelValue":e[5]||(e[5]=c=>o.username=c),required:""},null,512),[[vModelText,o.username]]),withDirectives(createBaseVNode("input",{type:"password","onUpdate:modelValue":e[6]||(e[6]=c=>o.password=c),required:""},null,512),[[vModelText,o.password]]),createBaseVNode("button",{onClick:e[7]||(e[7]=withModifiers(c=>r.sendData("login"),["prevent"]))},"SIGN UP")])])])])],64)}const Login=_export_sfc(_sfc_main$5,[["render",_sfc_render$5],["__scopeId","data-v-a503d555"]]),Workshop_vue_vue_type_style_index_0_scoped_ae027b26_lang="",_sfc_main$4={data(){return{glowcolor:"rgb(112, 224, 255)",entries:[{name:"Preset 1",id:1},{name:"Preset 2",id:2},{name:"Preset 3",id:3},{name:"Preset 4",id:4}]}},mounted(){this.loadPresetData()},methods:{openNav(){document.getElementById("myNav").style.width="100%"},closeNav(){document.getElementById("myNav").style.width="0%"},async loadPresetData(){fetch("https://syntha-backend-fef92fb3e9de.herokuapp.com/presets/all",{method:"GET",headers:{"Content-Type":"application/json"}}).then(e=>e.json()).then(e=>{console.log(e),this.entries=e.result})},handleButtonClick(s){console.log("Button clicked for entry at index",s),this.$router.push("/syntha/synth/"+this.entries[s].id)}}},__injectCSSVars__$1=()=>{useCssVars(s=>({"285a90aa":s.glowcolor}))},__setup__$1=_sfc_main$4.setup;_sfc_main$4.setup=__setup__$1?(s,e)=>(__injectCSSVars__$1(),__setup__$1(s,e)):__injectCSSVars__$1;const _withScopeId$3=s=>(pushScopeId("data-v-ae027b26"),s=s(),popScopeId(),s),_hoisted_1$4={id:"myNav",class:"overlay"},_hoisted_2$4={class:"overlay-content"},_hoisted_3$4=_withScopeId$3(()=>createBaseVNode("br",null,null,-1)),_hoisted_4$4=_withScopeId$3(()=>createBaseVNode("br",null,null,-1)),_hoisted_5$4=_withScopeId$3(()=>createBaseVNode("br",null,null,-1)),_hoisted_6$3=_withScopeId$3(()=>createBaseVNode("br",null,null,-1)),_hoisted_7$2=_withScopeId$3(()=>createBaseVNode("br",null,null,-1)),_hoisted_8$2={class:"mainDivLibrary"},_hoisted_9$2=_withScopeId$3(()=>createBaseVNode("div",{class:"text"},[createBaseVNode("h1",{style:{"font-size":"48px"}},"LIBRARY"),createBaseVNode("p",{style:{"font-size":"24px"}},[createTextVNode("Welcome to the SynthA! library. Here you can browse presets made by our users."),createBaseVNode("br"),createTextVNode(" We want to build a global network of music producers and hobbyists where everybody can build upon each other's work.")])],-1)),_hoisted_10$2={class:"table-container"},_hoisted_11$1=_withScopeId$3(()=>createBaseVNode("thead",null,[createBaseVNode("tr",null,[createBaseVNode("th",null,"Entry"),createBaseVNode("th",null,"Load?")])],-1)),_hoisted_12$1=["onClick"];function _sfc_render$4(s,e,t,n,o,r){const a=resolveComponent("router-link");return openBlock(),createElementBlock(Fragment,null,[createBaseVNode("div",_hoisted_1$4,[createBaseVNode("a",{href:"javascript:void(0)",class:"closebtn",onClick:e[0]||(e[0]=c=>r.closeNav())},"×"),createBaseVNode("div",_hoisted_2$4,[createVNode(a,{to:"/syntha/"},{default:withCtx(()=>[createTextVNode("HOME")]),_:1}),_hoisted_3$4,createVNode(a,{to:"/syntha/workshop"},{default:withCtx(()=>[createTextVNode("LIBRARY")]),_:1}),_hoisted_4$4,createVNode(a,{to:"/syntha/account"},{default:withCtx(()=>[createTextVNode("ACCOUNT")]),_:1}),_hoisted_5$4,createVNode(a,{to:"/syntha/docs"},{default:withCtx(()=>[createTextVNode("DOCUMENTATION")]),_:1}),_hoisted_6$3,createVNode(a,{to:"/syntha/about"},{default:withCtx(()=>[createTextVNode("ABOUT")]),_:1}),_hoisted_7$2])]),createBaseVNode("div",_hoisted_8$2,[createBaseVNode("span",{class:"weirdAssButton",style:{"font-size":"30px",cursor:"pointer"},onClick:e[1]||(e[1]=c=>r.openNav())},"☰"),createVNode(a,{class:"homebtn",to:"/syntha/",style:{"text-decoration":"none"}},{default:withCtx(()=>[createTextVNode("☖")]),_:1}),createVNode(a,{class:"accountbtn",to:"/syntha/login",style:{"text-decoration":"none"}},{default:withCtx(()=>[createTextVNode("LOGIN")]),_:1}),_hoisted_9$2,createBaseVNode("div",_hoisted_10$2,[createBaseVNode("table",null,[_hoisted_11$1,createBaseVNode("tbody",null,[(openBlock(!0),createElementBlock(Fragment,null,renderList(o.entries,(c,l)=>(openBlock(),createElementBlock("tr",{key:l},[createBaseVNode("td",null,toDisplayString(c.name),1),createBaseVNode("td",null,[createBaseVNode("button",{onClick:u=>r.handleButtonClick(l)},"Load",8,_hoisted_12$1)])]))),128))])])])])],64)}const Workshop=_export_sfc(_sfc_main$4,[["render",_sfc_render$4],["__scopeId","data-v-ae027b26"]]),App_vue_vue_type_style_index_0_scoped_3c9b4529_lang="",routes={"/":Home,"/about":About,"/synth":Playground,"/login":Login},_sfc_main$3={inject:["ACM"],data(){return{store,currentPath:window.location.hash}},created(){localStorage.getItem("loggedIn")=="true"?this.loggedIn=!0:(localStorage.setItem("loggedIn","false"),this.loggedIn=!1)},computed:{currentView(){return routes[this.currentPath.slice(1)||"/"]||NotFound}},mounted(){window.addEventListener("hashchange",()=>{this.currentPath=window.location.hash}),window.addEventListener("loginEvent",s=>{this.loggedIn=localStorage.getItem("loggedIn")})},methods:{testButton(){console.log("testButton clicked");var s=JSON.stringify({name:"testPresetName",data:"testPresetData",creator_id:"1"});fetch("http://localhost:5000/presets/new",{method:"POST",headers:{"Content-Type":"application/json"},body:s}).then(e=>e.json()).then(e=>{console.log("Success:",e)}).catch(e=>{console.error("Error:",e)})},async startACM(){await this.ACM.startAudio()}}},_withScopeId$2=s=>(pushScopeId("data-v-3c9b4529"),s=s(),popScopeId(),s),_hoisted_1$3={class:"toolbar",style:{"user-select":"none"}},_hoisted_2$3=_withScopeId$2(()=>createBaseVNode("div",{class:"toolbar-title"},"SynthA!",-1)),_hoisted_3$3={class:"toolbar-actions"},_hoisted_4$3={class:"accountSection"},_hoisted_5$3=_withScopeId$2(()=>createBaseVNode("div",{class:"version"},"v1.0",-1));function _sfc_render$3(s,e,t,n,o,r){const a=resolveComponent("router-link"),c=resolveComponent("router-view");return openBlock(),createElementBlock(Fragment,null,[createBaseVNode("div",_hoisted_1$3,[_hoisted_2$3,createBaseVNode("div",_hoisted_3$3,[createVNode(a,{to:"/syntha/"},{default:withCtx(()=>[createTextVNode("Home")]),_:1}),createVNode(a,{onClick:r.startACM,to:"/syntha/synth"},{default:withCtx(()=>[createTextVNode("Playground")]),_:1},8,["onClick"]),createVNode(a,{to:"/syntha/workshop"},{default:withCtx(()=>[createTextVNode("Library")]),_:1}),createVNode(a,{to:"/syntha/docs"},{default:withCtx(()=>[createTextVNode("Documentation")]),_:1}),createVNode(a,{to:"/syntha/about"},{default:withCtx(()=>[createTextVNode("About")]),_:1})]),createBaseVNode("div",_hoisted_4$3,[o.store.loggedIn==!1?(openBlock(),createBlock(a,{key:0,to:"/syntha/login"},{default:withCtx(()=>[createTextVNode("Login")]),_:1})):createCommentVNode("",!0),o.store.loggedIn?(openBlock(),createBlock(a,{key:1,to:"/syntha/account"},{default:withCtx(()=>[createTextVNode("Account")]),_:1})):createCommentVNode("",!0)]),_hoisted_5$3]),createBaseVNode("main",null,[createBaseVNode("div",null,[createVNode(c)])])],64)}const App=_export_sfc(_sfc_main$3,[["render",_sfc_render$3],["__scopeId","data-v-3c9b4529"]]),Account_vue_vue_type_style_index_0_scoped_46283899_lang="",_sfc_main$2={data(){return{store,glowcolor:"rgb(112, 224, 255)",userName:""}},mounted(){let s=localStorage.getItem("userId");this.getUserName(s)},methods:{getUserName(s){const e={"Content-Type":"application/json"};fetch("https://syntha-backend-fef92fb3e9de.herokuapp.com/users/"+s,{method:"GET",headers:e}).then(t=>t.json()).then(t=>{console.log(t),this.userName=t.result.username})},logout(){localStorage.setItem("loggedIn","false"),store.logout(),this.$router.push("/login")},openNav(){document.getElementById("myNav").style.width="100%"},closeNav(){document.getElementById("myNav").style.width="0%"},confirmSubmit(){var s=confirm("Are you sure you wish to continue? Deleting your account is permanent.");return!!s},logout(){localStorage.setItem("loggedIn","false"),this.$router.push("/syntha/")}},created(){localStorage.getItem("loggedIn")=="true"?this.loggedIn=!0:this.loggedIn=!1}},__injectCSSVars__=()=>{useCssVars(s=>({"45047ed3":s.glowcolor}))},__setup__=_sfc_main$2.setup;_sfc_main$2.setup=__setup__?(s,e)=>(__injectCSSVars__(),__setup__(s,e)):__injectCSSVars__;const _withScopeId$1=s=>(pushScopeId("data-v-46283899"),s=s(),popScopeId(),s),_hoisted_1$2={id:"myNav",class:"overlay"},_hoisted_2$2={class:"overlay-content"},_hoisted_3$2=_withScopeId$1(()=>createBaseVNode("br",null,null,-1)),_hoisted_4$2=_withScopeId$1(()=>createBaseVNode("br",null,null,-1)),_hoisted_5$2=_withScopeId$1(()=>createBaseVNode("br",null,null,-1)),_hoisted_6$2=_withScopeId$1(()=>createBaseVNode("br",null,null,-1)),_hoisted_7$1=_withScopeId$1(()=>createBaseVNode("br",null,null,-1)),_hoisted_8$1={class:"mainDivAbout"},_hoisted_9$1={class:"hey"},_hoisted_10$1=_withScopeId$1(()=>createBaseVNode("h2",{class:"hey",style:{"font-size":"18px"}},"Hope you're enjoying SynthA! :) ",-1));function _sfc_render$2(s,e,t,n,o,r){const a=resolveComponent("router-link");return openBlock(),createElementBlock(Fragment,null,[createBaseVNode("div",_hoisted_1$2,[createBaseVNode("a",{href:"javascript:void(0)",class:"closebtn",onClick:e[0]||(e[0]=c=>r.closeNav())},"×"),createBaseVNode("div",_hoisted_2$2,[createVNode(a,{to:"/syntha/"},{default:withCtx(()=>[createTextVNode("HOME")]),_:1}),_hoisted_3$2,createVNode(a,{to:"/syntha/workshop"},{default:withCtx(()=>[createTextVNode("LIBRARY")]),_:1}),_hoisted_4$2,createVNode(a,{to:"/syntha/account"},{default:withCtx(()=>[createTextVNode("ACCOUNT")]),_:1}),_hoisted_5$2,createVNode(a,{to:"/syntha/docs"},{default:withCtx(()=>[createTextVNode("DOCUMENTATION")]),_:1}),_hoisted_6$2,createVNode(a,{to:"/syntha/about"},{default:withCtx(()=>[createTextVNode("ABOUT")]),_:1}),_hoisted_7$1])]),createBaseVNode("div",_hoisted_8$1,[createBaseVNode("span",{class:"weirdAssButton",style:{"font-size":"30px",cursor:"pointer"},onClick:e[1]||(e[1]=c=>r.openNav())},"☰"),createVNode(a,{class:"homebtn",to:"/syntha/",style:{"text-decoration":"none"}},{default:withCtx(()=>[createTextVNode("☖")]),_:1}),createBaseVNode("h1",_hoisted_9$1," Hey "+toDisplayString(o.userName)+"!",1),_hoisted_10$1,createBaseVNode("button",{class:"glowing-btn logoutButton",onClick:e[2]||(e[2]=(...c)=>r.logout&&r.logout(...c))},">LOGOUT<")])],64)}const Account=_export_sfc(_sfc_main$2,[["render",_sfc_render$2],["__scopeId","data-v-46283899"]]),Documentation_vue_vue_type_style_index_0_scoped_75919d51_lang="",_sfc_main$1={},_withScopeId=s=>(pushScopeId("data-v-75919d51"),s=s(),popScopeId(),s),_hoisted_1$1=_withScopeId(()=>createBaseVNode("header",null,null,-1)),_hoisted_2$1={class:"docsMain"},_hoisted_3$1={class:"docsDiv"},_hoisted_4$1=_withScopeId(()=>createBaseVNode("h1",{class:"docsMainTitle"}," SynthA! - User documentation ",-1)),_hoisted_5$1=_withScopeId(()=>createBaseVNode("h2",{class:"docsSubTitle"}," How do I operate that thing?! ",-1)),_hoisted_6$1={class:"docsContent"},_hoisted_7=_withScopeId(()=>createBaseVNode("br",null,null,-1)),_hoisted_8=["src"],_hoisted_9=_withScopeId(()=>createBaseVNode("div",{class:"docsImageCaption"},'Figure 1: the "Playground" page',-1)),_hoisted_10=_withScopeId(()=>createBaseVNode("br",null,null,-1)),_hoisted_11=["src"],_hoisted_12=_withScopeId(()=>createBaseVNode("div",{class:"docsImageCaption"},"Figure 2: the Module Scaffold",-1)),_hoisted_13=_withScopeId(()=>createBaseVNode("br",null,null,-1)),_hoisted_14=_withScopeId(()=>createBaseVNode("ol",null,[createBaseVNode("li",null,"Click on the Basic Oscillator (basic_osc) entry to add it to the playground."),createBaseVNode("br"),createBaseVNode("li",null,"Now click on the I/O category in the scaffold and add an Audio Output (audio_out)."),createBaseVNode("br"),createBaseVNode("li",null,"(Optional) Lower your volume if it is high"),createBaseVNode("br"),createBaseVNode("li",null,'Click on the "OUT" port of the oscillator module and drag it to the "OUT" port of the audio out module. You should be hearing sound!'),createBaseVNode("br"),createBaseVNode("li",null,"Play around with the frequency knob of the oscillator to hear the frequency change. Have fun!")],-1)),_hoisted_15=_withScopeId(()=>createBaseVNode("br",null,null,-1)),_hoisted_16=_withScopeId(()=>createBaseVNode("br",null,null,-1)),_hoisted_17=["src"],_hoisted_18=_withScopeId(()=>createBaseVNode("div",{class:"docsImageCaption"},"Figure 3: Moving a module",-1)),_hoisted_19=_withScopeId(()=>createBaseVNode("h2",{class:"docsSubTitle"}," Recording and exporting audio ",-1)),_hoisted_20=_withScopeId(()=>createBaseVNode("br",null,null,-1)),_hoisted_21=_withScopeId(()=>createBaseVNode("h2",{class:"docsSubTitle"}," Saving / Loading presets ",-1)),_hoisted_22=_withScopeId(()=>createBaseVNode("br",null,null,-1)),_hoisted_23=_withScopeId(()=>createBaseVNode("br",null,null,-1)),_hoisted_24=_withScopeId(()=>createBaseVNode("h2",{class:"docsSubTitle"}," Modules ",-1)),_hoisted_25=_withScopeId(()=>createBaseVNode("br",null,null,-1)),_hoisted_26=_withScopeId(()=>createBaseVNode("br",null,null,-1)),_hoisted_27=_withScopeId(()=>createBaseVNode("h3",null,"Basic Oscillator",-1)),_hoisted_28=["src"],_hoisted_29=_withScopeId(()=>createBaseVNode("br",null,null,-1)),_hoisted_30=_withScopeId(()=>createBaseVNode("br",null,null,-1)),_hoisted_31=_withScopeId(()=>createBaseVNode("br",null,null,-1)),_hoisted_32=_withScopeId(()=>createBaseVNode("br",null,null,-1)),_hoisted_33=_withScopeId(()=>createBaseVNode("br",null,null,-1)),_hoisted_34=["src"],_hoisted_35=_withScopeId(()=>createBaseVNode("h3",null,"Theremin",-1)),_hoisted_36=["src"],_hoisted_37=_withScopeId(()=>createBaseVNode("br",null,null,-1)),_hoisted_38=_withScopeId(()=>createBaseVNode("h3",null,"Filter",-1)),_hoisted_39=["src"],_hoisted_40=_withScopeId(()=>createBaseVNode("br",null,null,-1)),_hoisted_41=_withScopeId(()=>createBaseVNode("h3",null,"Reverb",-1)),_hoisted_42=["src"],_hoisted_43=_withScopeId(()=>createBaseVNode("br",null,null,-1)),_hoisted_44=_withScopeId(()=>createBaseVNode("h3",null,"VCA",-1)),_hoisted_45=["src"],_hoisted_46=_withScopeId(()=>createBaseVNode("h3",null,"Audio Out",-1)),_hoisted_47=["src"],_hoisted_48=_withScopeId(()=>createBaseVNode("h3",null,"Midi In",-1)),_hoisted_49=["src"],_hoisted_50=_withScopeId(()=>createBaseVNode("br",null,null,-1)),_hoisted_51=["src"],_hoisted_52=_withScopeId(()=>createBaseVNode("br",null,null,-1)),_hoisted_53=_withScopeId(()=>createBaseVNode("br",null,null,-1)),_hoisted_54=_withScopeId(()=>createBaseVNode("br",null,null,-1)),_hoisted_55=_withScopeId(()=>createBaseVNode("h3",null,"That's all for now, thanks for taking time to read our documentation. We hope you enjoy SynthA!",-1));function _sfc_render$1(s,e){return openBlock(),createElementBlock(Fragment,null,[_hoisted_1$1,createBaseVNode("main",_hoisted_2$1,[createBaseVNode("div",_hoisted_3$1,[_hoisted_4$1,_hoisted_5$1,createBaseVNode("div",_hoisted_6$1,[createTextVNode(" Welcome to the docs page! Here you will learn all about operating the SynthA! modular-style synth. "),_hoisted_7,createTextVNode('To begin you should of course click the "Playground" button on the top header. You should be led to the page in Figure 1. '),createBaseVNode("img",{class:"docsImage",style:{width:"50%"},src:"./src/assets/docs/playground.jpg",alt:`Figure 1: A screenshot of the playground page of SynthA!. \r
        The page is empty and displays a top bar with the buttons home, \r
        save and load, a notebook-style background for the page and a \r
        bottom bar with a record and a stop button.`},null,8,_hoisted_8),_hoisted_9,createTextVNode(` For now let's not worry about any other button but the arrow on the left. Click that to open the Module Scaffold. The Scaffold contains all the modules you can add to the synthesizer. Click on a category to expand its contents; for example click on "SYNTH". `),_hoisted_10,createTextVNode(" Now the page should look something like Figure 2. "),createBaseVNode("img",{class:"docsImage",style:{width:"50%"},src:"./src/assets/docs/scaffold.jpg",alt:`A screenshot of the playground page of SynthA!. The module scaffold is visible\r
        on the left side of the page. The scaffold has the synth category expanded\r
        and two modules, basic oscillator and theremin, are visible with their \r
        icons\r
        `},null,8,_hoisted_11),_hoisted_12,createTextVNode(" Let's now create a basic setup."),_hoisted_13,_hoisted_14,_hoisted_15,_hoisted_16,createTextVNode(" You can click and drag on the playground background to move the canvas around (useful especially if you have many modules). You can click and drag a module by its top part (see Figure 3) to move it around. "),createBaseVNode("img",{class:"docsImage",style:{width:"50%"},src:"./src/assets/docs/moduleMove.jpg",alt:"Image of the playground with a Theremin module with a red circle around its top part"},null,8,_hoisted_17),_hoisted_18,_hoisted_19,createTextVNode(" Once you have a setup you like, you can record and export audio by using the two buttons on the bottom of the interface. Press the left button (the one with a circle) to start a recording, then press the right button (the one with a square) to stop a recording and automatically export all audio that was recorded since you pressed the other button. "),_hoisted_20,createTextVNode("SynthA! exports audio in 16 bit .wav files. "),_hoisted_21,createTextVNode(" If you are happy with a setup you have created and want others to be able to play with it as well, then look no further."),_hoisted_22,createTextVNode(' By pressing the "save" button on the toolbar at the top of the interface you will be asked to input a name for the preset and then that will be published on our workshop/library. '),_hoisted_23,createTextVNode('You can load existing presets in two ways: by pressing the "Load" button in the Playground, or by going to the Library page through any other page. '),_hoisted_24,createTextVNode(" In this section we will briefly present each and every module that is available at the moment in SynthA! "),_hoisted_25,createTextVNode("All modules can be accessed through the Scaffold in the Playground. "),_hoisted_26,_hoisted_27,createBaseVNode("img",{class:"docsImage",style:{width:"15%"},src:"./src/assets/docs/mod_osc.jpg",alt:"Image of the oscillator module, containing the following knobs: frequency, attack, decay, sustain, release, and the following ports: frequency, out. The module has a green background"},null,8,_hoisted_28),createTextVNode(" As the name suggests, the Basic Oscillator is in fact a basic oscillator. It can produce one among the 4 main wave shapes (sine, triangle, sawtooth, square), chosen with a selector menu. "),_hoisted_29,createTextVNode('The oscillator is powered by a Tone.Oscillator object, connected to an envelope that can alter the way its amplitude evolves over time. The envelope only works if you have currently connected a MidiIn module to the "FREQ" port. '),_hoisted_30,createTextVNode(" An envelope works in the following way: imagine you're pressing a key on a keyboard to play a sound. You can have the sound play immediately with full volume (like hitting a snaredrum), or slowly increase over time (like playing a violin); that is what the attack controls, the time it takes for a sound to reach its peak. The attack is followed by a decay, which is a phase where the volume goes down until a certain given level (the sustain level). The sustain level specifies the level the sound should play at as you hold a key, after the attack and decay phases are finished. "),_hoisted_31,createTextVNode(" Finally as you release a key, you might not want the sound to disappear immediately. The release is there for that: it specifies how long it will take for the volume to reach complete silence after you release a key. "),_hoisted_32,createTextVNode(" Visualise them this way: "),_hoisted_33,createBaseVNode("img",{class:"docsImage",style:{width:"50%"},src:"./src/assets/docs/envelope.jpg",alt:"Graph of an envelope with its four phases."},null,8,_hoisted_34),_hoisted_35,createBaseVNode("img",{class:"docsImage",style:{width:"25%"},src:"./src/assets/docs/mod_theremin.jpg",alt:"Image of the theremin module. It is a black square with a white circle (indicator) that can be moved around to change frequency and amplitude. It contains one port - the audio output"},null,8,_hoisted_36),createTextVNode(" The Theremin module is more straightforward. When connected to an audio output through a chain, you can move the white indicator in the black square by clicking and dragging to modify the output frequency and amplitude. "),_hoisted_37,createTextVNode("The Theremin is at its core another Tone.Oscillator object, this time containing some partials and a Tone.LFO object (Low Frequency Oscillator - basically it outputs an oscillating signal that is used to control a parameter) modulating its frequency. The partials have been chosen through experimentation and are the first three (the first one being the fundamental frequency), with the following amplitudes: [1, 0.6, 0.2]. "),_hoisted_38,createBaseVNode("img",{class:"docsImage",style:{width:"20%"},src:"./src/assets/docs/mod_filter.jpg",alt:"Image of the filter module, a brownish one containing knobs for frequency and q-factor and a selector for filter type. It contains audio input and output ports"},null,8,_hoisted_39),createTextVNode(" The Filter module takes a signal as input and produces a filtered version of it as output. The three basic filters (lowpass, highpass and bandpass) are available. "),_hoisted_40,createTextVNode('You can control the cutoff frequency of the filter ("until where it works") and the q-factor (also known as resonance in some applications) through knobs. The three filter types basically work in this way: the lowpass passes through sounds below the cutoff frequency, the highpass those above the cutoff frequency, the bandpass is centered at the cutoff frequency and passes sounds in a certain range around it (controlled with the q-factor). It is implemented with a single Tone.Filter object. '),_hoisted_41,createBaseVNode("img",{class:"docsImage",style:{width:"15%"},src:"./src/assets/docs/mod_reverb.jpg",alt:"Image of the filter module, a purple one containing a knob for the dry/wet selector. It contains audio input and output ports"},null,8,_hoisted_42),createTextVNode(' The Reverb module is the easiest to understand. Connect any module to it and eventually route it to an audio output and it will produce a "reverbed" version of the input. The balance between the pure reverberant sound ("WET" signal) and the original input sound ("DRY" signal) can be controlled with the DRY/WET knob. It is implemented with a Tone.Reverb object. '),_hoisted_43,createTextVNode('Fun fact for nerds: handling changes to the decay time with Tone is a pain, since it recreates the reverb every time there is a new decacy value being set. For this reason it is not possible to control the decay time of the reverb ("how big the room sounds") :| '),_hoisted_44,createBaseVNode("img",{class:"docsImage",style:{width:"20%"},src:"./src/assets/docs/mod_gain.jpg",alt:"Image of the VCA module. It contains input and output ports and a gain knob to control the volume"},null,8,_hoisted_45),createTextVNode(` The VCA (Voltage Controlled Amplifier) module lets you amplify or attenuate an input sound with the gain knob. The module is not actually voltage controlled but we kept the name since that's how these modules are usually called in real modular synths. It is implemented as a Tone.Multiply object, that takes the input Tone.Signal and multiplies by the gain "factor", then sends the result out. `),_hoisted_46,createBaseVNode("img",{class:"docsImage",style:{width:"20%"},src:"./src/assets/docs/mod_audio.jpg",alt:"Image of the audio out module, simply containing one port you can connect modules to send audio to speakers"},null,8,_hoisted_47),createTextVNode(" The Audio Out module is pretty simple. You connect anything to it and it will send the audio to your audio device. It is not actually a real Tone module, it simply takes whatever module connects to its input and calls Tone.toDestination() on it. "),_hoisted_48,createBaseVNode("img",{class:"docsImage",style:{width:"30%"},src:"./src/assets/docs/mod_midi.jpg",alt:"Image of the MidiIn module. it contains one output port for voice/octave, and a keyboard showing the user what note they're playing"},null,8,_hoisted_49),createTextVNode(' The MidiIn module (improperly named) allows one to control the frequency and envelope of (for now only) the Basic Oscillator module. Connect it to a oscillator "FREQ" port to see the magic happen! '),_hoisted_50,createTextVNode("Keystrokes are mapped to notes in the following way: "),createBaseVNode("img",{class:"docsImage",style:{width:"50%"},src:"./src/assets/docs/mod_midi_annotated.jpg",alt:"MidiIn module with associated keystrokes."},null,8,_hoisted_51),_hoisted_52,createTextVNode(`You can use "z" and "x" to change the current octave (don't worry if you don't immediately see feedback on the module itself). Once again this module does not correspond to a Tone object, it just tells whatever module it is connected to to play a certain note (start its envelope if needed). `),_hoisted_53,_hoisted_54,_hoisted_55])])])],64)}const Documentation=_export_sfc(_sfc_main$1,[["render",_sfc_render$1],["__scopeId","data-v-75919d51"]]);class AudioNode{constructor(e,t){this.id=e,this.synthNode=null,this.internalChain=[],this.type=t,this.next={},this.prev={},this.isToDestination=!1,this.createSynthNode(t)}createSynthNode(e){if(e==null){console.log("passed a null module type, returning..."),console.log("Note this is probably because the module type doesn't need initialisation");return}this.handleNodeSetup(e)}setNext(e,t){this.next[t]=e,e.type=="AudioOut"?this.sendOutToDestination():e.type!="MidiIn"&&this.type!="MidiIn"&&this.synthNode.connect(e.synthNode)}setPrevious(e,t){this.prev[t]=e,e.type=="MidiIn"&&this.type=="Oscillator"&&(this.synthNode.stop(),this.synthNode.connect(this.internalChain[0]).start(),this.isToDestination&&(this.synthNode.disconnect(getDestination()),this.internalChain[0].toDestination()))}handleNodeSetup(e){switch(e){case"Oscillator":this.synthNode=new Tone[e],this.synthNode.type="sine",this.synthNode.set({frequency:"C4"});var t=new AmplitudeEnvelope({attack:.1,decay:1,sustain:.5,release:.5});t.toDestination(),this.internalChain.push(t),this.synthNode.start(),console.log("OSCILLATING",this.synthNode);break;case"Theremin":this.synthNode=new Oscillator,this.synthNode.type="sine",this.synthNode.set({frequency:"C4"}),this.synthNode.partials=[1,.6,.2];var n=new LFO(7,this.synthNode.frequency.value-10,this.synthNode.frequency.value+10).start();n.connect(this.synthNode.frequency),this.internalChain.push(n),this.synthNode.start();break;case"Reverb":this.synthNode=new Tone[e],this.synthNode.set({decay:.5,wet:.5});break;case"Gain":this.synthNode=new Multiply(1);break;case"Filter":this.synthNode=new Filter$2(3e3,"lowpass");break}}handleNodeRemoval(){switch(this.type){case"AudioOut":for(let e in this.prev)this.prev[e].synthNode.disconnect(),this.prev[e].isToDestination=!1;return;case"MidiIn":return}if(console.log(this.synthNode),this.synthNode.dispose(),this.internalChain.length>0)for(let e=0;e<this.internalChain.length;e++)this.internalChain[e].dispose()}updateParameter(e,t){if(this.type=="Oscillator"||this.type=="Filter"){if(e.substring(0,4)=="ADSR"){this.internalChain[0].set({[e.substring(4,e.length).toLowerCase()]:t});return}if(e=="type"){this.synthNode.type=t;return}}if(this.synthNode.hasOwnProperty(e)){if(e=="volume"){this.synthNode.volume.value=t;return}if(this.type=="Theremin"&&e=="frequency"){this.internalChain[0].min=t-t/20,this.internalChain[0].max=t+t/20;return}this.synthNode.set({[e]:t})}else{console.log(this.synthNode),console.log(this.type+" does not have the field",e);return}}hasConnectionsOnPort(e){return this.next[e]!=null||this.prev[e]!=null||this.next[e]!=null||this.prev[e]!=null}removeConnectionsWith(e){for(let t in this.next)this.next[t]==e&&delete this.next[t];for(let t in this.prev)this.prev[t]==e&&(e.type=="MidiIn"&&this.type=="Oscillator"&&(this.synthNode.stop(),this.synthNode.disconnect(this.internalChain[0]),this.synthNode.start()),delete this.prev[t])}keyPlayed(e){console.log("KEY PLAYED",e),!(e==null||e==null||isNaN(e))&&(this.type=="MidiIn"&&this.next[0]!=null&&this.next[0]!=null&&this.next[0].keyPlayed(e),this.type=="Oscillator"&&(this.synthNode.volume.value=0,this.internalChain.length>0&&this.internalChain[0].triggerAttack(),this.synthNode.set({frequency:Frequency(e,"midi").toFrequency()})))}keyReleased(e){this.type=="MidiIn"&&this.next[0]!=null&&this.next[0]!=null&&this.next[0].keyReleased(e),this.type=="Oscillator"&&(this.internalChain.length>0?this.internalChain[0].triggerRelease():this.synthNode.volume.value=-200)}sendOutToDestination(){this.synthNode.toDestination(),this.isToDestination=!0,this.type=="Oscillator"&&this.prev[0]!=null&&this.prev[0]!=null&&this.prev[0].type=="MidiIn"&&this.synthNode.disconnect(getDestination())}print(){console.log("id: "+this.id+" type: "+this.type)}getData(){var e={};switch(this.type){case"Oscillator":e.frequency=this.synthNode.frequency.value,e.attack=this.internalChain[0].attack,e.decay=this.internalChain[0].decay,e.sustain=this.internalChain[0].sustain,e.release=this.internalChain[0].release,e.type=this.synthNode.type;break;case"Theremin":e.volume=this.synthNode.volume.value,e.frequency=this.synthNode.frequency.value;break;case"Reverb":e.dry_wet=this.synthNode.wet;break;case"Filter":e.type=this.synthNode.type;break;case"VCA":e.gain=this.synthNode.factor;break}return{id:this.id,type:this.type,param_vals:e,next:this.next,prev:this.prev,isToDestination:this.isToDestination}}setData(e,t){console.log(t.next),this.isToDestination=t.isToDestination;var n=t.param_vals;switch(e){case"Oscillator":this.synthNode.frequency.value=n.frequency,this.internalChain[0].attack=n.attack,this.internalChain[0].decay=n.decay,this.internalChain[0].sustain=n.sustain,this.internalChain[0].release=n.release,this.synthNode.type=n.type;break;case"Theremin":this.synthNode.volume.value=n.volume,this.synthNode.frequency.value=n.frequency;break;case"Reverb":this.synthNode.wet.value=n.dry_wet;break;case"Filter":this.synthNode.type=n.type;break;case"VCA":this.synthNode.factor=n.gain;break}}}const BasicOsc="Oscillator",AudioOut="AudioOut",MidiIn="MidiIn",Theremin="Theremin",Reverb="Reverb",VCA="Gain",Filter="Filter",type_to_class_json={BasicOsc,AudioOut,MidiIn,Theremin,Reverb,VCA,Filter};class AudioChainManager{constructor(e){this.appName=e,this.modules=[],this.audioStarted=!1,this.outputRecorder=new Recorder}addNode(e,t){let n=type_to_class_json[t];if(n==null){console.log("ERROR: "+t+" is not a valid type. Not adding module");return}let o=new AudioNode(e,n);this.modules.push(o),console.log("adding node "+e+" of type "+n)}removeNode(e){let t=this.findNode(e);if(t==null){console.log("removeNode ERROR: could not find node with id "+e);return}let n=this.modules[t];this.removeAllConnections(n),n.handleNodeRemoval(),this.modules.splice(t,1),console.log("removed")}removeAllConnections(e){for(let t=0;t<this.modules.length;t++)this.modules[t].removeConnectionsWith(e)}connectNodes(e,t,n,o){let r=this.findNode(e),a=this.findNode(t);if(r==null||a==null){console.log("ERROR: could not find node with id "+e+" or "+t);return}let c=this.modules[r],l=this.modules[a];c.setNext(this.modules[a],n),l.setPrevious(this.modules[r],o)}findNode(e){for(let t=0;t<this.modules.length;t++)if(this.modules[t].id==e)return t;return console.log("ERROR: could not find node with id "+e),null}updateModuleParameter(e,t,n){let o=this.findNode(e);if(o==null){console.log("ERROR: could not find node with id "+e);return}this.modules[o].updateParameter(t,n)}printModules(){console.log("printing modules...");for(let e=0;e<this.modules.length;e++)console.log(this.modules[e].print())}async startAudio(){this.audioStarted||await start().then(console.log("Hello party people, this is your captain ACM speaking. The audio is ready"),this.audioStarted=!0)}checkConnectionValidity(e,t,n,o){let r=this.findNode(e),a=this.findNode(t),c=this.modules[r],l=this.modules[a];return console.log("fromMod: "+c.type+" toMod: "+l.type),!this.hasConnections(r,n)&&!this.hasConnections(a,o)}hasConnections(e,t){return console.log(this.modules[e]),!!this.modules[e].hasConnectionsOnPort(t)}keyPlayed(e,t){this.modules[this.findNode(t)].keyPlayed(e)}keyReleased(e,t){this.modules[this.findNode(t)].keyReleased(e)}testACM(){console.log(this.appName+" ACM tested successfully")}getData(){let e={};for(let n=0;n<this.modules.length;n++)e[n]=this.modules[n].getData();return{appName:this.appName,modules:e}}initializeFromPreset(e){let t=e.modules;for(let o=0;o<this.modules.length;o++)this.removeNode(this.modules[o].id);this.modules=[],console.log(t);for(let o in t){let r=new AudioNode(t[o].id,t[o].type);r.setData(t[o].type,t[o]),this.modules.push(r)}let n=0;for(let o in t){let r=t[o].next;for(let c in r){let l=r[c].id,u=this.findNode(l);this.modules[n].setNext(this.modules[u],c)}let a=t[o].prev;for(let c in a){let l=a[c].id,u=this.findNode(l);this.modules[n].setPrevious(this.modules[u],c)}n++}console.log(this.modules)}async recordAudio(){Destination.connect(this.outputRecorder),this.outputRecorder.start()}async stopRecordAudio(){const e=await this.outputRecorder.stop(),t=URL.createObjectURL(e),n=document.createElement("a");n.download="recording.wav",n.href=t,n.click(),Destination.disconnect(this.outputRecorder)}}const Quiz_vue_vue_type_style_index_0_scoped_0b8f9307_lang="",_sfc_main={data(){return{currQuestionNo:0,totalPoints:0,showResults:!1,result:"",results:{0:"You are a Oscillator!",1:"You are a Theremin!",2:"You are a Filter!",3:"You are a Reverb!"},questions:{0:{question:"Are you feeling wavy today?",answers:{0:"Yes",1:"No",2:"Maybe",3:"~( ˘▾˘~)"}},1:{question:"Feeling electromagnetic maybe?",answers:{0:"Yes!",1:"Absolutely!",2:"Nope",3:"( ͡°⁄ ⁄ ͜⁄ ⁄ʖ⁄ ⁄ ͡°) "}},2:{question:"Do you like to build dams?",answers:{0:"What is a dam?",1:"No I hate dams",2:"<Free answer>",3:"I'm a beaver ¯_(ツ)_/¯"}},3:{question:"Question?",answers:{0:"Yes",1:"Question?",2:"So me",3:"Nope"}}}}},methods:{nextQuestion(s){this.totalPoints+=10*s,this.currQuestionNo<Object.keys(this.questions).length-1?this.currQuestionNo+=1:(console.log(this.totalPoints),this.result=this.results[Math.floor(this.totalPoints/40).toString()],this.showResults=!0)}},created(){localStorage.getItem("loggedIn")=="true"?this.loggedIn=!0:this.loggedIn=!1}},_hoisted_1={class:"centralDivQuiz"},_hoisted_2={class:"centralDiv"},_hoisted_3={key:0,style:{position:"absolute",left:"50%",top:"30%",color:"aliceblue"}},_hoisted_4={key:1},_hoisted_5={key:2,class:"centralDiv"},_hoisted_6=["onClick"];function _sfc_render(s,e,t,n,o,r){return openBlock(),createElementBlock("div",_hoisted_1,[createBaseVNode("div",_hoisted_2,[o.showResults?(openBlock(),createElementBlock("h1",_hoisted_3,toDisplayString(o.result),1)):createCommentVNode("",!0),o.showResults==!1?(openBlock(),createElementBlock("h1",_hoisted_4,toDisplayString(o.questions[o.currQuestionNo].question),1)):createCommentVNode("",!0),o.showResults==!1?(openBlock(),createElementBlock("div",_hoisted_5,[(openBlock(!0),createElementBlock(Fragment,null,renderList(o.questions[o.currQuestionNo].answers,(a,c)=>(openBlock(),createElementBlock("button",{key:c,onClick:l=>r.nextQuestion(c)},toDisplayString(a),9,_hoisted_6))),128))])):createCommentVNode("",!0)])])}const Quiz=_export_sfc(_sfc_main,[["render",_sfc_render],["__scopeId","data-v-0b8f9307"]]),router=createRouter({history:createWebHistory(),routes:[{path:"/syntha/",component:Home},{path:"/syntha/about",component:About},{path:"/syntha/synth/:presetId?",component:Playground},{path:"/syntha/login",component:Login},{path:"/syntha/account",component:Account},{path:"/syntha/workshop",component:Workshop},{path:"/syntha/docs",component:Documentation},{path:"/syntha/quiz",component:Quiz},{path:"/syntha/:pathMatch(.*)*",name:"not-found",component:NotFound}]});var ACM=new AudioChainManager("SynthA!"),octave=4;const app=createApp(App);app.provide("ACM",ACM);app.provide("oct",octave);app.use(router);app.mount("#app");
