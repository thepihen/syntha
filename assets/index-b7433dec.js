(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))s(o);new MutationObserver(o=>{for(const r of o)if(r.type==="childList")for(const a of r.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&s(a)}).observe(document,{childList:!0,subtree:!0});function t(o){const r={};return o.integrity&&(r.integrity=o.integrity),o.referrerPolicy&&(r.referrerPolicy=o.referrerPolicy),o.crossOrigin==="use-credentials"?r.credentials="include":o.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function s(o){if(o.ep)return;o.ep=!0;const r=t(o);fetch(o.href,r)}})();function makeMap(n,e){const t=Object.create(null),s=n.split(",");for(let o=0;o<s.length;o++)t[s[o]]=!0;return e?o=>!!t[o.toLowerCase()]:o=>!!t[o]}const EMPTY_OBJ={},EMPTY_ARR=[],NOOP=()=>{},NO=()=>!1,onRE=/^on[^a-z]/,isOn=n=>onRE.test(n),isModelListener=n=>n.startsWith("onUpdate:"),extend=Object.assign,remove=(n,e)=>{const t=n.indexOf(e);t>-1&&n.splice(t,1)},hasOwnProperty$1=Object.prototype.hasOwnProperty,hasOwn=(n,e)=>hasOwnProperty$1.call(n,e),isArray$2=Array.isArray,isMap=n=>toTypeString(n)==="[object Map]",isSet=n=>toTypeString(n)==="[object Set]",isDate=n=>toTypeString(n)==="[object Date]",isFunction$1=n=>typeof n=="function",isString$1=n=>typeof n=="string",isSymbol=n=>typeof n=="symbol",isObject$1=n=>n!==null&&typeof n=="object",isPromise=n=>isObject$1(n)&&isFunction$1(n.then)&&isFunction$1(n.catch),objectToString=Object.prototype.toString,toTypeString=n=>objectToString.call(n),toRawType=n=>toTypeString(n).slice(8,-1),isPlainObject=n=>toTypeString(n)==="[object Object]",isIntegerKey=n=>isString$1(n)&&n!=="NaN"&&n[0]!=="-"&&""+parseInt(n,10)===n,isReservedProp=makeMap(",key,ref,ref_for,ref_key,onVnodeBeforeMount,onVnodeMounted,onVnodeBeforeUpdate,onVnodeUpdated,onVnodeBeforeUnmount,onVnodeUnmounted"),cacheStringFunction=n=>{const e=Object.create(null);return t=>e[t]||(e[t]=n(t))},camelizeRE=/-(\w)/g,camelize=cacheStringFunction(n=>n.replace(camelizeRE,(e,t)=>t?t.toUpperCase():"")),hyphenateRE=/\B([A-Z])/g,hyphenate=cacheStringFunction(n=>n.replace(hyphenateRE,"-$1").toLowerCase()),capitalize=cacheStringFunction(n=>n.charAt(0).toUpperCase()+n.slice(1)),toHandlerKey=cacheStringFunction(n=>n?`on${capitalize(n)}`:""),hasChanged=(n,e)=>!Object.is(n,e),invokeArrayFns=(n,e)=>{for(let t=0;t<n.length;t++)n[t](e)},def=(n,e,t)=>{Object.defineProperty(n,e,{configurable:!0,enumerable:!1,value:t})},looseToNumber=n=>{const e=parseFloat(n);return isNaN(e)?n:e};let _globalThis;const getGlobalThis=()=>_globalThis||(_globalThis=typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof window<"u"?window:typeof global<"u"?global:{});function normalizeStyle(n){if(isArray$2(n)){const e={};for(let t=0;t<n.length;t++){const s=n[t],o=isString$1(s)?parseStringStyle(s):normalizeStyle(s);if(o)for(const r in o)e[r]=o[r]}return e}else{if(isString$1(n))return n;if(isObject$1(n))return n}}const listDelimiterRE=/;(?![^(]*\))/g,propertyDelimiterRE=/:([^]+)/,styleCommentRE=/\/\*[^]*?\*\//g;function parseStringStyle(n){const e={};return n.replace(styleCommentRE,"").split(listDelimiterRE).forEach(t=>{if(t){const s=t.split(propertyDelimiterRE);s.length>1&&(e[s[0].trim()]=s[1].trim())}}),e}function normalizeClass(n){let e="";if(isString$1(n))e=n;else if(isArray$2(n))for(let t=0;t<n.length;t++){const s=normalizeClass(n[t]);s&&(e+=s+" ")}else if(isObject$1(n))for(const t in n)n[t]&&(e+=t+" ");return e.trim()}const specialBooleanAttrs="itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly",isSpecialBooleanAttr=makeMap(specialBooleanAttrs);function includeBooleanAttr(n){return!!n||n===""}function looseCompareArrays(n,e){if(n.length!==e.length)return!1;let t=!0;for(let s=0;t&&s<n.length;s++)t=looseEqual(n[s],e[s]);return t}function looseEqual(n,e){if(n===e)return!0;let t=isDate(n),s=isDate(e);if(t||s)return t&&s?n.getTime()===e.getTime():!1;if(t=isSymbol(n),s=isSymbol(e),t||s)return n===e;if(t=isArray$2(n),s=isArray$2(e),t||s)return t&&s?looseCompareArrays(n,e):!1;if(t=isObject$1(n),s=isObject$1(e),t||s){if(!t||!s)return!1;const o=Object.keys(n).length,r=Object.keys(e).length;if(o!==r)return!1;for(const a in n){const c=n.hasOwnProperty(a),l=e.hasOwnProperty(a);if(c&&!l||!c&&l||!looseEqual(n[a],e[a]))return!1}}return String(n)===String(e)}function looseIndexOf(n,e){return n.findIndex(t=>looseEqual(t,e))}const toDisplayString=n=>isString$1(n)?n:n==null?"":isArray$2(n)||isObject$1(n)&&(n.toString===objectToString||!isFunction$1(n.toString))?JSON.stringify(n,replacer,2):String(n),replacer=(n,e)=>e&&e.__v_isRef?replacer(n,e.value):isMap(e)?{[`Map(${e.size})`]:[...e.entries()].reduce((t,[s,o])=>(t[`${s} =>`]=o,t),{})}:isSet(e)?{[`Set(${e.size})`]:[...e.values()]}:isObject$1(e)&&!isArray$2(e)&&!isPlainObject(e)?String(e):e;let activeEffectScope;class EffectScope{constructor(e=!1){this.detached=e,this._active=!0,this.effects=[],this.cleanups=[],this.parent=activeEffectScope,!e&&activeEffectScope&&(this.index=(activeEffectScope.scopes||(activeEffectScope.scopes=[])).push(this)-1)}get active(){return this._active}run(e){if(this._active){const t=activeEffectScope;try{return activeEffectScope=this,e()}finally{activeEffectScope=t}}}on(){activeEffectScope=this}off(){activeEffectScope=this.parent}stop(e){if(this._active){let t,s;for(t=0,s=this.effects.length;t<s;t++)this.effects[t].stop();for(t=0,s=this.cleanups.length;t<s;t++)this.cleanups[t]();if(this.scopes)for(t=0,s=this.scopes.length;t<s;t++)this.scopes[t].stop(!0);if(!this.detached&&this.parent&&!e){const o=this.parent.scopes.pop();o&&o!==this&&(this.parent.scopes[this.index]=o,o.index=this.index)}this.parent=void 0,this._active=!1}}}function recordEffectScope(n,e=activeEffectScope){e&&e.active&&e.effects.push(n)}function getCurrentScope(){return activeEffectScope}const createDep=n=>{const e=new Set(n);return e.w=0,e.n=0,e},wasTracked=n=>(n.w&trackOpBit)>0,newTracked=n=>(n.n&trackOpBit)>0,initDepMarkers=({deps:n})=>{if(n.length)for(let e=0;e<n.length;e++)n[e].w|=trackOpBit},finalizeDepMarkers=n=>{const{deps:e}=n;if(e.length){let t=0;for(let s=0;s<e.length;s++){const o=e[s];wasTracked(o)&&!newTracked(o)?o.delete(n):e[t++]=o,o.w&=~trackOpBit,o.n&=~trackOpBit}e.length=t}},targetMap=new WeakMap;let effectTrackDepth=0,trackOpBit=1;const maxMarkerBits=30;let activeEffect;const ITERATE_KEY=Symbol(""),MAP_KEY_ITERATE_KEY=Symbol("");class ReactiveEffect{constructor(e,t=null,s){this.fn=e,this.scheduler=t,this.active=!0,this.deps=[],this.parent=void 0,recordEffectScope(this,s)}run(){if(!this.active)return this.fn();let e=activeEffect,t=shouldTrack;for(;e;){if(e===this)return;e=e.parent}try{return this.parent=activeEffect,activeEffect=this,shouldTrack=!0,trackOpBit=1<<++effectTrackDepth,effectTrackDepth<=maxMarkerBits?initDepMarkers(this):cleanupEffect(this),this.fn()}finally{effectTrackDepth<=maxMarkerBits&&finalizeDepMarkers(this),trackOpBit=1<<--effectTrackDepth,activeEffect=this.parent,shouldTrack=t,this.parent=void 0,this.deferStop&&this.stop()}}stop(){activeEffect===this?this.deferStop=!0:this.active&&(cleanupEffect(this),this.onStop&&this.onStop(),this.active=!1)}}function cleanupEffect(n){const{deps:e}=n;if(e.length){for(let t=0;t<e.length;t++)e[t].delete(n);e.length=0}}let shouldTrack=!0;const trackStack=[];function pauseTracking(){trackStack.push(shouldTrack),shouldTrack=!1}function resetTracking(){const n=trackStack.pop();shouldTrack=n===void 0?!0:n}function track(n,e,t){if(shouldTrack&&activeEffect){let s=targetMap.get(n);s||targetMap.set(n,s=new Map);let o=s.get(t);o||s.set(t,o=createDep()),trackEffects(o)}}function trackEffects(n,e){let t=!1;effectTrackDepth<=maxMarkerBits?newTracked(n)||(n.n|=trackOpBit,t=!wasTracked(n)):t=!n.has(activeEffect),t&&(n.add(activeEffect),activeEffect.deps.push(n))}function trigger(n,e,t,s,o,r){const a=targetMap.get(n);if(!a)return;let c=[];if(e==="clear")c=[...a.values()];else if(t==="length"&&isArray$2(n)){const l=Number(s);a.forEach((u,d)=>{(d==="length"||d>=l)&&c.push(u)})}else switch(t!==void 0&&c.push(a.get(t)),e){case"add":isArray$2(n)?isIntegerKey(t)&&c.push(a.get("length")):(c.push(a.get(ITERATE_KEY)),isMap(n)&&c.push(a.get(MAP_KEY_ITERATE_KEY)));break;case"delete":isArray$2(n)||(c.push(a.get(ITERATE_KEY)),isMap(n)&&c.push(a.get(MAP_KEY_ITERATE_KEY)));break;case"set":isMap(n)&&c.push(a.get(ITERATE_KEY));break}if(c.length===1)c[0]&&triggerEffects(c[0]);else{const l=[];for(const u of c)u&&l.push(...u);triggerEffects(createDep(l))}}function triggerEffects(n,e){const t=isArray$2(n)?n:[...n];for(const s of t)s.computed&&triggerEffect(s);for(const s of t)s.computed||triggerEffect(s)}function triggerEffect(n,e){(n!==activeEffect||n.allowRecurse)&&(n.scheduler?n.scheduler():n.run())}const isNonTrackableKeys=makeMap("__proto__,__v_isRef,__isVue"),builtInSymbols=new Set(Object.getOwnPropertyNames(Symbol).filter(n=>n!=="arguments"&&n!=="caller").map(n=>Symbol[n]).filter(isSymbol)),get$1=createGetter(),shallowGet=createGetter(!1,!0),readonlyGet=createGetter(!0),arrayInstrumentations=createArrayInstrumentations();function createArrayInstrumentations(){const n={};return["includes","indexOf","lastIndexOf"].forEach(e=>{n[e]=function(...t){const s=toRaw(this);for(let r=0,a=this.length;r<a;r++)track(s,"get",r+"");const o=s[e](...t);return o===-1||o===!1?s[e](...t.map(toRaw)):o}}),["push","pop","shift","unshift","splice"].forEach(e=>{n[e]=function(...t){pauseTracking();const s=toRaw(this)[e].apply(this,t);return resetTracking(),s}}),n}function hasOwnProperty(n){const e=toRaw(this);return track(e,"has",n),e.hasOwnProperty(n)}function createGetter(n=!1,e=!1){return function(s,o,r){if(o==="__v_isReactive")return!n;if(o==="__v_isReadonly")return n;if(o==="__v_isShallow")return e;if(o==="__v_raw"&&r===(n?e?shallowReadonlyMap:readonlyMap:e?shallowReactiveMap:reactiveMap).get(s))return s;const a=isArray$2(s);if(!n){if(a&&hasOwn(arrayInstrumentations,o))return Reflect.get(arrayInstrumentations,o,r);if(o==="hasOwnProperty")return hasOwnProperty}const c=Reflect.get(s,o,r);return(isSymbol(o)?builtInSymbols.has(o):isNonTrackableKeys(o))||(n||track(s,"get",o),e)?c:isRef(c)?a&&isIntegerKey(o)?c:c.value:isObject$1(c)?n?readonly(c):reactive(c):c}}const set$1=createSetter(),shallowSet=createSetter(!0);function createSetter(n=!1){return function(t,s,o,r){let a=t[s];if(isReadonly(a)&&isRef(a)&&!isRef(o))return!1;if(!n&&(!isShallow(o)&&!isReadonly(o)&&(a=toRaw(a),o=toRaw(o)),!isArray$2(t)&&isRef(a)&&!isRef(o)))return a.value=o,!0;const c=isArray$2(t)&&isIntegerKey(s)?Number(s)<t.length:hasOwn(t,s),l=Reflect.set(t,s,o,r);return t===toRaw(r)&&(c?hasChanged(o,a)&&trigger(t,"set",s,o):trigger(t,"add",s,o)),l}}function deleteProperty(n,e){const t=hasOwn(n,e);n[e];const s=Reflect.deleteProperty(n,e);return s&&t&&trigger(n,"delete",e,void 0),s}function has$1(n,e){const t=Reflect.has(n,e);return(!isSymbol(e)||!builtInSymbols.has(e))&&track(n,"has",e),t}function ownKeys(n){return track(n,"iterate",isArray$2(n)?"length":ITERATE_KEY),Reflect.ownKeys(n)}const mutableHandlers={get:get$1,set:set$1,deleteProperty,has:has$1,ownKeys},readonlyHandlers={get:readonlyGet,set(n,e){return!0},deleteProperty(n,e){return!0}},shallowReactiveHandlers=extend({},mutableHandlers,{get:shallowGet,set:shallowSet}),toShallow=n=>n,getProto=n=>Reflect.getPrototypeOf(n);function get(n,e,t=!1,s=!1){n=n.__v_raw;const o=toRaw(n),r=toRaw(e);t||(e!==r&&track(o,"get",e),track(o,"get",r));const{has:a}=getProto(o),c=s?toShallow:t?toReadonly:toReactive;if(a.call(o,e))return c(n.get(e));if(a.call(o,r))return c(n.get(r));n!==o&&n.get(e)}function has(n,e=!1){const t=this.__v_raw,s=toRaw(t),o=toRaw(n);return e||(n!==o&&track(s,"has",n),track(s,"has",o)),n===o?t.has(n):t.has(n)||t.has(o)}function size(n,e=!1){return n=n.__v_raw,!e&&track(toRaw(n),"iterate",ITERATE_KEY),Reflect.get(n,"size",n)}function add(n){n=toRaw(n);const e=toRaw(this);return getProto(e).has.call(e,n)||(e.add(n),trigger(e,"add",n,n)),this}function set(n,e){e=toRaw(e);const t=toRaw(this),{has:s,get:o}=getProto(t);let r=s.call(t,n);r||(n=toRaw(n),r=s.call(t,n));const a=o.call(t,n);return t.set(n,e),r?hasChanged(e,a)&&trigger(t,"set",n,e):trigger(t,"add",n,e),this}function deleteEntry(n){const e=toRaw(this),{has:t,get:s}=getProto(e);let o=t.call(e,n);o||(n=toRaw(n),o=t.call(e,n)),s&&s.call(e,n);const r=e.delete(n);return o&&trigger(e,"delete",n,void 0),r}function clear(){const n=toRaw(this),e=n.size!==0,t=n.clear();return e&&trigger(n,"clear",void 0,void 0),t}function createForEach(n,e){return function(s,o){const r=this,a=r.__v_raw,c=toRaw(a),l=e?toShallow:n?toReadonly:toReactive;return!n&&track(c,"iterate",ITERATE_KEY),a.forEach((u,d)=>s.call(o,l(u),l(d),r))}}function createIterableMethod(n,e,t){return function(...s){const o=this.__v_raw,r=toRaw(o),a=isMap(r),c=n==="entries"||n===Symbol.iterator&&a,l=n==="keys"&&a,u=o[n](...s),d=t?toShallow:e?toReadonly:toReactive;return!e&&track(r,"iterate",l?MAP_KEY_ITERATE_KEY:ITERATE_KEY),{next(){const{value:f,done:m}=u.next();return m?{value:f,done:m}:{value:c?[d(f[0]),d(f[1])]:d(f),done:m}},[Symbol.iterator](){return this}}}}function createReadonlyMethod(n){return function(...e){return n==="delete"?!1:this}}function createInstrumentations(){const n={get(r){return get(this,r)},get size(){return size(this)},has,add,set,delete:deleteEntry,clear,forEach:createForEach(!1,!1)},e={get(r){return get(this,r,!1,!0)},get size(){return size(this)},has,add,set,delete:deleteEntry,clear,forEach:createForEach(!1,!0)},t={get(r){return get(this,r,!0)},get size(){return size(this,!0)},has(r){return has.call(this,r,!0)},add:createReadonlyMethod("add"),set:createReadonlyMethod("set"),delete:createReadonlyMethod("delete"),clear:createReadonlyMethod("clear"),forEach:createForEach(!0,!1)},s={get(r){return get(this,r,!0,!0)},get size(){return size(this,!0)},has(r){return has.call(this,r,!0)},add:createReadonlyMethod("add"),set:createReadonlyMethod("set"),delete:createReadonlyMethod("delete"),clear:createReadonlyMethod("clear"),forEach:createForEach(!0,!0)};return["keys","values","entries",Symbol.iterator].forEach(r=>{n[r]=createIterableMethod(r,!1,!1),t[r]=createIterableMethod(r,!0,!1),e[r]=createIterableMethod(r,!1,!0),s[r]=createIterableMethod(r,!0,!0)}),[n,t,e,s]}const[mutableInstrumentations,readonlyInstrumentations,shallowInstrumentations,shallowReadonlyInstrumentations]=createInstrumentations();function createInstrumentationGetter(n,e){const t=e?n?shallowReadonlyInstrumentations:shallowInstrumentations:n?readonlyInstrumentations:mutableInstrumentations;return(s,o,r)=>o==="__v_isReactive"?!n:o==="__v_isReadonly"?n:o==="__v_raw"?s:Reflect.get(hasOwn(t,o)&&o in s?t:s,o,r)}const mutableCollectionHandlers={get:createInstrumentationGetter(!1,!1)},shallowCollectionHandlers={get:createInstrumentationGetter(!1,!0)},readonlyCollectionHandlers={get:createInstrumentationGetter(!0,!1)},reactiveMap=new WeakMap,shallowReactiveMap=new WeakMap,readonlyMap=new WeakMap,shallowReadonlyMap=new WeakMap;function targetTypeMap(n){switch(n){case"Object":case"Array":return 1;case"Map":case"Set":case"WeakMap":case"WeakSet":return 2;default:return 0}}function getTargetType(n){return n.__v_skip||!Object.isExtensible(n)?0:targetTypeMap(toRawType(n))}function reactive(n){return isReadonly(n)?n:createReactiveObject(n,!1,mutableHandlers,mutableCollectionHandlers,reactiveMap)}function shallowReactive(n){return createReactiveObject(n,!1,shallowReactiveHandlers,shallowCollectionHandlers,shallowReactiveMap)}function readonly(n){return createReactiveObject(n,!0,readonlyHandlers,readonlyCollectionHandlers,readonlyMap)}function createReactiveObject(n,e,t,s,o){if(!isObject$1(n)||n.__v_raw&&!(e&&n.__v_isReactive))return n;const r=o.get(n);if(r)return r;const a=getTargetType(n);if(a===0)return n;const c=new Proxy(n,a===2?s:t);return o.set(n,c),c}function isReactive(n){return isReadonly(n)?isReactive(n.__v_raw):!!(n&&n.__v_isReactive)}function isReadonly(n){return!!(n&&n.__v_isReadonly)}function isShallow(n){return!!(n&&n.__v_isShallow)}function isProxy(n){return isReactive(n)||isReadonly(n)}function toRaw(n){const e=n&&n.__v_raw;return e?toRaw(e):n}function markRaw(n){return def(n,"__v_skip",!0),n}const toReactive=n=>isObject$1(n)?reactive(n):n,toReadonly=n=>isObject$1(n)?readonly(n):n;function trackRefValue(n){shouldTrack&&activeEffect&&(n=toRaw(n),trackEffects(n.dep||(n.dep=createDep())))}function triggerRefValue(n,e){n=toRaw(n);const t=n.dep;t&&triggerEffects(t)}function isRef(n){return!!(n&&n.__v_isRef===!0)}function ref(n){return createRef(n,!1)}function shallowRef(n){return createRef(n,!0)}function createRef(n,e){return isRef(n)?n:new RefImpl(n,e)}class RefImpl{constructor(e,t){this.__v_isShallow=t,this.dep=void 0,this.__v_isRef=!0,this._rawValue=t?e:toRaw(e),this._value=t?e:toReactive(e)}get value(){return trackRefValue(this),this._value}set value(e){const t=this.__v_isShallow||isShallow(e)||isReadonly(e);e=t?e:toRaw(e),hasChanged(e,this._rawValue)&&(this._rawValue=e,this._value=t?e:toReactive(e),triggerRefValue(this))}}function unref(n){return isRef(n)?n.value:n}const shallowUnwrapHandlers={get:(n,e,t)=>unref(Reflect.get(n,e,t)),set:(n,e,t,s)=>{const o=n[e];return isRef(o)&&!isRef(t)?(o.value=t,!0):Reflect.set(n,e,t,s)}};function proxyRefs(n){return isReactive(n)?n:new Proxy(n,shallowUnwrapHandlers)}class ComputedRefImpl{constructor(e,t,s,o){this._setter=t,this.dep=void 0,this.__v_isRef=!0,this.__v_isReadonly=!1,this._dirty=!0,this.effect=new ReactiveEffect(e,()=>{this._dirty||(this._dirty=!0,triggerRefValue(this))}),this.effect.computed=this,this.effect.active=this._cacheable=!o,this.__v_isReadonly=s}get value(){const e=toRaw(this);return trackRefValue(e),(e._dirty||!e._cacheable)&&(e._dirty=!1,e._value=e.effect.run()),e._value}set value(e){this._setter(e)}}function computed$1(n,e,t=!1){let s,o;const r=isFunction$1(n);return r?(s=n,o=NOOP):(s=n.get,o=n.set),new ComputedRefImpl(s,o,r||!o,t)}function warn$1(n,...e){}function callWithErrorHandling(n,e,t,s){let o;try{o=s?n(...s):n()}catch(r){handleError(r,e,t)}return o}function callWithAsyncErrorHandling(n,e,t,s){if(isFunction$1(n)){const r=callWithErrorHandling(n,e,t,s);return r&&isPromise(r)&&r.catch(a=>{handleError(a,e,t)}),r}const o=[];for(let r=0;r<n.length;r++)o.push(callWithAsyncErrorHandling(n[r],e,t,s));return o}function handleError(n,e,t,s=!0){const o=e?e.vnode:null;if(e){let r=e.parent;const a=e.proxy,c=t;for(;r;){const u=r.ec;if(u){for(let d=0;d<u.length;d++)if(u[d](n,a,c)===!1)return}r=r.parent}const l=e.appContext.config.errorHandler;if(l){callWithErrorHandling(l,null,10,[n,a,c]);return}}logError(n,t,o,s)}function logError(n,e,t,s=!0){console.error(n)}let isFlushing=!1,isFlushPending=!1;const queue=[];let flushIndex=0;const pendingPostFlushCbs=[];let activePostFlushCbs=null,postFlushIndex=0;const resolvedPromise=Promise.resolve();let currentFlushPromise=null;function nextTick(n){const e=currentFlushPromise||resolvedPromise;return n?e.then(this?n.bind(this):n):e}function findInsertionIndex(n){let e=flushIndex+1,t=queue.length;for(;e<t;){const s=e+t>>>1;getId(queue[s])<n?e=s+1:t=s}return e}function queueJob(n){(!queue.length||!queue.includes(n,isFlushing&&n.allowRecurse?flushIndex+1:flushIndex))&&(n.id==null?queue.push(n):queue.splice(findInsertionIndex(n.id),0,n),queueFlush())}function queueFlush(){!isFlushing&&!isFlushPending&&(isFlushPending=!0,currentFlushPromise=resolvedPromise.then(flushJobs))}function invalidateJob(n){const e=queue.indexOf(n);e>flushIndex&&queue.splice(e,1)}function queuePostFlushCb(n){isArray$2(n)?pendingPostFlushCbs.push(...n):(!activePostFlushCbs||!activePostFlushCbs.includes(n,n.allowRecurse?postFlushIndex+1:postFlushIndex))&&pendingPostFlushCbs.push(n),queueFlush()}function flushPreFlushCbs(n,e=isFlushing?flushIndex+1:0){for(;e<queue.length;e++){const t=queue[e];t&&t.pre&&(queue.splice(e,1),e--,t())}}function flushPostFlushCbs(n){if(pendingPostFlushCbs.length){const e=[...new Set(pendingPostFlushCbs)];if(pendingPostFlushCbs.length=0,activePostFlushCbs){activePostFlushCbs.push(...e);return}for(activePostFlushCbs=e,activePostFlushCbs.sort((t,s)=>getId(t)-getId(s)),postFlushIndex=0;postFlushIndex<activePostFlushCbs.length;postFlushIndex++)activePostFlushCbs[postFlushIndex]();activePostFlushCbs=null,postFlushIndex=0}}const getId=n=>n.id==null?1/0:n.id,comparator=(n,e)=>{const t=getId(n)-getId(e);if(t===0){if(n.pre&&!e.pre)return-1;if(e.pre&&!n.pre)return 1}return t};function flushJobs(n){isFlushPending=!1,isFlushing=!0,queue.sort(comparator);const e=NOOP;try{for(flushIndex=0;flushIndex<queue.length;flushIndex++){const t=queue[flushIndex];t&&t.active!==!1&&callWithErrorHandling(t,null,14)}}finally{flushIndex=0,queue.length=0,flushPostFlushCbs(),isFlushing=!1,currentFlushPromise=null,(queue.length||pendingPostFlushCbs.length)&&flushJobs()}}function emit(n,e,...t){if(n.isUnmounted)return;const s=n.vnode.props||EMPTY_OBJ;let o=t;const r=e.startsWith("update:"),a=r&&e.slice(7);if(a&&a in s){const d=`${a==="modelValue"?"model":a}Modifiers`,{number:f,trim:m}=s[d]||EMPTY_OBJ;m&&(o=t.map(g=>isString$1(g)?g.trim():g)),f&&(o=t.map(looseToNumber))}let c,l=s[c=toHandlerKey(e)]||s[c=toHandlerKey(camelize(e))];!l&&r&&(l=s[c=toHandlerKey(hyphenate(e))]),l&&callWithAsyncErrorHandling(l,n,6,o);const u=s[c+"Once"];if(u){if(!n.emitted)n.emitted={};else if(n.emitted[c])return;n.emitted[c]=!0,callWithAsyncErrorHandling(u,n,6,o)}}function normalizeEmitsOptions(n,e,t=!1){const s=e.emitsCache,o=s.get(n);if(o!==void 0)return o;const r=n.emits;let a={},c=!1;if(!isFunction$1(n)){const l=u=>{const d=normalizeEmitsOptions(u,e,!0);d&&(c=!0,extend(a,d))};!t&&e.mixins.length&&e.mixins.forEach(l),n.extends&&l(n.extends),n.mixins&&n.mixins.forEach(l)}return!r&&!c?(isObject$1(n)&&s.set(n,null),null):(isArray$2(r)?r.forEach(l=>a[l]=null):extend(a,r),isObject$1(n)&&s.set(n,a),a)}function isEmitListener(n,e){return!n||!isOn(e)?!1:(e=e.slice(2).replace(/Once$/,""),hasOwn(n,e[0].toLowerCase()+e.slice(1))||hasOwn(n,hyphenate(e))||hasOwn(n,e))}let currentRenderingInstance=null,currentScopeId=null;function setCurrentRenderingInstance(n){const e=currentRenderingInstance;return currentRenderingInstance=n,currentScopeId=n&&n.type.__scopeId||null,e}function pushScopeId(n){currentScopeId=n}function popScopeId(){currentScopeId=null}function withCtx(n,e=currentRenderingInstance,t){if(!e||n._n)return n;const s=(...o)=>{s._d&&setBlockTracking(-1);const r=setCurrentRenderingInstance(e);let a;try{a=n(...o)}finally{setCurrentRenderingInstance(r),s._d&&setBlockTracking(1)}return a};return s._n=!0,s._c=!0,s._d=!0,s}function markAttrsAccessed(){}function renderComponentRoot(n){const{type:e,vnode:t,proxy:s,withProxy:o,props:r,propsOptions:[a],slots:c,attrs:l,emit:u,render:d,renderCache:f,data:m,setupState:g,ctx:_,inheritAttrs:y}=n;let A,S;const w=setCurrentRenderingInstance(n);try{if(t.shapeFlag&4){const k=o||s;A=normalizeVNode(d.call(k,k,f,r,g,m,_)),S=l}else{const k=e;A=normalizeVNode(k.length>1?k(r,{attrs:l,slots:c,emit:u}):k(r,null)),S=e.props?l:getFunctionalFallthrough(l)}}catch(k){blockStack.length=0,handleError(k,n,1),A=createVNode(Comment)}let M=A;if(S&&y!==!1){const k=Object.keys(S),{shapeFlag:C}=M;k.length&&C&7&&(a&&k.some(isModelListener)&&(S=filterModelListeners(S,a)),M=cloneVNode(M,S))}return t.dirs&&(M=cloneVNode(M),M.dirs=M.dirs?M.dirs.concat(t.dirs):t.dirs),t.transition&&(M.transition=t.transition),A=M,setCurrentRenderingInstance(w),A}const getFunctionalFallthrough=n=>{let e;for(const t in n)(t==="class"||t==="style"||isOn(t))&&((e||(e={}))[t]=n[t]);return e},filterModelListeners=(n,e)=>{const t={};for(const s in n)(!isModelListener(s)||!(s.slice(9)in e))&&(t[s]=n[s]);return t};function shouldUpdateComponent(n,e,t){const{props:s,children:o,component:r}=n,{props:a,children:c,patchFlag:l}=e,u=r.emitsOptions;if(e.dirs||e.transition)return!0;if(t&&l>=0){if(l&1024)return!0;if(l&16)return s?hasPropsChanged(s,a,u):!!a;if(l&8){const d=e.dynamicProps;for(let f=0;f<d.length;f++){const m=d[f];if(a[m]!==s[m]&&!isEmitListener(u,m))return!0}}}else return(o||c)&&(!c||!c.$stable)?!0:s===a?!1:s?a?hasPropsChanged(s,a,u):!0:!!a;return!1}function hasPropsChanged(n,e,t){const s=Object.keys(e);if(s.length!==Object.keys(n).length)return!0;for(let o=0;o<s.length;o++){const r=s[o];if(e[r]!==n[r]&&!isEmitListener(t,r))return!0}return!1}function updateHOCHostEl({vnode:n,parent:e},t){for(;e&&e.subTree===n;)(n=e.vnode).el=t,e=e.parent}const isSuspense=n=>n.__isSuspense;function queueEffectWithSuspense(n,e){e&&e.pendingBranch?isArray$2(n)?e.effects.push(...n):e.effects.push(n):queuePostFlushCb(n)}const INITIAL_WATCHER_VALUE={};function watch(n,e,t){return doWatch(n,e,t)}function doWatch(n,e,{immediate:t,deep:s,flush:o,onTrack:r,onTrigger:a}=EMPTY_OBJ){var c;const l=getCurrentScope()===((c=currentInstance)==null?void 0:c.scope)?currentInstance:null;let u,d=!1,f=!1;if(isRef(n)?(u=()=>n.value,d=isShallow(n)):isReactive(n)?(u=()=>n,s=!0):isArray$2(n)?(f=!0,d=n.some(k=>isReactive(k)||isShallow(k)),u=()=>n.map(k=>{if(isRef(k))return k.value;if(isReactive(k))return traverse(k);if(isFunction$1(k))return callWithErrorHandling(k,l,2)})):isFunction$1(n)?e?u=()=>callWithErrorHandling(n,l,2):u=()=>{if(!(l&&l.isUnmounted))return m&&m(),callWithAsyncErrorHandling(n,l,3,[g])}:u=NOOP,e&&s){const k=u;u=()=>traverse(k())}let m,g=k=>{m=w.onStop=()=>{callWithErrorHandling(k,l,4)}},_;if(isInSSRComponentSetup)if(g=NOOP,e?t&&callWithAsyncErrorHandling(e,l,3,[u(),f?[]:void 0,g]):u(),o==="sync"){const k=useSSRContext();_=k.__watcherHandles||(k.__watcherHandles=[])}else return NOOP;let y=f?new Array(n.length).fill(INITIAL_WATCHER_VALUE):INITIAL_WATCHER_VALUE;const A=()=>{if(w.active)if(e){const k=w.run();(s||d||(f?k.some((C,E)=>hasChanged(C,y[E])):hasChanged(k,y)))&&(m&&m(),callWithAsyncErrorHandling(e,l,3,[k,y===INITIAL_WATCHER_VALUE?void 0:f&&y[0]===INITIAL_WATCHER_VALUE?[]:y,g]),y=k)}else w.run()};A.allowRecurse=!!e;let S;o==="sync"?S=A:o==="post"?S=()=>queuePostRenderEffect(A,l&&l.suspense):(A.pre=!0,l&&(A.id=l.uid),S=()=>queueJob(A));const w=new ReactiveEffect(u,S);e?t?A():y=w.run():o==="post"?queuePostRenderEffect(w.run.bind(w),l&&l.suspense):w.run();const M=()=>{w.stop(),l&&l.scope&&remove(l.scope.effects,w)};return _&&_.push(M),M}function instanceWatch(n,e,t){const s=this.proxy,o=isString$1(n)?n.includes(".")?createPathGetter(s,n):()=>s[n]:n.bind(s,s);let r;isFunction$1(e)?r=e:(r=e.handler,t=e);const a=currentInstance;setCurrentInstance(this);const c=doWatch(o,r.bind(s),t);return a?setCurrentInstance(a):unsetCurrentInstance(),c}function createPathGetter(n,e){const t=e.split(".");return()=>{let s=n;for(let o=0;o<t.length&&s;o++)s=s[t[o]];return s}}function traverse(n,e){if(!isObject$1(n)||n.__v_skip||(e=e||new Set,e.has(n)))return n;if(e.add(n),isRef(n))traverse(n.value,e);else if(isArray$2(n))for(let t=0;t<n.length;t++)traverse(n[t],e);else if(isSet(n)||isMap(n))n.forEach(t=>{traverse(t,e)});else if(isPlainObject(n))for(const t in n)traverse(n[t],e);return n}function withDirectives(n,e){const t=currentRenderingInstance;if(t===null)return n;const s=getExposeProxy(t)||t.proxy,o=n.dirs||(n.dirs=[]);for(let r=0;r<e.length;r++){let[a,c,l,u=EMPTY_OBJ]=e[r];a&&(isFunction$1(a)&&(a={mounted:a,updated:a}),a.deep&&traverse(c),o.push({dir:a,instance:s,value:c,oldValue:void 0,arg:l,modifiers:u}))}return n}function invokeDirectiveHook(n,e,t,s){const o=n.dirs,r=e&&e.dirs;for(let a=0;a<o.length;a++){const c=o[a];r&&(c.oldValue=r[a].value);let l=c.dir[s];l&&(pauseTracking(),callWithAsyncErrorHandling(l,t,8,[n.el,c,n,e]),resetTracking())}}function defineComponent(n,e){return isFunction$1(n)?(()=>extend({name:n.name},e,{setup:n}))():n}const isAsyncWrapper=n=>!!n.type.__asyncLoader,isKeepAlive=n=>n.type.__isKeepAlive;function onActivated(n,e){registerKeepAliveHook(n,"a",e)}function onDeactivated(n,e){registerKeepAliveHook(n,"da",e)}function registerKeepAliveHook(n,e,t=currentInstance){const s=n.__wdc||(n.__wdc=()=>{let o=t;for(;o;){if(o.isDeactivated)return;o=o.parent}return n()});if(injectHook(e,s,t),t){let o=t.parent;for(;o&&o.parent;)isKeepAlive(o.parent.vnode)&&injectToKeepAliveRoot(s,e,t,o),o=o.parent}}function injectToKeepAliveRoot(n,e,t,s){const o=injectHook(e,n,s,!0);onUnmounted(()=>{remove(s[e],o)},t)}function injectHook(n,e,t=currentInstance,s=!1){if(t){const o=t[n]||(t[n]=[]),r=e.__weh||(e.__weh=(...a)=>{if(t.isUnmounted)return;pauseTracking(),setCurrentInstance(t);const c=callWithAsyncErrorHandling(e,t,n,a);return unsetCurrentInstance(),resetTracking(),c});return s?o.unshift(r):o.push(r),r}}const createHook=n=>(e,t=currentInstance)=>(!isInSSRComponentSetup||n==="sp")&&injectHook(n,(...s)=>e(...s),t),onBeforeMount=createHook("bm"),onMounted=createHook("m"),onBeforeUpdate=createHook("bu"),onUpdated=createHook("u"),onBeforeUnmount=createHook("bum"),onUnmounted=createHook("um"),onServerPrefetch=createHook("sp"),onRenderTriggered=createHook("rtg"),onRenderTracked=createHook("rtc");function onErrorCaptured(n,e=currentInstance){injectHook("ec",n,e)}const COMPONENTS="components";function resolveComponent(n,e){return resolveAsset(COMPONENTS,n,!0,e)||n}const NULL_DYNAMIC_COMPONENT=Symbol.for("v-ndc");function resolveDynamicComponent(n){return isString$1(n)?resolveAsset(COMPONENTS,n,!1)||n:n||NULL_DYNAMIC_COMPONENT}function resolveAsset(n,e,t=!0,s=!1){const o=currentRenderingInstance||currentInstance;if(o){const r=o.type;if(n===COMPONENTS){const c=getComponentName(r,!1);if(c&&(c===e||c===camelize(e)||c===capitalize(camelize(e))))return r}const a=resolve(o[n]||r[n],e)||resolve(o.appContext[n],e);return!a&&s?r:a}}function resolve(n,e){return n&&(n[e]||n[camelize(e)]||n[capitalize(camelize(e))])}function renderList(n,e,t,s){let o;const r=t&&t[s];if(isArray$2(n)||isString$1(n)){o=new Array(n.length);for(let a=0,c=n.length;a<c;a++)o[a]=e(n[a],a,void 0,r&&r[a])}else if(typeof n=="number"){o=new Array(n);for(let a=0;a<n;a++)o[a]=e(a+1,a,void 0,r&&r[a])}else if(isObject$1(n))if(n[Symbol.iterator])o=Array.from(n,(a,c)=>e(a,c,void 0,r&&r[c]));else{const a=Object.keys(n);o=new Array(a.length);for(let c=0,l=a.length;c<l;c++){const u=a[c];o[c]=e(n[u],u,c,r&&r[c])}}else o=[];return t&&(t[s]=o),o}function renderSlot(n,e,t={},s,o){if(currentRenderingInstance.isCE||currentRenderingInstance.parent&&isAsyncWrapper(currentRenderingInstance.parent)&&currentRenderingInstance.parent.isCE)return e!=="default"&&(t.name=e),createVNode("slot",t,s&&s());let r=n[e];r&&r._c&&(r._d=!1),openBlock();const a=r&&ensureValidVNode(r(t)),c=createBlock(Fragment,{key:t.key||a&&a.key||`_${e}`},a||(s?s():[]),a&&n._===1?64:-2);return!o&&c.scopeId&&(c.slotScopeIds=[c.scopeId+"-s"]),r&&r._c&&(r._d=!0),c}function ensureValidVNode(n){return n.some(e=>isVNode(e)?!(e.type===Comment||e.type===Fragment&&!ensureValidVNode(e.children)):!0)?n:null}const getPublicInstance=n=>n?isStatefulComponent(n)?getExposeProxy(n)||n.proxy:getPublicInstance(n.parent):null,publicPropertiesMap=extend(Object.create(null),{$:n=>n,$el:n=>n.vnode.el,$data:n=>n.data,$props:n=>n.props,$attrs:n=>n.attrs,$slots:n=>n.slots,$refs:n=>n.refs,$parent:n=>getPublicInstance(n.parent),$root:n=>getPublicInstance(n.root),$emit:n=>n.emit,$options:n=>resolveMergedOptions(n),$forceUpdate:n=>n.f||(n.f=()=>queueJob(n.update)),$nextTick:n=>n.n||(n.n=nextTick.bind(n.proxy)),$watch:n=>instanceWatch.bind(n)}),hasSetupBinding=(n,e)=>n!==EMPTY_OBJ&&!n.__isScriptSetup&&hasOwn(n,e),PublicInstanceProxyHandlers={get({_:n},e){const{ctx:t,setupState:s,data:o,props:r,accessCache:a,type:c,appContext:l}=n;let u;if(e[0]!=="$"){const g=a[e];if(g!==void 0)switch(g){case 1:return s[e];case 2:return o[e];case 4:return t[e];case 3:return r[e]}else{if(hasSetupBinding(s,e))return a[e]=1,s[e];if(o!==EMPTY_OBJ&&hasOwn(o,e))return a[e]=2,o[e];if((u=n.propsOptions[0])&&hasOwn(u,e))return a[e]=3,r[e];if(t!==EMPTY_OBJ&&hasOwn(t,e))return a[e]=4,t[e];shouldCacheAccess&&(a[e]=0)}}const d=publicPropertiesMap[e];let f,m;if(d)return e==="$attrs"&&track(n,"get",e),d(n);if((f=c.__cssModules)&&(f=f[e]))return f;if(t!==EMPTY_OBJ&&hasOwn(t,e))return a[e]=4,t[e];if(m=l.config.globalProperties,hasOwn(m,e))return m[e]},set({_:n},e,t){const{data:s,setupState:o,ctx:r}=n;return hasSetupBinding(o,e)?(o[e]=t,!0):s!==EMPTY_OBJ&&hasOwn(s,e)?(s[e]=t,!0):hasOwn(n.props,e)||e[0]==="$"&&e.slice(1)in n?!1:(r[e]=t,!0)},has({_:{data:n,setupState:e,accessCache:t,ctx:s,appContext:o,propsOptions:r}},a){let c;return!!t[a]||n!==EMPTY_OBJ&&hasOwn(n,a)||hasSetupBinding(e,a)||(c=r[0])&&hasOwn(c,a)||hasOwn(s,a)||hasOwn(publicPropertiesMap,a)||hasOwn(o.config.globalProperties,a)},defineProperty(n,e,t){return t.get!=null?n._.accessCache[e]=0:hasOwn(t,"value")&&this.set(n,e,t.value,null),Reflect.defineProperty(n,e,t)}};function normalizePropsOrEmits(n){return isArray$2(n)?n.reduce((e,t)=>(e[t]=null,e),{}):n}let shouldCacheAccess=!0;function applyOptions(n){const e=resolveMergedOptions(n),t=n.proxy,s=n.ctx;shouldCacheAccess=!1,e.beforeCreate&&callHook(e.beforeCreate,n,"bc");const{data:o,computed:r,methods:a,watch:c,provide:l,inject:u,created:d,beforeMount:f,mounted:m,beforeUpdate:g,updated:_,activated:y,deactivated:A,beforeDestroy:S,beforeUnmount:w,destroyed:M,unmounted:k,render:C,renderTracked:E,renderTriggered:P,errorCaptured:b,serverPrefetch:j,expose:q,inheritAttrs:L,components:V,directives:K,filters:Y}=e;if(u&&resolveInjections(u,s,null),a)for(const U in a){const X=a[U];isFunction$1(X)&&(s[U]=X.bind(t))}if(o){const U=o.call(t,t);isObject$1(U)&&(n.data=reactive(U))}if(shouldCacheAccess=!0,r)for(const U in r){const X=r[U],ee=isFunction$1(X)?X.bind(t,t):isFunction$1(X.get)?X.get.bind(t,t):NOOP,oe=!isFunction$1(X)&&isFunction$1(X.set)?X.set.bind(t):NOOP,se=computed({get:ee,set:oe});Object.defineProperty(s,U,{enumerable:!0,configurable:!0,get:()=>se.value,set:re=>se.value=re})}if(c)for(const U in c)createWatcher(c[U],s,t,U);if(l){const U=isFunction$1(l)?l.call(t):l;Reflect.ownKeys(U).forEach(X=>{provide(X,U[X])})}d&&callHook(d,n,"c");function H(U,X){isArray$2(X)?X.forEach(ee=>U(ee.bind(t))):X&&U(X.bind(t))}if(H(onBeforeMount,f),H(onMounted,m),H(onBeforeUpdate,g),H(onUpdated,_),H(onActivated,y),H(onDeactivated,A),H(onErrorCaptured,b),H(onRenderTracked,E),H(onRenderTriggered,P),H(onBeforeUnmount,w),H(onUnmounted,k),H(onServerPrefetch,j),isArray$2(q))if(q.length){const U=n.exposed||(n.exposed={});q.forEach(X=>{Object.defineProperty(U,X,{get:()=>t[X],set:ee=>t[X]=ee})})}else n.exposed||(n.exposed={});C&&n.render===NOOP&&(n.render=C),L!=null&&(n.inheritAttrs=L),V&&(n.components=V),K&&(n.directives=K)}function resolveInjections(n,e,t=NOOP){isArray$2(n)&&(n=normalizeInject(n));for(const s in n){const o=n[s];let r;isObject$1(o)?"default"in o?r=inject(o.from||s,o.default,!0):r=inject(o.from||s):r=inject(o),isRef(r)?Object.defineProperty(e,s,{enumerable:!0,configurable:!0,get:()=>r.value,set:a=>r.value=a}):e[s]=r}}function callHook(n,e,t){callWithAsyncErrorHandling(isArray$2(n)?n.map(s=>s.bind(e.proxy)):n.bind(e.proxy),e,t)}function createWatcher(n,e,t,s){const o=s.includes(".")?createPathGetter(t,s):()=>t[s];if(isString$1(n)){const r=e[n];isFunction$1(r)&&watch(o,r)}else if(isFunction$1(n))watch(o,n.bind(t));else if(isObject$1(n))if(isArray$2(n))n.forEach(r=>createWatcher(r,e,t,s));else{const r=isFunction$1(n.handler)?n.handler.bind(t):e[n.handler];isFunction$1(r)&&watch(o,r,n)}}function resolveMergedOptions(n){const e=n.type,{mixins:t,extends:s}=e,{mixins:o,optionsCache:r,config:{optionMergeStrategies:a}}=n.appContext,c=r.get(e);let l;return c?l=c:!o.length&&!t&&!s?l=e:(l={},o.length&&o.forEach(u=>mergeOptions$1(l,u,a,!0)),mergeOptions$1(l,e,a)),isObject$1(e)&&r.set(e,l),l}function mergeOptions$1(n,e,t,s=!1){const{mixins:o,extends:r}=e;r&&mergeOptions$1(n,r,t,!0),o&&o.forEach(a=>mergeOptions$1(n,a,t,!0));for(const a in e)if(!(s&&a==="expose")){const c=internalOptionMergeStrats[a]||t&&t[a];n[a]=c?c(n[a],e[a]):e[a]}return n}const internalOptionMergeStrats={data:mergeDataFn,props:mergeEmitsOrPropsOptions,emits:mergeEmitsOrPropsOptions,methods:mergeObjectOptions,computed:mergeObjectOptions,beforeCreate:mergeAsArray,created:mergeAsArray,beforeMount:mergeAsArray,mounted:mergeAsArray,beforeUpdate:mergeAsArray,updated:mergeAsArray,beforeDestroy:mergeAsArray,beforeUnmount:mergeAsArray,destroyed:mergeAsArray,unmounted:mergeAsArray,activated:mergeAsArray,deactivated:mergeAsArray,errorCaptured:mergeAsArray,serverPrefetch:mergeAsArray,components:mergeObjectOptions,directives:mergeObjectOptions,watch:mergeWatchOptions,provide:mergeDataFn,inject:mergeInject};function mergeDataFn(n,e){return e?n?function(){return extend(isFunction$1(n)?n.call(this,this):n,isFunction$1(e)?e.call(this,this):e)}:e:n}function mergeInject(n,e){return mergeObjectOptions(normalizeInject(n),normalizeInject(e))}function normalizeInject(n){if(isArray$2(n)){const e={};for(let t=0;t<n.length;t++)e[n[t]]=n[t];return e}return n}function mergeAsArray(n,e){return n?[...new Set([].concat(n,e))]:e}function mergeObjectOptions(n,e){return n?extend(Object.create(null),n,e):e}function mergeEmitsOrPropsOptions(n,e){return n?isArray$2(n)&&isArray$2(e)?[...new Set([...n,...e])]:extend(Object.create(null),normalizePropsOrEmits(n),normalizePropsOrEmits(e??{})):e}function mergeWatchOptions(n,e){if(!n)return e;if(!e)return n;const t=extend(Object.create(null),n);for(const s in e)t[s]=mergeAsArray(n[s],e[s]);return t}function createAppContext(){return{app:null,config:{isNativeTag:NO,performance:!1,globalProperties:{},optionMergeStrategies:{},errorHandler:void 0,warnHandler:void 0,compilerOptions:{}},mixins:[],components:{},directives:{},provides:Object.create(null),optionsCache:new WeakMap,propsCache:new WeakMap,emitsCache:new WeakMap}}let uid$1=0;function createAppAPI(n,e){return function(s,o=null){isFunction$1(s)||(s=extend({},s)),o!=null&&!isObject$1(o)&&(o=null);const r=createAppContext(),a=new Set;let c=!1;const l=r.app={_uid:uid$1++,_component:s,_props:o,_container:null,_context:r,_instance:null,version:version$1,get config(){return r.config},set config(u){},use(u,...d){return a.has(u)||(u&&isFunction$1(u.install)?(a.add(u),u.install(l,...d)):isFunction$1(u)&&(a.add(u),u(l,...d))),l},mixin(u){return r.mixins.includes(u)||r.mixins.push(u),l},component(u,d){return d?(r.components[u]=d,l):r.components[u]},directive(u,d){return d?(r.directives[u]=d,l):r.directives[u]},mount(u,d,f){if(!c){const m=createVNode(s,o);return m.appContext=r,d&&e?e(m,u):n(m,u,f),c=!0,l._container=u,u.__vue_app__=l,getExposeProxy(m.component)||m.component.proxy}},unmount(){c&&(n(null,l._container),delete l._container.__vue_app__)},provide(u,d){return r.provides[u]=d,l},runWithContext(u){currentApp=l;try{return u()}finally{currentApp=null}}};return l}}let currentApp=null;function provide(n,e){if(currentInstance){let t=currentInstance.provides;const s=currentInstance.parent&&currentInstance.parent.provides;s===t&&(t=currentInstance.provides=Object.create(s)),t[n]=e}}function inject(n,e,t=!1){const s=currentInstance||currentRenderingInstance;if(s||currentApp){const o=s?s.parent==null?s.vnode.appContext&&s.vnode.appContext.provides:s.parent.provides:currentApp._context.provides;if(o&&n in o)return o[n];if(arguments.length>1)return t&&isFunction$1(e)?e.call(s&&s.proxy):e}}function initProps(n,e,t,s=!1){const o={},r={};def(r,InternalObjectKey,1),n.propsDefaults=Object.create(null),setFullProps(n,e,o,r);for(const a in n.propsOptions[0])a in o||(o[a]=void 0);t?n.props=s?o:shallowReactive(o):n.type.props?n.props=o:n.props=r,n.attrs=r}function updateProps(n,e,t,s){const{props:o,attrs:r,vnode:{patchFlag:a}}=n,c=toRaw(o),[l]=n.propsOptions;let u=!1;if((s||a>0)&&!(a&16)){if(a&8){const d=n.vnode.dynamicProps;for(let f=0;f<d.length;f++){let m=d[f];if(isEmitListener(n.emitsOptions,m))continue;const g=e[m];if(l)if(hasOwn(r,m))g!==r[m]&&(r[m]=g,u=!0);else{const _=camelize(m);o[_]=resolvePropValue(l,c,_,g,n,!1)}else g!==r[m]&&(r[m]=g,u=!0)}}}else{setFullProps(n,e,o,r)&&(u=!0);let d;for(const f in c)(!e||!hasOwn(e,f)&&((d=hyphenate(f))===f||!hasOwn(e,d)))&&(l?t&&(t[f]!==void 0||t[d]!==void 0)&&(o[f]=resolvePropValue(l,c,f,void 0,n,!0)):delete o[f]);if(r!==c)for(const f in r)(!e||!hasOwn(e,f))&&(delete r[f],u=!0)}u&&trigger(n,"set","$attrs")}function setFullProps(n,e,t,s){const[o,r]=n.propsOptions;let a=!1,c;if(e)for(let l in e){if(isReservedProp(l))continue;const u=e[l];let d;o&&hasOwn(o,d=camelize(l))?!r||!r.includes(d)?t[d]=u:(c||(c={}))[d]=u:isEmitListener(n.emitsOptions,l)||(!(l in s)||u!==s[l])&&(s[l]=u,a=!0)}if(r){const l=toRaw(t),u=c||EMPTY_OBJ;for(let d=0;d<r.length;d++){const f=r[d];t[f]=resolvePropValue(o,l,f,u[f],n,!hasOwn(u,f))}}return a}function resolvePropValue(n,e,t,s,o,r){const a=n[t];if(a!=null){const c=hasOwn(a,"default");if(c&&s===void 0){const l=a.default;if(a.type!==Function&&!a.skipFactory&&isFunction$1(l)){const{propsDefaults:u}=o;t in u?s=u[t]:(setCurrentInstance(o),s=u[t]=l.call(null,e),unsetCurrentInstance())}else s=l}a[0]&&(r&&!c?s=!1:a[1]&&(s===""||s===hyphenate(t))&&(s=!0))}return s}function normalizePropsOptions(n,e,t=!1){const s=e.propsCache,o=s.get(n);if(o)return o;const r=n.props,a={},c=[];let l=!1;if(!isFunction$1(n)){const d=f=>{l=!0;const[m,g]=normalizePropsOptions(f,e,!0);extend(a,m),g&&c.push(...g)};!t&&e.mixins.length&&e.mixins.forEach(d),n.extends&&d(n.extends),n.mixins&&n.mixins.forEach(d)}if(!r&&!l)return isObject$1(n)&&s.set(n,EMPTY_ARR),EMPTY_ARR;if(isArray$2(r))for(let d=0;d<r.length;d++){const f=camelize(r[d]);validatePropName(f)&&(a[f]=EMPTY_OBJ)}else if(r)for(const d in r){const f=camelize(d);if(validatePropName(f)){const m=r[d],g=a[f]=isArray$2(m)||isFunction$1(m)?{type:m}:extend({},m);if(g){const _=getTypeIndex(Boolean,g.type),y=getTypeIndex(String,g.type);g[0]=_>-1,g[1]=y<0||_<y,(_>-1||hasOwn(g,"default"))&&c.push(f)}}}const u=[a,c];return isObject$1(n)&&s.set(n,u),u}function validatePropName(n){return n[0]!=="$"}function getType(n){const e=n&&n.toString().match(/^\s*(function|class) (\w+)/);return e?e[2]:n===null?"null":""}function isSameType(n,e){return getType(n)===getType(e)}function getTypeIndex(n,e){return isArray$2(e)?e.findIndex(t=>isSameType(t,n)):isFunction$1(e)&&isSameType(e,n)?0:-1}const isInternalKey=n=>n[0]==="_"||n==="$stable",normalizeSlotValue=n=>isArray$2(n)?n.map(normalizeVNode):[normalizeVNode(n)],normalizeSlot$1=(n,e,t)=>{if(e._n)return e;const s=withCtx((...o)=>normalizeSlotValue(e(...o)),t);return s._c=!1,s},normalizeObjectSlots=(n,e,t)=>{const s=n._ctx;for(const o in n){if(isInternalKey(o))continue;const r=n[o];if(isFunction$1(r))e[o]=normalizeSlot$1(o,r,s);else if(r!=null){const a=normalizeSlotValue(r);e[o]=()=>a}}},normalizeVNodeSlots=(n,e)=>{const t=normalizeSlotValue(e);n.slots.default=()=>t},initSlots=(n,e)=>{if(n.vnode.shapeFlag&32){const t=e._;t?(n.slots=toRaw(e),def(e,"_",t)):normalizeObjectSlots(e,n.slots={})}else n.slots={},e&&normalizeVNodeSlots(n,e);def(n.slots,InternalObjectKey,1)},updateSlots=(n,e,t)=>{const{vnode:s,slots:o}=n;let r=!0,a=EMPTY_OBJ;if(s.shapeFlag&32){const c=e._;c?t&&c===1?r=!1:(extend(o,e),!t&&c===1&&delete o._):(r=!e.$stable,normalizeObjectSlots(e,o)),a=e}else e&&(normalizeVNodeSlots(n,e),a={default:1});if(r)for(const c in o)!isInternalKey(c)&&!(c in a)&&delete o[c]};function setRef(n,e,t,s,o=!1){if(isArray$2(n)){n.forEach((m,g)=>setRef(m,e&&(isArray$2(e)?e[g]:e),t,s,o));return}if(isAsyncWrapper(s)&&!o)return;const r=s.shapeFlag&4?getExposeProxy(s.component)||s.component.proxy:s.el,a=o?null:r,{i:c,r:l}=n,u=e&&e.r,d=c.refs===EMPTY_OBJ?c.refs={}:c.refs,f=c.setupState;if(u!=null&&u!==l&&(isString$1(u)?(d[u]=null,hasOwn(f,u)&&(f[u]=null)):isRef(u)&&(u.value=null)),isFunction$1(l))callWithErrorHandling(l,c,12,[a,d]);else{const m=isString$1(l),g=isRef(l);if(m||g){const _=()=>{if(n.f){const y=m?hasOwn(f,l)?f[l]:d[l]:l.value;o?isArray$2(y)&&remove(y,r):isArray$2(y)?y.includes(r)||y.push(r):m?(d[l]=[r],hasOwn(f,l)&&(f[l]=d[l])):(l.value=[r],n.k&&(d[n.k]=l.value))}else m?(d[l]=a,hasOwn(f,l)&&(f[l]=a)):g&&(l.value=a,n.k&&(d[n.k]=a))};a?(_.id=-1,queuePostRenderEffect(_,t)):_()}}}const queuePostRenderEffect=queueEffectWithSuspense;function createRenderer(n){return baseCreateRenderer(n)}function baseCreateRenderer(n,e){const t=getGlobalThis();t.__VUE__=!0;const{insert:s,remove:o,patchProp:r,createElement:a,createText:c,createComment:l,setText:u,setElementText:d,parentNode:f,nextSibling:m,setScopeId:g=NOOP,insertStaticContent:_}=n,y=(v,T,x,N=null,O=null,F=null,G=!1,D=null,W=!!T.dynamicChildren)=>{if(v===T)return;v&&!isSameVNodeType(v,T)&&(N=I(v),re(v,O,F,!0),v=null),T.patchFlag===-2&&(W=!1,T.dynamicChildren=null);const{type:B,ref:J,shapeFlag:Q}=T;switch(B){case Text:A(v,T,x,N);break;case Comment:S(v,T,x,N);break;case Static:v==null&&w(T,x,N,G);break;case Fragment:V(v,T,x,N,O,F,G,D,W);break;default:Q&1?C(v,T,x,N,O,F,G,D,W):Q&6?K(v,T,x,N,O,F,G,D,W):(Q&64||Q&128)&&B.process(v,T,x,N,O,F,G,D,W,z)}J!=null&&O&&setRef(J,v&&v.ref,F,T||v,!T)},A=(v,T,x,N)=>{if(v==null)s(T.el=c(T.children),x,N);else{const O=T.el=v.el;T.children!==v.children&&u(O,T.children)}},S=(v,T,x,N)=>{v==null?s(T.el=l(T.children||""),x,N):T.el=v.el},w=(v,T,x,N)=>{[v.el,v.anchor]=_(v.children,T,x,N,v.el,v.anchor)},M=({el:v,anchor:T},x,N)=>{let O;for(;v&&v!==T;)O=m(v),s(v,x,N),v=O;s(T,x,N)},k=({el:v,anchor:T})=>{let x;for(;v&&v!==T;)x=m(v),o(v),v=x;o(T)},C=(v,T,x,N,O,F,G,D,W)=>{G=G||T.type==="svg",v==null?E(T,x,N,O,F,G,D,W):j(v,T,O,F,G,D,W)},E=(v,T,x,N,O,F,G,D)=>{let W,B;const{type:J,props:Q,shapeFlag:ne,transition:ie,dirs:le}=v;if(W=v.el=a(v.type,F,Q&&Q.is,Q),ne&8?d(W,v.children):ne&16&&b(v.children,W,null,N,O,F&&J!=="foreignObject",G,D),le&&invokeDirectiveHook(v,null,N,"created"),P(W,v,v.scopeId,G,N),Q){for(const he in Q)he!=="value"&&!isReservedProp(he)&&r(W,he,null,Q[he],F,v.children,N,O,ce);"value"in Q&&r(W,"value",null,Q.value),(B=Q.onVnodeBeforeMount)&&invokeVNodeHook(B,N,v)}le&&invokeDirectiveHook(v,null,N,"beforeMount");const de=(!O||O&&!O.pendingBranch)&&ie&&!ie.persisted;de&&ie.beforeEnter(W),s(W,T,x),((B=Q&&Q.onVnodeMounted)||de||le)&&queuePostRenderEffect(()=>{B&&invokeVNodeHook(B,N,v),de&&ie.enter(W),le&&invokeDirectiveHook(v,null,N,"mounted")},O)},P=(v,T,x,N,O)=>{if(x&&g(v,x),N)for(let F=0;F<N.length;F++)g(v,N[F]);if(O){let F=O.subTree;if(T===F){const G=O.vnode;P(v,G,G.scopeId,G.slotScopeIds,O.parent)}}},b=(v,T,x,N,O,F,G,D,W=0)=>{for(let B=W;B<v.length;B++){const J=v[B]=D?cloneIfMounted(v[B]):normalizeVNode(v[B]);y(null,J,T,x,N,O,F,G,D)}},j=(v,T,x,N,O,F,G)=>{const D=T.el=v.el;let{patchFlag:W,dynamicChildren:B,dirs:J}=T;W|=v.patchFlag&16;const Q=v.props||EMPTY_OBJ,ne=T.props||EMPTY_OBJ;let ie;x&&toggleRecurse(x,!1),(ie=ne.onVnodeBeforeUpdate)&&invokeVNodeHook(ie,x,T,v),J&&invokeDirectiveHook(T,v,x,"beforeUpdate"),x&&toggleRecurse(x,!0);const le=O&&T.type!=="foreignObject";if(B?q(v.dynamicChildren,B,D,x,N,le,F):G||X(v,T,D,null,x,N,le,F,!1),W>0){if(W&16)L(D,T,Q,ne,x,N,O);else if(W&2&&Q.class!==ne.class&&r(D,"class",null,ne.class,O),W&4&&r(D,"style",Q.style,ne.style,O),W&8){const de=T.dynamicProps;for(let he=0;he<de.length;he++){const me=de[he],_e=Q[me],ve=ne[me];(ve!==_e||me==="value")&&r(D,me,_e,ve,O,v.children,x,N,ce)}}W&1&&v.children!==T.children&&d(D,T.children)}else!G&&B==null&&L(D,T,Q,ne,x,N,O);((ie=ne.onVnodeUpdated)||J)&&queuePostRenderEffect(()=>{ie&&invokeVNodeHook(ie,x,T,v),J&&invokeDirectiveHook(T,v,x,"updated")},N)},q=(v,T,x,N,O,F,G)=>{for(let D=0;D<T.length;D++){const W=v[D],B=T[D],J=W.el&&(W.type===Fragment||!isSameVNodeType(W,B)||W.shapeFlag&70)?f(W.el):x;y(W,B,J,null,N,O,F,G,!0)}},L=(v,T,x,N,O,F,G)=>{if(x!==N){if(x!==EMPTY_OBJ)for(const D in x)!isReservedProp(D)&&!(D in N)&&r(v,D,x[D],null,G,T.children,O,F,ce);for(const D in N){if(isReservedProp(D))continue;const W=N[D],B=x[D];W!==B&&D!=="value"&&r(v,D,B,W,G,T.children,O,F,ce)}"value"in N&&r(v,"value",x.value,N.value)}},V=(v,T,x,N,O,F,G,D,W)=>{const B=T.el=v?v.el:c(""),J=T.anchor=v?v.anchor:c("");let{patchFlag:Q,dynamicChildren:ne,slotScopeIds:ie}=T;ie&&(D=D?D.concat(ie):ie),v==null?(s(B,x,N),s(J,x,N),b(T.children,x,J,O,F,G,D,W)):Q>0&&Q&64&&ne&&v.dynamicChildren?(q(v.dynamicChildren,ne,x,O,F,G,D),(T.key!=null||O&&T===O.subTree)&&traverseStaticChildren(v,T,!0)):X(v,T,x,J,O,F,G,D,W)},K=(v,T,x,N,O,F,G,D,W)=>{T.slotScopeIds=D,v==null?T.shapeFlag&512?O.ctx.activate(T,x,N,G,W):Y(T,x,N,O,F,G,W):te(v,T,W)},Y=(v,T,x,N,O,F,G)=>{const D=v.component=createComponentInstance(v,N,O);if(isKeepAlive(v)&&(D.ctx.renderer=z),setupComponent(D),D.asyncDep){if(O&&O.registerDep(D,H),!v.el){const W=D.subTree=createVNode(Comment);S(null,W,T,x)}return}H(D,v,T,x,O,F,G)},te=(v,T,x)=>{const N=T.component=v.component;if(shouldUpdateComponent(v,T,x))if(N.asyncDep&&!N.asyncResolved){U(N,T,x);return}else N.next=T,invalidateJob(N.update),N.update();else T.el=v.el,N.vnode=T},H=(v,T,x,N,O,F,G)=>{const D=()=>{if(v.isMounted){let{next:J,bu:Q,u:ne,parent:ie,vnode:le}=v,de=J,he;toggleRecurse(v,!1),J?(J.el=le.el,U(v,J,G)):J=le,Q&&invokeArrayFns(Q),(he=J.props&&J.props.onVnodeBeforeUpdate)&&invokeVNodeHook(he,ie,J,le),toggleRecurse(v,!0);const me=renderComponentRoot(v),_e=v.subTree;v.subTree=me,y(_e,me,f(_e.el),I(_e),v,O,F),J.el=me.el,de===null&&updateHOCHostEl(v,me.el),ne&&queuePostRenderEffect(ne,O),(he=J.props&&J.props.onVnodeUpdated)&&queuePostRenderEffect(()=>invokeVNodeHook(he,ie,J,le),O)}else{let J;const{el:Q,props:ne}=T,{bm:ie,m:le,parent:de}=v,he=isAsyncWrapper(T);if(toggleRecurse(v,!1),ie&&invokeArrayFns(ie),!he&&(J=ne&&ne.onVnodeBeforeMount)&&invokeVNodeHook(J,de,T),toggleRecurse(v,!0),Q&&ue){const me=()=>{v.subTree=renderComponentRoot(v),ue(Q,v.subTree,v,O,null)};he?T.type.__asyncLoader().then(()=>!v.isUnmounted&&me()):me()}else{const me=v.subTree=renderComponentRoot(v);y(null,me,x,N,v,O,F),T.el=me.el}if(le&&queuePostRenderEffect(le,O),!he&&(J=ne&&ne.onVnodeMounted)){const me=T;queuePostRenderEffect(()=>invokeVNodeHook(J,de,me),O)}(T.shapeFlag&256||de&&isAsyncWrapper(de.vnode)&&de.vnode.shapeFlag&256)&&v.a&&queuePostRenderEffect(v.a,O),v.isMounted=!0,T=x=N=null}},W=v.effect=new ReactiveEffect(D,()=>queueJob(B),v.scope),B=v.update=()=>W.run();B.id=v.uid,toggleRecurse(v,!0),B()},U=(v,T,x)=>{T.component=v;const N=v.vnode.props;v.vnode=T,v.next=null,updateProps(v,T.props,N,x),updateSlots(v,T.children,x),pauseTracking(),flushPreFlushCbs(),resetTracking()},X=(v,T,x,N,O,F,G,D,W=!1)=>{const B=v&&v.children,J=v?v.shapeFlag:0,Q=T.children,{patchFlag:ne,shapeFlag:ie}=T;if(ne>0){if(ne&128){oe(B,Q,x,N,O,F,G,D,W);return}else if(ne&256){ee(B,Q,x,N,O,F,G,D,W);return}}ie&8?(J&16&&ce(B,O,F),Q!==B&&d(x,Q)):J&16?ie&16?oe(B,Q,x,N,O,F,G,D,W):ce(B,O,F,!0):(J&8&&d(x,""),ie&16&&b(Q,x,N,O,F,G,D,W))},ee=(v,T,x,N,O,F,G,D,W)=>{v=v||EMPTY_ARR,T=T||EMPTY_ARR;const B=v.length,J=T.length,Q=Math.min(B,J);let ne;for(ne=0;ne<Q;ne++){const ie=T[ne]=W?cloneIfMounted(T[ne]):normalizeVNode(T[ne]);y(v[ne],ie,x,null,O,F,G,D,W)}B>J?ce(v,O,F,!0,!1,Q):b(T,x,N,O,F,G,D,W,Q)},oe=(v,T,x,N,O,F,G,D,W)=>{let B=0;const J=T.length;let Q=v.length-1,ne=J-1;for(;B<=Q&&B<=ne;){const ie=v[B],le=T[B]=W?cloneIfMounted(T[B]):normalizeVNode(T[B]);if(isSameVNodeType(ie,le))y(ie,le,x,null,O,F,G,D,W);else break;B++}for(;B<=Q&&B<=ne;){const ie=v[Q],le=T[ne]=W?cloneIfMounted(T[ne]):normalizeVNode(T[ne]);if(isSameVNodeType(ie,le))y(ie,le,x,null,O,F,G,D,W);else break;Q--,ne--}if(B>Q){if(B<=ne){const ie=ne+1,le=ie<J?T[ie].el:N;for(;B<=ne;)y(null,T[B]=W?cloneIfMounted(T[B]):normalizeVNode(T[B]),x,le,O,F,G,D,W),B++}}else if(B>ne)for(;B<=Q;)re(v[B],O,F,!0),B++;else{const ie=B,le=B,de=new Map;for(B=le;B<=ne;B++){const ge=T[B]=W?cloneIfMounted(T[B]):normalizeVNode(T[B]);ge.key!=null&&de.set(ge.key,B)}let he,me=0;const _e=ne-le+1;let ve=!1,be=0;const Ae=new Array(_e);for(B=0;B<_e;B++)Ae[B]=0;for(B=ie;B<=Q;B++){const ge=v[B];if(me>=_e){re(ge,O,F,!0);continue}let ye;if(ge.key!=null)ye=de.get(ge.key);else for(he=le;he<=ne;he++)if(Ae[he-le]===0&&isSameVNodeType(ge,T[he])){ye=he;break}ye===void 0?re(ge,O,F,!0):(Ae[ye-le]=B+1,ye>=be?be=ye:ve=!0,y(ge,T[ye],x,null,O,F,G,D,W),me++)}const xe=ve?getSequence(Ae):EMPTY_ARR;for(he=xe.length-1,B=_e-1;B>=0;B--){const ge=le+B,ye=T[ge],we=ge+1<J?T[ge+1].el:N;Ae[B]===0?y(null,ye,x,we,O,F,G,D,W):ve&&(he<0||B!==xe[he]?se(ye,x,we,2):he--)}}},se=(v,T,x,N,O=null)=>{const{el:F,type:G,transition:D,children:W,shapeFlag:B}=v;if(B&6){se(v.component.subTree,T,x,N);return}if(B&128){v.suspense.move(T,x,N);return}if(B&64){G.move(v,T,x,z);return}if(G===Fragment){s(F,T,x);for(let Q=0;Q<W.length;Q++)se(W[Q],T,x,N);s(v.anchor,T,x);return}if(G===Static){M(v,T,x);return}if(N!==2&&B&1&&D)if(N===0)D.beforeEnter(F),s(F,T,x),queuePostRenderEffect(()=>D.enter(F),O);else{const{leave:Q,delayLeave:ne,afterLeave:ie}=D,le=()=>s(F,T,x),de=()=>{Q(F,()=>{le(),ie&&ie()})};ne?ne(F,le,de):de()}else s(F,T,x)},re=(v,T,x,N=!1,O=!1)=>{const{type:F,props:G,ref:D,children:W,dynamicChildren:B,shapeFlag:J,patchFlag:Q,dirs:ne}=v;if(D!=null&&setRef(D,null,x,v,!0),J&256){T.ctx.deactivate(v);return}const ie=J&1&&ne,le=!isAsyncWrapper(v);let de;if(le&&(de=G&&G.onVnodeBeforeUnmount)&&invokeVNodeHook(de,T,v),J&6)ae(v.component,x,N);else{if(J&128){v.suspense.unmount(x,N);return}ie&&invokeDirectiveHook(v,null,T,"beforeUnmount"),J&64?v.type.remove(v,T,x,O,z,N):B&&(F!==Fragment||Q>0&&Q&64)?ce(B,T,x,!1,!0):(F===Fragment&&Q&384||!O&&J&16)&&ce(W,T,x),N&&pe(v)}(le&&(de=G&&G.onVnodeUnmounted)||ie)&&queuePostRenderEffect(()=>{de&&invokeVNodeHook(de,T,v),ie&&invokeDirectiveHook(v,null,T,"unmounted")},x)},pe=v=>{const{type:T,el:x,anchor:N,transition:O}=v;if(T===Fragment){fe(x,N);return}if(T===Static){k(v);return}const F=()=>{o(x),O&&!O.persisted&&O.afterLeave&&O.afterLeave()};if(v.shapeFlag&1&&O&&!O.persisted){const{leave:G,delayLeave:D}=O,W=()=>G(x,F);D?D(v.el,F,W):W()}else F()},fe=(v,T)=>{let x;for(;v!==T;)x=m(v),o(v),v=x;o(T)},ae=(v,T,x)=>{const{bum:N,scope:O,update:F,subTree:G,um:D}=v;N&&invokeArrayFns(N),O.stop(),F&&(F.active=!1,re(G,v,T,x)),D&&queuePostRenderEffect(D,T),queuePostRenderEffect(()=>{v.isUnmounted=!0},T),T&&T.pendingBranch&&!T.isUnmounted&&v.asyncDep&&!v.asyncResolved&&v.suspenseId===T.pendingId&&(T.deps--,T.deps===0&&T.resolve())},ce=(v,T,x,N=!1,O=!1,F=0)=>{for(let G=F;G<v.length;G++)re(v[G],T,x,N,O)},I=v=>v.shapeFlag&6?I(v.component.subTree):v.shapeFlag&128?v.suspense.next():m(v.anchor||v.el),R=(v,T,x)=>{v==null?T._vnode&&re(T._vnode,null,null,!0):y(T._vnode||null,v,T,null,null,null,x),flushPreFlushCbs(),flushPostFlushCbs(),T._vnode=v},z={p:y,um:re,m:se,r:pe,mt:Y,mc:b,pc:X,pbc:q,n:I,o:n};let Z,ue;return e&&([Z,ue]=e(z)),{render:R,hydrate:Z,createApp:createAppAPI(R,Z)}}function toggleRecurse({effect:n,update:e},t){n.allowRecurse=e.allowRecurse=t}function traverseStaticChildren(n,e,t=!1){const s=n.children,o=e.children;if(isArray$2(s)&&isArray$2(o))for(let r=0;r<s.length;r++){const a=s[r];let c=o[r];c.shapeFlag&1&&!c.dynamicChildren&&((c.patchFlag<=0||c.patchFlag===32)&&(c=o[r]=cloneIfMounted(o[r]),c.el=a.el),t||traverseStaticChildren(a,c)),c.type===Text&&(c.el=a.el)}}function getSequence(n){const e=n.slice(),t=[0];let s,o,r,a,c;const l=n.length;for(s=0;s<l;s++){const u=n[s];if(u!==0){if(o=t[t.length-1],n[o]<u){e[s]=o,t.push(s);continue}for(r=0,a=t.length-1;r<a;)c=r+a>>1,n[t[c]]<u?r=c+1:a=c;u<n[t[r]]&&(r>0&&(e[s]=t[r-1]),t[r]=s)}}for(r=t.length,a=t[r-1];r-- >0;)t[r]=a,a=e[a];return t}const isTeleport=n=>n.__isTeleport,Fragment=Symbol.for("v-fgt"),Text=Symbol.for("v-txt"),Comment=Symbol.for("v-cmt"),Static=Symbol.for("v-stc"),blockStack=[];let currentBlock=null;function openBlock(n=!1){blockStack.push(currentBlock=n?null:[])}function closeBlock(){blockStack.pop(),currentBlock=blockStack[blockStack.length-1]||null}let isBlockTreeEnabled=1;function setBlockTracking(n){isBlockTreeEnabled+=n}function setupBlock(n){return n.dynamicChildren=isBlockTreeEnabled>0?currentBlock||EMPTY_ARR:null,closeBlock(),isBlockTreeEnabled>0&&currentBlock&&currentBlock.push(n),n}function createElementBlock(n,e,t,s,o,r){return setupBlock(createBaseVNode(n,e,t,s,o,r,!0))}function createBlock(n,e,t,s,o){return setupBlock(createVNode(n,e,t,s,o,!0))}function isVNode(n){return n?n.__v_isVNode===!0:!1}function isSameVNodeType(n,e){return n.type===e.type&&n.key===e.key}const InternalObjectKey="__vInternal",normalizeKey=({key:n})=>n??null,normalizeRef=({ref:n,ref_key:e,ref_for:t})=>(typeof n=="number"&&(n=""+n),n!=null?isString$1(n)||isRef(n)||isFunction$1(n)?{i:currentRenderingInstance,r:n,k:e,f:!!t}:n:null);function createBaseVNode(n,e=null,t=null,s=0,o=null,r=n===Fragment?0:1,a=!1,c=!1){const l={__v_isVNode:!0,__v_skip:!0,type:n,props:e,key:e&&normalizeKey(e),ref:e&&normalizeRef(e),scopeId:currentScopeId,slotScopeIds:null,children:t,component:null,suspense:null,ssContent:null,ssFallback:null,dirs:null,transition:null,el:null,anchor:null,target:null,targetAnchor:null,staticCount:0,shapeFlag:r,patchFlag:s,dynamicProps:o,dynamicChildren:null,appContext:null,ctx:currentRenderingInstance};return c?(normalizeChildren(l,t),r&128&&n.normalize(l)):t&&(l.shapeFlag|=isString$1(t)?8:16),isBlockTreeEnabled>0&&!a&&currentBlock&&(l.patchFlag>0||r&6)&&l.patchFlag!==32&&currentBlock.push(l),l}const createVNode=_createVNode;function _createVNode(n,e=null,t=null,s=0,o=null,r=!1){if((!n||n===NULL_DYNAMIC_COMPONENT)&&(n=Comment),isVNode(n)){const c=cloneVNode(n,e,!0);return t&&normalizeChildren(c,t),isBlockTreeEnabled>0&&!r&&currentBlock&&(c.shapeFlag&6?currentBlock[currentBlock.indexOf(n)]=c:currentBlock.push(c)),c.patchFlag|=-2,c}if(isClassComponent(n)&&(n=n.__vccOpts),e){e=guardReactiveProps(e);let{class:c,style:l}=e;c&&!isString$1(c)&&(e.class=normalizeClass(c)),isObject$1(l)&&(isProxy(l)&&!isArray$2(l)&&(l=extend({},l)),e.style=normalizeStyle(l))}const a=isString$1(n)?1:isSuspense(n)?128:isTeleport(n)?64:isObject$1(n)?4:isFunction$1(n)?2:0;return createBaseVNode(n,e,t,s,o,a,r,!0)}function guardReactiveProps(n){return n?isProxy(n)||InternalObjectKey in n?extend({},n):n:null}function cloneVNode(n,e,t=!1){const{props:s,ref:o,patchFlag:r,children:a}=n,c=e?mergeProps(s||{},e):s;return{__v_isVNode:!0,__v_skip:!0,type:n.type,props:c,key:c&&normalizeKey(c),ref:e&&e.ref?t&&o?isArray$2(o)?o.concat(normalizeRef(e)):[o,normalizeRef(e)]:normalizeRef(e):o,scopeId:n.scopeId,slotScopeIds:n.slotScopeIds,children:a,target:n.target,targetAnchor:n.targetAnchor,staticCount:n.staticCount,shapeFlag:n.shapeFlag,patchFlag:e&&n.type!==Fragment?r===-1?16:r|16:r,dynamicProps:n.dynamicProps,dynamicChildren:n.dynamicChildren,appContext:n.appContext,dirs:n.dirs,transition:n.transition,component:n.component,suspense:n.suspense,ssContent:n.ssContent&&cloneVNode(n.ssContent),ssFallback:n.ssFallback&&cloneVNode(n.ssFallback),el:n.el,anchor:n.anchor,ctx:n.ctx,ce:n.ce}}function createTextVNode(n=" ",e=0){return createVNode(Text,null,n,e)}function createCommentVNode(n="",e=!1){return e?(openBlock(),createBlock(Comment,null,n)):createVNode(Comment,null,n)}function normalizeVNode(n){return n==null||typeof n=="boolean"?createVNode(Comment):isArray$2(n)?createVNode(Fragment,null,n.slice()):typeof n=="object"?cloneIfMounted(n):createVNode(Text,null,String(n))}function cloneIfMounted(n){return n.el===null&&n.patchFlag!==-1||n.memo?n:cloneVNode(n)}function normalizeChildren(n,e){let t=0;const{shapeFlag:s}=n;if(e==null)e=null;else if(isArray$2(e))t=16;else if(typeof e=="object")if(s&65){const o=e.default;o&&(o._c&&(o._d=!1),normalizeChildren(n,o()),o._c&&(o._d=!0));return}else{t=32;const o=e._;!o&&!(InternalObjectKey in e)?e._ctx=currentRenderingInstance:o===3&&currentRenderingInstance&&(currentRenderingInstance.slots._===1?e._=1:(e._=2,n.patchFlag|=1024))}else isFunction$1(e)?(e={default:e,_ctx:currentRenderingInstance},t=32):(e=String(e),s&64?(t=16,e=[createTextVNode(e)]):t=8);n.children=e,n.shapeFlag|=t}function mergeProps(...n){const e={};for(let t=0;t<n.length;t++){const s=n[t];for(const o in s)if(o==="class")e.class!==s.class&&(e.class=normalizeClass([e.class,s.class]));else if(o==="style")e.style=normalizeStyle([e.style,s.style]);else if(isOn(o)){const r=e[o],a=s[o];a&&r!==a&&!(isArray$2(r)&&r.includes(a))&&(e[o]=r?[].concat(r,a):a)}else o!==""&&(e[o]=s[o])}return e}function invokeVNodeHook(n,e,t,s=null){callWithAsyncErrorHandling(n,e,7,[t,s])}const emptyAppContext=createAppContext();let uid=0;function createComponentInstance(n,e,t){const s=n.type,o=(e?e.appContext:n.appContext)||emptyAppContext,r={uid:uid++,vnode:n,type:s,parent:e,appContext:o,root:null,next:null,subTree:null,effect:null,update:null,scope:new EffectScope(!0),render:null,proxy:null,exposed:null,exposeProxy:null,withProxy:null,provides:e?e.provides:Object.create(o.provides),accessCache:null,renderCache:[],components:null,directives:null,propsOptions:normalizePropsOptions(s,o),emitsOptions:normalizeEmitsOptions(s,o),emit:null,emitted:null,propsDefaults:EMPTY_OBJ,inheritAttrs:s.inheritAttrs,ctx:EMPTY_OBJ,data:EMPTY_OBJ,props:EMPTY_OBJ,attrs:EMPTY_OBJ,slots:EMPTY_OBJ,refs:EMPTY_OBJ,setupState:EMPTY_OBJ,setupContext:null,attrsProxy:null,slotsProxy:null,suspense:t,suspenseId:t?t.pendingId:0,asyncDep:null,asyncResolved:!1,isMounted:!1,isUnmounted:!1,isDeactivated:!1,bc:null,c:null,bm:null,m:null,bu:null,u:null,um:null,bum:null,da:null,a:null,rtg:null,rtc:null,ec:null,sp:null};return r.ctx={_:r},r.root=e?e.root:r,r.emit=emit.bind(null,r),n.ce&&n.ce(r),r}let currentInstance=null,internalSetCurrentInstance,globalCurrentInstanceSetters,settersKey="__VUE_INSTANCE_SETTERS__";(globalCurrentInstanceSetters=getGlobalThis()[settersKey])||(globalCurrentInstanceSetters=getGlobalThis()[settersKey]=[]),globalCurrentInstanceSetters.push(n=>currentInstance=n),internalSetCurrentInstance=n=>{globalCurrentInstanceSetters.length>1?globalCurrentInstanceSetters.forEach(e=>e(n)):globalCurrentInstanceSetters[0](n)};const setCurrentInstance=n=>{internalSetCurrentInstance(n),n.scope.on()},unsetCurrentInstance=()=>{currentInstance&&currentInstance.scope.off(),internalSetCurrentInstance(null)};function isStatefulComponent(n){return n.vnode.shapeFlag&4}let isInSSRComponentSetup=!1;function setupComponent(n,e=!1){isInSSRComponentSetup=e;const{props:t,children:s}=n.vnode,o=isStatefulComponent(n);initProps(n,t,o,e),initSlots(n,s);const r=o?setupStatefulComponent(n,e):void 0;return isInSSRComponentSetup=!1,r}function setupStatefulComponent(n,e){const t=n.type;n.accessCache=Object.create(null),n.proxy=markRaw(new Proxy(n.ctx,PublicInstanceProxyHandlers));const{setup:s}=t;if(s){const o=n.setupContext=s.length>1?createSetupContext(n):null;setCurrentInstance(n),pauseTracking();const r=callWithErrorHandling(s,n,0,[n.props,o]);if(resetTracking(),unsetCurrentInstance(),isPromise(r)){if(r.then(unsetCurrentInstance,unsetCurrentInstance),e)return r.then(a=>{handleSetupResult(n,a,e)}).catch(a=>{handleError(a,n,0)});n.asyncDep=r}else handleSetupResult(n,r,e)}else finishComponentSetup(n,e)}function handleSetupResult(n,e,t){isFunction$1(e)?n.type.__ssrInlineRender?n.ssrRender=e:n.render=e:isObject$1(e)&&(n.setupState=proxyRefs(e)),finishComponentSetup(n,t)}let compile;function finishComponentSetup(n,e,t){const s=n.type;if(!n.render){if(!e&&compile&&!s.render){const o=s.template||resolveMergedOptions(n).template;if(o){const{isCustomElement:r,compilerOptions:a}=n.appContext.config,{delimiters:c,compilerOptions:l}=s,u=extend(extend({isCustomElement:r,delimiters:c},a),l);s.render=compile(o,u)}}n.render=s.render||NOOP}setCurrentInstance(n),pauseTracking(),applyOptions(n),resetTracking(),unsetCurrentInstance()}function getAttrsProxy(n){return n.attrsProxy||(n.attrsProxy=new Proxy(n.attrs,{get(e,t){return track(n,"get","$attrs"),e[t]}}))}function createSetupContext(n){const e=t=>{n.exposed=t||{}};return{get attrs(){return getAttrsProxy(n)},slots:n.slots,emit:n.emit,expose:e}}function getExposeProxy(n){if(n.exposed)return n.exposeProxy||(n.exposeProxy=new Proxy(proxyRefs(markRaw(n.exposed)),{get(e,t){if(t in e)return e[t];if(t in publicPropertiesMap)return publicPropertiesMap[t](n)},has(e,t){return t in e||t in publicPropertiesMap}}))}function getComponentName(n,e=!0){return isFunction$1(n)?n.displayName||n.name:n.name||e&&n.__name}function isClassComponent(n){return isFunction$1(n)&&"__vccOpts"in n}const computed=(n,e)=>computed$1(n,e,isInSSRComponentSetup);function h(n,e,t){const s=arguments.length;return s===2?isObject$1(e)&&!isArray$2(e)?isVNode(e)?createVNode(n,null,[e]):createVNode(n,e):createVNode(n,null,e):(s>3?t=Array.prototype.slice.call(arguments,2):s===3&&isVNode(t)&&(t=[t]),createVNode(n,e,t))}const ssrContextKey=Symbol.for("v-scx"),useSSRContext=()=>inject(ssrContextKey),version$1="3.3.4",svgNS="http://www.w3.org/2000/svg",doc=typeof document<"u"?document:null,templateContainer=doc&&doc.createElement("template"),nodeOps={insert:(n,e,t)=>{e.insertBefore(n,t||null)},remove:n=>{const e=n.parentNode;e&&e.removeChild(n)},createElement:(n,e,t,s)=>{const o=e?doc.createElementNS(svgNS,n):doc.createElement(n,t?{is:t}:void 0);return n==="select"&&s&&s.multiple!=null&&o.setAttribute("multiple",s.multiple),o},createText:n=>doc.createTextNode(n),createComment:n=>doc.createComment(n),setText:(n,e)=>{n.nodeValue=e},setElementText:(n,e)=>{n.textContent=e},parentNode:n=>n.parentNode,nextSibling:n=>n.nextSibling,querySelector:n=>doc.querySelector(n),setScopeId(n,e){n.setAttribute(e,"")},insertStaticContent(n,e,t,s,o,r){const a=t?t.previousSibling:e.lastChild;if(o&&(o===r||o.nextSibling))for(;e.insertBefore(o.cloneNode(!0),t),!(o===r||!(o=o.nextSibling)););else{templateContainer.innerHTML=s?`<svg>${n}</svg>`:n;const c=templateContainer.content;if(s){const l=c.firstChild;for(;l.firstChild;)c.appendChild(l.firstChild);c.removeChild(l)}e.insertBefore(c,t)}return[a?a.nextSibling:e.firstChild,t?t.previousSibling:e.lastChild]}};function patchClass(n,e,t){const s=n._vtc;s&&(e=(e?[e,...s]:[...s]).join(" ")),e==null?n.removeAttribute("class"):t?n.setAttribute("class",e):n.className=e}function patchStyle(n,e,t){const s=n.style,o=isString$1(t);if(t&&!o){if(e&&!isString$1(e))for(const r in e)t[r]==null&&setStyle(s,r,"");for(const r in t)setStyle(s,r,t[r])}else{const r=s.display;o?e!==t&&(s.cssText=t):e&&n.removeAttribute("style"),"_vod"in n&&(s.display=r)}}const importantRE=/\s*!important$/;function setStyle(n,e,t){if(isArray$2(t))t.forEach(s=>setStyle(n,e,s));else if(t==null&&(t=""),e.startsWith("--"))n.setProperty(e,t);else{const s=autoPrefix(n,e);importantRE.test(t)?n.setProperty(hyphenate(s),t.replace(importantRE,""),"important"):n[s]=t}}const prefixes=["Webkit","Moz","ms"],prefixCache={};function autoPrefix(n,e){const t=prefixCache[e];if(t)return t;let s=camelize(e);if(s!=="filter"&&s in n)return prefixCache[e]=s;s=capitalize(s);for(let o=0;o<prefixes.length;o++){const r=prefixes[o]+s;if(r in n)return prefixCache[e]=r}return e}const xlinkNS="http://www.w3.org/1999/xlink";function patchAttr(n,e,t,s,o){if(s&&e.startsWith("xlink:"))t==null?n.removeAttributeNS(xlinkNS,e.slice(6,e.length)):n.setAttributeNS(xlinkNS,e,t);else{const r=isSpecialBooleanAttr(e);t==null||r&&!includeBooleanAttr(t)?n.removeAttribute(e):n.setAttribute(e,r?"":t)}}function patchDOMProp(n,e,t,s,o,r,a){if(e==="innerHTML"||e==="textContent"){s&&a(s,o,r),n[e]=t??"";return}const c=n.tagName;if(e==="value"&&c!=="PROGRESS"&&!c.includes("-")){n._value=t;const u=c==="OPTION"?n.getAttribute("value"):n.value,d=t??"";u!==d&&(n.value=d),t==null&&n.removeAttribute(e);return}let l=!1;if(t===""||t==null){const u=typeof n[e];u==="boolean"?t=includeBooleanAttr(t):t==null&&u==="string"?(t="",l=!0):u==="number"&&(t=0,l=!0)}try{n[e]=t}catch{}l&&n.removeAttribute(e)}function addEventListener(n,e,t,s){n.addEventListener(e,t,s)}function removeEventListener(n,e,t,s){n.removeEventListener(e,t,s)}function patchEvent(n,e,t,s,o=null){const r=n._vei||(n._vei={}),a=r[e];if(s&&a)a.value=s;else{const[c,l]=parseName(e);if(s){const u=r[e]=createInvoker(s,o);addEventListener(n,c,u,l)}else a&&(removeEventListener(n,c,a,l),r[e]=void 0)}}const optionsModifierRE=/(?:Once|Passive|Capture)$/;function parseName(n){let e;if(optionsModifierRE.test(n)){e={};let s;for(;s=n.match(optionsModifierRE);)n=n.slice(0,n.length-s[0].length),e[s[0].toLowerCase()]=!0}return[n[2]===":"?n.slice(3):hyphenate(n.slice(2)),e]}let cachedNow=0;const p=Promise.resolve(),getNow=()=>cachedNow||(p.then(()=>cachedNow=0),cachedNow=Date.now());function createInvoker(n,e){const t=s=>{if(!s._vts)s._vts=Date.now();else if(s._vts<=t.attached)return;callWithAsyncErrorHandling(patchStopImmediatePropagation(s,t.value),e,5,[s])};return t.value=n,t.attached=getNow(),t}function patchStopImmediatePropagation(n,e){if(isArray$2(e)){const t=n.stopImmediatePropagation;return n.stopImmediatePropagation=()=>{t.call(n),n._stopped=!0},e.map(s=>o=>!o._stopped&&s&&s(o))}else return e}const nativeOnRE=/^on[a-z]/,patchProp=(n,e,t,s,o=!1,r,a,c,l)=>{e==="class"?patchClass(n,s,o):e==="style"?patchStyle(n,t,s):isOn(e)?isModelListener(e)||patchEvent(n,e,t,s,a):(e[0]==="."?(e=e.slice(1),!0):e[0]==="^"?(e=e.slice(1),!1):shouldSetAsProp(n,e,s,o))?patchDOMProp(n,e,s,r,a,c,l):(e==="true-value"?n._trueValue=s:e==="false-value"&&(n._falseValue=s),patchAttr(n,e,s,o))};function shouldSetAsProp(n,e,t,s){return s?!!(e==="innerHTML"||e==="textContent"||e in n&&nativeOnRE.test(e)&&isFunction$1(t)):e==="spellcheck"||e==="draggable"||e==="translate"||e==="form"||e==="list"&&n.tagName==="INPUT"||e==="type"&&n.tagName==="TEXTAREA"||nativeOnRE.test(e)&&isString$1(t)?!1:e in n}const getModelAssigner=n=>{const e=n.props["onUpdate:modelValue"]||!1;return isArray$2(e)?t=>invokeArrayFns(e,t):e},vModelSelect={deep:!0,created(n,{value:e,modifiers:{number:t}},s){const o=isSet(e);addEventListener(n,"change",()=>{const r=Array.prototype.filter.call(n.options,a=>a.selected).map(a=>t?looseToNumber(getValue(a)):getValue(a));n._assign(n.multiple?o?new Set(r):r:r[0])}),n._assign=getModelAssigner(s)},mounted(n,{value:e}){setSelected(n,e)},beforeUpdate(n,e,t){n._assign=getModelAssigner(t)},updated(n,{value:e}){setSelected(n,e)}};function setSelected(n,e){const t=n.multiple;if(!(t&&!isArray$2(e)&&!isSet(e))){for(let s=0,o=n.options.length;s<o;s++){const r=n.options[s],a=getValue(r);if(t)isArray$2(e)?r.selected=looseIndexOf(e,a)>-1:r.selected=e.has(a);else if(looseEqual(getValue(r),e)){n.selectedIndex!==s&&(n.selectedIndex=s);return}}!t&&n.selectedIndex!==-1&&(n.selectedIndex=-1)}}function getValue(n){return"_value"in n?n._value:n.value}const systemModifiers=["ctrl","shift","alt","meta"],modifierGuards={stop:n=>n.stopPropagation(),prevent:n=>n.preventDefault(),self:n=>n.target!==n.currentTarget,ctrl:n=>!n.ctrlKey,shift:n=>!n.shiftKey,alt:n=>!n.altKey,meta:n=>!n.metaKey,left:n=>"button"in n&&n.button!==0,middle:n=>"button"in n&&n.button!==1,right:n=>"button"in n&&n.button!==2,exact:(n,e)=>systemModifiers.some(t=>n[`${t}Key`]&&!e.includes(t))},withModifiers=(n,e)=>(t,...s)=>{for(let o=0;o<e.length;o++){const r=modifierGuards[e[o]];if(r&&r(t,e))return}return n(t,...s)},rendererOptions=extend({patchProp},nodeOps);let renderer;function ensureRenderer(){return renderer||(renderer=createRenderer(rendererOptions))}const createApp=(...n)=>{const e=ensureRenderer().createApp(...n),{mount:t}=e;return e.mount=s=>{const o=normalizeContainer(s);if(!o)return;const r=e._component;!isFunction$1(r)&&!r.render&&!r.template&&(r.template=o.innerHTML),o.innerHTML="";const a=t(o,!1,o instanceof SVGElement);return o instanceof Element&&(o.removeAttribute("v-cloak"),o.setAttribute("data-v-app","")),a},e};function normalizeContainer(n){return isString$1(n)?document.querySelector(n):n}/*!
  * vue-router v4.2.5
  * (c) 2023 Eduardo San Martin Morote
  * @license MIT
  */const isBrowser=typeof window<"u";function isESModule(n){return n.__esModule||n[Symbol.toStringTag]==="Module"}const assign=Object.assign;function applyToParams(n,e){const t={};for(const s in e){const o=e[s];t[s]=isArray$1(o)?o.map(n):n(o)}return t}const noop=()=>{},isArray$1=Array.isArray,TRAILING_SLASH_RE=/\/$/,removeTrailingSlash=n=>n.replace(TRAILING_SLASH_RE,"");function parseURL(n,e,t="/"){let s,o={},r="",a="";const c=e.indexOf("#");let l=e.indexOf("?");return c<l&&c>=0&&(l=-1),l>-1&&(s=e.slice(0,l),r=e.slice(l+1,c>-1?c:e.length),o=n(r)),c>-1&&(s=s||e.slice(0,c),a=e.slice(c,e.length)),s=resolveRelativePath(s??e,t),{fullPath:s+(r&&"?")+r+a,path:s,query:o,hash:a}}function stringifyURL(n,e){const t=e.query?n(e.query):"";return e.path+(t&&"?")+t+(e.hash||"")}function stripBase(n,e){return!e||!n.toLowerCase().startsWith(e.toLowerCase())?n:n.slice(e.length)||"/"}function isSameRouteLocation(n,e,t){const s=e.matched.length-1,o=t.matched.length-1;return s>-1&&s===o&&isSameRouteRecord(e.matched[s],t.matched[o])&&isSameRouteLocationParams(e.params,t.params)&&n(e.query)===n(t.query)&&e.hash===t.hash}function isSameRouteRecord(n,e){return(n.aliasOf||n)===(e.aliasOf||e)}function isSameRouteLocationParams(n,e){if(Object.keys(n).length!==Object.keys(e).length)return!1;for(const t in n)if(!isSameRouteLocationParamsValue(n[t],e[t]))return!1;return!0}function isSameRouteLocationParamsValue(n,e){return isArray$1(n)?isEquivalentArray(n,e):isArray$1(e)?isEquivalentArray(e,n):n===e}function isEquivalentArray(n,e){return isArray$1(e)?n.length===e.length&&n.every((t,s)=>t===e[s]):n.length===1&&n[0]===e}function resolveRelativePath(n,e){if(n.startsWith("/"))return n;if(!n)return e;const t=e.split("/"),s=n.split("/"),o=s[s.length-1];(o===".."||o===".")&&s.push("");let r=t.length-1,a,c;for(a=0;a<s.length;a++)if(c=s[a],c!==".")if(c==="..")r>1&&r--;else break;return t.slice(0,r).join("/")+"/"+s.slice(a-(a===s.length?1:0)).join("/")}var NavigationType;(function(n){n.pop="pop",n.push="push"})(NavigationType||(NavigationType={}));var NavigationDirection;(function(n){n.back="back",n.forward="forward",n.unknown=""})(NavigationDirection||(NavigationDirection={}));function normalizeBase(n){if(!n)if(isBrowser){const e=document.querySelector("base");n=e&&e.getAttribute("href")||"/",n=n.replace(/^\w+:\/\/[^\/]+/,"")}else n="/";return n[0]!=="/"&&n[0]!=="#"&&(n="/"+n),removeTrailingSlash(n)}const BEFORE_HASH_RE=/^[^#]+#/;function createHref(n,e){return n.replace(BEFORE_HASH_RE,"#")+e}function getElementPosition(n,e){const t=document.documentElement.getBoundingClientRect(),s=n.getBoundingClientRect();return{behavior:e.behavior,left:s.left-t.left-(e.left||0),top:s.top-t.top-(e.top||0)}}const computeScrollPosition=()=>({left:window.pageXOffset,top:window.pageYOffset});function scrollToPosition(n){let e;if("el"in n){const t=n.el,s=typeof t=="string"&&t.startsWith("#"),o=typeof t=="string"?s?document.getElementById(t.slice(1)):document.querySelector(t):t;if(!o)return;e=getElementPosition(o,n)}else e=n;"scrollBehavior"in document.documentElement.style?window.scrollTo(e):window.scrollTo(e.left!=null?e.left:window.pageXOffset,e.top!=null?e.top:window.pageYOffset)}function getScrollKey(n,e){return(history.state?history.state.position-e:-1)+n}const scrollPositions=new Map;function saveScrollPosition(n,e){scrollPositions.set(n,e)}function getSavedScrollPosition(n){const e=scrollPositions.get(n);return scrollPositions.delete(n),e}let createBaseLocation=()=>location.protocol+"//"+location.host;function createCurrentLocation(n,e){const{pathname:t,search:s,hash:o}=e,r=n.indexOf("#");if(r>-1){let c=o.includes(n.slice(r))?n.slice(r).length:1,l=o.slice(c);return l[0]!=="/"&&(l="/"+l),stripBase(l,"")}return stripBase(t,n)+s+o}function useHistoryListeners(n,e,t,s){let o=[],r=[],a=null;const c=({state:m})=>{const g=createCurrentLocation(n,location),_=t.value,y=e.value;let A=0;if(m){if(t.value=g,e.value=m,a&&a===_){a=null;return}A=y?m.position-y.position:0}else s(g);o.forEach(S=>{S(t.value,_,{delta:A,type:NavigationType.pop,direction:A?A>0?NavigationDirection.forward:NavigationDirection.back:NavigationDirection.unknown})})};function l(){a=t.value}function u(m){o.push(m);const g=()=>{const _=o.indexOf(m);_>-1&&o.splice(_,1)};return r.push(g),g}function d(){const{history:m}=window;m.state&&m.replaceState(assign({},m.state,{scroll:computeScrollPosition()}),"")}function f(){for(const m of r)m();r=[],window.removeEventListener("popstate",c),window.removeEventListener("beforeunload",d)}return window.addEventListener("popstate",c),window.addEventListener("beforeunload",d,{passive:!0}),{pauseListeners:l,listen:u,destroy:f}}function buildState(n,e,t,s=!1,o=!1){return{back:n,current:e,forward:t,replaced:s,position:window.history.length,scroll:o?computeScrollPosition():null}}function useHistoryStateNavigation(n){const{history:e,location:t}=window,s={value:createCurrentLocation(n,t)},o={value:e.state};o.value||r(s.value,{back:null,current:s.value,forward:null,position:e.length-1,replaced:!0,scroll:null},!0);function r(l,u,d){const f=n.indexOf("#"),m=f>-1?(t.host&&document.querySelector("base")?n:n.slice(f))+l:createBaseLocation()+n+l;try{e[d?"replaceState":"pushState"](u,"",m),o.value=u}catch(g){console.error(g),t[d?"replace":"assign"](m)}}function a(l,u){const d=assign({},e.state,buildState(o.value.back,l,o.value.forward,!0),u,{position:o.value.position});r(l,d,!0),s.value=l}function c(l,u){const d=assign({},o.value,e.state,{forward:l,scroll:computeScrollPosition()});r(d.current,d,!0);const f=assign({},buildState(s.value,l,null),{position:d.position+1},u);r(l,f,!1),s.value=l}return{location:s,state:o,push:c,replace:a}}function createWebHistory(n){n=normalizeBase(n);const e=useHistoryStateNavigation(n),t=useHistoryListeners(n,e.state,e.location,e.replace);function s(r,a=!0){a||t.pauseListeners(),history.go(r)}const o=assign({location:"",base:n,go:s,createHref:createHref.bind(null,n)},e,t);return Object.defineProperty(o,"location",{enumerable:!0,get:()=>e.location.value}),Object.defineProperty(o,"state",{enumerable:!0,get:()=>e.state.value}),o}function isRouteLocation(n){return typeof n=="string"||n&&typeof n=="object"}function isRouteName(n){return typeof n=="string"||typeof n=="symbol"}const START_LOCATION_NORMALIZED={path:"/",name:void 0,params:{},query:{},hash:"",fullPath:"/",matched:[],meta:{},redirectedFrom:void 0},NavigationFailureSymbol=Symbol("");var NavigationFailureType;(function(n){n[n.aborted=4]="aborted",n[n.cancelled=8]="cancelled",n[n.duplicated=16]="duplicated"})(NavigationFailureType||(NavigationFailureType={}));function createRouterError(n,e){return assign(new Error,{type:n,[NavigationFailureSymbol]:!0},e)}function isNavigationFailure(n,e){return n instanceof Error&&NavigationFailureSymbol in n&&(e==null||!!(n.type&e))}const BASE_PARAM_PATTERN="[^/]+?",BASE_PATH_PARSER_OPTIONS={sensitive:!1,strict:!1,start:!0,end:!0},REGEX_CHARS_RE=/[.+*?^${}()[\]/\\]/g;function tokensToParser(n,e){const t=assign({},BASE_PATH_PARSER_OPTIONS,e),s=[];let o=t.start?"^":"";const r=[];for(const u of n){const d=u.length?[]:[90];t.strict&&!u.length&&(o+="/");for(let f=0;f<u.length;f++){const m=u[f];let g=40+(t.sensitive?.25:0);if(m.type===0)f||(o+="/"),o+=m.value.replace(REGEX_CHARS_RE,"\\$&"),g+=40;else if(m.type===1){const{value:_,repeatable:y,optional:A,regexp:S}=m;r.push({name:_,repeatable:y,optional:A});const w=S||BASE_PARAM_PATTERN;if(w!==BASE_PARAM_PATTERN){g+=10;try{new RegExp(`(${w})`)}catch(k){throw new Error(`Invalid custom RegExp for param "${_}" (${w}): `+k.message)}}let M=y?`((?:${w})(?:/(?:${w}))*)`:`(${w})`;f||(M=A&&u.length<2?`(?:/${M})`:"/"+M),A&&(M+="?"),o+=M,g+=20,A&&(g+=-8),y&&(g+=-20),w===".*"&&(g+=-50)}d.push(g)}s.push(d)}if(t.strict&&t.end){const u=s.length-1;s[u][s[u].length-1]+=.7000000000000001}t.strict||(o+="/?"),t.end?o+="$":t.strict&&(o+="(?:/|$)");const a=new RegExp(o,t.sensitive?"":"i");function c(u){const d=u.match(a),f={};if(!d)return null;for(let m=1;m<d.length;m++){const g=d[m]||"",_=r[m-1];f[_.name]=g&&_.repeatable?g.split("/"):g}return f}function l(u){let d="",f=!1;for(const m of n){(!f||!d.endsWith("/"))&&(d+="/"),f=!1;for(const g of m)if(g.type===0)d+=g.value;else if(g.type===1){const{value:_,repeatable:y,optional:A}=g,S=_ in u?u[_]:"";if(isArray$1(S)&&!y)throw new Error(`Provided param "${_}" is an array but it is not repeatable (* or + modifiers)`);const w=isArray$1(S)?S.join("/"):S;if(!w)if(A)m.length<2&&(d.endsWith("/")?d=d.slice(0,-1):f=!0);else throw new Error(`Missing required param "${_}"`);d+=w}}return d||"/"}return{re:a,score:s,keys:r,parse:c,stringify:l}}function compareScoreArray(n,e){let t=0;for(;t<n.length&&t<e.length;){const s=e[t]-n[t];if(s)return s;t++}return n.length<e.length?n.length===1&&n[0]===40+40?-1:1:n.length>e.length?e.length===1&&e[0]===40+40?1:-1:0}function comparePathParserScore(n,e){let t=0;const s=n.score,o=e.score;for(;t<s.length&&t<o.length;){const r=compareScoreArray(s[t],o[t]);if(r)return r;t++}if(Math.abs(o.length-s.length)===1){if(isLastScoreNegative(s))return 1;if(isLastScoreNegative(o))return-1}return o.length-s.length}function isLastScoreNegative(n){const e=n[n.length-1];return n.length>0&&e[e.length-1]<0}const ROOT_TOKEN={type:0,value:""},VALID_PARAM_RE=/[a-zA-Z0-9_]/;function tokenizePath(n){if(!n)return[[]];if(n==="/")return[[ROOT_TOKEN]];if(!n.startsWith("/"))throw new Error(`Invalid path "${n}"`);function e(g){throw new Error(`ERR (${t})/"${u}": ${g}`)}let t=0,s=t;const o=[];let r;function a(){r&&o.push(r),r=[]}let c=0,l,u="",d="";function f(){u&&(t===0?r.push({type:0,value:u}):t===1||t===2||t===3?(r.length>1&&(l==="*"||l==="+")&&e(`A repeatable param (${u}) must be alone in its segment. eg: '/:ids+.`),r.push({type:1,value:u,regexp:d,repeatable:l==="*"||l==="+",optional:l==="*"||l==="?"})):e("Invalid state to consume buffer"),u="")}function m(){u+=l}for(;c<n.length;){if(l=n[c++],l==="\\"&&t!==2){s=t,t=4;continue}switch(t){case 0:l==="/"?(u&&f(),a()):l===":"?(f(),t=1):m();break;case 4:m(),t=s;break;case 1:l==="("?t=2:VALID_PARAM_RE.test(l)?m():(f(),t=0,l!=="*"&&l!=="?"&&l!=="+"&&c--);break;case 2:l===")"?d[d.length-1]=="\\"?d=d.slice(0,-1)+l:t=3:d+=l;break;case 3:f(),t=0,l!=="*"&&l!=="?"&&l!=="+"&&c--,d="";break;default:e("Unknown state");break}}return t===2&&e(`Unfinished custom RegExp for param "${u}"`),f(),a(),o}function createRouteRecordMatcher(n,e,t){const s=tokensToParser(tokenizePath(n.path),t),o=assign(s,{record:n,parent:e,children:[],alias:[]});return e&&!o.record.aliasOf==!e.record.aliasOf&&e.children.push(o),o}function createRouterMatcher(n,e){const t=[],s=new Map;e=mergeOptions({strict:!1,end:!0,sensitive:!1},e);function o(d){return s.get(d)}function r(d,f,m){const g=!m,_=normalizeRouteRecord(d);_.aliasOf=m&&m.record;const y=mergeOptions(e,d),A=[_];if("alias"in d){const M=typeof d.alias=="string"?[d.alias]:d.alias;for(const k of M)A.push(assign({},_,{components:m?m.record.components:_.components,path:k,aliasOf:m?m.record:_}))}let S,w;for(const M of A){const{path:k}=M;if(f&&k[0]!=="/"){const C=f.record.path,E=C[C.length-1]==="/"?"":"/";M.path=f.record.path+(k&&E+k)}if(S=createRouteRecordMatcher(M,f,y),m?m.alias.push(S):(w=w||S,w!==S&&w.alias.push(S),g&&d.name&&!isAliasRecord(S)&&a(d.name)),_.children){const C=_.children;for(let E=0;E<C.length;E++)r(C[E],S,m&&m.children[E])}m=m||S,(S.record.components&&Object.keys(S.record.components).length||S.record.name||S.record.redirect)&&l(S)}return w?()=>{a(w)}:noop}function a(d){if(isRouteName(d)){const f=s.get(d);f&&(s.delete(d),t.splice(t.indexOf(f),1),f.children.forEach(a),f.alias.forEach(a))}else{const f=t.indexOf(d);f>-1&&(t.splice(f,1),d.record.name&&s.delete(d.record.name),d.children.forEach(a),d.alias.forEach(a))}}function c(){return t}function l(d){let f=0;for(;f<t.length&&comparePathParserScore(d,t[f])>=0&&(d.record.path!==t[f].record.path||!isRecordChildOf(d,t[f]));)f++;t.splice(f,0,d),d.record.name&&!isAliasRecord(d)&&s.set(d.record.name,d)}function u(d,f){let m,g={},_,y;if("name"in d&&d.name){if(m=s.get(d.name),!m)throw createRouterError(1,{location:d});y=m.record.name,g=assign(paramsFromLocation(f.params,m.keys.filter(w=>!w.optional).map(w=>w.name)),d.params&&paramsFromLocation(d.params,m.keys.map(w=>w.name))),_=m.stringify(g)}else if("path"in d)_=d.path,m=t.find(w=>w.re.test(_)),m&&(g=m.parse(_),y=m.record.name);else{if(m=f.name?s.get(f.name):t.find(w=>w.re.test(f.path)),!m)throw createRouterError(1,{location:d,currentLocation:f});y=m.record.name,g=assign({},f.params,d.params),_=m.stringify(g)}const A=[];let S=m;for(;S;)A.unshift(S.record),S=S.parent;return{name:y,path:_,params:g,matched:A,meta:mergeMetaFields(A)}}return n.forEach(d=>r(d)),{addRoute:r,resolve:u,removeRoute:a,getRoutes:c,getRecordMatcher:o}}function paramsFromLocation(n,e){const t={};for(const s of e)s in n&&(t[s]=n[s]);return t}function normalizeRouteRecord(n){return{path:n.path,redirect:n.redirect,name:n.name,meta:n.meta||{},aliasOf:void 0,beforeEnter:n.beforeEnter,props:normalizeRecordProps(n),children:n.children||[],instances:{},leaveGuards:new Set,updateGuards:new Set,enterCallbacks:{},components:"components"in n?n.components||null:n.component&&{default:n.component}}}function normalizeRecordProps(n){const e={},t=n.props||!1;if("component"in n)e.default=t;else for(const s in n.components)e[s]=typeof t=="object"?t[s]:t;return e}function isAliasRecord(n){for(;n;){if(n.record.aliasOf)return!0;n=n.parent}return!1}function mergeMetaFields(n){return n.reduce((e,t)=>assign(e,t.meta),{})}function mergeOptions(n,e){const t={};for(const s in n)t[s]=s in e?e[s]:n[s];return t}function isRecordChildOf(n,e){return e.children.some(t=>t===n||isRecordChildOf(n,t))}const HASH_RE=/#/g,AMPERSAND_RE=/&/g,SLASH_RE=/\//g,EQUAL_RE=/=/g,IM_RE=/\?/g,PLUS_RE=/\+/g,ENC_BRACKET_OPEN_RE=/%5B/g,ENC_BRACKET_CLOSE_RE=/%5D/g,ENC_CARET_RE=/%5E/g,ENC_BACKTICK_RE=/%60/g,ENC_CURLY_OPEN_RE=/%7B/g,ENC_PIPE_RE=/%7C/g,ENC_CURLY_CLOSE_RE=/%7D/g,ENC_SPACE_RE=/%20/g;function commonEncode(n){return encodeURI(""+n).replace(ENC_PIPE_RE,"|").replace(ENC_BRACKET_OPEN_RE,"[").replace(ENC_BRACKET_CLOSE_RE,"]")}function encodeHash(n){return commonEncode(n).replace(ENC_CURLY_OPEN_RE,"{").replace(ENC_CURLY_CLOSE_RE,"}").replace(ENC_CARET_RE,"^")}function encodeQueryValue(n){return commonEncode(n).replace(PLUS_RE,"%2B").replace(ENC_SPACE_RE,"+").replace(HASH_RE,"%23").replace(AMPERSAND_RE,"%26").replace(ENC_BACKTICK_RE,"`").replace(ENC_CURLY_OPEN_RE,"{").replace(ENC_CURLY_CLOSE_RE,"}").replace(ENC_CARET_RE,"^")}function encodeQueryKey(n){return encodeQueryValue(n).replace(EQUAL_RE,"%3D")}function encodePath(n){return commonEncode(n).replace(HASH_RE,"%23").replace(IM_RE,"%3F")}function encodeParam(n){return n==null?"":encodePath(n).replace(SLASH_RE,"%2F")}function decode(n){try{return decodeURIComponent(""+n)}catch{}return""+n}function parseQuery(n){const e={};if(n===""||n==="?")return e;const s=(n[0]==="?"?n.slice(1):n).split("&");for(let o=0;o<s.length;++o){const r=s[o].replace(PLUS_RE," "),a=r.indexOf("="),c=decode(a<0?r:r.slice(0,a)),l=a<0?null:decode(r.slice(a+1));if(c in e){let u=e[c];isArray$1(u)||(u=e[c]=[u]),u.push(l)}else e[c]=l}return e}function stringifyQuery(n){let e="";for(let t in n){const s=n[t];if(t=encodeQueryKey(t),s==null){s!==void 0&&(e+=(e.length?"&":"")+t);continue}(isArray$1(s)?s.map(r=>r&&encodeQueryValue(r)):[s&&encodeQueryValue(s)]).forEach(r=>{r!==void 0&&(e+=(e.length?"&":"")+t,r!=null&&(e+="="+r))})}return e}function normalizeQuery(n){const e={};for(const t in n){const s=n[t];s!==void 0&&(e[t]=isArray$1(s)?s.map(o=>o==null?null:""+o):s==null?s:""+s)}return e}const matchedRouteKey=Symbol(""),viewDepthKey=Symbol(""),routerKey=Symbol(""),routeLocationKey=Symbol(""),routerViewLocationKey=Symbol("");function useCallbacks(){let n=[];function e(s){return n.push(s),()=>{const o=n.indexOf(s);o>-1&&n.splice(o,1)}}function t(){n=[]}return{add:e,list:()=>n.slice(),reset:t}}function guardToPromiseFn(n,e,t,s,o){const r=s&&(s.enterCallbacks[o]=s.enterCallbacks[o]||[]);return()=>new Promise((a,c)=>{const l=f=>{f===!1?c(createRouterError(4,{from:t,to:e})):f instanceof Error?c(f):isRouteLocation(f)?c(createRouterError(2,{from:e,to:f})):(r&&s.enterCallbacks[o]===r&&typeof f=="function"&&r.push(f),a())},u=n.call(s&&s.instances[o],e,t,l);let d=Promise.resolve(u);n.length<3&&(d=d.then(l)),d.catch(f=>c(f))})}function extractComponentsGuards(n,e,t,s){const o=[];for(const r of n)for(const a in r.components){let c=r.components[a];if(!(e!=="beforeRouteEnter"&&!r.instances[a]))if(isRouteComponent(c)){const u=(c.__vccOpts||c)[e];u&&o.push(guardToPromiseFn(u,t,s,r,a))}else{let l=c();o.push(()=>l.then(u=>{if(!u)return Promise.reject(new Error(`Couldn't resolve component "${a}" at "${r.path}"`));const d=isESModule(u)?u.default:u;r.components[a]=d;const m=(d.__vccOpts||d)[e];return m&&guardToPromiseFn(m,t,s,r,a)()}))}}return o}function isRouteComponent(n){return typeof n=="object"||"displayName"in n||"props"in n||"__vccOpts"in n}function useLink(n){const e=inject(routerKey),t=inject(routeLocationKey),s=computed(()=>e.resolve(unref(n.to))),o=computed(()=>{const{matched:l}=s.value,{length:u}=l,d=l[u-1],f=t.matched;if(!d||!f.length)return-1;const m=f.findIndex(isSameRouteRecord.bind(null,d));if(m>-1)return m;const g=getOriginalPath(l[u-2]);return u>1&&getOriginalPath(d)===g&&f[f.length-1].path!==g?f.findIndex(isSameRouteRecord.bind(null,l[u-2])):m}),r=computed(()=>o.value>-1&&includesParams(t.params,s.value.params)),a=computed(()=>o.value>-1&&o.value===t.matched.length-1&&isSameRouteLocationParams(t.params,s.value.params));function c(l={}){return guardEvent(l)?e[unref(n.replace)?"replace":"push"](unref(n.to)).catch(noop):Promise.resolve()}return{route:s,href:computed(()=>s.value.href),isActive:r,isExactActive:a,navigate:c}}const RouterLinkImpl=defineComponent({name:"RouterLink",compatConfig:{MODE:3},props:{to:{type:[String,Object],required:!0},replace:Boolean,activeClass:String,exactActiveClass:String,custom:Boolean,ariaCurrentValue:{type:String,default:"page"}},useLink,setup(n,{slots:e}){const t=reactive(useLink(n)),{options:s}=inject(routerKey),o=computed(()=>({[getLinkClass(n.activeClass,s.linkActiveClass,"router-link-active")]:t.isActive,[getLinkClass(n.exactActiveClass,s.linkExactActiveClass,"router-link-exact-active")]:t.isExactActive}));return()=>{const r=e.default&&e.default(t);return n.custom?r:h("a",{"aria-current":t.isExactActive?n.ariaCurrentValue:null,href:t.href,onClick:t.navigate,class:o.value},r)}}}),RouterLink=RouterLinkImpl;function guardEvent(n){if(!(n.metaKey||n.altKey||n.ctrlKey||n.shiftKey)&&!n.defaultPrevented&&!(n.button!==void 0&&n.button!==0)){if(n.currentTarget&&n.currentTarget.getAttribute){const e=n.currentTarget.getAttribute("target");if(/\b_blank\b/i.test(e))return}return n.preventDefault&&n.preventDefault(),!0}}function includesParams(n,e){for(const t in e){const s=e[t],o=n[t];if(typeof s=="string"){if(s!==o)return!1}else if(!isArray$1(o)||o.length!==s.length||s.some((r,a)=>r!==o[a]))return!1}return!0}function getOriginalPath(n){return n?n.aliasOf?n.aliasOf.path:n.path:""}const getLinkClass=(n,e,t)=>n??e??t,RouterViewImpl=defineComponent({name:"RouterView",inheritAttrs:!1,props:{name:{type:String,default:"default"},route:Object},compatConfig:{MODE:3},setup(n,{attrs:e,slots:t}){const s=inject(routerViewLocationKey),o=computed(()=>n.route||s.value),r=inject(viewDepthKey,0),a=computed(()=>{let u=unref(r);const{matched:d}=o.value;let f;for(;(f=d[u])&&!f.components;)u++;return u}),c=computed(()=>o.value.matched[a.value]);provide(viewDepthKey,computed(()=>a.value+1)),provide(matchedRouteKey,c),provide(routerViewLocationKey,o);const l=ref();return watch(()=>[l.value,c.value,n.name],([u,d,f],[m,g,_])=>{d&&(d.instances[f]=u,g&&g!==d&&u&&u===m&&(d.leaveGuards.size||(d.leaveGuards=g.leaveGuards),d.updateGuards.size||(d.updateGuards=g.updateGuards))),u&&d&&(!g||!isSameRouteRecord(d,g)||!m)&&(d.enterCallbacks[f]||[]).forEach(y=>y(u))},{flush:"post"}),()=>{const u=o.value,d=n.name,f=c.value,m=f&&f.components[d];if(!m)return normalizeSlot(t.default,{Component:m,route:u});const g=f.props[d],_=g?g===!0?u.params:typeof g=="function"?g(u):g:null,A=h(m,assign({},_,e,{onVnodeUnmounted:S=>{S.component.isUnmounted&&(f.instances[d]=null)},ref:l}));return normalizeSlot(t.default,{Component:A,route:u})||A}}});function normalizeSlot(n,e){if(!n)return null;const t=n(e);return t.length===1?t[0]:t}const RouterView=RouterViewImpl;function createRouter(n){const e=createRouterMatcher(n.routes,n),t=n.parseQuery||parseQuery,s=n.stringifyQuery||stringifyQuery,o=n.history,r=useCallbacks(),a=useCallbacks(),c=useCallbacks(),l=shallowRef(START_LOCATION_NORMALIZED);let u=START_LOCATION_NORMALIZED;isBrowser&&n.scrollBehavior&&"scrollRestoration"in history&&(history.scrollRestoration="manual");const d=applyToParams.bind(null,I=>""+I),f=applyToParams.bind(null,encodeParam),m=applyToParams.bind(null,decode);function g(I,R){let z,Z;return isRouteName(I)?(z=e.getRecordMatcher(I),Z=R):Z=I,e.addRoute(Z,z)}function _(I){const R=e.getRecordMatcher(I);R&&e.removeRoute(R)}function y(){return e.getRoutes().map(I=>I.record)}function A(I){return!!e.getRecordMatcher(I)}function S(I,R){if(R=assign({},R||l.value),typeof I=="string"){const x=parseURL(t,I,R.path),N=e.resolve({path:x.path},R),O=o.createHref(x.fullPath);return assign(x,N,{params:m(N.params),hash:decode(x.hash),redirectedFrom:void 0,href:O})}let z;if("path"in I)z=assign({},I,{path:parseURL(t,I.path,R.path).path});else{const x=assign({},I.params);for(const N in x)x[N]==null&&delete x[N];z=assign({},I,{params:f(x)}),R.params=f(R.params)}const Z=e.resolve(z,R),ue=I.hash||"";Z.params=d(m(Z.params));const v=stringifyURL(s,assign({},I,{hash:encodeHash(ue),path:Z.path})),T=o.createHref(v);return assign({fullPath:v,hash:ue,query:s===stringifyQuery?normalizeQuery(I.query):I.query||{}},Z,{redirectedFrom:void 0,href:T})}function w(I){return typeof I=="string"?parseURL(t,I,l.value.path):assign({},I)}function M(I,R){if(u!==I)return createRouterError(8,{from:R,to:I})}function k(I){return P(I)}function C(I){return k(assign(w(I),{replace:!0}))}function E(I){const R=I.matched[I.matched.length-1];if(R&&R.redirect){const{redirect:z}=R;let Z=typeof z=="function"?z(I):z;return typeof Z=="string"&&(Z=Z.includes("?")||Z.includes("#")?Z=w(Z):{path:Z},Z.params={}),assign({query:I.query,hash:I.hash,params:"path"in Z?{}:I.params},Z)}}function P(I,R){const z=u=S(I),Z=l.value,ue=I.state,v=I.force,T=I.replace===!0,x=E(z);if(x)return P(assign(w(x),{state:typeof x=="object"?assign({},ue,x.state):ue,force:v,replace:T}),R||z);const N=z;N.redirectedFrom=R;let O;return!v&&isSameRouteLocation(s,Z,z)&&(O=createRouterError(16,{to:N,from:Z}),se(Z,Z,!0,!1)),(O?Promise.resolve(O):q(N,Z)).catch(F=>isNavigationFailure(F)?isNavigationFailure(F,2)?F:oe(F):X(F,N,Z)).then(F=>{if(F){if(isNavigationFailure(F,2))return P(assign({replace:T},w(F.to),{state:typeof F.to=="object"?assign({},ue,F.to.state):ue,force:v}),R||N)}else F=V(N,Z,!0,T,ue);return L(N,Z,F),F})}function b(I,R){const z=M(I,R);return z?Promise.reject(z):Promise.resolve()}function j(I){const R=fe.values().next().value;return R&&typeof R.runWithContext=="function"?R.runWithContext(I):I()}function q(I,R){let z;const[Z,ue,v]=extractChangingRecords(I,R);z=extractComponentsGuards(Z.reverse(),"beforeRouteLeave",I,R);for(const x of Z)x.leaveGuards.forEach(N=>{z.push(guardToPromiseFn(N,I,R))});const T=b.bind(null,I,R);return z.push(T),ce(z).then(()=>{z=[];for(const x of r.list())z.push(guardToPromiseFn(x,I,R));return z.push(T),ce(z)}).then(()=>{z=extractComponentsGuards(ue,"beforeRouteUpdate",I,R);for(const x of ue)x.updateGuards.forEach(N=>{z.push(guardToPromiseFn(N,I,R))});return z.push(T),ce(z)}).then(()=>{z=[];for(const x of v)if(x.beforeEnter)if(isArray$1(x.beforeEnter))for(const N of x.beforeEnter)z.push(guardToPromiseFn(N,I,R));else z.push(guardToPromiseFn(x.beforeEnter,I,R));return z.push(T),ce(z)}).then(()=>(I.matched.forEach(x=>x.enterCallbacks={}),z=extractComponentsGuards(v,"beforeRouteEnter",I,R),z.push(T),ce(z))).then(()=>{z=[];for(const x of a.list())z.push(guardToPromiseFn(x,I,R));return z.push(T),ce(z)}).catch(x=>isNavigationFailure(x,8)?x:Promise.reject(x))}function L(I,R,z){c.list().forEach(Z=>j(()=>Z(I,R,z)))}function V(I,R,z,Z,ue){const v=M(I,R);if(v)return v;const T=R===START_LOCATION_NORMALIZED,x=isBrowser?history.state:{};z&&(Z||T?o.replace(I.fullPath,assign({scroll:T&&x&&x.scroll},ue)):o.push(I.fullPath,ue)),l.value=I,se(I,R,z,T),oe()}let K;function Y(){K||(K=o.listen((I,R,z)=>{if(!ae.listening)return;const Z=S(I),ue=E(Z);if(ue){P(assign(ue,{replace:!0}),Z).catch(noop);return}u=Z;const v=l.value;isBrowser&&saveScrollPosition(getScrollKey(v.fullPath,z.delta),computeScrollPosition()),q(Z,v).catch(T=>isNavigationFailure(T,12)?T:isNavigationFailure(T,2)?(P(T.to,Z).then(x=>{isNavigationFailure(x,20)&&!z.delta&&z.type===NavigationType.pop&&o.go(-1,!1)}).catch(noop),Promise.reject()):(z.delta&&o.go(-z.delta,!1),X(T,Z,v))).then(T=>{T=T||V(Z,v,!1),T&&(z.delta&&!isNavigationFailure(T,8)?o.go(-z.delta,!1):z.type===NavigationType.pop&&isNavigationFailure(T,20)&&o.go(-1,!1)),L(Z,v,T)}).catch(noop)}))}let te=useCallbacks(),H=useCallbacks(),U;function X(I,R,z){oe(I);const Z=H.list();return Z.length?Z.forEach(ue=>ue(I,R,z)):console.error(I),Promise.reject(I)}function ee(){return U&&l.value!==START_LOCATION_NORMALIZED?Promise.resolve():new Promise((I,R)=>{te.add([I,R])})}function oe(I){return U||(U=!I,Y(),te.list().forEach(([R,z])=>I?z(I):R()),te.reset()),I}function se(I,R,z,Z){const{scrollBehavior:ue}=n;if(!isBrowser||!ue)return Promise.resolve();const v=!z&&getSavedScrollPosition(getScrollKey(I.fullPath,0))||(Z||!z)&&history.state&&history.state.scroll||null;return nextTick().then(()=>ue(I,R,v)).then(T=>T&&scrollToPosition(T)).catch(T=>X(T,I,R))}const re=I=>o.go(I);let pe;const fe=new Set,ae={currentRoute:l,listening:!0,addRoute:g,removeRoute:_,hasRoute:A,getRoutes:y,resolve:S,options:n,push:k,replace:C,go:re,back:()=>re(-1),forward:()=>re(1),beforeEach:r.add,beforeResolve:a.add,afterEach:c.add,onError:H.add,isReady:ee,install(I){const R=this;I.component("RouterLink",RouterLink),I.component("RouterView",RouterView),I.config.globalProperties.$router=R,Object.defineProperty(I.config.globalProperties,"$route",{enumerable:!0,get:()=>unref(l)}),isBrowser&&!pe&&l.value===START_LOCATION_NORMALIZED&&(pe=!0,k(o.location).catch(ue=>{}));const z={};for(const ue in START_LOCATION_NORMALIZED)Object.defineProperty(z,ue,{get:()=>l.value[ue],enumerable:!0});I.provide(routerKey,R),I.provide(routeLocationKey,shallowReactive(z)),I.provide(routerViewLocationKey,l);const Z=I.unmount;fe.add(I),I.unmount=function(){fe.delete(I),fe.size<1&&(u=START_LOCATION_NORMALIZED,K&&K(),K=null,l.value=START_LOCATION_NORMALIZED,pe=!1,U=!1),Z()}}};function ce(I){return I.reduce((R,z)=>R.then(()=>j(z)),Promise.resolve())}return ae}function extractChangingRecords(n,e){const t=[],s=[],o=[],r=Math.max(e.matched.length,n.matched.length);for(let a=0;a<r;a++){const c=e.matched[a];c&&(n.matched.find(u=>isSameRouteRecord(u,c))?s.push(c):t.push(c));const l=n.matched[a];l&&(e.matched.find(u=>isSameRouteRecord(u,l))||o.push(l))}return[t,s,o]}const Home_vue_vue_type_style_index_0_scoped_9487f1fb_lang="",_export_sfc=(n,e)=>{const t=n.__vccOpts||n;for(const[s,o]of e)t[s]=o;return t},_sfc_main$j={},_withScopeId$9=n=>(pushScopeId("data-v-9487f1fb"),n=n(),popScopeId(),n),_hoisted_1$j=_withScopeId$9(()=>createBaseVNode("header",null,null,-1)),_hoisted_2$h=_withScopeId$9(()=>createBaseVNode("main",null,[createBaseVNode("div",{class:"homeDiv"}," Welcome home! ")],-1));function _sfc_render$i(n,e){return openBlock(),createElementBlock(Fragment,null,[_hoisted_1$j,_hoisted_2$h],64)}const Home=_export_sfc(_sfc_main$j,[["render",_sfc_render$i],["__scopeId","data-v-9487f1fb"]]),About_vue_vue_type_style_index_0_scoped_18df92ef_lang="",_sfc_main$i={},_withScopeId$8=n=>(pushScopeId("data-v-18df92ef"),n=n(),popScopeId(),n),_hoisted_1$i=_withScopeId$8(()=>createBaseVNode("header",null,null,-1)),_hoisted_2$g=_withScopeId$8(()=>createBaseVNode("main",null,[createBaseVNode("div",{class:"aboutDiv"}," We are a team of passionate individuals working on our dream synthesizer ")],-1));function _sfc_render$h(n,e){return openBlock(),createElementBlock(Fragment,null,[_hoisted_1$i,_hoisted_2$g],64)}const About=_export_sfc(_sfc_main$i,[["render",_sfc_render$h],["__scopeId","data-v-18df92ef"]]),NotFound_vue_vue_type_style_index_0_scoped_5b72c2f4_lang="",_sfc_main$h={},_withScopeId$7=n=>(pushScopeId("data-v-5b72c2f4"),n=n(),popScopeId(),n),_hoisted_1$h=_withScopeId$7(()=>createBaseVNode("header",null,null,-1)),_hoisted_2$f=_withScopeId$7(()=>createBaseVNode("main",null,[createBaseVNode("div",{class:"centralDiv"}," Page not found ")],-1));function _sfc_render$g(n,e){return openBlock(),createElementBlock(Fragment,null,[_hoisted_1$h,_hoisted_2$f],64)}const NotFound=_export_sfc(_sfc_main$h,[["render",_sfc_render$g],["__scopeId","data-v-5b72c2f4"]]),Toolbar_vue_vue_type_style_index_0_scoped_7f9b4ab7_lang="",_sfc_main$g={emits:["savepreset","loadpreset"],methods:{savePreset(){this.$emit("savepreset")},loadPreset(){this.$emit("loadpreset")}}},_withScopeId$6=n=>(pushScopeId("data-v-7f9b4ab7"),n=n(),popScopeId(),n),_hoisted_1$g={class:"toolbar"},_hoisted_2$e=_withScopeId$6(()=>createBaseVNode("div",{class:"toolbar-title"},"SynthA!",-1)),_hoisted_3$9={class:"toolbar-actions"},_hoisted_4$6=_withScopeId$6(()=>createBaseVNode("div",{class:"version"},"DEMO v0.5",-1));function _sfc_render$f(n,e,t,s,o,r){const a=resolveComponent("router-link");return openBlock(),createElementBlock("div",_hoisted_1$g,[_hoisted_2$e,createBaseVNode("div",_hoisted_3$9,[createVNode(a,{to:"/"},{default:withCtx(()=>[createTextVNode("Home")]),_:1}),createBaseVNode("button",{class:"toolbarButton",onClick:e[0]||(e[0]=(...c)=>r.savePreset&&r.savePreset(...c))}," Save "),createBaseVNode("button",{class:"toolbarButton",onClick:e[1]||(e[1]=(...c)=>r.loadPreset&&r.loadPreset(...c))}," Load ")]),_hoisted_4$6])}const Toolbar=_export_sfc(_sfc_main$g,[["render",_sfc_render$f],["__scopeId","data-v-7f9b4ab7"]]),ControlsToolbar_vue_vue_type_style_index_0_scoped_3544aa3e_lang="",_sfc_main$f={inject:["ACM"],methods:{playMainFunction(){},stopRecordAudio(){this.ACM.stopRecordAudio()},recordAudio(){this.ACM.recordAudio()}}},_hoisted_1$f={class:"control_toolbar"},_hoisted_2$d={class:"toolbar-actions"};function _sfc_render$e(n,e,t,s,o,r){return openBlock(),createElementBlock("div",_hoisted_1$f,[createBaseVNode("div",_hoisted_2$d,[createBaseVNode("button",{class:"controlButton material-symbols-outlined",onClick:e[0]||(e[0]=(...a)=>r.recordAudio&&r.recordAudio(...a))},"fiber_manual_record"),createBaseVNode("button",{class:"controlButton material-symbols-outlined",onClick:e[1]||(e[1]=(...a)=>r.stopRecordAudio&&r.stopRecordAudio(...a))},"stop")])])}const ControlsToolbar=_export_sfc(_sfc_main$f,[["render",_sfc_render$e],["__scopeId","data-v-3544aa3e"]]),version="14.7.77",createExtendedExponentialRampToValueAutomationEvent=(n,e,t)=>({endTime:e,insertTime:t,type:"exponentialRampToValue",value:n}),createExtendedLinearRampToValueAutomationEvent=(n,e,t)=>({endTime:e,insertTime:t,type:"linearRampToValue",value:n}),createSetValueAutomationEvent=(n,e)=>({startTime:e,type:"setValue",value:n}),createSetValueCurveAutomationEvent=(n,e,t)=>({duration:t,startTime:e,type:"setValueCurve",values:n}),getTargetValueAtTime=(n,e,{startTime:t,target:s,timeConstant:o})=>s+(e-s)*Math.exp((t-n)/o),isExponentialRampToValueAutomationEvent=n=>n.type==="exponentialRampToValue",isLinearRampToValueAutomationEvent=n=>n.type==="linearRampToValue",isAnyRampToValueAutomationEvent=n=>isExponentialRampToValueAutomationEvent(n)||isLinearRampToValueAutomationEvent(n),isSetValueAutomationEvent=n=>n.type==="setValue",isSetValueCurveAutomationEvent=n=>n.type==="setValueCurve",getValueOfAutomationEventAtIndexAtTime=(n,e,t,s)=>{const o=n[e];return o===void 0?s:isAnyRampToValueAutomationEvent(o)||isSetValueAutomationEvent(o)?o.value:isSetValueCurveAutomationEvent(o)?o.values[o.values.length-1]:getTargetValueAtTime(t,getValueOfAutomationEventAtIndexAtTime(n,e-1,o.startTime,s),o)},getEndTimeAndValueOfPreviousAutomationEvent=(n,e,t,s,o)=>t===void 0?[s.insertTime,o]:isAnyRampToValueAutomationEvent(t)?[t.endTime,t.value]:isSetValueAutomationEvent(t)?[t.startTime,t.value]:isSetValueCurveAutomationEvent(t)?[t.startTime+t.duration,t.values[t.values.length-1]]:[t.startTime,getValueOfAutomationEventAtIndexAtTime(n,e-1,t.startTime,o)],isCancelAndHoldAutomationEvent=n=>n.type==="cancelAndHold",isCancelScheduledValuesAutomationEvent=n=>n.type==="cancelScheduledValues",getEventTime=n=>isCancelAndHoldAutomationEvent(n)||isCancelScheduledValuesAutomationEvent(n)?n.cancelTime:isExponentialRampToValueAutomationEvent(n)||isLinearRampToValueAutomationEvent(n)?n.endTime:n.startTime,getExponentialRampValueAtTime=(n,e,t,{endTime:s,value:o})=>t===o?o:0<t&&0<o||t<0&&o<0?t*(o/t)**((n-e)/(s-e)):0,getLinearRampValueAtTime=(n,e,t,{endTime:s,value:o})=>t+(n-e)/(s-e)*(o-t),interpolateValue=(n,e)=>{const t=Math.floor(e),s=Math.ceil(e);return t===s?n[t]:(1-(e-t))*n[t]+(1-(s-e))*n[s]},getValueCurveValueAtTime=(n,{duration:e,startTime:t,values:s})=>{const o=(n-t)/e*(s.length-1);return interpolateValue(s,o)},isSetTargetAutomationEvent=n=>n.type==="setTarget";class AutomationEventList{constructor(e){this._automationEvents=[],this._currenTime=0,this._defaultValue=e}[Symbol.iterator](){return this._automationEvents[Symbol.iterator]()}add(e){const t=getEventTime(e);if(isCancelAndHoldAutomationEvent(e)||isCancelScheduledValuesAutomationEvent(e)){const s=this._automationEvents.findIndex(r=>isCancelScheduledValuesAutomationEvent(e)&&isSetValueCurveAutomationEvent(r)?r.startTime+r.duration>=t:getEventTime(r)>=t),o=this._automationEvents[s];if(s!==-1&&(this._automationEvents=this._automationEvents.slice(0,s)),isCancelAndHoldAutomationEvent(e)){const r=this._automationEvents[this._automationEvents.length-1];if(o!==void 0&&isAnyRampToValueAutomationEvent(o)){if(r!==void 0&&isSetTargetAutomationEvent(r))throw new Error("The internal list is malformed.");const a=r===void 0?o.insertTime:isSetValueCurveAutomationEvent(r)?r.startTime+r.duration:getEventTime(r),c=r===void 0?this._defaultValue:isSetValueCurveAutomationEvent(r)?r.values[r.values.length-1]:r.value,l=isExponentialRampToValueAutomationEvent(o)?getExponentialRampValueAtTime(t,a,c,o):getLinearRampValueAtTime(t,a,c,o),u=isExponentialRampToValueAutomationEvent(o)?createExtendedExponentialRampToValueAutomationEvent(l,t,this._currenTime):createExtendedLinearRampToValueAutomationEvent(l,t,this._currenTime);this._automationEvents.push(u)}if(r!==void 0&&isSetTargetAutomationEvent(r)&&this._automationEvents.push(createSetValueAutomationEvent(this.getValue(t),t)),r!==void 0&&isSetValueCurveAutomationEvent(r)&&r.startTime+r.duration>t){const a=t-r.startTime,c=(r.values.length-1)/r.duration,l=Math.max(2,1+Math.ceil(a*c)),u=a/(l-1)*c,d=r.values.slice(0,l);if(u<1)for(let f=1;f<l;f+=1){const m=u*f%1;d[f]=r.values[f-1]*(1-m)+r.values[f]*m}this._automationEvents[this._automationEvents.length-1]=createSetValueCurveAutomationEvent(d,r.startTime,a)}}}else{const s=this._automationEvents.findIndex(a=>getEventTime(a)>t),o=s===-1?this._automationEvents[this._automationEvents.length-1]:this._automationEvents[s-1];if(o!==void 0&&isSetValueCurveAutomationEvent(o)&&getEventTime(o)+o.duration>t)return!1;const r=isExponentialRampToValueAutomationEvent(e)?createExtendedExponentialRampToValueAutomationEvent(e.value,e.endTime,this._currenTime):isLinearRampToValueAutomationEvent(e)?createExtendedLinearRampToValueAutomationEvent(e.value,t,this._currenTime):e;if(s===-1)this._automationEvents.push(r);else{if(isSetValueCurveAutomationEvent(e)&&t+e.duration>getEventTime(this._automationEvents[s]))return!1;this._automationEvents.splice(s,0,r)}}return!0}flush(e){const t=this._automationEvents.findIndex(s=>getEventTime(s)>e);if(t>1){const s=this._automationEvents.slice(t-1),o=s[0];isSetTargetAutomationEvent(o)&&s.unshift(createSetValueAutomationEvent(getValueOfAutomationEventAtIndexAtTime(this._automationEvents,t-2,o.startTime,this._defaultValue),o.startTime)),this._automationEvents=s}}getValue(e){if(this._automationEvents.length===0)return this._defaultValue;const t=this._automationEvents.findIndex(a=>getEventTime(a)>e),s=this._automationEvents[t],o=(t===-1?this._automationEvents.length:t)-1,r=this._automationEvents[o];if(r!==void 0&&isSetTargetAutomationEvent(r)&&(s===void 0||!isAnyRampToValueAutomationEvent(s)||s.insertTime>e))return getTargetValueAtTime(e,getValueOfAutomationEventAtIndexAtTime(this._automationEvents,o-1,r.startTime,this._defaultValue),r);if(r!==void 0&&isSetValueAutomationEvent(r)&&(s===void 0||!isAnyRampToValueAutomationEvent(s)))return r.value;if(r!==void 0&&isSetValueCurveAutomationEvent(r)&&(s===void 0||!isAnyRampToValueAutomationEvent(s)||r.startTime+r.duration>e))return e<r.startTime+r.duration?getValueCurveValueAtTime(e,r):r.values[r.values.length-1];if(r!==void 0&&isAnyRampToValueAutomationEvent(r)&&(s===void 0||!isAnyRampToValueAutomationEvent(s)))return r.value;if(s!==void 0&&isExponentialRampToValueAutomationEvent(s)){const[a,c]=getEndTimeAndValueOfPreviousAutomationEvent(this._automationEvents,o,r,s,this._defaultValue);return getExponentialRampValueAtTime(e,a,c,s)}if(s!==void 0&&isLinearRampToValueAutomationEvent(s)){const[a,c]=getEndTimeAndValueOfPreviousAutomationEvent(this._automationEvents,o,r,s,this._defaultValue);return getLinearRampValueAtTime(e,a,c,s)}return this._defaultValue}}const createCancelAndHoldAutomationEvent=n=>({cancelTime:n,type:"cancelAndHold"}),createCancelScheduledValuesAutomationEvent=n=>({cancelTime:n,type:"cancelScheduledValues"}),createExponentialRampToValueAutomationEvent=(n,e)=>({endTime:e,type:"exponentialRampToValue",value:n}),createLinearRampToValueAutomationEvent=(n,e)=>({endTime:e,type:"linearRampToValue",value:n}),createSetTargetAutomationEvent=(n,e,t)=>({startTime:e,target:n,timeConstant:t,type:"setTarget"}),createAbortError=()=>new DOMException("","AbortError"),createAddActiveInputConnectionToAudioNode=n=>(e,t,[s,o,r],a)=>{n(e[o],[t,s,r],c=>c[0]===t&&c[1]===s,a)},createAddAudioNodeConnections=n=>(e,t,s)=>{const o=[];for(let r=0;r<s.numberOfInputs;r+=1)o.push(new Set);n.set(e,{activeInputs:o,outputs:new Set,passiveInputs:new WeakMap,renderer:t})},createAddAudioParamConnections=n=>(e,t)=>{n.set(e,{activeInputs:new Set,passiveInputs:new WeakMap,renderer:t})},ACTIVE_AUDIO_NODE_STORE=new WeakSet,AUDIO_NODE_CONNECTIONS_STORE=new WeakMap,AUDIO_NODE_STORE=new WeakMap,AUDIO_PARAM_CONNECTIONS_STORE=new WeakMap,AUDIO_PARAM_STORE=new WeakMap,CONTEXT_STORE=new WeakMap,EVENT_LISTENERS=new WeakMap,CYCLE_COUNTERS=new WeakMap,NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS=new WeakMap,NODE_TO_PROCESSOR_MAPS=new WeakMap,handler={construct(){return handler}},isConstructible=n=>{try{const e=new Proxy(n,handler);new e}catch{return!1}return!0},IMPORT_STATEMENT_REGEX=/^import(?:(?:[\s]+[\w]+|(?:[\s]+[\w]+[\s]*,)?[\s]*\{[\s]*[\w]+(?:[\s]+as[\s]+[\w]+)?(?:[\s]*,[\s]*[\w]+(?:[\s]+as[\s]+[\w]+)?)*[\s]*}|(?:[\s]+[\w]+[\s]*,)?[\s]*\*[\s]+as[\s]+[\w]+)[\s]+from)?(?:[\s]*)("([^"\\]|\\.)+"|'([^'\\]|\\.)+')(?:[\s]*);?/,splitImportStatements=(n,e)=>{const t=[];let s=n.replace(/^[\s]+/,""),o=s.match(IMPORT_STATEMENT_REGEX);for(;o!==null;){const r=o[1].slice(1,-1),a=o[0].replace(/([\s]+)?;?$/,"").replace(r,new URL(r,e).toString());t.push(a),s=s.slice(o[0].length).replace(/^[\s]+/,""),o=s.match(IMPORT_STATEMENT_REGEX)}return[t.join(";"),s]},verifyParameterDescriptors=n=>{if(n!==void 0&&!Array.isArray(n))throw new TypeError("The parameterDescriptors property of given value for processorCtor is not an array.")},verifyProcessorCtor=n=>{if(!isConstructible(n))throw new TypeError("The given value for processorCtor should be a constructor.");if(n.prototype===null||typeof n.prototype!="object")throw new TypeError("The given value for processorCtor should have a prototype.")},createAddAudioWorkletModule=(n,e,t,s,o,r,a,c,l,u,d,f,m)=>{let g=0;return(_,y,A={credentials:"omit"})=>{const S=d.get(_);if(S!==void 0&&S.has(y))return Promise.resolve();const w=u.get(_);if(w!==void 0){const C=w.get(y);if(C!==void 0)return C}const M=r(_),k=M.audioWorklet===void 0?o(y).then(([C,E])=>{const[P,b]=splitImportStatements(C,E),j=`${P};((a,b)=>{(a[b]=a[b]||[]).push((AudioWorkletProcessor,global,registerProcessor,sampleRate,self,window)=>{${b}
})})(window,'_AWGS')`;return t(j)}).then(()=>{const C=m._AWGS.pop();if(C===void 0)throw new SyntaxError;s(M.currentTime,M.sampleRate,()=>C(class{},void 0,(E,P)=>{if(E.trim()==="")throw e();const b=NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS.get(M);if(b!==void 0){if(b.has(E))throw e();verifyProcessorCtor(P),verifyParameterDescriptors(P.parameterDescriptors),b.set(E,P)}else verifyProcessorCtor(P),verifyParameterDescriptors(P.parameterDescriptors),NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS.set(M,new Map([[E,P]]))},M.sampleRate,void 0,void 0))}):Promise.all([o(y),Promise.resolve(n(f,f))]).then(([[C,E],P])=>{const b=g+1;g=b;const[j,q]=splitImportStatements(C,E),Y=`${j};((AudioWorkletProcessor,registerProcessor)=>{${q}
})(${P?"AudioWorkletProcessor":"class extends AudioWorkletProcessor {__b=new WeakSet();constructor(){super();(p=>p.postMessage=(q=>(m,t)=>q.call(p,m,t?t.filter(u=>!this.__b.has(u)):t))(p.postMessage))(this.port)}}"},(n,p)=>registerProcessor(n,class extends p{${P?"":"__c = (a) => a.forEach(e=>this.__b.add(e.buffer));"}process(i,o,p){${P?"":"i.forEach(this.__c);o.forEach(this.__c);this.__c(Object.values(p));"}return super.process(i.map(j=>j.some(k=>k.length===0)?[]:j),o,p)}}));registerProcessor('__sac${b}',class extends AudioWorkletProcessor{process(){return !1}})`,te=new Blob([Y],{type:"application/javascript; charset=utf-8"}),H=URL.createObjectURL(te);return M.audioWorklet.addModule(H,A).then(()=>{if(c(M))return M;const U=a(M);return U.audioWorklet.addModule(H,A).then(()=>U)}).then(U=>{if(l===null)throw new SyntaxError;try{new l(U,`__sac${b}`)}catch{throw new SyntaxError}}).finally(()=>URL.revokeObjectURL(H))});return w===void 0?u.set(_,new Map([[y,k]])):w.set(y,k),k.then(()=>{const C=d.get(_);C===void 0?d.set(_,new Set([y])):C.add(y)}).finally(()=>{const C=u.get(_);C!==void 0&&C.delete(y)}),k}},getValueForKey=(n,e)=>{const t=n.get(e);if(t===void 0)throw new Error("A value with the given key could not be found.");return t},pickElementFromSet=(n,e)=>{const t=Array.from(n).filter(e);if(t.length>1)throw Error("More than one element was found.");if(t.length===0)throw Error("No element was found.");const[s]=t;return n.delete(s),s},deletePassiveInputConnectionToAudioNode=(n,e,t,s)=>{const o=getValueForKey(n,e),r=pickElementFromSet(o,a=>a[0]===t&&a[1]===s);return o.size===0&&n.delete(e),r},getEventListenersOfAudioNode=n=>getValueForKey(EVENT_LISTENERS,n),setInternalStateToActive=n=>{if(ACTIVE_AUDIO_NODE_STORE.has(n))throw new Error("The AudioNode is already stored.");ACTIVE_AUDIO_NODE_STORE.add(n),getEventListenersOfAudioNode(n).forEach(e=>e(!0))},isAudioWorkletNode=n=>"port"in n,setInternalStateToPassive=n=>{if(!ACTIVE_AUDIO_NODE_STORE.has(n))throw new Error("The AudioNode is not stored.");ACTIVE_AUDIO_NODE_STORE.delete(n),getEventListenersOfAudioNode(n).forEach(e=>e(!1))},setInternalStateToPassiveWhenNecessary=(n,e)=>{!isAudioWorkletNode(n)&&e.every(t=>t.size===0)&&setInternalStateToPassive(n)},createAddConnectionToAudioNode=(n,e,t,s,o,r,a,c,l,u,d,f,m)=>{const g=new WeakMap;return(_,y,A,S,w)=>{const{activeInputs:M,passiveInputs:k}=r(y),{outputs:C}=r(_),E=c(_),P=b=>{const j=l(y),q=l(_);if(b){const L=deletePassiveInputConnectionToAudioNode(k,_,A,S);n(M,_,L,!1),!w&&!f(_)&&t(q,j,A,S),m(y)&&setInternalStateToActive(y)}else{const L=s(M,_,A,S);e(k,S,L,!1),!w&&!f(_)&&o(q,j,A,S);const V=a(y);if(V===0)d(y)&&setInternalStateToPassiveWhenNecessary(y,M);else{const K=g.get(y);K!==void 0&&clearTimeout(K),g.set(y,setTimeout(()=>{d(y)&&setInternalStateToPassiveWhenNecessary(y,M)},V*1e3))}}};return u(C,[y,A,S],b=>b[0]===y&&b[1]===A&&b[2]===S,!0)?(E.add(P),d(_)?n(M,_,[A,S,P],!0):e(k,S,[_,A,P],!0),!0):!1}},createAddPassiveInputConnectionToAudioNode=n=>(e,t,[s,o,r],a)=>{const c=e.get(s);c===void 0?e.set(s,new Set([[o,t,r]])):n(c,[o,t,r],l=>l[0]===o&&l[1]===t,a)},createAddSilentConnection=n=>(e,t)=>{const s=n(e,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0});t.connect(s).connect(e.destination);const o=()=>{t.removeEventListener("ended",o),t.disconnect(s),s.disconnect()};t.addEventListener("ended",o)},createAddUnrenderedAudioWorkletNode=n=>(e,t)=>{n(e).add(t)},DEFAULT_OPTIONS$j={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",fftSize:2048,maxDecibels:-30,minDecibels:-100,smoothingTimeConstant:.8},createAnalyserNodeConstructor=(n,e,t,s,o,r)=>class extends n{constructor(c,l){const u=o(c),d={...DEFAULT_OPTIONS$j,...l},f=s(u,d),m=r(u)?e():null;super(c,!1,f,m),this._nativeAnalyserNode=f}get fftSize(){return this._nativeAnalyserNode.fftSize}set fftSize(c){this._nativeAnalyserNode.fftSize=c}get frequencyBinCount(){return this._nativeAnalyserNode.frequencyBinCount}get maxDecibels(){return this._nativeAnalyserNode.maxDecibels}set maxDecibels(c){const l=this._nativeAnalyserNode.maxDecibels;if(this._nativeAnalyserNode.maxDecibels=c,!(c>this._nativeAnalyserNode.minDecibels))throw this._nativeAnalyserNode.maxDecibels=l,t()}get minDecibels(){return this._nativeAnalyserNode.minDecibels}set minDecibels(c){const l=this._nativeAnalyserNode.minDecibels;if(this._nativeAnalyserNode.minDecibels=c,!(this._nativeAnalyserNode.maxDecibels>c))throw this._nativeAnalyserNode.minDecibels=l,t()}get smoothingTimeConstant(){return this._nativeAnalyserNode.smoothingTimeConstant}set smoothingTimeConstant(c){this._nativeAnalyserNode.smoothingTimeConstant=c}getByteFrequencyData(c){this._nativeAnalyserNode.getByteFrequencyData(c)}getByteTimeDomainData(c){this._nativeAnalyserNode.getByteTimeDomainData(c)}getFloatFrequencyData(c){this._nativeAnalyserNode.getFloatFrequencyData(c)}getFloatTimeDomainData(c){this._nativeAnalyserNode.getFloatTimeDomainData(c)}},isOwnedByContext=(n,e)=>n.context===e,createAnalyserNodeRendererFactory=(n,e,t)=>()=>{const s=new WeakMap,o=async(r,a)=>{let c=e(r);if(!isOwnedByContext(c,a)){const u={channelCount:c.channelCount,channelCountMode:c.channelCountMode,channelInterpretation:c.channelInterpretation,fftSize:c.fftSize,maxDecibels:c.maxDecibels,minDecibels:c.minDecibels,smoothingTimeConstant:c.smoothingTimeConstant};c=n(a,u)}return s.set(a,c),await t(r,a,c),c};return{render(r,a){const c=s.get(a);return c!==void 0?Promise.resolve(c):o(r,a)}}},testAudioBufferCopyChannelMethodsOutOfBoundsSupport=n=>{try{n.copyToChannel(new Float32Array(1),0,-1)}catch{return!1}return!0},createIndexSizeError=()=>new DOMException("","IndexSizeError"),wrapAudioBufferGetChannelDataMethod=n=>{n.getChannelData=(e=>t=>{try{return e.call(n,t)}catch(s){throw s.code===12?createIndexSizeError():s}})(n.getChannelData)},DEFAULT_OPTIONS$i={numberOfChannels:1},createAudioBufferConstructor=(n,e,t,s,o,r,a,c)=>{let l=null;return class Oe{constructor(d){if(o===null)throw new Error("Missing the native OfflineAudioContext constructor.");const{length:f,numberOfChannels:m,sampleRate:g}={...DEFAULT_OPTIONS$i,...d};l===null&&(l=new o(1,1,44100));const _=s!==null&&e(r,r)?new s({length:f,numberOfChannels:m,sampleRate:g}):l.createBuffer(m,f,g);if(_.numberOfChannels===0)throw t();return typeof _.copyFromChannel!="function"?(a(_),wrapAudioBufferGetChannelDataMethod(_)):e(testAudioBufferCopyChannelMethodsOutOfBoundsSupport,()=>testAudioBufferCopyChannelMethodsOutOfBoundsSupport(_))||c(_),n.add(_),_}static[Symbol.hasInstance](d){return d!==null&&typeof d=="object"&&Object.getPrototypeOf(d)===Oe.prototype||n.has(d)}}},MOST_NEGATIVE_SINGLE_FLOAT=-34028234663852886e22,MOST_POSITIVE_SINGLE_FLOAT=-MOST_NEGATIVE_SINGLE_FLOAT,isActiveAudioNode=n=>ACTIVE_AUDIO_NODE_STORE.has(n),DEFAULT_OPTIONS$h={buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1},createAudioBufferSourceNodeConstructor=(n,e,t,s,o,r,a,c)=>class extends n{constructor(u,d){const f=r(u),m={...DEFAULT_OPTIONS$h,...d},g=o(f,m),_=a(f),y=_?e():null;super(u,!1,g,y),this._audioBufferSourceNodeRenderer=y,this._isBufferNullified=!1,this._isBufferSet=m.buffer!==null,this._nativeAudioBufferSourceNode=g,this._onended=null,this._playbackRate=t(this,_,g.playbackRate,MOST_POSITIVE_SINGLE_FLOAT,MOST_NEGATIVE_SINGLE_FLOAT)}get buffer(){return this._isBufferNullified?null:this._nativeAudioBufferSourceNode.buffer}set buffer(u){if(this._nativeAudioBufferSourceNode.buffer=u,u!==null){if(this._isBufferSet)throw s();this._isBufferSet=!0}}get loop(){return this._nativeAudioBufferSourceNode.loop}set loop(u){this._nativeAudioBufferSourceNode.loop=u}get loopEnd(){return this._nativeAudioBufferSourceNode.loopEnd}set loopEnd(u){this._nativeAudioBufferSourceNode.loopEnd=u}get loopStart(){return this._nativeAudioBufferSourceNode.loopStart}set loopStart(u){this._nativeAudioBufferSourceNode.loopStart=u}get onended(){return this._onended}set onended(u){const d=typeof u=="function"?c(this,u):null;this._nativeAudioBufferSourceNode.onended=d;const f=this._nativeAudioBufferSourceNode.onended;this._onended=f!==null&&f===d?u:f}get playbackRate(){return this._playbackRate}start(u=0,d=0,f){if(this._nativeAudioBufferSourceNode.start(u,d,f),this._audioBufferSourceNodeRenderer!==null&&(this._audioBufferSourceNodeRenderer.start=f===void 0?[u,d]:[u,d,f]),this.context.state!=="closed"){setInternalStateToActive(this);const m=()=>{this._nativeAudioBufferSourceNode.removeEventListener("ended",m),isActiveAudioNode(this)&&setInternalStateToPassive(this)};this._nativeAudioBufferSourceNode.addEventListener("ended",m)}}stop(u=0){this._nativeAudioBufferSourceNode.stop(u),this._audioBufferSourceNodeRenderer!==null&&(this._audioBufferSourceNodeRenderer.stop=u)}},createAudioBufferSourceNodeRendererFactory=(n,e,t,s,o)=>()=>{const r=new WeakMap;let a=null,c=null;const l=async(u,d)=>{let f=t(u);const m=isOwnedByContext(f,d);if(!m){const g={buffer:f.buffer,channelCount:f.channelCount,channelCountMode:f.channelCountMode,channelInterpretation:f.channelInterpretation,loop:f.loop,loopEnd:f.loopEnd,loopStart:f.loopStart,playbackRate:f.playbackRate.value};f=e(d,g),a!==null&&f.start(...a),c!==null&&f.stop(c)}return r.set(d,f),m?await n(d,u.playbackRate,f.playbackRate):await s(d,u.playbackRate,f.playbackRate),await o(u,d,f),f};return{set start(u){a=u},set stop(u){c=u},render(u,d){const f=r.get(d);return f!==void 0?Promise.resolve(f):l(u,d)}}},isAudioBufferSourceNode=n=>"playbackRate"in n,isBiquadFilterNode=n=>"frequency"in n&&"gain"in n,isConstantSourceNode=n=>"offset"in n,isGainNode=n=>!("frequency"in n)&&"gain"in n,isOscillatorNode=n=>"detune"in n&&"frequency"in n,isStereoPannerNode=n=>"pan"in n,getAudioNodeConnections=n=>getValueForKey(AUDIO_NODE_CONNECTIONS_STORE,n),getAudioParamConnections=n=>getValueForKey(AUDIO_PARAM_CONNECTIONS_STORE,n),deactivateActiveAudioNodeInputConnections=(n,e)=>{const{activeInputs:t}=getAudioNodeConnections(n);t.forEach(o=>o.forEach(([r])=>{e.includes(n)||deactivateActiveAudioNodeInputConnections(r,[...e,n])}));const s=isAudioBufferSourceNode(n)?[n.playbackRate]:isAudioWorkletNode(n)?Array.from(n.parameters.values()):isBiquadFilterNode(n)?[n.Q,n.detune,n.frequency,n.gain]:isConstantSourceNode(n)?[n.offset]:isGainNode(n)?[n.gain]:isOscillatorNode(n)?[n.detune,n.frequency]:isStereoPannerNode(n)?[n.pan]:[];for(const o of s){const r=getAudioParamConnections(o);r!==void 0&&r.activeInputs.forEach(([a])=>deactivateActiveAudioNodeInputConnections(a,e))}isActiveAudioNode(n)&&setInternalStateToPassive(n)},deactivateAudioGraph=n=>{deactivateActiveAudioNodeInputConnections(n.destination,[])},isValidLatencyHint=n=>n===void 0||typeof n=="number"||typeof n=="string"&&(n==="balanced"||n==="interactive"||n==="playback"),createAudioContextConstructor=(n,e,t,s,o,r,a,c,l)=>class extends n{constructor(d={}){if(l===null)throw new Error("Missing the native AudioContext constructor.");let f;try{f=new l(d)}catch(_){throw _.code===12&&_.message==="sampleRate is not in range"?t():_}if(f===null)throw s();if(!isValidLatencyHint(d.latencyHint))throw new TypeError(`The provided value '${d.latencyHint}' is not a valid enum value of type AudioContextLatencyCategory.`);if(d.sampleRate!==void 0&&f.sampleRate!==d.sampleRate)throw t();super(f,2);const{latencyHint:m}=d,{sampleRate:g}=f;if(this._baseLatency=typeof f.baseLatency=="number"?f.baseLatency:m==="balanced"?512/g:m==="interactive"||m===void 0?256/g:m==="playback"?1024/g:Math.max(2,Math.min(128,Math.round(m*g/128)))*128/g,this._nativeAudioContext=f,l.name==="webkitAudioContext"?(this._nativeGainNode=f.createGain(),this._nativeOscillatorNode=f.createOscillator(),this._nativeGainNode.gain.value=1e-37,this._nativeOscillatorNode.connect(this._nativeGainNode).connect(f.destination),this._nativeOscillatorNode.start()):(this._nativeGainNode=null,this._nativeOscillatorNode=null),this._state=null,f.state==="running"){this._state="suspended";const _=()=>{this._state==="suspended"&&(this._state=null),f.removeEventListener("statechange",_)};f.addEventListener("statechange",_)}}get baseLatency(){return this._baseLatency}get state(){return this._state!==null?this._state:this._nativeAudioContext.state}close(){return this.state==="closed"?this._nativeAudioContext.close().then(()=>{throw e()}):(this._state==="suspended"&&(this._state=null),this._nativeAudioContext.close().then(()=>{this._nativeGainNode!==null&&this._nativeOscillatorNode!==null&&(this._nativeOscillatorNode.stop(),this._nativeGainNode.disconnect(),this._nativeOscillatorNode.disconnect()),deactivateAudioGraph(this)}))}createMediaElementSource(d){return new o(this,{mediaElement:d})}createMediaStreamDestination(){return new r(this)}createMediaStreamSource(d){return new a(this,{mediaStream:d})}createMediaStreamTrackSource(d){return new c(this,{mediaStreamTrack:d})}resume(){return this._state==="suspended"?new Promise((d,f)=>{const m=()=>{this._nativeAudioContext.removeEventListener("statechange",m),this._nativeAudioContext.state==="running"?d():this.resume().then(d,f)};this._nativeAudioContext.addEventListener("statechange",m)}):this._nativeAudioContext.resume().catch(d=>{throw d===void 0||d.code===15?e():d})}suspend(){return this._nativeAudioContext.suspend().catch(d=>{throw d===void 0?e():d})}},createAudioDestinationNodeConstructor=(n,e,t,s,o,r,a,c)=>class extends n{constructor(u,d){const f=r(u),m=a(f),g=o(f,d,m),_=m?e(c):null;super(u,!1,g,_),this._isNodeOfNativeOfflineAudioContext=m,this._nativeAudioDestinationNode=g}get channelCount(){return this._nativeAudioDestinationNode.channelCount}set channelCount(u){if(this._isNodeOfNativeOfflineAudioContext)throw s();if(u>this._nativeAudioDestinationNode.maxChannelCount)throw t();this._nativeAudioDestinationNode.channelCount=u}get channelCountMode(){return this._nativeAudioDestinationNode.channelCountMode}set channelCountMode(u){if(this._isNodeOfNativeOfflineAudioContext)throw s();this._nativeAudioDestinationNode.channelCountMode=u}get maxChannelCount(){return this._nativeAudioDestinationNode.maxChannelCount}},createAudioDestinationNodeRenderer=n=>{const e=new WeakMap,t=async(s,o)=>{const r=o.destination;return e.set(o,r),await n(s,o,r),r};return{render(s,o){const r=e.get(o);return r!==void 0?Promise.resolve(r):t(s,o)}}},createAudioListenerFactory=(n,e,t,s,o,r,a,c)=>(l,u)=>{const d=u.listener,f=()=>{const C=new Float32Array(1),E=e(u,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:9}),P=a(u);let b=!1,j=[0,0,-1,0,1,0],q=[0,0,0];const L=()=>{if(b)return;b=!0;const te=s(u,256,9,0);te.onaudioprocess=({inputBuffer:H})=>{const U=[r(H,C,0),r(H,C,1),r(H,C,2),r(H,C,3),r(H,C,4),r(H,C,5)];U.some((ee,oe)=>ee!==j[oe])&&(d.setOrientation(...U),j=U);const X=[r(H,C,6),r(H,C,7),r(H,C,8)];X.some((ee,oe)=>ee!==q[oe])&&(d.setPosition(...X),q=X)},E.connect(te)},V=te=>H=>{H!==j[te]&&(j[te]=H,d.setOrientation(...j))},K=te=>H=>{H!==q[te]&&(q[te]=H,d.setPosition(...q))},Y=(te,H,U)=>{const X=t(u,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",offset:H});X.connect(E,0,te),X.start(),Object.defineProperty(X.offset,"defaultValue",{get(){return H}});const ee=n({context:l},P,X.offset,MOST_POSITIVE_SINGLE_FLOAT,MOST_NEGATIVE_SINGLE_FLOAT);return c(ee,"value",oe=>()=>oe.call(ee),oe=>se=>{try{oe.call(ee,se)}catch(re){if(re.code!==9)throw re}L(),P&&U(se)}),ee.cancelAndHoldAtTime=(oe=>P?()=>{throw o()}:(...se)=>{const re=oe.apply(ee,se);return L(),re})(ee.cancelAndHoldAtTime),ee.cancelScheduledValues=(oe=>P?()=>{throw o()}:(...se)=>{const re=oe.apply(ee,se);return L(),re})(ee.cancelScheduledValues),ee.exponentialRampToValueAtTime=(oe=>P?()=>{throw o()}:(...se)=>{const re=oe.apply(ee,se);return L(),re})(ee.exponentialRampToValueAtTime),ee.linearRampToValueAtTime=(oe=>P?()=>{throw o()}:(...se)=>{const re=oe.apply(ee,se);return L(),re})(ee.linearRampToValueAtTime),ee.setTargetAtTime=(oe=>P?()=>{throw o()}:(...se)=>{const re=oe.apply(ee,se);return L(),re})(ee.setTargetAtTime),ee.setValueAtTime=(oe=>P?()=>{throw o()}:(...se)=>{const re=oe.apply(ee,se);return L(),re})(ee.setValueAtTime),ee.setValueCurveAtTime=(oe=>P?()=>{throw o()}:(...se)=>{const re=oe.apply(ee,se);return L(),re})(ee.setValueCurveAtTime),ee};return{forwardX:Y(0,0,V(0)),forwardY:Y(1,0,V(1)),forwardZ:Y(2,-1,V(2)),positionX:Y(6,0,K(0)),positionY:Y(7,0,K(1)),positionZ:Y(8,0,K(2)),upX:Y(3,0,V(3)),upY:Y(4,1,V(4)),upZ:Y(5,0,V(5))}},{forwardX:m,forwardY:g,forwardZ:_,positionX:y,positionY:A,positionZ:S,upX:w,upY:M,upZ:k}=d.forwardX===void 0?f():d;return{get forwardX(){return m},get forwardY(){return g},get forwardZ(){return _},get positionX(){return y},get positionY(){return A},get positionZ(){return S},get upX(){return w},get upY(){return M},get upZ(){return k}}},isAudioNode$1=n=>"context"in n,isAudioNodeOutputConnection=n=>isAudioNode$1(n[0]),insertElementInSet=(n,e,t,s)=>{for(const o of n)if(t(o)){if(s)return!1;throw Error("The set contains at least one similar element.")}return n.add(e),!0},addActiveInputConnectionToAudioParam=(n,e,[t,s],o)=>{insertElementInSet(n,[e,t,s],r=>r[0]===e&&r[1]===t,o)},addPassiveInputConnectionToAudioParam=(n,[e,t,s],o)=>{const r=n.get(e);r===void 0?n.set(e,new Set([[t,s]])):insertElementInSet(r,[t,s],a=>a[0]===t,o)},isNativeAudioNodeFaker=n=>"inputs"in n,connectNativeAudioNodeToNativeAudioNode=(n,e,t,s)=>{if(isNativeAudioNodeFaker(e)){const o=e.inputs[s];return n.connect(o,t,0),[o,t,0]}return n.connect(e,t,s),[e,t,s]},deleteActiveInputConnection=(n,e,t)=>{for(const s of n)if(s[0]===e&&s[1]===t)return n.delete(s),s;return null},deleteActiveInputConnectionToAudioParam=(n,e,t)=>pickElementFromSet(n,s=>s[0]===e&&s[1]===t),deleteEventListenerOfAudioNode=(n,e)=>{if(!getEventListenersOfAudioNode(n).delete(e))throw new Error("Missing the expected event listener.")},deletePassiveInputConnectionToAudioParam=(n,e,t)=>{const s=getValueForKey(n,e),o=pickElementFromSet(s,r=>r[0]===t);return s.size===0&&n.delete(e),o},disconnectNativeAudioNodeFromNativeAudioNode=(n,e,t,s)=>{isNativeAudioNodeFaker(e)?n.disconnect(e.inputs[s],t,0):n.disconnect(e,t,s)},getNativeAudioNode=n=>getValueForKey(AUDIO_NODE_STORE,n),getNativeAudioParam=n=>getValueForKey(AUDIO_PARAM_STORE,n),isPartOfACycle=n=>CYCLE_COUNTERS.has(n),isPassiveAudioNode=n=>!ACTIVE_AUDIO_NODE_STORE.has(n),testAudioNodeDisconnectMethodSupport=(n,e)=>new Promise(t=>{if(e!==null)t(!0);else{const s=n.createScriptProcessor(256,1,1),o=n.createGain(),r=n.createBuffer(1,2,44100),a=r.getChannelData(0);a[0]=1,a[1]=1;const c=n.createBufferSource();c.buffer=r,c.loop=!0,c.connect(s).connect(n.destination),c.connect(o),c.disconnect(o),s.onaudioprocess=l=>{const u=l.inputBuffer.getChannelData(0);Array.prototype.some.call(u,d=>d===1)?t(!0):t(!1),c.stop(),s.onaudioprocess=null,c.disconnect(s),s.disconnect(n.destination)},c.start()}}),visitEachAudioNodeOnce=(n,e)=>{const t=new Map;for(const s of n)for(const o of s){const r=t.get(o);t.set(o,r===void 0?1:r+1)}t.forEach((s,o)=>e(o,s))},isNativeAudioNode$1=n=>"context"in n,wrapAudioNodeDisconnectMethod=n=>{const e=new Map;n.connect=(t=>(s,o=0,r=0)=>{const a=isNativeAudioNode$1(s)?t(s,o,r):t(s,o),c=e.get(s);return c===void 0?e.set(s,[{input:r,output:o}]):c.every(l=>l.input!==r||l.output!==o)&&c.push({input:r,output:o}),a})(n.connect.bind(n)),n.disconnect=(t=>(s,o,r)=>{if(t.apply(n),s===void 0)e.clear();else if(typeof s=="number")for(const[a,c]of e){const l=c.filter(u=>u.output!==s);l.length===0?e.delete(a):e.set(a,l)}else if(e.has(s))if(o===void 0)e.delete(s);else{const a=e.get(s);if(a!==void 0){const c=a.filter(l=>l.output!==o&&(l.input!==r||r===void 0));c.length===0?e.delete(s):e.set(s,c)}}for(const[a,c]of e)c.forEach(l=>{isNativeAudioNode$1(a)?n.connect(a,l.output,l.input):n.connect(a,l.output)})})(n.disconnect)},addConnectionToAudioParamOfAudioContext=(n,e,t,s)=>{const{activeInputs:o,passiveInputs:r}=getAudioParamConnections(e),{outputs:a}=getAudioNodeConnections(n),c=getEventListenersOfAudioNode(n),l=u=>{const d=getNativeAudioNode(n),f=getNativeAudioParam(e);if(u){const m=deletePassiveInputConnectionToAudioParam(r,n,t);addActiveInputConnectionToAudioParam(o,n,m,!1),!s&&!isPartOfACycle(n)&&d.connect(f,t)}else{const m=deleteActiveInputConnectionToAudioParam(o,n,t);addPassiveInputConnectionToAudioParam(r,m,!1),!s&&!isPartOfACycle(n)&&d.disconnect(f,t)}};return insertElementInSet(a,[e,t],u=>u[0]===e&&u[1]===t,!0)?(c.add(l),isActiveAudioNode(n)?addActiveInputConnectionToAudioParam(o,n,[t,l],!0):addPassiveInputConnectionToAudioParam(r,[n,t,l],!0),!0):!1},deleteInputConnectionOfAudioNode=(n,e,t,s)=>{const{activeInputs:o,passiveInputs:r}=getAudioNodeConnections(e),a=deleteActiveInputConnection(o[s],n,t);return a===null?[deletePassiveInputConnectionToAudioNode(r,n,t,s)[2],!1]:[a[2],!0]},deleteInputConnectionOfAudioParam=(n,e,t)=>{const{activeInputs:s,passiveInputs:o}=getAudioParamConnections(e),r=deleteActiveInputConnection(s,n,t);return r===null?[deletePassiveInputConnectionToAudioParam(o,n,t)[1],!1]:[r[2],!0]},deleteInputsOfAudioNode=(n,e,t,s,o)=>{const[r,a]=deleteInputConnectionOfAudioNode(n,t,s,o);if(r!==null&&(deleteEventListenerOfAudioNode(n,r),a&&!e&&!isPartOfACycle(n)&&disconnectNativeAudioNodeFromNativeAudioNode(getNativeAudioNode(n),getNativeAudioNode(t),s,o)),isActiveAudioNode(t)){const{activeInputs:c}=getAudioNodeConnections(t);setInternalStateToPassiveWhenNecessary(t,c)}},deleteInputsOfAudioParam=(n,e,t,s)=>{const[o,r]=deleteInputConnectionOfAudioParam(n,t,s);o!==null&&(deleteEventListenerOfAudioNode(n,o),r&&!e&&!isPartOfACycle(n)&&getNativeAudioNode(n).disconnect(getNativeAudioParam(t),s))},deleteAnyConnection=(n,e)=>{const t=getAudioNodeConnections(n),s=[];for(const o of t.outputs)isAudioNodeOutputConnection(o)?deleteInputsOfAudioNode(n,e,...o):deleteInputsOfAudioParam(n,e,...o),s.push(o[0]);return t.outputs.clear(),s},deleteConnectionAtOutput=(n,e,t)=>{const s=getAudioNodeConnections(n),o=[];for(const r of s.outputs)r[1]===t&&(isAudioNodeOutputConnection(r)?deleteInputsOfAudioNode(n,e,...r):deleteInputsOfAudioParam(n,e,...r),o.push(r[0]),s.outputs.delete(r));return o},deleteConnectionToDestination=(n,e,t,s,o)=>{const r=getAudioNodeConnections(n);return Array.from(r.outputs).filter(a=>a[0]===t&&(s===void 0||a[1]===s)&&(o===void 0||a[2]===o)).map(a=>(isAudioNodeOutputConnection(a)?deleteInputsOfAudioNode(n,e,...a):deleteInputsOfAudioParam(n,e,...a),r.outputs.delete(a),a[0]))},createAudioNodeConstructor=(n,e,t,s,o,r,a,c,l,u,d,f,m,g,_,y)=>class extends u{constructor(S,w,M,k){super(M),this._context=S,this._nativeAudioNode=M;const C=d(S);f(C)&&t(testAudioNodeDisconnectMethodSupport,()=>testAudioNodeDisconnectMethodSupport(C,y))!==!0&&wrapAudioNodeDisconnectMethod(M),AUDIO_NODE_STORE.set(this,M),EVENT_LISTENERS.set(this,new Set),S.state!=="closed"&&w&&setInternalStateToActive(this),n(this,k,M)}get channelCount(){return this._nativeAudioNode.channelCount}set channelCount(S){this._nativeAudioNode.channelCount=S}get channelCountMode(){return this._nativeAudioNode.channelCountMode}set channelCountMode(S){this._nativeAudioNode.channelCountMode=S}get channelInterpretation(){return this._nativeAudioNode.channelInterpretation}set channelInterpretation(S){this._nativeAudioNode.channelInterpretation=S}get context(){return this._context}get numberOfInputs(){return this._nativeAudioNode.numberOfInputs}get numberOfOutputs(){return this._nativeAudioNode.numberOfOutputs}connect(S,w=0,M=0){if(w<0||w>=this._nativeAudioNode.numberOfOutputs)throw o();const k=d(this._context),C=_(k);if(m(S)||g(S))throw r();if(isAudioNode$1(S)){const b=getNativeAudioNode(S);try{const q=connectNativeAudioNodeToNativeAudioNode(this._nativeAudioNode,b,w,M),L=isPassiveAudioNode(this);(C||L)&&this._nativeAudioNode.disconnect(...q),this.context.state!=="closed"&&!L&&isPassiveAudioNode(S)&&setInternalStateToActive(S)}catch(q){throw q.code===12?r():q}if(e(this,S,w,M,C)){const q=l([this],S);visitEachAudioNodeOnce(q,s(C))}return S}const E=getNativeAudioParam(S);if(E.name==="playbackRate"&&E.maxValue===1024)throw a();try{this._nativeAudioNode.connect(E,w),(C||isPassiveAudioNode(this))&&this._nativeAudioNode.disconnect(E,w)}catch(b){throw b.code===12?r():b}if(addConnectionToAudioParamOfAudioContext(this,S,w,C)){const b=l([this],S);visitEachAudioNodeOnce(b,s(C))}}disconnect(S,w,M){let k;const C=d(this._context),E=_(C);if(S===void 0)k=deleteAnyConnection(this,E);else if(typeof S=="number"){if(S<0||S>=this.numberOfOutputs)throw o();k=deleteConnectionAtOutput(this,E,S)}else{if(w!==void 0&&(w<0||w>=this.numberOfOutputs)||isAudioNode$1(S)&&M!==void 0&&(M<0||M>=S.numberOfInputs))throw o();if(k=deleteConnectionToDestination(this,E,S,w,M),k.length===0)throw r()}for(const P of k){const b=l([this],P);visitEachAudioNodeOnce(b,c)}}},createAudioParamFactory=(n,e,t,s,o,r,a,c,l,u,d,f,m)=>(g,_,y,A=null,S=null)=>{const w=y.value,M=new AutomationEventList(w),k=_?s(M):null,C={get defaultValue(){return w},get maxValue(){return A===null?y.maxValue:A},get minValue(){return S===null?y.minValue:S},get value(){return y.value},set value(E){y.value=E,C.setValueAtTime(E,g.context.currentTime)},cancelAndHoldAtTime(E){if(typeof y.cancelAndHoldAtTime=="function")k===null&&M.flush(g.context.currentTime),M.add(o(E)),y.cancelAndHoldAtTime(E);else{const P=Array.from(M).pop();k===null&&M.flush(g.context.currentTime),M.add(o(E));const b=Array.from(M).pop();y.cancelScheduledValues(E),P!==b&&b!==void 0&&(b.type==="exponentialRampToValue"?y.exponentialRampToValueAtTime(b.value,b.endTime):b.type==="linearRampToValue"?y.linearRampToValueAtTime(b.value,b.endTime):b.type==="setValue"?y.setValueAtTime(b.value,b.startTime):b.type==="setValueCurve"&&y.setValueCurveAtTime(b.values,b.startTime,b.duration))}return C},cancelScheduledValues(E){return k===null&&M.flush(g.context.currentTime),M.add(r(E)),y.cancelScheduledValues(E),C},exponentialRampToValueAtTime(E,P){if(E===0)throw new RangeError;if(!Number.isFinite(P)||P<0)throw new RangeError;const b=g.context.currentTime;return k===null&&M.flush(b),Array.from(M).length===0&&(M.add(u(w,b)),y.setValueAtTime(w,b)),M.add(a(E,P)),y.exponentialRampToValueAtTime(E,P),C},linearRampToValueAtTime(E,P){const b=g.context.currentTime;return k===null&&M.flush(b),Array.from(M).length===0&&(M.add(u(w,b)),y.setValueAtTime(w,b)),M.add(c(E,P)),y.linearRampToValueAtTime(E,P),C},setTargetAtTime(E,P,b){return k===null&&M.flush(g.context.currentTime),M.add(l(E,P,b)),y.setTargetAtTime(E,P,b),C},setValueAtTime(E,P){return k===null&&M.flush(g.context.currentTime),M.add(u(E,P)),y.setValueAtTime(E,P),C},setValueCurveAtTime(E,P,b){const j=E instanceof Float32Array?E:new Float32Array(E);if(f!==null&&f.name==="webkitAudioContext"){const q=P+b,L=g.context.sampleRate,V=Math.ceil(P*L),K=Math.floor(q*L),Y=K-V,te=new Float32Array(Y);for(let U=0;U<Y;U+=1){const X=(j.length-1)/b*((V+U)/L-P),ee=Math.floor(X),oe=Math.ceil(X);te[U]=ee===oe?j[ee]:(1-(X-ee))*j[ee]+(1-(oe-X))*j[oe]}k===null&&M.flush(g.context.currentTime),M.add(d(te,P,b)),y.setValueCurveAtTime(te,P,b);const H=K/L;H<q&&m(C,te[te.length-1],H),m(C,j[j.length-1],q)}else k===null&&M.flush(g.context.currentTime),M.add(d(j,P,b)),y.setValueCurveAtTime(j,P,b);return C}};return t.set(C,y),e.set(C,g),n(C,k),C},createAudioParamRenderer=n=>({replay(e){for(const t of n)if(t.type==="exponentialRampToValue"){const{endTime:s,value:o}=t;e.exponentialRampToValueAtTime(o,s)}else if(t.type==="linearRampToValue"){const{endTime:s,value:o}=t;e.linearRampToValueAtTime(o,s)}else if(t.type==="setTarget"){const{startTime:s,target:o,timeConstant:r}=t;e.setTargetAtTime(o,s,r)}else if(t.type==="setValue"){const{startTime:s,value:o}=t;e.setValueAtTime(o,s)}else if(t.type==="setValueCurve"){const{duration:s,startTime:o,values:r}=t;e.setValueCurveAtTime(r,o,s)}else throw new Error("Can't apply an unknown automation.")}});class ReadOnlyMap{constructor(e){this._map=new Map(e)}get size(){return this._map.size}entries(){return this._map.entries()}forEach(e,t=null){return this._map.forEach((s,o)=>e.call(t,s,o,this))}get(e){return this._map.get(e)}has(e){return this._map.has(e)}keys(){return this._map.keys()}values(){return this._map.values()}}const DEFAULT_OPTIONS$g={channelCount:2,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:1,numberOfOutputs:1,parameterData:{},processorOptions:{}},createAudioWorkletNodeConstructor=(n,e,t,s,o,r,a,c,l,u,d,f,m,g)=>class extends e{constructor(y,A,S){var w;const M=c(y),k=l(M),C=d({...DEFAULT_OPTIONS$g,...S});m(C);const E=NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS.get(M),P=E==null?void 0:E.get(A),b=k||M.state!=="closed"?M:(w=a(M))!==null&&w!==void 0?w:M,j=o(b,k?null:y.baseLatency,u,A,P,C),q=k?s(A,C,P):null;super(y,!0,j,q);const L=[];j.parameters.forEach((K,Y)=>{const te=t(this,k,K);L.push([Y,te])}),this._nativeAudioWorkletNode=j,this._onprocessorerror=null,this._parameters=new ReadOnlyMap(L),k&&n(M,this);const{activeInputs:V}=r(this);f(j,V)}get onprocessorerror(){return this._onprocessorerror}set onprocessorerror(y){const A=typeof y=="function"?g(this,y):null;this._nativeAudioWorkletNode.onprocessorerror=A;const S=this._nativeAudioWorkletNode.onprocessorerror;this._onprocessorerror=S!==null&&S===A?y:S}get parameters(){return this._parameters===null?this._nativeAudioWorkletNode.parameters:this._parameters}get port(){return this._nativeAudioWorkletNode.port}};function copyFromChannel(n,e,t,s,o){if(typeof n.copyFromChannel=="function")e[t].byteLength===0&&(e[t]=new Float32Array(128)),n.copyFromChannel(e[t],s,o);else{const r=n.getChannelData(s);if(e[t].byteLength===0)e[t]=r.slice(o,o+128);else{const a=new Float32Array(r.buffer,o*Float32Array.BYTES_PER_ELEMENT,128);e[t].set(a)}}}const copyToChannel=(n,e,t,s,o)=>{typeof n.copyToChannel=="function"?e[t].byteLength!==0&&n.copyToChannel(e[t],s,o):e[t].byteLength!==0&&n.getChannelData(s).set(e[t],o)},createNestedArrays=(n,e)=>{const t=[];for(let s=0;s<n;s+=1){const o=[],r=typeof e=="number"?e:e[s];for(let a=0;a<r;a+=1)o.push(new Float32Array(128));t.push(o)}return t},getAudioWorkletProcessor=(n,e)=>{const t=getValueForKey(NODE_TO_PROCESSOR_MAPS,n),s=getNativeAudioNode(e);return getValueForKey(t,s)},processBuffer=async(n,e,t,s,o,r,a)=>{const c=e===null?Math.ceil(n.context.length/128)*128:e.length,l=s.channelCount*s.numberOfInputs,u=o.reduce((A,S)=>A+S,0),d=u===0?null:t.createBuffer(u,c,t.sampleRate);if(r===void 0)throw new Error("Missing the processor constructor.");const f=getAudioNodeConnections(n),m=await getAudioWorkletProcessor(t,n),g=createNestedArrays(s.numberOfInputs,s.channelCount),_=createNestedArrays(s.numberOfOutputs,o),y=Array.from(n.parameters.keys()).reduce((A,S)=>({...A,[S]:new Float32Array(128)}),{});for(let A=0;A<c;A+=128){if(s.numberOfInputs>0&&e!==null)for(let S=0;S<s.numberOfInputs;S+=1)for(let w=0;w<s.channelCount;w+=1)copyFromChannel(e,g[S],w,w,A);r.parameterDescriptors!==void 0&&e!==null&&r.parameterDescriptors.forEach(({name:S},w)=>{copyFromChannel(e,y,S,l+w,A)});for(let S=0;S<s.numberOfInputs;S+=1)for(let w=0;w<o[S];w+=1)_[S][w].byteLength===0&&(_[S][w]=new Float32Array(128));try{const S=g.map((M,k)=>f.activeInputs[k].size===0?[]:M),w=a(A/t.sampleRate,t.sampleRate,()=>m.process(S,_,y));if(d!==null)for(let M=0,k=0;M<s.numberOfOutputs;M+=1){for(let C=0;C<o[M];C+=1)copyToChannel(d,_[M],C,k+C,A);k+=o[M]}if(!w)break}catch(S){n.dispatchEvent(new ErrorEvent("processorerror",{colno:S.colno,filename:S.filename,lineno:S.lineno,message:S.message}));break}}return d},createAudioWorkletNodeRendererFactory=(n,e,t,s,o,r,a,c,l,u,d,f,m,g,_,y)=>(A,S,w)=>{const M=new WeakMap;let k=null;const C=async(E,P)=>{let b=d(E),j=null;const q=isOwnedByContext(b,P),L=Array.isArray(S.outputChannelCount)?S.outputChannelCount:Array.from(S.outputChannelCount);if(f===null){const V=L.reduce((H,U)=>H+U,0),K=o(P,{channelCount:Math.max(1,V),channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:Math.max(1,V)}),Y=[];for(let H=0;H<E.numberOfOutputs;H+=1)Y.push(s(P,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:L[H]}));const te=a(P,{channelCount:S.channelCount,channelCountMode:S.channelCountMode,channelInterpretation:S.channelInterpretation,gain:1});te.connect=e.bind(null,Y),te.disconnect=l.bind(null,Y),j=[K,Y,te]}else q||(b=new f(P,A));if(M.set(P,j===null?b:j[2]),j!==null){if(k===null){if(w===void 0)throw new Error("Missing the processor constructor.");if(m===null)throw new Error("Missing the native OfflineAudioContext constructor.");const U=E.channelCount*E.numberOfInputs,X=w.parameterDescriptors===void 0?0:w.parameterDescriptors.length,ee=U+X;k=processBuffer(E,ee===0?null:await(async()=>{const se=new m(ee,Math.ceil(E.context.length/128)*128,P.sampleRate),re=[],pe=[];for(let ce=0;ce<S.numberOfInputs;ce+=1)re.push(a(se,{channelCount:S.channelCount,channelCountMode:S.channelCountMode,channelInterpretation:S.channelInterpretation,gain:1})),pe.push(o(se,{channelCount:S.channelCount,channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:S.channelCount}));const fe=await Promise.all(Array.from(E.parameters.values()).map(async ce=>{const I=r(se,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",offset:ce.value});return await g(se,ce,I.offset),I})),ae=s(se,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:Math.max(1,U+X)});for(let ce=0;ce<S.numberOfInputs;ce+=1){re[ce].connect(pe[ce]);for(let I=0;I<S.channelCount;I+=1)pe[ce].connect(ae,I,ce*S.channelCount+I)}for(const[ce,I]of fe.entries())I.connect(ae,0,U+ce),I.start(0);return ae.connect(se.destination),await Promise.all(re.map(ce=>_(E,se,ce))),y(se)})(),P,S,L,w,u)}const V=await k,K=t(P,{buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1}),[Y,te,H]=j;V!==null&&(K.buffer=V,K.start(0)),K.connect(Y);for(let U=0,X=0;U<E.numberOfOutputs;U+=1){const ee=te[U];for(let oe=0;oe<L[U];oe+=1)Y.connect(ee,X+oe,oe);X+=L[U]}return H}if(q)for(const[V,K]of E.parameters.entries())await n(P,K,b.parameters.get(V));else for(const[V,K]of E.parameters.entries())await g(P,K,b.parameters.get(V));return await _(E,P,b),b};return{render(E,P){c(P,E);const b=M.get(P);return b!==void 0?Promise.resolve(b):C(E,P)}}},createBaseAudioContextConstructor=(n,e,t,s,o,r,a,c,l,u,d,f,m,g,_,y,A,S,w,M)=>class extends _{constructor(C,E){super(C,E),this._nativeContext=C,this._audioWorklet=n===void 0?void 0:{addModule:(P,b)=>n(this,P,b)}}get audioWorklet(){return this._audioWorklet}createAnalyser(){return new e(this)}createBiquadFilter(){return new o(this)}createBuffer(C,E,P){return new t({length:E,numberOfChannels:C,sampleRate:P})}createBufferSource(){return new s(this)}createChannelMerger(C=6){return new r(this,{numberOfInputs:C})}createChannelSplitter(C=6){return new a(this,{numberOfOutputs:C})}createConstantSource(){return new c(this)}createConvolver(){return new l(this)}createDelay(C=1){return new d(this,{maxDelayTime:C})}createDynamicsCompressor(){return new f(this)}createGain(){return new m(this)}createIIRFilter(C,E){return new g(this,{feedback:E,feedforward:C})}createOscillator(){return new y(this)}createPanner(){return new A(this)}createPeriodicWave(C,E,P={disableNormalization:!1}){return new S(this,{...P,imag:E,real:C})}createStereoPanner(){return new w(this)}createWaveShaper(){return new M(this)}decodeAudioData(C,E,P){return u(this._nativeContext,C).then(b=>(typeof E=="function"&&E(b),b),b=>{throw typeof P=="function"&&P(b),b})}},DEFAULT_OPTIONS$f={Q:1,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",detune:0,frequency:350,gain:0,type:"lowpass"},createBiquadFilterNodeConstructor=(n,e,t,s,o,r,a,c)=>class extends n{constructor(u,d){const f=r(u),m={...DEFAULT_OPTIONS$f,...d},g=o(f,m),_=a(f),y=_?t():null;super(u,!1,g,y),this._Q=e(this,_,g.Q,MOST_POSITIVE_SINGLE_FLOAT,MOST_NEGATIVE_SINGLE_FLOAT),this._detune=e(this,_,g.detune,1200*Math.log2(MOST_POSITIVE_SINGLE_FLOAT),-1200*Math.log2(MOST_POSITIVE_SINGLE_FLOAT)),this._frequency=e(this,_,g.frequency,u.sampleRate/2,0),this._gain=e(this,_,g.gain,40*Math.log10(MOST_POSITIVE_SINGLE_FLOAT),MOST_NEGATIVE_SINGLE_FLOAT),this._nativeBiquadFilterNode=g,c(this,1)}get detune(){return this._detune}get frequency(){return this._frequency}get gain(){return this._gain}get Q(){return this._Q}get type(){return this._nativeBiquadFilterNode.type}set type(u){this._nativeBiquadFilterNode.type=u}getFrequencyResponse(u,d,f){try{this._nativeBiquadFilterNode.getFrequencyResponse(u,d,f)}catch(m){throw m.code===11?s():m}if(u.length!==d.length||d.length!==f.length)throw s()}},createBiquadFilterNodeRendererFactory=(n,e,t,s,o)=>()=>{const r=new WeakMap,a=async(c,l)=>{let u=t(c);const d=isOwnedByContext(u,l);if(!d){const f={Q:u.Q.value,channelCount:u.channelCount,channelCountMode:u.channelCountMode,channelInterpretation:u.channelInterpretation,detune:u.detune.value,frequency:u.frequency.value,gain:u.gain.value,type:u.type};u=e(l,f)}return r.set(l,u),d?(await n(l,c.Q,u.Q),await n(l,c.detune,u.detune),await n(l,c.frequency,u.frequency),await n(l,c.gain,u.gain)):(await s(l,c.Q,u.Q),await s(l,c.detune,u.detune),await s(l,c.frequency,u.frequency),await s(l,c.gain,u.gain)),await o(c,l,u),u};return{render(c,l){const u=r.get(l);return u!==void 0?Promise.resolve(u):a(c,l)}}},createCacheTestResult=(n,e)=>(t,s)=>{const o=e.get(t);if(o!==void 0)return o;const r=n.get(t);if(r!==void 0)return r;try{const a=s();return a instanceof Promise?(n.set(t,a),a.catch(()=>!1).then(c=>(n.delete(t),e.set(t,c),c))):(e.set(t,a),a)}catch{return e.set(t,!1),!1}},DEFAULT_OPTIONS$e={channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:6},createChannelMergerNodeConstructor=(n,e,t,s,o)=>class extends n{constructor(a,c){const l=s(a),u={...DEFAULT_OPTIONS$e,...c},d=t(l,u),f=o(l)?e():null;super(a,!1,d,f)}},createChannelMergerNodeRendererFactory=(n,e,t)=>()=>{const s=new WeakMap,o=async(r,a)=>{let c=e(r);if(!isOwnedByContext(c,a)){const u={channelCount:c.channelCount,channelCountMode:c.channelCountMode,channelInterpretation:c.channelInterpretation,numberOfInputs:c.numberOfInputs};c=n(a,u)}return s.set(a,c),await t(r,a,c),c};return{render(r,a){const c=s.get(a);return c!==void 0?Promise.resolve(c):o(r,a)}}},DEFAULT_OPTIONS$d={channelCount:6,channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:6},createChannelSplitterNodeConstructor=(n,e,t,s,o,r)=>class extends n{constructor(c,l){const u=s(c),d=r({...DEFAULT_OPTIONS$d,...l}),f=t(u,d),m=o(u)?e():null;super(c,!1,f,m)}},createChannelSplitterNodeRendererFactory=(n,e,t)=>()=>{const s=new WeakMap,o=async(r,a)=>{let c=e(r);if(!isOwnedByContext(c,a)){const u={channelCount:c.channelCount,channelCountMode:c.channelCountMode,channelInterpretation:c.channelInterpretation,numberOfOutputs:c.numberOfOutputs};c=n(a,u)}return s.set(a,c),await t(r,a,c),c};return{render(r,a){const c=s.get(a);return c!==void 0?Promise.resolve(c):o(r,a)}}},createConnectAudioParam=n=>(e,t,s)=>n(t,e,s),createConnectMultipleOutputs=n=>(e,t,s=0,o=0)=>{const r=e[s];if(r===void 0)throw n();return isNativeAudioNode$1(t)?r.connect(t,0,o):r.connect(t,0)},createConnectedNativeAudioBufferSourceNodeFactory=n=>(e,t)=>{const s=n(e,{buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1}),o=e.createBuffer(1,2,44100);return s.buffer=o,s.loop=!0,s.connect(t),s.start(),()=>{s.stop(),s.disconnect(t)}},DEFAULT_OPTIONS$c={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",offset:1},createConstantSourceNodeConstructor=(n,e,t,s,o,r,a)=>class extends n{constructor(l,u){const d=o(l),f={...DEFAULT_OPTIONS$c,...u},m=s(d,f),g=r(d),_=g?t():null;super(l,!1,m,_),this._constantSourceNodeRenderer=_,this._nativeConstantSourceNode=m,this._offset=e(this,g,m.offset,MOST_POSITIVE_SINGLE_FLOAT,MOST_NEGATIVE_SINGLE_FLOAT),this._onended=null}get offset(){return this._offset}get onended(){return this._onended}set onended(l){const u=typeof l=="function"?a(this,l):null;this._nativeConstantSourceNode.onended=u;const d=this._nativeConstantSourceNode.onended;this._onended=d!==null&&d===u?l:d}start(l=0){if(this._nativeConstantSourceNode.start(l),this._constantSourceNodeRenderer!==null&&(this._constantSourceNodeRenderer.start=l),this.context.state!=="closed"){setInternalStateToActive(this);const u=()=>{this._nativeConstantSourceNode.removeEventListener("ended",u),isActiveAudioNode(this)&&setInternalStateToPassive(this)};this._nativeConstantSourceNode.addEventListener("ended",u)}}stop(l=0){this._nativeConstantSourceNode.stop(l),this._constantSourceNodeRenderer!==null&&(this._constantSourceNodeRenderer.stop=l)}},createConstantSourceNodeRendererFactory=(n,e,t,s,o)=>()=>{const r=new WeakMap;let a=null,c=null;const l=async(u,d)=>{let f=t(u);const m=isOwnedByContext(f,d);if(!m){const g={channelCount:f.channelCount,channelCountMode:f.channelCountMode,channelInterpretation:f.channelInterpretation,offset:f.offset.value};f=e(d,g),a!==null&&f.start(a),c!==null&&f.stop(c)}return r.set(d,f),m?await n(d,u.offset,f.offset):await s(d,u.offset,f.offset),await o(u,d,f),f};return{set start(u){a=u},set stop(u){c=u},render(u,d){const f=r.get(d);return f!==void 0?Promise.resolve(f):l(u,d)}}},createConvertNumberToUnsignedLong=n=>e=>(n[0]=e,n[0]),DEFAULT_OPTIONS$b={buffer:null,channelCount:2,channelCountMode:"clamped-max",channelInterpretation:"speakers",disableNormalization:!1},createConvolverNodeConstructor=(n,e,t,s,o,r)=>class extends n{constructor(c,l){const u=s(c),d={...DEFAULT_OPTIONS$b,...l},f=t(u,d),g=o(u)?e():null;super(c,!1,f,g),this._isBufferNullified=!1,this._nativeConvolverNode=f,d.buffer!==null&&r(this,d.buffer.duration)}get buffer(){return this._isBufferNullified?null:this._nativeConvolverNode.buffer}set buffer(c){if(this._nativeConvolverNode.buffer=c,c===null&&this._nativeConvolverNode.buffer!==null){const l=this._nativeConvolverNode.context;this._nativeConvolverNode.buffer=l.createBuffer(1,1,l.sampleRate),this._isBufferNullified=!0,r(this,0)}else this._isBufferNullified=!1,r(this,this._nativeConvolverNode.buffer===null?0:this._nativeConvolverNode.buffer.duration)}get normalize(){return this._nativeConvolverNode.normalize}set normalize(c){this._nativeConvolverNode.normalize=c}},createConvolverNodeRendererFactory=(n,e,t)=>()=>{const s=new WeakMap,o=async(r,a)=>{let c=e(r);if(!isOwnedByContext(c,a)){const u={buffer:c.buffer,channelCount:c.channelCount,channelCountMode:c.channelCountMode,channelInterpretation:c.channelInterpretation,disableNormalization:!c.normalize};c=n(a,u)}return s.set(a,c),isNativeAudioNodeFaker(c)?await t(r,a,c.inputs[0]):await t(r,a,c),c};return{render(r,a){const c=s.get(a);return c!==void 0?Promise.resolve(c):o(r,a)}}},createCreateNativeOfflineAudioContext=(n,e)=>(t,s,o)=>{if(e===null)throw new Error("Missing the native OfflineAudioContext constructor.");try{return new e(t,s,o)}catch(r){throw r.name==="SyntaxError"?n():r}},createDataCloneError=()=>new DOMException("","DataCloneError"),detachArrayBuffer=n=>{const{port1:e,port2:t}=new MessageChannel;return new Promise(s=>{const o=()=>{t.onmessage=null,e.close(),t.close(),s()};t.onmessage=()=>o();try{e.postMessage(n,[n])}catch{}finally{o()}})},createDecodeAudioData=(n,e,t,s,o,r,a,c,l,u,d)=>(f,m)=>{const g=a(f)?f:r(f);if(o.has(m)){const _=t();return Promise.reject(_)}try{o.add(m)}catch{}return e(l,()=>l(g))?g.decodeAudioData(m).then(_=>(detachArrayBuffer(m).catch(()=>{}),e(c,()=>c(_))||d(_),n.add(_),_)):new Promise((_,y)=>{const A=async()=>{try{await detachArrayBuffer(m)}catch{}},S=w=>{y(w),A()};try{g.decodeAudioData(m,w=>{typeof w.copyFromChannel!="function"&&(u(w),wrapAudioBufferGetChannelDataMethod(w)),n.add(w),A().then(()=>_(w))},w=>{S(w===null?s():w)})}catch(w){S(w)}})},createDecrementCycleCounter=(n,e,t,s,o,r,a,c)=>(l,u)=>{const d=e.get(l);if(d===void 0)throw new Error("Missing the expected cycle count.");const f=r(l.context),m=c(f);if(d===u){if(e.delete(l),!m&&a(l)){const g=s(l),{outputs:_}=t(l);for(const y of _)if(isAudioNodeOutputConnection(y)){const A=s(y[0]);n(g,A,y[1],y[2])}else{const A=o(y[0]);g.connect(A,y[1])}}}else e.set(l,d-u)},DEFAULT_OPTIONS$a={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",delayTime:0,maxDelayTime:1},createDelayNodeConstructor=(n,e,t,s,o,r,a)=>class extends n{constructor(l,u){const d=o(l),f={...DEFAULT_OPTIONS$a,...u},m=s(d,f),g=r(d),_=g?t(f.maxDelayTime):null;super(l,!1,m,_),this._delayTime=e(this,g,m.delayTime),a(this,f.maxDelayTime)}get delayTime(){return this._delayTime}},createDelayNodeRendererFactory=(n,e,t,s,o)=>r=>{const a=new WeakMap,c=async(l,u)=>{let d=t(l);const f=isOwnedByContext(d,u);if(!f){const m={channelCount:d.channelCount,channelCountMode:d.channelCountMode,channelInterpretation:d.channelInterpretation,delayTime:d.delayTime.value,maxDelayTime:r};d=e(u,m)}return a.set(u,d),f?await n(u,l.delayTime,d.delayTime):await s(u,l.delayTime,d.delayTime),await o(l,u,d),d};return{render(l,u){const d=a.get(u);return d!==void 0?Promise.resolve(d):c(l,u)}}},createDeleteActiveInputConnectionToAudioNode=n=>(e,t,s,o)=>n(e[o],r=>r[0]===t&&r[1]===s),createDeleteUnrenderedAudioWorkletNode=n=>(e,t)=>{n(e).delete(t)},isDelayNode=n=>"delayTime"in n,createDetectCycles=(n,e,t)=>function s(o,r){const a=isAudioNode$1(r)?r:t(n,r);if(isDelayNode(a))return[];if(o[0]===a)return[o];if(o.includes(a))return[];const{outputs:c}=e(a);return Array.from(c).map(l=>s([...o,a],l[0])).reduce((l,u)=>l.concat(u),[])},getOutputAudioNodeAtIndex=(n,e,t)=>{const s=e[t];if(s===void 0)throw n();return s},createDisconnectMultipleOutputs=n=>(e,t=void 0,s=void 0,o=0)=>t===void 0?e.forEach(r=>r.disconnect()):typeof t=="number"?getOutputAudioNodeAtIndex(n,e,t).disconnect():isNativeAudioNode$1(t)?s===void 0?e.forEach(r=>r.disconnect(t)):o===void 0?getOutputAudioNodeAtIndex(n,e,s).disconnect(t,0):getOutputAudioNodeAtIndex(n,e,s).disconnect(t,0,o):s===void 0?e.forEach(r=>r.disconnect(t)):getOutputAudioNodeAtIndex(n,e,s).disconnect(t,0),DEFAULT_OPTIONS$9={attack:.003,channelCount:2,channelCountMode:"clamped-max",channelInterpretation:"speakers",knee:30,ratio:12,release:.25,threshold:-24},createDynamicsCompressorNodeConstructor=(n,e,t,s,o,r,a,c)=>class extends n{constructor(u,d){const f=r(u),m={...DEFAULT_OPTIONS$9,...d},g=s(f,m),_=a(f),y=_?t():null;super(u,!1,g,y),this._attack=e(this,_,g.attack),this._knee=e(this,_,g.knee),this._nativeDynamicsCompressorNode=g,this._ratio=e(this,_,g.ratio),this._release=e(this,_,g.release),this._threshold=e(this,_,g.threshold),c(this,.006)}get attack(){return this._attack}get channelCount(){return this._nativeDynamicsCompressorNode.channelCount}set channelCount(u){const d=this._nativeDynamicsCompressorNode.channelCount;if(this._nativeDynamicsCompressorNode.channelCount=u,u>2)throw this._nativeDynamicsCompressorNode.channelCount=d,o()}get channelCountMode(){return this._nativeDynamicsCompressorNode.channelCountMode}set channelCountMode(u){const d=this._nativeDynamicsCompressorNode.channelCountMode;if(this._nativeDynamicsCompressorNode.channelCountMode=u,u==="max")throw this._nativeDynamicsCompressorNode.channelCountMode=d,o()}get knee(){return this._knee}get ratio(){return this._ratio}get reduction(){return typeof this._nativeDynamicsCompressorNode.reduction.value=="number"?this._nativeDynamicsCompressorNode.reduction.value:this._nativeDynamicsCompressorNode.reduction}get release(){return this._release}get threshold(){return this._threshold}},createDynamicsCompressorNodeRendererFactory=(n,e,t,s,o)=>()=>{const r=new WeakMap,a=async(c,l)=>{let u=t(c);const d=isOwnedByContext(u,l);if(!d){const f={attack:u.attack.value,channelCount:u.channelCount,channelCountMode:u.channelCountMode,channelInterpretation:u.channelInterpretation,knee:u.knee.value,ratio:u.ratio.value,release:u.release.value,threshold:u.threshold.value};u=e(l,f)}return r.set(l,u),d?(await n(l,c.attack,u.attack),await n(l,c.knee,u.knee),await n(l,c.ratio,u.ratio),await n(l,c.release,u.release),await n(l,c.threshold,u.threshold)):(await s(l,c.attack,u.attack),await s(l,c.knee,u.knee),await s(l,c.ratio,u.ratio),await s(l,c.release,u.release),await s(l,c.threshold,u.threshold)),await o(c,l,u),u};return{render(c,l){const u=r.get(l);return u!==void 0?Promise.resolve(u):a(c,l)}}},createEncodingError=()=>new DOMException("","EncodingError"),createEvaluateSource=n=>e=>new Promise((t,s)=>{if(n===null){s(new SyntaxError);return}const o=n.document.head;if(o===null)s(new SyntaxError);else{const r=n.document.createElement("script"),a=new Blob([e],{type:"application/javascript"}),c=URL.createObjectURL(a),l=n.onerror,u=()=>{n.onerror=l,URL.revokeObjectURL(c)};n.onerror=(d,f,m,g,_)=>{if(f===c||f===n.location.href&&m===1&&g===1)return u(),s(_),!1;if(l!==null)return l(d,f,m,g,_)},r.onerror=()=>{u(),s(new SyntaxError)},r.onload=()=>{u(),t()},r.src=c,r.type="module",o.appendChild(r)}}),createEventTargetConstructor=n=>class{constructor(t){this._nativeEventTarget=t,this._listeners=new WeakMap}addEventListener(t,s,o){if(s!==null){let r=this._listeners.get(s);r===void 0&&(r=n(this,s),typeof s=="function"&&this._listeners.set(s,r)),this._nativeEventTarget.addEventListener(t,r,o)}}dispatchEvent(t){return this._nativeEventTarget.dispatchEvent(t)}removeEventListener(t,s,o){const r=s===null?void 0:this._listeners.get(s);this._nativeEventTarget.removeEventListener(t,r===void 0?null:r,o)}},createExposeCurrentFrameAndCurrentTime=n=>(e,t,s)=>{Object.defineProperties(n,{currentFrame:{configurable:!0,get(){return Math.round(e*t)}},currentTime:{configurable:!0,get(){return e}}});try{return s()}finally{n!==null&&(delete n.currentFrame,delete n.currentTime)}},createFetchSource=n=>async e=>{try{const t=await fetch(e);if(t.ok)return[await t.text(),t.url]}catch{}throw n()},DEFAULT_OPTIONS$8={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",gain:1},createGainNodeConstructor=(n,e,t,s,o,r)=>class extends n{constructor(c,l){const u=o(c),d={...DEFAULT_OPTIONS$8,...l},f=s(u,d),m=r(u),g=m?t():null;super(c,!1,f,g),this._gain=e(this,m,f.gain,MOST_POSITIVE_SINGLE_FLOAT,MOST_NEGATIVE_SINGLE_FLOAT)}get gain(){return this._gain}},createGainNodeRendererFactory=(n,e,t,s,o)=>()=>{const r=new WeakMap,a=async(c,l)=>{let u=t(c);const d=isOwnedByContext(u,l);if(!d){const f={channelCount:u.channelCount,channelCountMode:u.channelCountMode,channelInterpretation:u.channelInterpretation,gain:u.gain.value};u=e(l,f)}return r.set(l,u),d?await n(l,c.gain,u.gain):await s(l,c.gain,u.gain),await o(c,l,u),u};return{render(c,l){const u=r.get(l);return u!==void 0?Promise.resolve(u):a(c,l)}}},createGetActiveAudioWorkletNodeInputs=(n,e)=>t=>e(n,t),createGetAudioNodeRenderer=n=>e=>{const t=n(e);if(t.renderer===null)throw new Error("Missing the renderer of the given AudioNode in the audio graph.");return t.renderer},createGetAudioNodeTailTime=n=>e=>{var t;return(t=n.get(e))!==null&&t!==void 0?t:0},createGetAudioParamRenderer=n=>e=>{const t=n(e);if(t.renderer===null)throw new Error("Missing the renderer of the given AudioParam in the audio graph.");return t.renderer},createGetBackupOfflineAudioContext=n=>e=>n.get(e),createInvalidStateError=()=>new DOMException("","InvalidStateError"),createGetNativeContext=n=>e=>{const t=n.get(e);if(t===void 0)throw createInvalidStateError();return t},createGetOrCreateBackupOfflineAudioContext=(n,e)=>t=>{let s=n.get(t);if(s!==void 0)return s;if(e===null)throw new Error("Missing the native OfflineAudioContext constructor.");return s=new e(1,1,44100),n.set(t,s),s},createGetUnrenderedAudioWorkletNodes=n=>e=>{const t=n.get(e);if(t===void 0)throw new Error("The context has no set of AudioWorkletNodes.");return t},createInvalidAccessError=()=>new DOMException("","InvalidAccessError"),wrapIIRFilterNodeGetFrequencyResponseMethod=n=>{n.getFrequencyResponse=(e=>(t,s,o)=>{if(t.length!==s.length||s.length!==o.length)throw createInvalidAccessError();return e.call(n,t,s,o)})(n.getFrequencyResponse)},DEFAULT_OPTIONS$7={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers"},createIIRFilterNodeConstructor=(n,e,t,s,o,r)=>class extends n{constructor(c,l){const u=s(c),d=o(u),f={...DEFAULT_OPTIONS$7,...l},m=e(u,d?null:c.baseLatency,f),g=d?t(f.feedback,f.feedforward):null;super(c,!1,m,g),wrapIIRFilterNodeGetFrequencyResponseMethod(m),this._nativeIIRFilterNode=m,r(this,1)}getFrequencyResponse(c,l,u){return this._nativeIIRFilterNode.getFrequencyResponse(c,l,u)}},filterBuffer=(n,e,t,s,o,r,a,c,l,u,d)=>{const f=u.length;let m=c;for(let g=0;g<f;g+=1){let _=t[0]*u[g];for(let y=1;y<o;y+=1){const A=m-y&l-1;_+=t[y]*r[A],_-=n[y]*a[A]}for(let y=o;y<s;y+=1)_+=t[y]*r[m-y&l-1];for(let y=o;y<e;y+=1)_-=n[y]*a[m-y&l-1];r[m]=u[g],a[m]=_,m=m+1&l-1,d[g]=_}return m},filterFullBuffer=(n,e,t,s)=>{const o=t instanceof Float64Array?t:new Float64Array(t),r=s instanceof Float64Array?s:new Float64Array(s),a=o.length,c=r.length,l=Math.min(a,c);if(o[0]!==1){for(let _=0;_<a;_+=1)r[_]/=o[0];for(let _=1;_<c;_+=1)o[_]/=o[0]}const u=32,d=new Float32Array(u),f=new Float32Array(u),m=e.createBuffer(n.numberOfChannels,n.length,n.sampleRate),g=n.numberOfChannels;for(let _=0;_<g;_+=1){const y=n.getChannelData(_),A=m.getChannelData(_);d.fill(0),f.fill(0),filterBuffer(o,a,r,c,l,d,f,0,u,y,A)}return m},createIIRFilterNodeRendererFactory=(n,e,t,s,o)=>(r,a)=>{const c=new WeakMap;let l=null;const u=async(d,f)=>{let m=null,g=e(d);const _=isOwnedByContext(g,f);if(f.createIIRFilter===void 0?m=n(f,{buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1}):_||(g=f.createIIRFilter(a,r)),c.set(f,m===null?g:m),m!==null){if(l===null){if(t===null)throw new Error("Missing the native OfflineAudioContext constructor.");const A=new t(d.context.destination.channelCount,d.context.length,f.sampleRate);l=(async()=>{await s(d,A,A.destination);const S=await o(A);return filterFullBuffer(S,f,r,a)})()}const y=await l;return m.buffer=y,m.start(0),m}return await s(d,f,g),g};return{render(d,f){const m=c.get(f);return m!==void 0?Promise.resolve(m):u(d,f)}}},createIncrementCycleCounterFactory=(n,e,t,s,o,r)=>a=>(c,l)=>{const u=n.get(c);if(u===void 0){if(!a&&r(c)){const d=s(c),{outputs:f}=t(c);for(const m of f)if(isAudioNodeOutputConnection(m)){const g=s(m[0]);e(d,g,m[1],m[2])}else{const g=o(m[0]);d.disconnect(g,m[1])}}n.set(c,l)}else n.set(c,u+l)},createIsAnyAudioContext=(n,e)=>t=>{const s=n.get(t);return e(s)||e(t)},createIsAnyAudioNode=(n,e)=>t=>n.has(t)||e(t),createIsAnyAudioParam=(n,e)=>t=>n.has(t)||e(t),createIsAnyOfflineAudioContext=(n,e)=>t=>{const s=n.get(t);return e(s)||e(t)},createIsNativeAudioContext=n=>e=>n!==null&&e instanceof n,createIsNativeAudioNode=n=>e=>n!==null&&typeof n.AudioNode=="function"&&e instanceof n.AudioNode,createIsNativeAudioParam=n=>e=>n!==null&&typeof n.AudioParam=="function"&&e instanceof n.AudioParam,createIsNativeContext=(n,e)=>t=>n(t)||e(t),createIsNativeOfflineAudioContext=n=>e=>n!==null&&e instanceof n,createIsSecureContext=n=>n!==null&&n.isSecureContext,createIsSupportedPromise=async(n,e,t,s,o,r,a,c,l,u,d,f,m,g,_,y)=>n(e,e)&&n(t,t)&&n(o,o)&&n(r,r)&&n(c,c)&&n(l,l)&&n(u,u)&&n(d,d)&&n(f,f)&&n(m,m)&&n(g,g)?(await Promise.all([n(s,s),n(a,a),n(_,_),n(y,y)])).every(S=>S):!1,createMediaElementAudioSourceNodeConstructor=(n,e,t,s)=>class extends n{constructor(r,a){const c=t(r),l=e(c,a);if(s(c))throw TypeError();super(r,!0,l,null),this._nativeMediaElementAudioSourceNode=l}get mediaElement(){return this._nativeMediaElementAudioSourceNode.mediaElement}},DEFAULT_OPTIONS$6={channelCount:2,channelCountMode:"explicit",channelInterpretation:"speakers"},createMediaStreamAudioDestinationNodeConstructor=(n,e,t,s)=>class extends n{constructor(r,a){const c=t(r);if(s(c))throw new TypeError;const l={...DEFAULT_OPTIONS$6,...a},u=e(c,l);super(r,!1,u,null),this._nativeMediaStreamAudioDestinationNode=u}get stream(){return this._nativeMediaStreamAudioDestinationNode.stream}},createMediaStreamAudioSourceNodeConstructor=(n,e,t,s)=>class extends n{constructor(r,a){const c=t(r),l=e(c,a);if(s(c))throw new TypeError;super(r,!0,l,null),this._nativeMediaStreamAudioSourceNode=l}get mediaStream(){return this._nativeMediaStreamAudioSourceNode.mediaStream}},createMediaStreamTrackAudioSourceNodeConstructor=(n,e,t)=>class extends n{constructor(o,r){const a=t(o),c=e(a,r);super(o,!0,c,null)}},createMinimalBaseAudioContextConstructor=(n,e,t,s,o,r)=>class extends t{constructor(c,l){super(c),this._nativeContext=c,CONTEXT_STORE.set(this,c),s(c)&&o.set(c,new Set),this._destination=new n(this,l),this._listener=e(this,c),this._onstatechange=null}get currentTime(){return this._nativeContext.currentTime}get destination(){return this._destination}get listener(){return this._listener}get onstatechange(){return this._onstatechange}set onstatechange(c){const l=typeof c=="function"?r(this,c):null;this._nativeContext.onstatechange=l;const u=this._nativeContext.onstatechange;this._onstatechange=u!==null&&u===l?c:u}get sampleRate(){return this._nativeContext.sampleRate}get state(){return this._nativeContext.state}},testPromiseSupport=n=>{const e=new Uint32Array([1179011410,40,1163280727,544501094,16,131073,44100,176400,1048580,1635017060,4,0]);try{const t=n.decodeAudioData(e.buffer,()=>{});return t===void 0?!1:(t.catch(()=>{}),!0)}catch{}return!1},createMonitorConnections=(n,e)=>(t,s,o)=>{const r=new Set;return t.connect=(a=>(c,l=0,u=0)=>{const d=r.size===0;if(e(c))return a.call(t,c,l,u),n(r,[c,l,u],f=>f[0]===c&&f[1]===l&&f[2]===u,!0),d&&s(),c;a.call(t,c,l),n(r,[c,l],f=>f[0]===c&&f[1]===l,!0),d&&s()})(t.connect),t.disconnect=(a=>(c,l,u)=>{const d=r.size>0;if(c===void 0)a.apply(t),r.clear();else if(typeof c=="number"){a.call(t,c);for(const m of r)m[1]===c&&r.delete(m)}else{e(c)?a.call(t,c,l,u):a.call(t,c,l);for(const m of r)m[0]===c&&(l===void 0||m[1]===l)&&(u===void 0||m[2]===u)&&r.delete(m)}const f=r.size===0;d&&f&&o()})(t.disconnect),t},assignNativeAudioNodeOption=(n,e,t)=>{const s=e[t];s!==void 0&&s!==n[t]&&(n[t]=s)},assignNativeAudioNodeOptions=(n,e)=>{assignNativeAudioNodeOption(n,e,"channelCount"),assignNativeAudioNodeOption(n,e,"channelCountMode"),assignNativeAudioNodeOption(n,e,"channelInterpretation")},testAnalyserNodeGetFloatTimeDomainDataMethodSupport=n=>typeof n.getFloatTimeDomainData=="function",wrapAnalyserNodeGetFloatTimeDomainDataMethod=n=>{n.getFloatTimeDomainData=e=>{const t=new Uint8Array(e.length);n.getByteTimeDomainData(t);const s=Math.max(t.length,n.fftSize);for(let o=0;o<s;o+=1)e[o]=(t[o]-128)*.0078125;return e}},createNativeAnalyserNodeFactory=(n,e)=>(t,s)=>{const o=t.createAnalyser();if(assignNativeAudioNodeOptions(o,s),!(s.maxDecibels>s.minDecibels))throw e();return assignNativeAudioNodeOption(o,s,"fftSize"),assignNativeAudioNodeOption(o,s,"maxDecibels"),assignNativeAudioNodeOption(o,s,"minDecibels"),assignNativeAudioNodeOption(o,s,"smoothingTimeConstant"),n(testAnalyserNodeGetFloatTimeDomainDataMethodSupport,()=>testAnalyserNodeGetFloatTimeDomainDataMethodSupport(o))||wrapAnalyserNodeGetFloatTimeDomainDataMethod(o),o},createNativeAudioBufferConstructor=n=>n===null?null:n.hasOwnProperty("AudioBuffer")?n.AudioBuffer:null,assignNativeAudioNodeAudioParamValue=(n,e,t)=>{const s=e[t];s!==void 0&&s!==n[t].value&&(n[t].value=s)},wrapAudioBufferSourceNodeStartMethodConsecutiveCalls=n=>{n.start=(e=>{let t=!1;return(s=0,o=0,r)=>{if(t)throw createInvalidStateError();e.call(n,s,o,r),t=!0}})(n.start)},wrapAudioScheduledSourceNodeStartMethodNegativeParameters=n=>{n.start=(e=>(t=0,s=0,o)=>{if(typeof o=="number"&&o<0||s<0||t<0)throw new RangeError("The parameters can't be negative.");e.call(n,t,s,o)})(n.start)},wrapAudioScheduledSourceNodeStopMethodNegativeParameters=n=>{n.stop=(e=>(t=0)=>{if(t<0)throw new RangeError("The parameter can't be negative.");e.call(n,t)})(n.stop)},createNativeAudioBufferSourceNodeFactory=(n,e,t,s,o,r,a,c,l,u,d)=>(f,m)=>{const g=f.createBufferSource();return assignNativeAudioNodeOptions(g,m),assignNativeAudioNodeAudioParamValue(g,m,"playbackRate"),assignNativeAudioNodeOption(g,m,"buffer"),assignNativeAudioNodeOption(g,m,"loop"),assignNativeAudioNodeOption(g,m,"loopEnd"),assignNativeAudioNodeOption(g,m,"loopStart"),e(t,()=>t(f))||wrapAudioBufferSourceNodeStartMethodConsecutiveCalls(g),e(s,()=>s(f))||l(g),e(o,()=>o(f))||u(g,f),e(r,()=>r(f))||wrapAudioScheduledSourceNodeStartMethodNegativeParameters(g),e(a,()=>a(f))||d(g,f),e(c,()=>c(f))||wrapAudioScheduledSourceNodeStopMethodNegativeParameters(g),n(f,g),g},createNativeAudioContextConstructor=n=>n===null?null:n.hasOwnProperty("AudioContext")?n.AudioContext:n.hasOwnProperty("webkitAudioContext")?n.webkitAudioContext:null,createNativeAudioDestinationNodeFactory=(n,e)=>(t,s,o)=>{const r=t.destination;if(r.channelCount!==s)try{r.channelCount=s}catch{}o&&r.channelCountMode!=="explicit"&&(r.channelCountMode="explicit"),r.maxChannelCount===0&&Object.defineProperty(r,"maxChannelCount",{value:s});const a=n(t,{channelCount:s,channelCountMode:r.channelCountMode,channelInterpretation:r.channelInterpretation,gain:1});return e(a,"channelCount",c=>()=>c.call(a),c=>l=>{c.call(a,l);try{r.channelCount=l}catch(u){if(l>r.maxChannelCount)throw u}}),e(a,"channelCountMode",c=>()=>c.call(a),c=>l=>{c.call(a,l),r.channelCountMode=l}),e(a,"channelInterpretation",c=>()=>c.call(a),c=>l=>{c.call(a,l),r.channelInterpretation=l}),Object.defineProperty(a,"maxChannelCount",{get:()=>r.maxChannelCount}),a.connect(r),a},createNativeAudioWorkletNodeConstructor=n=>n===null?null:n.hasOwnProperty("AudioWorkletNode")?n.AudioWorkletNode:null,testClonabilityOfAudioWorkletNodeOptions=n=>{const{port1:e}=new MessageChannel;try{e.postMessage(n)}finally{e.close()}},createNativeAudioWorkletNodeFactory=(n,e,t,s,o)=>(r,a,c,l,u,d)=>{if(c!==null)try{const f=new c(r,l,d),m=new Map;let g=null;if(Object.defineProperties(f,{channelCount:{get:()=>d.channelCount,set:()=>{throw n()}},channelCountMode:{get:()=>"explicit",set:()=>{throw n()}},onprocessorerror:{get:()=>g,set:_=>{typeof g=="function"&&f.removeEventListener("processorerror",g),g=typeof _=="function"?_:null,typeof g=="function"&&f.addEventListener("processorerror",g)}}}),f.addEventListener=(_=>(...y)=>{if(y[0]==="processorerror"){const A=typeof y[1]=="function"?y[1]:typeof y[1]=="object"&&y[1]!==null&&typeof y[1].handleEvent=="function"?y[1].handleEvent:null;if(A!==null){const S=m.get(y[1]);S!==void 0?y[1]=S:(y[1]=w=>{w.type==="error"?(Object.defineProperties(w,{type:{value:"processorerror"}}),A(w)):A(new ErrorEvent(y[0],{...w}))},m.set(A,y[1]))}}return _.call(f,"error",y[1],y[2]),_.call(f,...y)})(f.addEventListener),f.removeEventListener=(_=>(...y)=>{if(y[0]==="processorerror"){const A=m.get(y[1]);A!==void 0&&(m.delete(y[1]),y[1]=A)}return _.call(f,"error",y[1],y[2]),_.call(f,y[0],y[1],y[2])})(f.removeEventListener),d.numberOfOutputs!==0){const _=t(r,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0});return f.connect(_).connect(r.destination),o(f,()=>_.disconnect(),()=>_.connect(r.destination))}return f}catch(f){throw f.code===11?s():f}if(u===void 0)throw s();return testClonabilityOfAudioWorkletNodeOptions(d),e(r,a,u,d)},computeBufferSize=(n,e)=>n===null?512:Math.max(512,Math.min(16384,Math.pow(2,Math.round(Math.log2(n*e))))),cloneAudioWorkletNodeOptions=n=>new Promise((e,t)=>{const{port1:s,port2:o}=new MessageChannel;s.onmessage=({data:r})=>{s.close(),o.close(),e(r)},s.onmessageerror=({data:r})=>{s.close(),o.close(),t(r)},o.postMessage(n)}),createAudioWorkletProcessorPromise=async(n,e)=>{const t=await cloneAudioWorkletNodeOptions(e);return new n(t)},createAudioWorkletProcessor=(n,e,t,s)=>{let o=NODE_TO_PROCESSOR_MAPS.get(n);o===void 0&&(o=new WeakMap,NODE_TO_PROCESSOR_MAPS.set(n,o));const r=createAudioWorkletProcessorPromise(t,s);return o.set(e,r),r},createNativeAudioWorkletNodeFakerFactory=(n,e,t,s,o,r,a,c,l,u,d,f,m)=>(g,_,y,A)=>{if(A.numberOfInputs===0&&A.numberOfOutputs===0)throw l();const S=Array.isArray(A.outputChannelCount)?A.outputChannelCount:Array.from(A.outputChannelCount);if(S.some(N=>N<1))throw l();if(S.length!==A.numberOfOutputs)throw e();if(A.channelCountMode!=="explicit")throw l();const w=A.channelCount*A.numberOfInputs,M=S.reduce((N,O)=>N+O,0),k=y.parameterDescriptors===void 0?0:y.parameterDescriptors.length;if(w+k>6||M>6)throw l();const C=new MessageChannel,E=[],P=[];for(let N=0;N<A.numberOfInputs;N+=1)E.push(a(g,{channelCount:A.channelCount,channelCountMode:A.channelCountMode,channelInterpretation:A.channelInterpretation,gain:1})),P.push(o(g,{channelCount:A.channelCount,channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:A.channelCount}));const b=[];if(y.parameterDescriptors!==void 0)for(const{defaultValue:N,maxValue:O,minValue:F,name:G}of y.parameterDescriptors){const D=r(g,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",offset:A.parameterData[G]!==void 0?A.parameterData[G]:N===void 0?0:N});Object.defineProperties(D.offset,{defaultValue:{get:()=>N===void 0?0:N},maxValue:{get:()=>O===void 0?MOST_POSITIVE_SINGLE_FLOAT:O},minValue:{get:()=>F===void 0?MOST_NEGATIVE_SINGLE_FLOAT:F}}),b.push(D)}const j=s(g,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:Math.max(1,w+k)}),q=computeBufferSize(_,g.sampleRate),L=c(g,q,w+k,Math.max(1,M)),V=o(g,{channelCount:Math.max(1,M),channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:Math.max(1,M)}),K=[];for(let N=0;N<A.numberOfOutputs;N+=1)K.push(s(g,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:S[N]}));for(let N=0;N<A.numberOfInputs;N+=1){E[N].connect(P[N]);for(let O=0;O<A.channelCount;O+=1)P[N].connect(j,O,N*A.channelCount+O)}const Y=new ReadOnlyMap(y.parameterDescriptors===void 0?[]:y.parameterDescriptors.map(({name:N},O)=>{const F=b[O];return F.connect(j,0,w+O),F.start(0),[N,F.offset]}));j.connect(L);let te=A.channelInterpretation,H=null;const U=A.numberOfOutputs===0?[L]:K,X={get bufferSize(){return q},get channelCount(){return A.channelCount},set channelCount(N){throw t()},get channelCountMode(){return A.channelCountMode},set channelCountMode(N){throw t()},get channelInterpretation(){return te},set channelInterpretation(N){for(const O of E)O.channelInterpretation=N;te=N},get context(){return L.context},get inputs(){return E},get numberOfInputs(){return A.numberOfInputs},get numberOfOutputs(){return A.numberOfOutputs},get onprocessorerror(){return H},set onprocessorerror(N){typeof H=="function"&&X.removeEventListener("processorerror",H),H=typeof N=="function"?N:null,typeof H=="function"&&X.addEventListener("processorerror",H)},get parameters(){return Y},get port(){return C.port2},addEventListener(...N){return L.addEventListener(N[0],N[1],N[2])},connect:n.bind(null,U),disconnect:u.bind(null,U),dispatchEvent(...N){return L.dispatchEvent(N[0])},removeEventListener(...N){return L.removeEventListener(N[0],N[1],N[2])}},ee=new Map;C.port1.addEventListener=(N=>(...O)=>{if(O[0]==="message"){const F=typeof O[1]=="function"?O[1]:typeof O[1]=="object"&&O[1]!==null&&typeof O[1].handleEvent=="function"?O[1].handleEvent:null;if(F!==null){const G=ee.get(O[1]);G!==void 0?O[1]=G:(O[1]=D=>{d(g.currentTime,g.sampleRate,()=>F(D))},ee.set(F,O[1]))}}return N.call(C.port1,O[0],O[1],O[2])})(C.port1.addEventListener),C.port1.removeEventListener=(N=>(...O)=>{if(O[0]==="message"){const F=ee.get(O[1]);F!==void 0&&(ee.delete(O[1]),O[1]=F)}return N.call(C.port1,O[0],O[1],O[2])})(C.port1.removeEventListener);let oe=null;Object.defineProperty(C.port1,"onmessage",{get:()=>oe,set:N=>{typeof oe=="function"&&C.port1.removeEventListener("message",oe),oe=typeof N=="function"?N:null,typeof oe=="function"&&(C.port1.addEventListener("message",oe),C.port1.start())}}),y.prototype.port=C.port1;let se=null;createAudioWorkletProcessor(g,X,y,A).then(N=>se=N);const pe=createNestedArrays(A.numberOfInputs,A.channelCount),fe=createNestedArrays(A.numberOfOutputs,S),ae=y.parameterDescriptors===void 0?[]:y.parameterDescriptors.reduce((N,{name:O})=>({...N,[O]:new Float32Array(128)}),{});let ce=!0;const I=()=>{A.numberOfOutputs>0&&L.disconnect(V);for(let N=0,O=0;N<A.numberOfOutputs;N+=1){const F=K[N];for(let G=0;G<S[N];G+=1)V.disconnect(F,O+G,G);O+=S[N]}},R=new Map;L.onaudioprocess=({inputBuffer:N,outputBuffer:O})=>{if(se!==null){const F=f(X);for(let G=0;G<q;G+=128){for(let D=0;D<A.numberOfInputs;D+=1)for(let W=0;W<A.channelCount;W+=1)copyFromChannel(N,pe[D],W,W,G);y.parameterDescriptors!==void 0&&y.parameterDescriptors.forEach(({name:D},W)=>{copyFromChannel(N,ae,D,w+W,G)});for(let D=0;D<A.numberOfInputs;D+=1)for(let W=0;W<S[D];W+=1)fe[D][W].byteLength===0&&(fe[D][W]=new Float32Array(128));try{const D=pe.map((B,J)=>{if(F[J].size>0)return R.set(J,q/128),B;const ne=R.get(J);return ne===void 0?[]:(B.every(ie=>ie.every(le=>le===0))&&(ne===1?R.delete(J):R.set(J,ne-1)),B)});ce=d(g.currentTime+G/g.sampleRate,g.sampleRate,()=>se.process(D,fe,ae));for(let B=0,J=0;B<A.numberOfOutputs;B+=1){for(let Q=0;Q<S[B];Q+=1)copyToChannel(O,fe[B],Q,J+Q,G);J+=S[B]}}catch(D){ce=!1,X.dispatchEvent(new ErrorEvent("processorerror",{colno:D.colno,filename:D.filename,lineno:D.lineno,message:D.message}))}if(!ce){for(let D=0;D<A.numberOfInputs;D+=1){E[D].disconnect(P[D]);for(let W=0;W<A.channelCount;W+=1)P[G].disconnect(j,W,D*A.channelCount+W)}if(y.parameterDescriptors!==void 0){const D=y.parameterDescriptors.length;for(let W=0;W<D;W+=1){const B=b[W];B.disconnect(j,0,w+W),B.stop()}}j.disconnect(L),L.onaudioprocess=null,z?I():v();break}}}};let z=!1;const Z=a(g,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0}),ue=()=>L.connect(Z).connect(g.destination),v=()=>{L.disconnect(Z),Z.disconnect()},T=()=>{if(ce){v(),A.numberOfOutputs>0&&L.connect(V);for(let N=0,O=0;N<A.numberOfOutputs;N+=1){const F=K[N];for(let G=0;G<S[N];G+=1)V.connect(F,O+G,G);O+=S[N]}}z=!0},x=()=>{ce&&(ue(),I()),z=!1};return ue(),m(X,T,x)},createNativeBiquadFilterNode=(n,e)=>{const t=n.createBiquadFilter();return assignNativeAudioNodeOptions(t,e),assignNativeAudioNodeAudioParamValue(t,e,"Q"),assignNativeAudioNodeAudioParamValue(t,e,"detune"),assignNativeAudioNodeAudioParamValue(t,e,"frequency"),assignNativeAudioNodeAudioParamValue(t,e,"gain"),assignNativeAudioNodeOption(t,e,"type"),t},createNativeChannelMergerNodeFactory=(n,e)=>(t,s)=>{const o=t.createChannelMerger(s.numberOfInputs);return n!==null&&n.name==="webkitAudioContext"&&e(t,o),assignNativeAudioNodeOptions(o,s),o},wrapChannelSplitterNode=n=>{const e=n.numberOfOutputs;Object.defineProperty(n,"channelCount",{get:()=>e,set:t=>{if(t!==e)throw createInvalidStateError()}}),Object.defineProperty(n,"channelCountMode",{get:()=>"explicit",set:t=>{if(t!=="explicit")throw createInvalidStateError()}}),Object.defineProperty(n,"channelInterpretation",{get:()=>"discrete",set:t=>{if(t!=="discrete")throw createInvalidStateError()}})},createNativeChannelSplitterNode=(n,e)=>{const t=n.createChannelSplitter(e.numberOfOutputs);return assignNativeAudioNodeOptions(t,e),wrapChannelSplitterNode(t),t},createNativeConstantSourceNodeFactory=(n,e,t,s,o)=>(r,a)=>{if(r.createConstantSource===void 0)return t(r,a);const c=r.createConstantSource();return assignNativeAudioNodeOptions(c,a),assignNativeAudioNodeAudioParamValue(c,a,"offset"),e(s,()=>s(r))||wrapAudioScheduledSourceNodeStartMethodNegativeParameters(c),e(o,()=>o(r))||wrapAudioScheduledSourceNodeStopMethodNegativeParameters(c),n(r,c),c},interceptConnections=(n,e)=>(n.connect=e.connect.bind(e),n.disconnect=e.disconnect.bind(e),n),createNativeConstantSourceNodeFakerFactory=(n,e,t,s)=>(o,{offset:r,...a})=>{const c=o.createBuffer(1,2,44100),l=e(o,{buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1}),u=t(o,{...a,gain:r}),d=c.getChannelData(0);d[0]=1,d[1]=1,l.buffer=c,l.loop=!0;const f={get bufferSize(){},get channelCount(){return u.channelCount},set channelCount(_){u.channelCount=_},get channelCountMode(){return u.channelCountMode},set channelCountMode(_){u.channelCountMode=_},get channelInterpretation(){return u.channelInterpretation},set channelInterpretation(_){u.channelInterpretation=_},get context(){return u.context},get inputs(){return[]},get numberOfInputs(){return l.numberOfInputs},get numberOfOutputs(){return u.numberOfOutputs},get offset(){return u.gain},get onended(){return l.onended},set onended(_){l.onended=_},addEventListener(..._){return l.addEventListener(_[0],_[1],_[2])},dispatchEvent(..._){return l.dispatchEvent(_[0])},removeEventListener(..._){return l.removeEventListener(_[0],_[1],_[2])},start(_=0){l.start.call(l,_)},stop(_=0){l.stop.call(l,_)}},m=()=>l.connect(u),g=()=>l.disconnect(u);return n(o,l),s(interceptConnections(f,u),m,g)},createNativeConvolverNodeFactory=(n,e)=>(t,s)=>{const o=t.createConvolver();if(assignNativeAudioNodeOptions(o,s),s.disableNormalization===o.normalize&&(o.normalize=!s.disableNormalization),assignNativeAudioNodeOption(o,s,"buffer"),s.channelCount>2||(e(o,"channelCount",r=>()=>r.call(o),r=>a=>{if(a>2)throw n();return r.call(o,a)}),s.channelCountMode==="max"))throw n();return e(o,"channelCountMode",r=>()=>r.call(o),r=>a=>{if(a==="max")throw n();return r.call(o,a)}),o},createNativeDelayNode=(n,e)=>{const t=n.createDelay(e.maxDelayTime);return assignNativeAudioNodeOptions(t,e),assignNativeAudioNodeAudioParamValue(t,e,"delayTime"),t},createNativeDynamicsCompressorNodeFactory=n=>(e,t)=>{const s=e.createDynamicsCompressor();if(assignNativeAudioNodeOptions(s,t),t.channelCount>2||t.channelCountMode==="max")throw n();return assignNativeAudioNodeAudioParamValue(s,t,"attack"),assignNativeAudioNodeAudioParamValue(s,t,"knee"),assignNativeAudioNodeAudioParamValue(s,t,"ratio"),assignNativeAudioNodeAudioParamValue(s,t,"release"),assignNativeAudioNodeAudioParamValue(s,t,"threshold"),s},createNativeGainNode=(n,e)=>{const t=n.createGain();return assignNativeAudioNodeOptions(t,e),assignNativeAudioNodeAudioParamValue(t,e,"gain"),t},createNativeIIRFilterNodeFactory=n=>(e,t,s)=>{if(e.createIIRFilter===void 0)return n(e,t,s);const o=e.createIIRFilter(s.feedforward,s.feedback);return assignNativeAudioNodeOptions(o,s),o};function divide(n,e){const t=e[0]*e[0]+e[1]*e[1];return[(n[0]*e[0]+n[1]*e[1])/t,(n[1]*e[0]-n[0]*e[1])/t]}function multiply(n,e){return[n[0]*e[0]-n[1]*e[1],n[0]*e[1]+n[1]*e[0]]}function evaluatePolynomial(n,e){let t=[0,0];for(let s=n.length-1;s>=0;s-=1)t=multiply(t,e),t[0]+=n[s];return t}const createNativeIIRFilterNodeFakerFactory=(n,e,t,s)=>(o,r,{channelCount:a,channelCountMode:c,channelInterpretation:l,feedback:u,feedforward:d})=>{const f=computeBufferSize(r,o.sampleRate),m=u instanceof Float64Array?u:new Float64Array(u),g=d instanceof Float64Array?d:new Float64Array(d),_=m.length,y=g.length,A=Math.min(_,y);if(_===0||_>20)throw s();if(m[0]===0)throw e();if(y===0||y>20)throw s();if(g[0]===0)throw e();if(m[0]!==1){for(let b=0;b<y;b+=1)g[b]/=m[0];for(let b=1;b<_;b+=1)m[b]/=m[0]}const S=t(o,f,a,a);S.channelCount=a,S.channelCountMode=c,S.channelInterpretation=l;const w=32,M=[],k=[],C=[];for(let b=0;b<a;b+=1){M.push(0);const j=new Float32Array(w),q=new Float32Array(w);j.fill(0),q.fill(0),k.push(j),C.push(q)}S.onaudioprocess=b=>{const j=b.inputBuffer,q=b.outputBuffer,L=j.numberOfChannels;for(let V=0;V<L;V+=1){const K=j.getChannelData(V),Y=q.getChannelData(V);M[V]=filterBuffer(m,_,g,y,A,k[V],C[V],M[V],w,K,Y)}};const E=o.sampleRate/2;return interceptConnections({get bufferSize(){return f},get channelCount(){return S.channelCount},set channelCount(b){S.channelCount=b},get channelCountMode(){return S.channelCountMode},set channelCountMode(b){S.channelCountMode=b},get channelInterpretation(){return S.channelInterpretation},set channelInterpretation(b){S.channelInterpretation=b},get context(){return S.context},get inputs(){return[S]},get numberOfInputs(){return S.numberOfInputs},get numberOfOutputs(){return S.numberOfOutputs},addEventListener(...b){return S.addEventListener(b[0],b[1],b[2])},dispatchEvent(...b){return S.dispatchEvent(b[0])},getFrequencyResponse(b,j,q){if(b.length!==j.length||j.length!==q.length)throw n();const L=b.length;for(let V=0;V<L;V+=1){const K=-Math.PI*(b[V]/E),Y=[Math.cos(K),Math.sin(K)],te=evaluatePolynomial(g,Y),H=evaluatePolynomial(m,Y),U=divide(te,H);j[V]=Math.sqrt(U[0]*U[0]+U[1]*U[1]),q[V]=Math.atan2(U[1],U[0])}},removeEventListener(...b){return S.removeEventListener(b[0],b[1],b[2])}},S)},createNativeMediaElementAudioSourceNode=(n,e)=>n.createMediaElementSource(e.mediaElement),createNativeMediaStreamAudioDestinationNode=(n,e)=>{const t=n.createMediaStreamDestination();return assignNativeAudioNodeOptions(t,e),t.numberOfOutputs===1&&Object.defineProperty(t,"numberOfOutputs",{get:()=>0}),t},createNativeMediaStreamAudioSourceNode=(n,{mediaStream:e})=>{const t=e.getAudioTracks();t.sort((r,a)=>r.id<a.id?-1:r.id>a.id?1:0);const s=t.slice(0,1),o=n.createMediaStreamSource(new MediaStream(s));return Object.defineProperty(o,"mediaStream",{value:e}),o},createNativeMediaStreamTrackAudioSourceNodeFactory=(n,e)=>(t,{mediaStreamTrack:s})=>{if(typeof t.createMediaStreamTrackSource=="function")return t.createMediaStreamTrackSource(s);const o=new MediaStream([s]),r=t.createMediaStreamSource(o);if(s.kind!=="audio")throw n();if(e(t))throw new TypeError;return r},createNativeOfflineAudioContextConstructor=n=>n===null?null:n.hasOwnProperty("OfflineAudioContext")?n.OfflineAudioContext:n.hasOwnProperty("webkitOfflineAudioContext")?n.webkitOfflineAudioContext:null,createNativeOscillatorNodeFactory=(n,e,t,s,o,r)=>(a,c)=>{const l=a.createOscillator();return assignNativeAudioNodeOptions(l,c),assignNativeAudioNodeAudioParamValue(l,c,"detune"),assignNativeAudioNodeAudioParamValue(l,c,"frequency"),c.periodicWave!==void 0?l.setPeriodicWave(c.periodicWave):assignNativeAudioNodeOption(l,c,"type"),e(t,()=>t(a))||wrapAudioScheduledSourceNodeStartMethodNegativeParameters(l),e(s,()=>s(a))||r(l,a),e(o,()=>o(a))||wrapAudioScheduledSourceNodeStopMethodNegativeParameters(l),n(a,l),l},createNativePannerNodeFactory=n=>(e,t)=>{const s=e.createPanner();return s.orientationX===void 0?n(e,t):(assignNativeAudioNodeOptions(s,t),assignNativeAudioNodeAudioParamValue(s,t,"orientationX"),assignNativeAudioNodeAudioParamValue(s,t,"orientationY"),assignNativeAudioNodeAudioParamValue(s,t,"orientationZ"),assignNativeAudioNodeAudioParamValue(s,t,"positionX"),assignNativeAudioNodeAudioParamValue(s,t,"positionY"),assignNativeAudioNodeAudioParamValue(s,t,"positionZ"),assignNativeAudioNodeOption(s,t,"coneInnerAngle"),assignNativeAudioNodeOption(s,t,"coneOuterAngle"),assignNativeAudioNodeOption(s,t,"coneOuterGain"),assignNativeAudioNodeOption(s,t,"distanceModel"),assignNativeAudioNodeOption(s,t,"maxDistance"),assignNativeAudioNodeOption(s,t,"panningModel"),assignNativeAudioNodeOption(s,t,"refDistance"),assignNativeAudioNodeOption(s,t,"rolloffFactor"),s)},createNativePannerNodeFakerFactory=(n,e,t,s,o,r,a,c,l,u)=>(d,{coneInnerAngle:f,coneOuterAngle:m,coneOuterGain:g,distanceModel:_,maxDistance:y,orientationX:A,orientationY:S,orientationZ:w,panningModel:M,positionX:k,positionY:C,positionZ:E,refDistance:P,rolloffFactor:b,...j})=>{const q=d.createPanner();if(j.channelCount>2||j.channelCountMode==="max")throw a();assignNativeAudioNodeOptions(q,j);const L={channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete"},V=t(d,{...L,channelInterpretation:"speakers",numberOfInputs:6}),K=s(d,{...j,gain:1}),Y=s(d,{...L,gain:1}),te=s(d,{...L,gain:0}),H=s(d,{...L,gain:0}),U=s(d,{...L,gain:0}),X=s(d,{...L,gain:0}),ee=s(d,{...L,gain:0}),oe=o(d,256,6,1),se=r(d,{...L,curve:new Float32Array([1,1]),oversample:"none"});let re=[A,S,w],pe=[k,C,E];const fe=new Float32Array(1);oe.onaudioprocess=({inputBuffer:R})=>{const z=[l(R,fe,0),l(R,fe,1),l(R,fe,2)];z.some((ue,v)=>ue!==re[v])&&(q.setOrientation(...z),re=z);const Z=[l(R,fe,3),l(R,fe,4),l(R,fe,5)];Z.some((ue,v)=>ue!==pe[v])&&(q.setPosition(...Z),pe=Z)},Object.defineProperty(te.gain,"defaultValue",{get:()=>0}),Object.defineProperty(H.gain,"defaultValue",{get:()=>0}),Object.defineProperty(U.gain,"defaultValue",{get:()=>0}),Object.defineProperty(X.gain,"defaultValue",{get:()=>0}),Object.defineProperty(ee.gain,"defaultValue",{get:()=>0});const ae={get bufferSize(){},get channelCount(){return q.channelCount},set channelCount(R){if(R>2)throw a();K.channelCount=R,q.channelCount=R},get channelCountMode(){return q.channelCountMode},set channelCountMode(R){if(R==="max")throw a();K.channelCountMode=R,q.channelCountMode=R},get channelInterpretation(){return q.channelInterpretation},set channelInterpretation(R){K.channelInterpretation=R,q.channelInterpretation=R},get coneInnerAngle(){return q.coneInnerAngle},set coneInnerAngle(R){q.coneInnerAngle=R},get coneOuterAngle(){return q.coneOuterAngle},set coneOuterAngle(R){q.coneOuterAngle=R},get coneOuterGain(){return q.coneOuterGain},set coneOuterGain(R){if(R<0||R>1)throw e();q.coneOuterGain=R},get context(){return q.context},get distanceModel(){return q.distanceModel},set distanceModel(R){q.distanceModel=R},get inputs(){return[K]},get maxDistance(){return q.maxDistance},set maxDistance(R){if(R<0)throw new RangeError;q.maxDistance=R},get numberOfInputs(){return q.numberOfInputs},get numberOfOutputs(){return q.numberOfOutputs},get orientationX(){return Y.gain},get orientationY(){return te.gain},get orientationZ(){return H.gain},get panningModel(){return q.panningModel},set panningModel(R){q.panningModel=R},get positionX(){return U.gain},get positionY(){return X.gain},get positionZ(){return ee.gain},get refDistance(){return q.refDistance},set refDistance(R){if(R<0)throw new RangeError;q.refDistance=R},get rolloffFactor(){return q.rolloffFactor},set rolloffFactor(R){if(R<0)throw new RangeError;q.rolloffFactor=R},addEventListener(...R){return K.addEventListener(R[0],R[1],R[2])},dispatchEvent(...R){return K.dispatchEvent(R[0])},removeEventListener(...R){return K.removeEventListener(R[0],R[1],R[2])}};f!==ae.coneInnerAngle&&(ae.coneInnerAngle=f),m!==ae.coneOuterAngle&&(ae.coneOuterAngle=m),g!==ae.coneOuterGain&&(ae.coneOuterGain=g),_!==ae.distanceModel&&(ae.distanceModel=_),y!==ae.maxDistance&&(ae.maxDistance=y),A!==ae.orientationX.value&&(ae.orientationX.value=A),S!==ae.orientationY.value&&(ae.orientationY.value=S),w!==ae.orientationZ.value&&(ae.orientationZ.value=w),M!==ae.panningModel&&(ae.panningModel=M),k!==ae.positionX.value&&(ae.positionX.value=k),C!==ae.positionY.value&&(ae.positionY.value=C),E!==ae.positionZ.value&&(ae.positionZ.value=E),P!==ae.refDistance&&(ae.refDistance=P),b!==ae.rolloffFactor&&(ae.rolloffFactor=b),(re[0]!==1||re[1]!==0||re[2]!==0)&&q.setOrientation(...re),(pe[0]!==0||pe[1]!==0||pe[2]!==0)&&q.setPosition(...pe);const ce=()=>{K.connect(q),n(K,se,0,0),se.connect(Y).connect(V,0,0),se.connect(te).connect(V,0,1),se.connect(H).connect(V,0,2),se.connect(U).connect(V,0,3),se.connect(X).connect(V,0,4),se.connect(ee).connect(V,0,5),V.connect(oe).connect(d.destination)},I=()=>{K.disconnect(q),c(K,se,0,0),se.disconnect(Y),Y.disconnect(V),se.disconnect(te),te.disconnect(V),se.disconnect(H),H.disconnect(V),se.disconnect(U),U.disconnect(V),se.disconnect(X),X.disconnect(V),se.disconnect(ee),ee.disconnect(V),V.disconnect(oe),oe.disconnect(d.destination)};return u(interceptConnections(ae,q),ce,I)},createNativePeriodicWaveFactory=n=>(e,{disableNormalization:t,imag:s,real:o})=>{const r=s instanceof Float32Array?s:new Float32Array(s),a=o instanceof Float32Array?o:new Float32Array(o),c=e.createPeriodicWave(a,r,{disableNormalization:t});if(Array.from(s).length<2)throw n();return c},createNativeScriptProcessorNode=(n,e,t,s)=>n.createScriptProcessor(e,t,s),createNativeStereoPannerNodeFactory=(n,e)=>(t,s)=>{const o=s.channelCountMode;if(o==="clamped-max")throw e();if(t.createStereoPanner===void 0)return n(t,s);const r=t.createStereoPanner();return assignNativeAudioNodeOptions(r,s),assignNativeAudioNodeAudioParamValue(r,s,"pan"),Object.defineProperty(r,"channelCountMode",{get:()=>o,set:a=>{if(a!==o)throw e()}}),r},createNativeStereoPannerNodeFakerFactory=(n,e,t,s,o,r)=>{const c=new Float32Array([1,1]),l=Math.PI/2,u={channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete"},d={...u,oversample:"none"},f=(_,y,A,S)=>{const w=new Float32Array(16385),M=new Float32Array(16385);for(let j=0;j<16385;j+=1){const q=j/16384*l;w[j]=Math.cos(q),M[j]=Math.sin(q)}const k=t(_,{...u,gain:0}),C=s(_,{...d,curve:w}),E=s(_,{...d,curve:c}),P=t(_,{...u,gain:0}),b=s(_,{...d,curve:M});return{connectGraph(){y.connect(k),y.connect(E.inputs===void 0?E:E.inputs[0]),y.connect(P),E.connect(A),A.connect(C.inputs===void 0?C:C.inputs[0]),A.connect(b.inputs===void 0?b:b.inputs[0]),C.connect(k.gain),b.connect(P.gain),k.connect(S,0,0),P.connect(S,0,1)},disconnectGraph(){y.disconnect(k),y.disconnect(E.inputs===void 0?E:E.inputs[0]),y.disconnect(P),E.disconnect(A),A.disconnect(C.inputs===void 0?C:C.inputs[0]),A.disconnect(b.inputs===void 0?b:b.inputs[0]),C.disconnect(k.gain),b.disconnect(P.gain),k.disconnect(S,0,0),P.disconnect(S,0,1)}}},m=(_,y,A,S)=>{const w=new Float32Array(16385),M=new Float32Array(16385),k=new Float32Array(16385),C=new Float32Array(16385),E=Math.floor(16385/2);for(let U=0;U<16385;U+=1)if(U>E){const X=(U-E)/(16384-E)*l;w[U]=Math.cos(X),M[U]=Math.sin(X),k[U]=0,C[U]=1}else{const X=U/(16384-E)*l;w[U]=1,M[U]=0,k[U]=Math.cos(X),C[U]=Math.sin(X)}const P=e(_,{channelCount:2,channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:2}),b=t(_,{...u,gain:0}),j=s(_,{...d,curve:w}),q=t(_,{...u,gain:0}),L=s(_,{...d,curve:M}),V=s(_,{...d,curve:c}),K=t(_,{...u,gain:0}),Y=s(_,{...d,curve:k}),te=t(_,{...u,gain:0}),H=s(_,{...d,curve:C});return{connectGraph(){y.connect(P),y.connect(V.inputs===void 0?V:V.inputs[0]),P.connect(b,0),P.connect(q,0),P.connect(K,1),P.connect(te,1),V.connect(A),A.connect(j.inputs===void 0?j:j.inputs[0]),A.connect(L.inputs===void 0?L:L.inputs[0]),A.connect(Y.inputs===void 0?Y:Y.inputs[0]),A.connect(H.inputs===void 0?H:H.inputs[0]),j.connect(b.gain),L.connect(q.gain),Y.connect(K.gain),H.connect(te.gain),b.connect(S,0,0),K.connect(S,0,0),q.connect(S,0,1),te.connect(S,0,1)},disconnectGraph(){y.disconnect(P),y.disconnect(V.inputs===void 0?V:V.inputs[0]),P.disconnect(b,0),P.disconnect(q,0),P.disconnect(K,1),P.disconnect(te,1),V.disconnect(A),A.disconnect(j.inputs===void 0?j:j.inputs[0]),A.disconnect(L.inputs===void 0?L:L.inputs[0]),A.disconnect(Y.inputs===void 0?Y:Y.inputs[0]),A.disconnect(H.inputs===void 0?H:H.inputs[0]),j.disconnect(b.gain),L.disconnect(q.gain),Y.disconnect(K.gain),H.disconnect(te.gain),b.disconnect(S,0,0),K.disconnect(S,0,0),q.disconnect(S,0,1),te.disconnect(S,0,1)}}},g=(_,y,A,S,w)=>{if(y===1)return f(_,A,S,w);if(y===2)return m(_,A,S,w);throw o()};return(_,{channelCount:y,channelCountMode:A,pan:S,...w})=>{if(A==="max")throw o();const M=n(_,{...w,channelCount:1,channelCountMode:A,numberOfInputs:2}),k=t(_,{...w,channelCount:y,channelCountMode:A,gain:1}),C=t(_,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:S});let{connectGraph:E,disconnectGraph:P}=g(_,y,k,C,M);Object.defineProperty(C.gain,"defaultValue",{get:()=>0}),Object.defineProperty(C.gain,"maxValue",{get:()=>1}),Object.defineProperty(C.gain,"minValue",{get:()=>-1});const b={get bufferSize(){},get channelCount(){return k.channelCount},set channelCount(V){k.channelCount!==V&&(j&&P(),{connectGraph:E,disconnectGraph:P}=g(_,V,k,C,M),j&&E()),k.channelCount=V},get channelCountMode(){return k.channelCountMode},set channelCountMode(V){if(V==="clamped-max"||V==="max")throw o();k.channelCountMode=V},get channelInterpretation(){return k.channelInterpretation},set channelInterpretation(V){k.channelInterpretation=V},get context(){return k.context},get inputs(){return[k]},get numberOfInputs(){return k.numberOfInputs},get numberOfOutputs(){return k.numberOfOutputs},get pan(){return C.gain},addEventListener(...V){return k.addEventListener(V[0],V[1],V[2])},dispatchEvent(...V){return k.dispatchEvent(V[0])},removeEventListener(...V){return k.removeEventListener(V[0],V[1],V[2])}};let j=!1;const q=()=>{E(),j=!0},L=()=>{P(),j=!1};return r(interceptConnections(b,M),q,L)}},createNativeWaveShaperNodeFactory=(n,e,t,s,o,r,a)=>(c,l)=>{const u=c.createWaveShaper();if(r!==null&&r.name==="webkitAudioContext"&&c.createGain().gain.automationRate===void 0)return t(c,l);assignNativeAudioNodeOptions(u,l);const d=l.curve===null||l.curve instanceof Float32Array?l.curve:new Float32Array(l.curve);if(d!==null&&d.length<2)throw e();assignNativeAudioNodeOption(u,{curve:d},"curve"),assignNativeAudioNodeOption(u,l,"oversample");let f=null,m=!1;return a(u,"curve",y=>()=>y.call(u),y=>A=>(y.call(u,A),m&&(s(A)&&f===null?f=n(c,u):!s(A)&&f!==null&&(f(),f=null)),A)),o(u,()=>{m=!0,s(u.curve)&&(f=n(c,u))},()=>{m=!1,f!==null&&(f(),f=null)})},createNativeWaveShaperNodeFakerFactory=(n,e,t,s,o)=>(r,{curve:a,oversample:c,...l})=>{const u=r.createWaveShaper(),d=r.createWaveShaper();assignNativeAudioNodeOptions(u,l),assignNativeAudioNodeOptions(d,l);const f=t(r,{...l,gain:1}),m=t(r,{...l,gain:-1}),g=t(r,{...l,gain:1}),_=t(r,{...l,gain:-1});let y=null,A=!1,S=null;const w={get bufferSize(){},get channelCount(){return u.channelCount},set channelCount(C){f.channelCount=C,m.channelCount=C,u.channelCount=C,g.channelCount=C,d.channelCount=C,_.channelCount=C},get channelCountMode(){return u.channelCountMode},set channelCountMode(C){f.channelCountMode=C,m.channelCountMode=C,u.channelCountMode=C,g.channelCountMode=C,d.channelCountMode=C,_.channelCountMode=C},get channelInterpretation(){return u.channelInterpretation},set channelInterpretation(C){f.channelInterpretation=C,m.channelInterpretation=C,u.channelInterpretation=C,g.channelInterpretation=C,d.channelInterpretation=C,_.channelInterpretation=C},get context(){return u.context},get curve(){return S},set curve(C){if(C!==null&&C.length<2)throw e();if(C===null)u.curve=C,d.curve=C;else{const E=C.length,P=new Float32Array(E+2-E%2),b=new Float32Array(E+2-E%2);P[0]=C[0],b[0]=-C[E-1];const j=Math.ceil((E+1)/2),q=(E+1)/2-1;for(let L=1;L<j;L+=1){const V=L/j*q,K=Math.floor(V),Y=Math.ceil(V);P[L]=K===Y?C[K]:(1-(V-K))*C[K]+(1-(Y-V))*C[Y],b[L]=K===Y?-C[E-1-K]:-((1-(V-K))*C[E-1-K])-(1-(Y-V))*C[E-1-Y]}P[j]=E%2===1?C[j-1]:(C[j-2]+C[j-1])/2,u.curve=P,d.curve=b}S=C,A&&(s(S)&&y===null?y=n(r,f):y!==null&&(y(),y=null))},get inputs(){return[f]},get numberOfInputs(){return u.numberOfInputs},get numberOfOutputs(){return u.numberOfOutputs},get oversample(){return u.oversample},set oversample(C){u.oversample=C,d.oversample=C},addEventListener(...C){return f.addEventListener(C[0],C[1],C[2])},dispatchEvent(...C){return f.dispatchEvent(C[0])},removeEventListener(...C){return f.removeEventListener(C[0],C[1],C[2])}};a!==null&&(w.curve=a instanceof Float32Array?a:new Float32Array(a)),c!==w.oversample&&(w.oversample=c);const M=()=>{f.connect(u).connect(g),f.connect(m).connect(d).connect(_).connect(g),A=!0,s(S)&&(y=n(r,f))},k=()=>{f.disconnect(u),u.disconnect(g),f.disconnect(m),m.disconnect(d),d.disconnect(_),_.disconnect(g),A=!1,y!==null&&(y(),y=null)};return o(interceptConnections(w,g),M,k)},createNotSupportedError=()=>new DOMException("","NotSupportedError"),DEFAULT_OPTIONS$5={numberOfChannels:1},createOfflineAudioContextConstructor=(n,e,t,s,o)=>class extends n{constructor(a,c,l){let u;if(typeof a=="number"&&c!==void 0&&l!==void 0)u={length:c,numberOfChannels:a,sampleRate:l};else if(typeof a=="object")u=a;else throw new Error("The given parameters are not valid.");const{length:d,numberOfChannels:f,sampleRate:m}={...DEFAULT_OPTIONS$5,...u},g=s(f,d,m);e(testPromiseSupport,()=>testPromiseSupport(g))||g.addEventListener("statechange",(()=>{let _=0;const y=A=>{this._state==="running"&&(_>0?(g.removeEventListener("statechange",y),A.stopImmediatePropagation(),this._waitForThePromiseToSettle(A)):_+=1)};return y})()),super(g,f),this._length=d,this._nativeOfflineAudioContext=g,this._state=null}get length(){return this._nativeOfflineAudioContext.length===void 0?this._length:this._nativeOfflineAudioContext.length}get state(){return this._state===null?this._nativeOfflineAudioContext.state:this._state}startRendering(){return this._state==="running"?Promise.reject(t()):(this._state="running",o(this.destination,this._nativeOfflineAudioContext).finally(()=>{this._state=null,deactivateAudioGraph(this)}))}_waitForThePromiseToSettle(a){this._state===null?this._nativeOfflineAudioContext.dispatchEvent(a):setTimeout(()=>this._waitForThePromiseToSettle(a))}},DEFAULT_OPTIONS$4={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",detune:0,frequency:440,periodicWave:void 0,type:"sine"},createOscillatorNodeConstructor=(n,e,t,s,o,r,a)=>class extends n{constructor(l,u){const d=o(l),f={...DEFAULT_OPTIONS$4,...u},m=t(d,f),g=r(d),_=g?s():null,y=l.sampleRate/2;super(l,!1,m,_),this._detune=e(this,g,m.detune,153600,-153600),this._frequency=e(this,g,m.frequency,y,-y),this._nativeOscillatorNode=m,this._onended=null,this._oscillatorNodeRenderer=_,this._oscillatorNodeRenderer!==null&&f.periodicWave!==void 0&&(this._oscillatorNodeRenderer.periodicWave=f.periodicWave)}get detune(){return this._detune}get frequency(){return this._frequency}get onended(){return this._onended}set onended(l){const u=typeof l=="function"?a(this,l):null;this._nativeOscillatorNode.onended=u;const d=this._nativeOscillatorNode.onended;this._onended=d!==null&&d===u?l:d}get type(){return this._nativeOscillatorNode.type}set type(l){this._nativeOscillatorNode.type=l,this._oscillatorNodeRenderer!==null&&(this._oscillatorNodeRenderer.periodicWave=null)}setPeriodicWave(l){this._nativeOscillatorNode.setPeriodicWave(l),this._oscillatorNodeRenderer!==null&&(this._oscillatorNodeRenderer.periodicWave=l)}start(l=0){if(this._nativeOscillatorNode.start(l),this._oscillatorNodeRenderer!==null&&(this._oscillatorNodeRenderer.start=l),this.context.state!=="closed"){setInternalStateToActive(this);const u=()=>{this._nativeOscillatorNode.removeEventListener("ended",u),isActiveAudioNode(this)&&setInternalStateToPassive(this)};this._nativeOscillatorNode.addEventListener("ended",u)}}stop(l=0){this._nativeOscillatorNode.stop(l),this._oscillatorNodeRenderer!==null&&(this._oscillatorNodeRenderer.stop=l)}},createOscillatorNodeRendererFactory=(n,e,t,s,o)=>()=>{const r=new WeakMap;let a=null,c=null,l=null;const u=async(d,f)=>{let m=t(d);const g=isOwnedByContext(m,f);if(!g){const _={channelCount:m.channelCount,channelCountMode:m.channelCountMode,channelInterpretation:m.channelInterpretation,detune:m.detune.value,frequency:m.frequency.value,periodicWave:a===null?void 0:a,type:m.type};m=e(f,_),c!==null&&m.start(c),l!==null&&m.stop(l)}return r.set(f,m),g?(await n(f,d.detune,m.detune),await n(f,d.frequency,m.frequency)):(await s(f,d.detune,m.detune),await s(f,d.frequency,m.frequency)),await o(d,f,m),m};return{set periodicWave(d){a=d},set start(d){c=d},set stop(d){l=d},render(d,f){const m=r.get(f);return m!==void 0?Promise.resolve(m):u(d,f)}}},DEFAULT_OPTIONS$3={channelCount:2,channelCountMode:"clamped-max",channelInterpretation:"speakers",coneInnerAngle:360,coneOuterAngle:360,coneOuterGain:0,distanceModel:"inverse",maxDistance:1e4,orientationX:1,orientationY:0,orientationZ:0,panningModel:"equalpower",positionX:0,positionY:0,positionZ:0,refDistance:1,rolloffFactor:1},createPannerNodeConstructor=(n,e,t,s,o,r,a)=>class extends n{constructor(l,u){const d=o(l),f={...DEFAULT_OPTIONS$3,...u},m=t(d,f),g=r(d),_=g?s():null;super(l,!1,m,_),this._nativePannerNode=m,this._orientationX=e(this,g,m.orientationX,MOST_POSITIVE_SINGLE_FLOAT,MOST_NEGATIVE_SINGLE_FLOAT),this._orientationY=e(this,g,m.orientationY,MOST_POSITIVE_SINGLE_FLOAT,MOST_NEGATIVE_SINGLE_FLOAT),this._orientationZ=e(this,g,m.orientationZ,MOST_POSITIVE_SINGLE_FLOAT,MOST_NEGATIVE_SINGLE_FLOAT),this._positionX=e(this,g,m.positionX,MOST_POSITIVE_SINGLE_FLOAT,MOST_NEGATIVE_SINGLE_FLOAT),this._positionY=e(this,g,m.positionY,MOST_POSITIVE_SINGLE_FLOAT,MOST_NEGATIVE_SINGLE_FLOAT),this._positionZ=e(this,g,m.positionZ,MOST_POSITIVE_SINGLE_FLOAT,MOST_NEGATIVE_SINGLE_FLOAT),a(this,1)}get coneInnerAngle(){return this._nativePannerNode.coneInnerAngle}set coneInnerAngle(l){this._nativePannerNode.coneInnerAngle=l}get coneOuterAngle(){return this._nativePannerNode.coneOuterAngle}set coneOuterAngle(l){this._nativePannerNode.coneOuterAngle=l}get coneOuterGain(){return this._nativePannerNode.coneOuterGain}set coneOuterGain(l){this._nativePannerNode.coneOuterGain=l}get distanceModel(){return this._nativePannerNode.distanceModel}set distanceModel(l){this._nativePannerNode.distanceModel=l}get maxDistance(){return this._nativePannerNode.maxDistance}set maxDistance(l){this._nativePannerNode.maxDistance=l}get orientationX(){return this._orientationX}get orientationY(){return this._orientationY}get orientationZ(){return this._orientationZ}get panningModel(){return this._nativePannerNode.panningModel}set panningModel(l){this._nativePannerNode.panningModel=l}get positionX(){return this._positionX}get positionY(){return this._positionY}get positionZ(){return this._positionZ}get refDistance(){return this._nativePannerNode.refDistance}set refDistance(l){this._nativePannerNode.refDistance=l}get rolloffFactor(){return this._nativePannerNode.rolloffFactor}set rolloffFactor(l){this._nativePannerNode.rolloffFactor=l}},createPannerNodeRendererFactory=(n,e,t,s,o,r,a,c,l,u)=>()=>{const d=new WeakMap;let f=null;const m=async(g,_)=>{let y=null,A=r(g);const S={channelCount:A.channelCount,channelCountMode:A.channelCountMode,channelInterpretation:A.channelInterpretation},w={...S,coneInnerAngle:A.coneInnerAngle,coneOuterAngle:A.coneOuterAngle,coneOuterGain:A.coneOuterGain,distanceModel:A.distanceModel,maxDistance:A.maxDistance,panningModel:A.panningModel,refDistance:A.refDistance,rolloffFactor:A.rolloffFactor},M=isOwnedByContext(A,_);if("bufferSize"in A)y=s(_,{...S,gain:1});else if(!M){const k={...w,orientationX:A.orientationX.value,orientationY:A.orientationY.value,orientationZ:A.orientationZ.value,positionX:A.positionX.value,positionY:A.positionY.value,positionZ:A.positionZ.value};A=o(_,k)}if(d.set(_,y===null?A:y),y!==null){if(f===null){if(a===null)throw new Error("Missing the native OfflineAudioContext constructor.");const L=new a(6,g.context.length,_.sampleRate),V=e(L,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:6});V.connect(L.destination),f=(async()=>{const K=await Promise.all([g.orientationX,g.orientationY,g.orientationZ,g.positionX,g.positionY,g.positionZ].map(async(Y,te)=>{const H=t(L,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",offset:te===0?1:0});return await c(L,Y,H.offset),H}));for(let Y=0;Y<6;Y+=1)K[Y].connect(V,0,Y),K[Y].start(0);return u(L)})()}const k=await f,C=s(_,{...S,gain:1});await l(g,_,C);const E=[];for(let L=0;L<k.numberOfChannels;L+=1)E.push(k.getChannelData(L));let P=[E[0][0],E[1][0],E[2][0]],b=[E[3][0],E[4][0],E[5][0]],j=s(_,{...S,gain:1}),q=o(_,{...w,orientationX:P[0],orientationY:P[1],orientationZ:P[2],positionX:b[0],positionY:b[1],positionZ:b[2]});C.connect(j).connect(q.inputs[0]),q.connect(y);for(let L=128;L<k.length;L+=128){const V=[E[0][L],E[1][L],E[2][L]],K=[E[3][L],E[4][L],E[5][L]];if(V.some((Y,te)=>Y!==P[te])||K.some((Y,te)=>Y!==b[te])){P=V,b=K;const Y=L/_.sampleRate;j.gain.setValueAtTime(0,Y),j=s(_,{...S,gain:0}),q=o(_,{...w,orientationX:P[0],orientationY:P[1],orientationZ:P[2],positionX:b[0],positionY:b[1],positionZ:b[2]}),j.gain.setValueAtTime(1,Y),C.connect(j).connect(q.inputs[0]),q.connect(y)}}return y}return M?(await n(_,g.orientationX,A.orientationX),await n(_,g.orientationY,A.orientationY),await n(_,g.orientationZ,A.orientationZ),await n(_,g.positionX,A.positionX),await n(_,g.positionY,A.positionY),await n(_,g.positionZ,A.positionZ)):(await c(_,g.orientationX,A.orientationX),await c(_,g.orientationY,A.orientationY),await c(_,g.orientationZ,A.orientationZ),await c(_,g.positionX,A.positionX),await c(_,g.positionY,A.positionY),await c(_,g.positionZ,A.positionZ)),isNativeAudioNodeFaker(A)?await l(g,_,A.inputs[0]):await l(g,_,A),A};return{render(g,_){const y=d.get(_);return y!==void 0?Promise.resolve(y):m(g,_)}}},DEFAULT_OPTIONS$2={disableNormalization:!1},createPeriodicWaveConstructor=(n,e,t,s)=>class Ee{constructor(r,a){const c=e(r),l=s({...DEFAULT_OPTIONS$2,...a}),u=n(c,l);return t.add(u),u}static[Symbol.hasInstance](r){return r!==null&&typeof r=="object"&&Object.getPrototypeOf(r)===Ee.prototype||t.has(r)}},createRenderAutomation=(n,e)=>(t,s,o)=>(n(s).replay(o),e(s,t,o)),createRenderInputsOfAudioNode=(n,e,t)=>async(s,o,r)=>{const a=n(s);await Promise.all(a.activeInputs.map((c,l)=>Array.from(c).map(async([u,d])=>{const m=await e(u).render(u,o),g=s.context.destination;!t(u)&&(s!==g||!t(s))&&m.connect(r,d,l)})).reduce((c,l)=>[...c,...l],[]))},createRenderInputsOfAudioParam=(n,e,t)=>async(s,o,r)=>{const a=e(s);await Promise.all(Array.from(a.activeInputs).map(async([c,l])=>{const d=await n(c).render(c,o);t(c)||d.connect(r,l)}))},createRenderNativeOfflineAudioContext=(n,e,t,s)=>o=>n(testPromiseSupport,()=>testPromiseSupport(o))?Promise.resolve(n(s,s)).then(r=>{if(!r){const a=t(o,512,0,1);o.oncomplete=()=>{a.onaudioprocess=null,a.disconnect()},a.onaudioprocess=()=>o.currentTime,a.connect(o.destination)}return o.startRendering()}):new Promise(r=>{const a=e(o,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0});o.oncomplete=c=>{a.disconnect(),r(c.renderedBuffer)},a.connect(o.destination),o.startRendering()}),createSetActiveAudioWorkletNodeInputs=n=>(e,t)=>{n.set(e,t)},createSetAudioNodeTailTime=n=>(e,t)=>n.set(e,t),createStartRendering=(n,e,t,s,o,r,a,c)=>(l,u)=>t(l).render(l,u).then(()=>Promise.all(Array.from(s(u)).map(d=>t(d).render(d,u)))).then(()=>o(u)).then(d=>(typeof d.copyFromChannel!="function"?(a(d),wrapAudioBufferGetChannelDataMethod(d)):e(r,()=>r(d))||c(d),n.add(d),d)),DEFAULT_OPTIONS$1={channelCount:2,channelCountMode:"explicit",channelInterpretation:"speakers",pan:0},createStereoPannerNodeConstructor=(n,e,t,s,o,r)=>class extends n{constructor(c,l){const u=o(c),d={...DEFAULT_OPTIONS$1,...l},f=t(u,d),m=r(u),g=m?s():null;super(c,!1,f,g),this._pan=e(this,m,f.pan)}get pan(){return this._pan}},createStereoPannerNodeRendererFactory=(n,e,t,s,o)=>()=>{const r=new WeakMap,a=async(c,l)=>{let u=t(c);const d=isOwnedByContext(u,l);if(!d){const f={channelCount:u.channelCount,channelCountMode:u.channelCountMode,channelInterpretation:u.channelInterpretation,pan:u.pan.value};u=e(l,f)}return r.set(l,u),d?await n(l,c.pan,u.pan):await s(l,c.pan,u.pan),isNativeAudioNodeFaker(u)?await o(c,l,u.inputs[0]):await o(c,l,u),u};return{render(c,l){const u=r.get(l);return u!==void 0?Promise.resolve(u):a(c,l)}}},createTestAudioBufferConstructorSupport=n=>()=>{if(n===null)return!1;try{new n({length:1,sampleRate:44100})}catch{return!1}return!0},createTestAudioBufferCopyChannelMethodsSubarraySupport=n=>()=>{if(n===null)return!1;const t=new n(1,1,44100).createBuffer(1,1,44100);if(t.copyToChannel===void 0)return!0;const s=new Float32Array(2);try{t.copyFromChannel(s,0,0)}catch{return!1}return!0},createTestAudioContextCloseMethodSupport=n=>()=>{if(n===null)return!1;if(n.prototype!==void 0&&n.prototype.close!==void 0)return!0;const e=new n,t=e.close!==void 0;try{e.close()}catch{}return t},createTestAudioContextDecodeAudioDataMethodTypeErrorSupport=n=>()=>{if(n===null)return Promise.resolve(!1);const e=new n(1,1,44100);return new Promise(t=>{let s=!0;const o=a=>{s&&(s=!1,e.startRendering(),t(a instanceof TypeError))};let r;try{r=e.decodeAudioData(null,()=>{},o)}catch(a){o(a)}r!==void 0&&r.catch(o)})},createTestAudioContextOptionsSupport=n=>()=>{if(n===null)return!1;let e;try{e=new n({latencyHint:"balanced"})}catch{return!1}return e.close(),!0},createTestAudioNodeConnectMethodSupport=n=>()=>{if(n===null)return!1;const t=new n(1,1,44100).createGain(),s=t.connect(t)===t;return t.disconnect(t),s},createTestAudioWorkletProcessorNoOutputsSupport=(n,e)=>async()=>{if(n===null)return!0;if(e===null)return!1;const t=new Blob(['let c,p;class A extends AudioWorkletProcessor{constructor(){super();this.port.onmessage=(e)=>{p=e.data;p.onmessage=()=>{p.postMessage(c);p.close()};this.port.postMessage(0)}}process(){c=1}}registerProcessor("a",A)'],{type:"application/javascript; charset=utf-8"}),s=new MessageChannel,o=new e(1,128,44100),r=URL.createObjectURL(t);let a=!1;try{await o.audioWorklet.addModule(r);const c=new n(o,"a",{numberOfOutputs:0}),l=o.createOscillator();await new Promise(u=>{c.port.onmessage=()=>u(),c.port.postMessage(s.port2,[s.port2])}),c.port.onmessage=()=>a=!0,l.connect(c),l.start(0),await o.startRendering(),a=await new Promise(u=>{s.port1.onmessage=({data:d})=>u(d===1),s.port1.postMessage(0)})}catch{}finally{s.port1.close(),URL.revokeObjectURL(r)}return a},createTestAudioWorkletProcessorPostMessageSupport=(n,e)=>async()=>{if(n===null)return!0;if(e===null)return!1;const t=new Blob(['class A extends AudioWorkletProcessor{process(i){this.port.postMessage(i,[i[0][0].buffer])}}registerProcessor("a",A)'],{type:"application/javascript; charset=utf-8"}),s=new e(1,128,44100),o=URL.createObjectURL(t);let r=!1,a=!1;try{await s.audioWorklet.addModule(o);const c=new n(s,"a",{numberOfOutputs:0}),l=s.createOscillator();c.port.onmessage=()=>r=!0,c.onprocessorerror=()=>a=!0,l.connect(c),l.start(0),await s.startRendering(),await new Promise(u=>setTimeout(u))}catch{}finally{URL.revokeObjectURL(o)}return r&&!a},createTestChannelMergerNodeChannelCountSupport=n=>()=>{if(n===null)return!1;const t=new n(1,1,44100).createChannelMerger();if(t.channelCountMode==="max")return!0;try{t.channelCount=2}catch{return!0}return!1},createTestConstantSourceNodeAccurateSchedulingSupport=n=>()=>{if(n===null)return!1;const e=new n(1,1,44100);return e.createConstantSource===void 0?!0:e.createConstantSource().offset.maxValue!==Number.POSITIVE_INFINITY},createTestConvolverNodeBufferReassignabilitySupport=n=>()=>{if(n===null)return!1;const e=new n(1,1,44100),t=e.createConvolver();t.buffer=e.createBuffer(1,1,e.sampleRate);try{t.buffer=e.createBuffer(1,1,e.sampleRate)}catch{return!1}return!0},createTestConvolverNodeChannelCountSupport=n=>()=>{if(n===null)return!1;const t=new n(1,1,44100).createConvolver();try{t.channelCount=1}catch{return!1}return!0},createTestIsSecureContextSupport=n=>()=>n!==null&&n.hasOwnProperty("isSecureContext"),createTestMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport=n=>()=>{if(n===null)return!1;const e=new n;try{return e.createMediaStreamSource(new MediaStream),!1}catch{return!0}finally{e.close()}},createTestOfflineAudioContextCurrentTimeSupport=(n,e)=>()=>{if(e===null)return Promise.resolve(!1);const t=new e(1,1,44100),s=n(t,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0});return new Promise(o=>{t.oncomplete=()=>{s.disconnect(),o(t.currentTime!==0)},t.startRendering()})},createTestStereoPannerNodeDefaultValueSupport=n=>()=>{if(n===null)return Promise.resolve(!1);const e=new n(1,1,44100);if(e.createStereoPanner===void 0||e.createConstantSource===void 0)return Promise.resolve(!0);const t=e.createConstantSource(),s=e.createStereoPanner();return t.channelCount=1,t.offset.value=1,s.channelCount=1,t.start(),t.connect(s).connect(e.destination),e.startRendering().then(o=>o.getChannelData(0)[0]!==1)},createUnknownError=()=>new DOMException("","UnknownError"),DEFAULT_OPTIONS={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",curve:null,oversample:"none"},createWaveShaperNodeConstructor=(n,e,t,s,o,r,a)=>class extends n{constructor(l,u){const d=o(l),f={...DEFAULT_OPTIONS,...u},m=t(d,f),_=r(d)?s():null;super(l,!0,m,_),this._isCurveNullified=!1,this._nativeWaveShaperNode=m,a(this,1)}get curve(){return this._isCurveNullified?null:this._nativeWaveShaperNode.curve}set curve(l){if(l===null)this._isCurveNullified=!0,this._nativeWaveShaperNode.curve=new Float32Array([0,0]);else{if(l.length<2)throw e();this._isCurveNullified=!1,this._nativeWaveShaperNode.curve=l}}get oversample(){return this._nativeWaveShaperNode.oversample}set oversample(l){this._nativeWaveShaperNode.oversample=l}},createWaveShaperNodeRendererFactory=(n,e,t)=>()=>{const s=new WeakMap,o=async(r,a)=>{let c=e(r);if(!isOwnedByContext(c,a)){const u={channelCount:c.channelCount,channelCountMode:c.channelCountMode,channelInterpretation:c.channelInterpretation,curve:c.curve,oversample:c.oversample};c=n(a,u)}return s.set(a,c),isNativeAudioNodeFaker(c)?await t(r,a,c.inputs[0]):await t(r,a,c),c};return{render(r,a){const c=s.get(a);return c!==void 0?Promise.resolve(c):o(r,a)}}},createWindow=()=>typeof window>"u"?null:window,createWrapAudioBufferCopyChannelMethods=(n,e)=>t=>{t.copyFromChannel=(s,o,r=0)=>{const a=n(r),c=n(o);if(c>=t.numberOfChannels)throw e();const l=t.length,u=t.getChannelData(c),d=s.length;for(let f=a<0?-a:0;f+a<l&&f<d;f+=1)s[f]=u[f+a]},t.copyToChannel=(s,o,r=0)=>{const a=n(r),c=n(o);if(c>=t.numberOfChannels)throw e();const l=t.length,u=t.getChannelData(c),d=s.length;for(let f=a<0?-a:0;f+a<l&&f<d;f+=1)u[f+a]=s[f]}},createWrapAudioBufferCopyChannelMethodsOutOfBounds=n=>e=>{e.copyFromChannel=(t=>(s,o,r=0)=>{const a=n(r),c=n(o);if(a<e.length)return t.call(e,s,c,a)})(e.copyFromChannel),e.copyToChannel=(t=>(s,o,r=0)=>{const a=n(r),c=n(o);if(a<e.length)return t.call(e,s,c,a)})(e.copyToChannel)},createWrapAudioBufferSourceNodeStopMethodNullifiedBuffer=n=>(e,t)=>{const s=t.createBuffer(1,1,44100);e.buffer===null&&(e.buffer=s),n(e,"buffer",o=>()=>{const r=o.call(e);return r===s?null:r},o=>r=>o.call(e,r===null?s:r))},createWrapChannelMergerNode=(n,e)=>(t,s)=>{s.channelCount=1,s.channelCountMode="explicit",Object.defineProperty(s,"channelCount",{get:()=>1,set:()=>{throw n()}}),Object.defineProperty(s,"channelCountMode",{get:()=>"explicit",set:()=>{throw n()}});const o=t.createBufferSource();e(s,()=>{const c=s.numberOfInputs;for(let l=0;l<c;l+=1)o.connect(s,0,l)},()=>o.disconnect(s))},getFirstSample=(n,e,t)=>n.copyFromChannel===void 0?n.getChannelData(t)[0]:(n.copyFromChannel(e,t),e[0]),isDCCurve=n=>{if(n===null)return!1;const e=n.length;return e%2!==0?n[Math.floor(e/2)]!==0:n[e/2-1]+n[e/2]!==0},overwriteAccessors=(n,e,t,s)=>{let o=n;for(;!o.hasOwnProperty(e);)o=Object.getPrototypeOf(o);const{get:r,set:a}=Object.getOwnPropertyDescriptor(o,e);Object.defineProperty(n,e,{get:t(r),set:s(a)})},sanitizeAudioWorkletNodeOptions=n=>({...n,outputChannelCount:n.outputChannelCount!==void 0?n.outputChannelCount:n.numberOfInputs===1&&n.numberOfOutputs===1?[n.channelCount]:Array.from({length:n.numberOfOutputs},()=>1)}),sanitizeChannelSplitterOptions=n=>({...n,channelCount:n.numberOfOutputs}),sanitizePeriodicWaveOptions=n=>{const{imag:e,real:t}=n;return e===void 0?t===void 0?{...n,imag:[0,0],real:[0,0]}:{...n,imag:Array.from(t,()=>0),real:t}:t===void 0?{...n,imag:e,real:Array.from(e,()=>0)}:{...n,imag:e,real:t}},setValueAtTimeUntilPossible=(n,e,t)=>{try{n.setValueAtTime(e,t)}catch(s){if(s.code!==9)throw s;setValueAtTimeUntilPossible(n,e,t+1e-7)}},testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport=n=>{const e=n.createBufferSource();e.start();try{e.start()}catch{return!0}return!1},testAudioBufferSourceNodeStartMethodOffsetClampingSupport=n=>{const e=n.createBufferSource(),t=n.createBuffer(1,1,44100);e.buffer=t;try{e.start(0,1)}catch{return!1}return!0},testAudioBufferSourceNodeStopMethodNullifiedBufferSupport=n=>{const e=n.createBufferSource();e.start();try{e.stop()}catch{return!1}return!0},testAudioScheduledSourceNodeStartMethodNegativeParametersSupport=n=>{const e=n.createOscillator();try{e.start(-1)}catch(t){return t instanceof RangeError}return!1},testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport=n=>{const e=n.createBuffer(1,1,44100),t=n.createBufferSource();t.buffer=e,t.start(),t.stop();try{return t.stop(),!0}catch{return!1}},testAudioScheduledSourceNodeStopMethodNegativeParametersSupport=n=>{const e=n.createOscillator();try{e.stop(-1)}catch(t){return t instanceof RangeError}return!1},testAudioWorkletNodeOptionsClonability=n=>{const{port1:e,port2:t}=new MessageChannel;try{e.postMessage(n)}finally{e.close(),t.close()}},testDomExceptionConstructorSupport=()=>{try{new DOMException}catch{return!1}return!0},testTransferablesSupport=()=>new Promise(n=>{const e=new ArrayBuffer(0),{port1:t,port2:s}=new MessageChannel;t.onmessage=({data:o})=>n(o!==null),s.postMessage(e,[e])}),wrapAudioBufferSourceNodeStartMethodOffsetClamping=n=>{n.start=(e=>(t=0,s=0,o)=>{const r=n.buffer,a=r===null?s:Math.min(r.duration,s);r!==null&&a>r.duration-.5/n.context.sampleRate?e.call(n,t,0,0):e.call(n,t,a,o)})(n.start)},wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls=(n,e)=>{const t=e.createGain();n.connect(t);const s=(o=>()=>{o.call(n,t),n.removeEventListener("ended",s)})(n.disconnect);n.addEventListener("ended",s),interceptConnections(n,t),n.stop=(o=>{let r=!1;return(a=0)=>{if(r)try{o.call(n,a)}catch{t.gain.setValueAtTime(0,a)}else o.call(n,a),r=!0}})(n.stop)},wrapEventListener=(n,e)=>t=>{const s={value:n};return Object.defineProperties(t,{currentTarget:s,target:s}),typeof e=="function"?e.call(n,t):e.handleEvent.call(n,t)},addActiveInputConnectionToAudioNode=createAddActiveInputConnectionToAudioNode(insertElementInSet),addPassiveInputConnectionToAudioNode=createAddPassiveInputConnectionToAudioNode(insertElementInSet),deleteActiveInputConnectionToAudioNode=createDeleteActiveInputConnectionToAudioNode(pickElementFromSet),audioNodeTailTimeStore=new WeakMap,getAudioNodeTailTime=createGetAudioNodeTailTime(audioNodeTailTimeStore),cacheTestResult=createCacheTestResult(new Map,new WeakMap),window$1=createWindow(),createNativeAnalyserNode=createNativeAnalyserNodeFactory(cacheTestResult,createIndexSizeError),getAudioNodeRenderer=createGetAudioNodeRenderer(getAudioNodeConnections),renderInputsOfAudioNode=createRenderInputsOfAudioNode(getAudioNodeConnections,getAudioNodeRenderer,isPartOfACycle),createAnalyserNodeRenderer=createAnalyserNodeRendererFactory(createNativeAnalyserNode,getNativeAudioNode,renderInputsOfAudioNode),getNativeContext=createGetNativeContext(CONTEXT_STORE),nativeOfflineAudioContextConstructor=createNativeOfflineAudioContextConstructor(window$1),isNativeOfflineAudioContext=createIsNativeOfflineAudioContext(nativeOfflineAudioContextConstructor),audioParamAudioNodeStore=new WeakMap,eventTargetConstructor=createEventTargetConstructor(wrapEventListener),nativeAudioContextConstructor=createNativeAudioContextConstructor(window$1),isNativeAudioContext=createIsNativeAudioContext(nativeAudioContextConstructor),isNativeAudioNode=createIsNativeAudioNode(window$1),isNativeAudioParam=createIsNativeAudioParam(window$1),nativeAudioWorkletNodeConstructor=createNativeAudioWorkletNodeConstructor(window$1),audioNodeConstructor=createAudioNodeConstructor(createAddAudioNodeConnections(AUDIO_NODE_CONNECTIONS_STORE),createAddConnectionToAudioNode(addActiveInputConnectionToAudioNode,addPassiveInputConnectionToAudioNode,connectNativeAudioNodeToNativeAudioNode,deleteActiveInputConnectionToAudioNode,disconnectNativeAudioNodeFromNativeAudioNode,getAudioNodeConnections,getAudioNodeTailTime,getEventListenersOfAudioNode,getNativeAudioNode,insertElementInSet,isActiveAudioNode,isPartOfACycle,isPassiveAudioNode),cacheTestResult,createIncrementCycleCounterFactory(CYCLE_COUNTERS,disconnectNativeAudioNodeFromNativeAudioNode,getAudioNodeConnections,getNativeAudioNode,getNativeAudioParam,isActiveAudioNode),createIndexSizeError,createInvalidAccessError,createNotSupportedError,createDecrementCycleCounter(connectNativeAudioNodeToNativeAudioNode,CYCLE_COUNTERS,getAudioNodeConnections,getNativeAudioNode,getNativeAudioParam,getNativeContext,isActiveAudioNode,isNativeOfflineAudioContext),createDetectCycles(audioParamAudioNodeStore,getAudioNodeConnections,getValueForKey),eventTargetConstructor,getNativeContext,isNativeAudioContext,isNativeAudioNode,isNativeAudioParam,isNativeOfflineAudioContext,nativeAudioWorkletNodeConstructor),analyserNodeConstructor=createAnalyserNodeConstructor(audioNodeConstructor,createAnalyserNodeRenderer,createIndexSizeError,createNativeAnalyserNode,getNativeContext,isNativeOfflineAudioContext),audioBufferStore=new WeakSet,nativeAudioBufferConstructor=createNativeAudioBufferConstructor(window$1),convertNumberToUnsignedLong=createConvertNumberToUnsignedLong(new Uint32Array(1)),wrapAudioBufferCopyChannelMethods=createWrapAudioBufferCopyChannelMethods(convertNumberToUnsignedLong,createIndexSizeError),wrapAudioBufferCopyChannelMethodsOutOfBounds=createWrapAudioBufferCopyChannelMethodsOutOfBounds(convertNumberToUnsignedLong),audioBufferConstructor=createAudioBufferConstructor(audioBufferStore,cacheTestResult,createNotSupportedError,nativeAudioBufferConstructor,nativeOfflineAudioContextConstructor,createTestAudioBufferConstructorSupport(nativeAudioBufferConstructor),wrapAudioBufferCopyChannelMethods,wrapAudioBufferCopyChannelMethodsOutOfBounds),addSilentConnection=createAddSilentConnection(createNativeGainNode),renderInputsOfAudioParam=createRenderInputsOfAudioParam(getAudioNodeRenderer,getAudioParamConnections,isPartOfACycle),connectAudioParam=createConnectAudioParam(renderInputsOfAudioParam),createNativeAudioBufferSourceNode=createNativeAudioBufferSourceNodeFactory(addSilentConnection,cacheTestResult,testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport,testAudioBufferSourceNodeStartMethodOffsetClampingSupport,testAudioBufferSourceNodeStopMethodNullifiedBufferSupport,testAudioScheduledSourceNodeStartMethodNegativeParametersSupport,testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport,testAudioScheduledSourceNodeStopMethodNegativeParametersSupport,wrapAudioBufferSourceNodeStartMethodOffsetClamping,createWrapAudioBufferSourceNodeStopMethodNullifiedBuffer(overwriteAccessors),wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls),renderAutomation=createRenderAutomation(createGetAudioParamRenderer(getAudioParamConnections),renderInputsOfAudioParam),createAudioBufferSourceNodeRenderer=createAudioBufferSourceNodeRendererFactory(connectAudioParam,createNativeAudioBufferSourceNode,getNativeAudioNode,renderAutomation,renderInputsOfAudioNode),createAudioParam=createAudioParamFactory(createAddAudioParamConnections(AUDIO_PARAM_CONNECTIONS_STORE),audioParamAudioNodeStore,AUDIO_PARAM_STORE,createAudioParamRenderer,createCancelAndHoldAutomationEvent,createCancelScheduledValuesAutomationEvent,createExponentialRampToValueAutomationEvent,createLinearRampToValueAutomationEvent,createSetTargetAutomationEvent,createSetValueAutomationEvent,createSetValueCurveAutomationEvent,nativeAudioContextConstructor,setValueAtTimeUntilPossible),audioBufferSourceNodeConstructor=createAudioBufferSourceNodeConstructor(audioNodeConstructor,createAudioBufferSourceNodeRenderer,createAudioParam,createInvalidStateError,createNativeAudioBufferSourceNode,getNativeContext,isNativeOfflineAudioContext,wrapEventListener),audioDestinationNodeConstructor=createAudioDestinationNodeConstructor(audioNodeConstructor,createAudioDestinationNodeRenderer,createIndexSizeError,createInvalidStateError,createNativeAudioDestinationNodeFactory(createNativeGainNode,overwriteAccessors),getNativeContext,isNativeOfflineAudioContext,renderInputsOfAudioNode),createBiquadFilterNodeRenderer=createBiquadFilterNodeRendererFactory(connectAudioParam,createNativeBiquadFilterNode,getNativeAudioNode,renderAutomation,renderInputsOfAudioNode),setAudioNodeTailTime=createSetAudioNodeTailTime(audioNodeTailTimeStore),biquadFilterNodeConstructor=createBiquadFilterNodeConstructor(audioNodeConstructor,createAudioParam,createBiquadFilterNodeRenderer,createInvalidAccessError,createNativeBiquadFilterNode,getNativeContext,isNativeOfflineAudioContext,setAudioNodeTailTime),monitorConnections=createMonitorConnections(insertElementInSet,isNativeAudioNode),wrapChannelMergerNode=createWrapChannelMergerNode(createInvalidStateError,monitorConnections),createNativeChannelMergerNode=createNativeChannelMergerNodeFactory(nativeAudioContextConstructor,wrapChannelMergerNode),createChannelMergerNodeRenderer=createChannelMergerNodeRendererFactory(createNativeChannelMergerNode,getNativeAudioNode,renderInputsOfAudioNode),channelMergerNodeConstructor=createChannelMergerNodeConstructor(audioNodeConstructor,createChannelMergerNodeRenderer,createNativeChannelMergerNode,getNativeContext,isNativeOfflineAudioContext),createChannelSplitterNodeRenderer=createChannelSplitterNodeRendererFactory(createNativeChannelSplitterNode,getNativeAudioNode,renderInputsOfAudioNode),channelSplitterNodeConstructor=createChannelSplitterNodeConstructor(audioNodeConstructor,createChannelSplitterNodeRenderer,createNativeChannelSplitterNode,getNativeContext,isNativeOfflineAudioContext,sanitizeChannelSplitterOptions),createNativeConstantSourceNodeFaker=createNativeConstantSourceNodeFakerFactory(addSilentConnection,createNativeAudioBufferSourceNode,createNativeGainNode,monitorConnections),createNativeConstantSourceNode=createNativeConstantSourceNodeFactory(addSilentConnection,cacheTestResult,createNativeConstantSourceNodeFaker,testAudioScheduledSourceNodeStartMethodNegativeParametersSupport,testAudioScheduledSourceNodeStopMethodNegativeParametersSupport),createConstantSourceNodeRenderer=createConstantSourceNodeRendererFactory(connectAudioParam,createNativeConstantSourceNode,getNativeAudioNode,renderAutomation,renderInputsOfAudioNode),constantSourceNodeConstructor=createConstantSourceNodeConstructor(audioNodeConstructor,createAudioParam,createConstantSourceNodeRenderer,createNativeConstantSourceNode,getNativeContext,isNativeOfflineAudioContext,wrapEventListener),createNativeConvolverNode=createNativeConvolverNodeFactory(createNotSupportedError,overwriteAccessors),createConvolverNodeRenderer=createConvolverNodeRendererFactory(createNativeConvolverNode,getNativeAudioNode,renderInputsOfAudioNode),convolverNodeConstructor=createConvolverNodeConstructor(audioNodeConstructor,createConvolverNodeRenderer,createNativeConvolverNode,getNativeContext,isNativeOfflineAudioContext,setAudioNodeTailTime),createDelayNodeRenderer=createDelayNodeRendererFactory(connectAudioParam,createNativeDelayNode,getNativeAudioNode,renderAutomation,renderInputsOfAudioNode),delayNodeConstructor=createDelayNodeConstructor(audioNodeConstructor,createAudioParam,createDelayNodeRenderer,createNativeDelayNode,getNativeContext,isNativeOfflineAudioContext,setAudioNodeTailTime),createNativeDynamicsCompressorNode=createNativeDynamicsCompressorNodeFactory(createNotSupportedError),createDynamicsCompressorNodeRenderer=createDynamicsCompressorNodeRendererFactory(connectAudioParam,createNativeDynamicsCompressorNode,getNativeAudioNode,renderAutomation,renderInputsOfAudioNode),dynamicsCompressorNodeConstructor=createDynamicsCompressorNodeConstructor(audioNodeConstructor,createAudioParam,createDynamicsCompressorNodeRenderer,createNativeDynamicsCompressorNode,createNotSupportedError,getNativeContext,isNativeOfflineAudioContext,setAudioNodeTailTime),createGainNodeRenderer=createGainNodeRendererFactory(connectAudioParam,createNativeGainNode,getNativeAudioNode,renderAutomation,renderInputsOfAudioNode),gainNodeConstructor=createGainNodeConstructor(audioNodeConstructor,createAudioParam,createGainNodeRenderer,createNativeGainNode,getNativeContext,isNativeOfflineAudioContext),createNativeIIRFilterNodeFaker=createNativeIIRFilterNodeFakerFactory(createInvalidAccessError,createInvalidStateError,createNativeScriptProcessorNode,createNotSupportedError),renderNativeOfflineAudioContext=createRenderNativeOfflineAudioContext(cacheTestResult,createNativeGainNode,createNativeScriptProcessorNode,createTestOfflineAudioContextCurrentTimeSupport(createNativeGainNode,nativeOfflineAudioContextConstructor)),createIIRFilterNodeRenderer=createIIRFilterNodeRendererFactory(createNativeAudioBufferSourceNode,getNativeAudioNode,nativeOfflineAudioContextConstructor,renderInputsOfAudioNode,renderNativeOfflineAudioContext),createNativeIIRFilterNode=createNativeIIRFilterNodeFactory(createNativeIIRFilterNodeFaker),iIRFilterNodeConstructor=createIIRFilterNodeConstructor(audioNodeConstructor,createNativeIIRFilterNode,createIIRFilterNodeRenderer,getNativeContext,isNativeOfflineAudioContext,setAudioNodeTailTime),createAudioListener=createAudioListenerFactory(createAudioParam,createNativeChannelMergerNode,createNativeConstantSourceNode,createNativeScriptProcessorNode,createNotSupportedError,getFirstSample,isNativeOfflineAudioContext,overwriteAccessors),unrenderedAudioWorkletNodeStore=new WeakMap,minimalBaseAudioContextConstructor=createMinimalBaseAudioContextConstructor(audioDestinationNodeConstructor,createAudioListener,eventTargetConstructor,isNativeOfflineAudioContext,unrenderedAudioWorkletNodeStore,wrapEventListener),createNativeOscillatorNode=createNativeOscillatorNodeFactory(addSilentConnection,cacheTestResult,testAudioScheduledSourceNodeStartMethodNegativeParametersSupport,testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport,testAudioScheduledSourceNodeStopMethodNegativeParametersSupport,wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls),createOscillatorNodeRenderer=createOscillatorNodeRendererFactory(connectAudioParam,createNativeOscillatorNode,getNativeAudioNode,renderAutomation,renderInputsOfAudioNode),oscillatorNodeConstructor=createOscillatorNodeConstructor(audioNodeConstructor,createAudioParam,createNativeOscillatorNode,createOscillatorNodeRenderer,getNativeContext,isNativeOfflineAudioContext,wrapEventListener),createConnectedNativeAudioBufferSourceNode=createConnectedNativeAudioBufferSourceNodeFactory(createNativeAudioBufferSourceNode),createNativeWaveShaperNodeFaker=createNativeWaveShaperNodeFakerFactory(createConnectedNativeAudioBufferSourceNode,createInvalidStateError,createNativeGainNode,isDCCurve,monitorConnections),createNativeWaveShaperNode=createNativeWaveShaperNodeFactory(createConnectedNativeAudioBufferSourceNode,createInvalidStateError,createNativeWaveShaperNodeFaker,isDCCurve,monitorConnections,nativeAudioContextConstructor,overwriteAccessors),createNativePannerNodeFaker=createNativePannerNodeFakerFactory(connectNativeAudioNodeToNativeAudioNode,createInvalidStateError,createNativeChannelMergerNode,createNativeGainNode,createNativeScriptProcessorNode,createNativeWaveShaperNode,createNotSupportedError,disconnectNativeAudioNodeFromNativeAudioNode,getFirstSample,monitorConnections),createNativePannerNode=createNativePannerNodeFactory(createNativePannerNodeFaker),createPannerNodeRenderer=createPannerNodeRendererFactory(connectAudioParam,createNativeChannelMergerNode,createNativeConstantSourceNode,createNativeGainNode,createNativePannerNode,getNativeAudioNode,nativeOfflineAudioContextConstructor,renderAutomation,renderInputsOfAudioNode,renderNativeOfflineAudioContext),pannerNodeConstructor=createPannerNodeConstructor(audioNodeConstructor,createAudioParam,createNativePannerNode,createPannerNodeRenderer,getNativeContext,isNativeOfflineAudioContext,setAudioNodeTailTime),createNativePeriodicWave=createNativePeriodicWaveFactory(createIndexSizeError),periodicWaveConstructor=createPeriodicWaveConstructor(createNativePeriodicWave,getNativeContext,new WeakSet,sanitizePeriodicWaveOptions),nativeStereoPannerNodeFakerFactory=createNativeStereoPannerNodeFakerFactory(createNativeChannelMergerNode,createNativeChannelSplitterNode,createNativeGainNode,createNativeWaveShaperNode,createNotSupportedError,monitorConnections),createNativeStereoPannerNode=createNativeStereoPannerNodeFactory(nativeStereoPannerNodeFakerFactory,createNotSupportedError),createStereoPannerNodeRenderer=createStereoPannerNodeRendererFactory(connectAudioParam,createNativeStereoPannerNode,getNativeAudioNode,renderAutomation,renderInputsOfAudioNode),stereoPannerNodeConstructor=createStereoPannerNodeConstructor(audioNodeConstructor,createAudioParam,createNativeStereoPannerNode,createStereoPannerNodeRenderer,getNativeContext,isNativeOfflineAudioContext),createWaveShaperNodeRenderer=createWaveShaperNodeRendererFactory(createNativeWaveShaperNode,getNativeAudioNode,renderInputsOfAudioNode),waveShaperNodeConstructor=createWaveShaperNodeConstructor(audioNodeConstructor,createInvalidStateError,createNativeWaveShaperNode,createWaveShaperNodeRenderer,getNativeContext,isNativeOfflineAudioContext,setAudioNodeTailTime),isSecureContext=createIsSecureContext(window$1),exposeCurrentFrameAndCurrentTime=createExposeCurrentFrameAndCurrentTime(window$1),backupOfflineAudioContextStore=new WeakMap,getOrCreateBackupOfflineAudioContext=createGetOrCreateBackupOfflineAudioContext(backupOfflineAudioContextStore,nativeOfflineAudioContextConstructor),addAudioWorkletModule=isSecureContext?createAddAudioWorkletModule(cacheTestResult,createNotSupportedError,createEvaluateSource(window$1),exposeCurrentFrameAndCurrentTime,createFetchSource(createAbortError),getNativeContext,getOrCreateBackupOfflineAudioContext,isNativeOfflineAudioContext,nativeAudioWorkletNodeConstructor,new WeakMap,new WeakMap,createTestAudioWorkletProcessorPostMessageSupport(nativeAudioWorkletNodeConstructor,nativeOfflineAudioContextConstructor),window$1):void 0,isNativeContext=createIsNativeContext(isNativeAudioContext,isNativeOfflineAudioContext),decodeAudioData=createDecodeAudioData(audioBufferStore,cacheTestResult,createDataCloneError,createEncodingError,new WeakSet,getNativeContext,isNativeContext,testAudioBufferCopyChannelMethodsOutOfBoundsSupport,testPromiseSupport,wrapAudioBufferCopyChannelMethods,wrapAudioBufferCopyChannelMethodsOutOfBounds),baseAudioContextConstructor=createBaseAudioContextConstructor(addAudioWorkletModule,analyserNodeConstructor,audioBufferConstructor,audioBufferSourceNodeConstructor,biquadFilterNodeConstructor,channelMergerNodeConstructor,channelSplitterNodeConstructor,constantSourceNodeConstructor,convolverNodeConstructor,decodeAudioData,delayNodeConstructor,dynamicsCompressorNodeConstructor,gainNodeConstructor,iIRFilterNodeConstructor,minimalBaseAudioContextConstructor,oscillatorNodeConstructor,pannerNodeConstructor,periodicWaveConstructor,stereoPannerNodeConstructor,waveShaperNodeConstructor),mediaElementAudioSourceNodeConstructor=createMediaElementAudioSourceNodeConstructor(audioNodeConstructor,createNativeMediaElementAudioSourceNode,getNativeContext,isNativeOfflineAudioContext),mediaStreamAudioDestinationNodeConstructor=createMediaStreamAudioDestinationNodeConstructor(audioNodeConstructor,createNativeMediaStreamAudioDestinationNode,getNativeContext,isNativeOfflineAudioContext),mediaStreamAudioSourceNodeConstructor=createMediaStreamAudioSourceNodeConstructor(audioNodeConstructor,createNativeMediaStreamAudioSourceNode,getNativeContext,isNativeOfflineAudioContext),createNativeMediaStreamTrackAudioSourceNode=createNativeMediaStreamTrackAudioSourceNodeFactory(createInvalidStateError,isNativeOfflineAudioContext),mediaStreamTrackAudioSourceNodeConstructor=createMediaStreamTrackAudioSourceNodeConstructor(audioNodeConstructor,createNativeMediaStreamTrackAudioSourceNode,getNativeContext),audioContextConstructor=createAudioContextConstructor(baseAudioContextConstructor,createInvalidStateError,createNotSupportedError,createUnknownError,mediaElementAudioSourceNodeConstructor,mediaStreamAudioDestinationNodeConstructor,mediaStreamAudioSourceNodeConstructor,mediaStreamTrackAudioSourceNodeConstructor,nativeAudioContextConstructor),getUnrenderedAudioWorkletNodes=createGetUnrenderedAudioWorkletNodes(unrenderedAudioWorkletNodeStore),addUnrenderedAudioWorkletNode=createAddUnrenderedAudioWorkletNode(getUnrenderedAudioWorkletNodes),connectMultipleOutputs=createConnectMultipleOutputs(createIndexSizeError),deleteUnrenderedAudioWorkletNode=createDeleteUnrenderedAudioWorkletNode(getUnrenderedAudioWorkletNodes),disconnectMultipleOutputs=createDisconnectMultipleOutputs(createIndexSizeError),activeAudioWorkletNodeInputsStore=new WeakMap,getActiveAudioWorkletNodeInputs=createGetActiveAudioWorkletNodeInputs(activeAudioWorkletNodeInputsStore,getValueForKey),createNativeAudioWorkletNodeFaker=createNativeAudioWorkletNodeFakerFactory(connectMultipleOutputs,createIndexSizeError,createInvalidStateError,createNativeChannelMergerNode,createNativeChannelSplitterNode,createNativeConstantSourceNode,createNativeGainNode,createNativeScriptProcessorNode,createNotSupportedError,disconnectMultipleOutputs,exposeCurrentFrameAndCurrentTime,getActiveAudioWorkletNodeInputs,monitorConnections),createNativeAudioWorkletNode=createNativeAudioWorkletNodeFactory(createInvalidStateError,createNativeAudioWorkletNodeFaker,createNativeGainNode,createNotSupportedError,monitorConnections),createAudioWorkletNodeRenderer=createAudioWorkletNodeRendererFactory(connectAudioParam,connectMultipleOutputs,createNativeAudioBufferSourceNode,createNativeChannelMergerNode,createNativeChannelSplitterNode,createNativeConstantSourceNode,createNativeGainNode,deleteUnrenderedAudioWorkletNode,disconnectMultipleOutputs,exposeCurrentFrameAndCurrentTime,getNativeAudioNode,nativeAudioWorkletNodeConstructor,nativeOfflineAudioContextConstructor,renderAutomation,renderInputsOfAudioNode,renderNativeOfflineAudioContext),getBackupOfflineAudioContext=createGetBackupOfflineAudioContext(backupOfflineAudioContextStore),setActiveAudioWorkletNodeInputs=createSetActiveAudioWorkletNodeInputs(activeAudioWorkletNodeInputsStore),audioWorkletNodeConstructor=isSecureContext?createAudioWorkletNodeConstructor(addUnrenderedAudioWorkletNode,audioNodeConstructor,createAudioParam,createAudioWorkletNodeRenderer,createNativeAudioWorkletNode,getAudioNodeConnections,getBackupOfflineAudioContext,getNativeContext,isNativeOfflineAudioContext,nativeAudioWorkletNodeConstructor,sanitizeAudioWorkletNodeOptions,setActiveAudioWorkletNodeInputs,testAudioWorkletNodeOptionsClonability,wrapEventListener):void 0,createNativeOfflineAudioContext=createCreateNativeOfflineAudioContext(createNotSupportedError,nativeOfflineAudioContextConstructor),startRendering=createStartRendering(audioBufferStore,cacheTestResult,getAudioNodeRenderer,getUnrenderedAudioWorkletNodes,renderNativeOfflineAudioContext,testAudioBufferCopyChannelMethodsOutOfBoundsSupport,wrapAudioBufferCopyChannelMethods,wrapAudioBufferCopyChannelMethodsOutOfBounds),offlineAudioContextConstructor=createOfflineAudioContextConstructor(baseAudioContextConstructor,cacheTestResult,createInvalidStateError,createNativeOfflineAudioContext,startRendering),isAnyAudioContext=createIsAnyAudioContext(CONTEXT_STORE,isNativeAudioContext),isAnyAudioNode=createIsAnyAudioNode(AUDIO_NODE_STORE,isNativeAudioNode),isAnyAudioParam=createIsAnyAudioParam(AUDIO_PARAM_STORE,isNativeAudioParam),isAnyOfflineAudioContext=createIsAnyOfflineAudioContext(CONTEXT_STORE,isNativeOfflineAudioContext),isSupported=()=>createIsSupportedPromise(cacheTestResult,createTestAudioBufferCopyChannelMethodsSubarraySupport(nativeOfflineAudioContextConstructor),createTestAudioContextCloseMethodSupport(nativeAudioContextConstructor),createTestAudioContextDecodeAudioDataMethodTypeErrorSupport(nativeOfflineAudioContextConstructor),createTestAudioContextOptionsSupport(nativeAudioContextConstructor),createTestAudioNodeConnectMethodSupport(nativeOfflineAudioContextConstructor),createTestAudioWorkletProcessorNoOutputsSupport(nativeAudioWorkletNodeConstructor,nativeOfflineAudioContextConstructor),createTestChannelMergerNodeChannelCountSupport(nativeOfflineAudioContextConstructor),createTestConstantSourceNodeAccurateSchedulingSupport(nativeOfflineAudioContextConstructor),createTestConvolverNodeBufferReassignabilitySupport(nativeOfflineAudioContextConstructor),createTestConvolverNodeChannelCountSupport(nativeOfflineAudioContextConstructor),testDomExceptionConstructorSupport,createTestIsSecureContextSupport(window$1),createTestMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport(nativeAudioContextConstructor),createTestStereoPannerNodeDefaultValueSupport(nativeOfflineAudioContextConstructor),testTransferablesSupport);function assert(n,e){if(!n)throw new Error(e)}function assertRange(n,e,t=1/0){if(!(e<=n&&n<=t))throw new RangeError(`Value must be within [${e}, ${t}], got: ${n}`)}function assertContextRunning(n){!n.isOffline&&n.state!=="running"&&warn('The AudioContext is "suspended". Invoke Tone.start() from a user action to start the audio.')}let defaultLogger=console;function setLogger(n){defaultLogger=n}function log(...n){defaultLogger.log(...n)}function warn(...n){defaultLogger.warn(...n)}const Debug=Object.freeze(Object.defineProperty({__proto__:null,assert,assertContextRunning,assertRange,log,setLogger,warn},Symbol.toStringTag,{value:"Module"}));function isUndef(n){return typeof n>"u"}function isDefined(n){return!isUndef(n)}function isFunction(n){return typeof n=="function"}function isNumber(n){return typeof n=="number"}function isObject(n){return Object.prototype.toString.call(n)==="[object Object]"&&n.constructor===Object}function isBoolean(n){return typeof n=="boolean"}function isArray(n){return Array.isArray(n)}function isString(n){return typeof n=="string"}function isNote(n){return isString(n)&&/^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i.test(n)}function createAudioContext(n){return new audioContextConstructor(n)}function createOfflineAudioContext(n,e,t){return new offlineAudioContextConstructor(n,e,t)}const theWindow=typeof self=="object"?self:null,hasAudioContext=theWindow&&(theWindow.hasOwnProperty("AudioContext")||theWindow.hasOwnProperty("webkitAudioContext"));function createAudioWorkletNode(n,e,t){return assert(isDefined(audioWorkletNodeConstructor),"This node only works in a secure context (https or localhost)"),new audioWorkletNodeConstructor(n,e,t)}function __decorate(n,e,t,s){var o=arguments.length,r=o<3?e:s===null?s=Object.getOwnPropertyDescriptor(e,t):s,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")r=Reflect.decorate(n,e,t,s);else for(var c=n.length-1;c>=0;c--)(a=n[c])&&(r=(o<3?a(r):o>3?a(e,t,r):a(e,t))||r);return o>3&&r&&Object.defineProperty(e,t,r),r}function __awaiter(n,e,t,s){function o(r){return r instanceof t?r:new t(function(a){a(r)})}return new(t||(t=Promise))(function(r,a){function c(d){try{u(s.next(d))}catch(f){a(f)}}function l(d){try{u(s.throw(d))}catch(f){a(f)}}function u(d){d.done?r(d.value):o(d.value).then(c,l)}u((s=s.apply(n,e||[])).next())})}typeof SuppressedError=="function"&&SuppressedError;class Ticker{constructor(e,t,s){this._callback=e,this._type=t,this._updateInterval=s,this._createClock()}_createWorker(){const e=new Blob([`
			// the initial timeout time
			let timeoutTime =  ${(this._updateInterval*1e3).toFixed(1)};
			// onmessage callback
			self.onmessage = function(msg){
				timeoutTime = parseInt(msg.data);
			};
			// the tick function which posts a message
			// and schedules a new tick
			function tick(){
				setTimeout(tick, timeoutTime);
				self.postMessage('tick');
			}
			// call tick initially
			tick();
			`],{type:"text/javascript"}),t=URL.createObjectURL(e),s=new Worker(t);s.onmessage=this._callback.bind(this),this._worker=s}_createTimeout(){this._timeout=setTimeout(()=>{this._createTimeout(),this._callback()},this._updateInterval*1e3)}_createClock(){if(this._type==="worker")try{this._createWorker()}catch{this._type="timeout",this._createClock()}else this._type==="timeout"&&this._createTimeout()}_disposeClock(){this._timeout&&(clearTimeout(this._timeout),this._timeout=0),this._worker&&(this._worker.terminate(),this._worker.onmessage=null)}get updateInterval(){return this._updateInterval}set updateInterval(e){this._updateInterval=Math.max(e,128/44100),this._type==="worker"&&this._worker.postMessage(Math.max(e*1e3,1))}get type(){return this._type}set type(e){this._disposeClock(),this._type=e,this._createClock()}dispose(){this._disposeClock()}}function isAudioParam(n){return isAnyAudioParam(n)}function isAudioNode(n){return isAnyAudioNode(n)}function isOfflineAudioContext(n){return isAnyOfflineAudioContext(n)}function isAudioContext(n){return isAnyAudioContext(n)}function isAudioBuffer(n){return n instanceof AudioBuffer}function noCopy(n,e){return n==="value"||isAudioParam(e)||isAudioNode(e)||isAudioBuffer(e)}function deepMerge(n,...e){if(!e.length)return n;const t=e.shift();if(isObject(n)&&isObject(t))for(const s in t)noCopy(s,t[s])?n[s]=t[s]:isObject(t[s])?(n[s]||Object.assign(n,{[s]:{}}),deepMerge(n[s],t[s])):Object.assign(n,{[s]:t[s]});return deepMerge(n,...e)}function deepEquals(n,e){return n.length===e.length&&n.every((t,s)=>e[s]===t)}function optionsFromArguments(n,e,t=[],s){const o={},r=Array.from(e);if(isObject(r[0])&&s&&!Reflect.has(r[0],s)&&(Object.keys(r[0]).some(c=>Reflect.has(n,c))||(deepMerge(o,{[s]:r[0]}),t.splice(t.indexOf(s),1),r.shift())),r.length===1&&isObject(r[0]))deepMerge(o,r[0]);else for(let a=0;a<t.length;a++)isDefined(r[a])&&(o[t[a]]=r[a]);return deepMerge(n,o)}function getDefaultsFromInstance(n){return n.constructor.getDefaults()}function defaultArg(n,e){return isUndef(n)?e:n}function omitFromObject(n,e){return e.forEach(t=>{Reflect.has(n,t)&&delete n[t]}),n}/**
 * Tone.js
 * @author Yotam Mann
 * @license http://opensource.org/licenses/MIT MIT License
 * @copyright 2014-2019 Yotam Mann
 */let Tone$1=class{constructor(){this.debug=!1,this._wasDisposed=!1}static getDefaults(){return{}}log(...e){(this.debug||theWindow&&this.toString()===theWindow.TONE_DEBUG_CLASS)&&log(this,...e)}dispose(){return this._wasDisposed=!0,this}get disposed(){return this._wasDisposed}toString(){return this.name}};Tone$1.version=version;const EPSILON=1e-6;function GT(n,e){return n>e+EPSILON}function GTE(n,e){return GT(n,e)||EQ(n,e)}function LT(n,e){return n+EPSILON<e}function EQ(n,e){return Math.abs(n-e)<EPSILON}function clamp(n,e,t){return Math.max(Math.min(n,t),e)}class Timeline extends Tone$1{constructor(){super(),this.name="Timeline",this._timeline=[];const e=optionsFromArguments(Timeline.getDefaults(),arguments,["memory"]);this.memory=e.memory,this.increasing=e.increasing}static getDefaults(){return{memory:1/0,increasing:!1}}get length(){return this._timeline.length}add(e){if(assert(Reflect.has(e,"time"),"Timeline: events must have a time attribute"),e.time=e.time.valueOf(),this.increasing&&this.length){const t=this._timeline[this.length-1];assert(GTE(e.time,t.time),"The time must be greater than or equal to the last scheduled time"),this._timeline.push(e)}else{const t=this._search(e.time);this._timeline.splice(t+1,0,e)}if(this.length>this.memory){const t=this.length-this.memory;this._timeline.splice(0,t)}return this}remove(e){const t=this._timeline.indexOf(e);return t!==-1&&this._timeline.splice(t,1),this}get(e,t="time"){const s=this._search(e,t);return s!==-1?this._timeline[s]:null}peek(){return this._timeline[0]}shift(){return this._timeline.shift()}getAfter(e,t="time"){const s=this._search(e,t);return s+1<this._timeline.length?this._timeline[s+1]:null}getBefore(e){const t=this._timeline.length;if(t>0&&this._timeline[t-1].time<e)return this._timeline[t-1];const s=this._search(e);return s-1>=0?this._timeline[s-1]:null}cancel(e){if(this._timeline.length>1){let t=this._search(e);if(t>=0)if(EQ(this._timeline[t].time,e)){for(let s=t;s>=0&&EQ(this._timeline[s].time,e);s--)t=s;this._timeline=this._timeline.slice(0,t)}else this._timeline=this._timeline.slice(0,t+1);else this._timeline=[]}else this._timeline.length===1&&GTE(this._timeline[0].time,e)&&(this._timeline=[]);return this}cancelBefore(e){const t=this._search(e);return t>=0&&(this._timeline=this._timeline.slice(t+1)),this}previousEvent(e){const t=this._timeline.indexOf(e);return t>0?this._timeline[t-1]:null}_search(e,t="time"){if(this._timeline.length===0)return-1;let s=0;const o=this._timeline.length;let r=o;if(o>0&&this._timeline[o-1][t]<=e)return o-1;for(;s<r;){let a=Math.floor(s+(r-s)/2);const c=this._timeline[a],l=this._timeline[a+1];if(EQ(c[t],e)){for(let u=a;u<this._timeline.length;u++){const d=this._timeline[u];if(EQ(d[t],e))a=u;else break}return a}else{if(LT(c[t],e)&&GT(l[t],e))return a;GT(c[t],e)?r=a:s=a+1}}return-1}_iterate(e,t=0,s=this._timeline.length-1){this._timeline.slice(t,s+1).forEach(e)}forEach(e){return this._iterate(e),this}forEachBefore(e,t){const s=this._search(e);return s!==-1&&this._iterate(t,0,s),this}forEachAfter(e,t){const s=this._search(e);return this._iterate(t,s+1),this}forEachBetween(e,t,s){let o=this._search(e),r=this._search(t);return o!==-1&&r!==-1?(this._timeline[o].time!==e&&(o+=1),this._timeline[r].time===t&&(r-=1),this._iterate(s,o,r)):o===-1&&this._iterate(s,0,r),this}forEachFrom(e,t){let s=this._search(e);for(;s>=0&&this._timeline[s].time>=e;)s--;return this._iterate(t,s+1),this}forEachAtTime(e,t){const s=this._search(e);if(s!==-1&&EQ(this._timeline[s].time,e)){let o=s;for(let r=s;r>=0&&EQ(this._timeline[r].time,e);r--)o=r;this._iterate(r=>{t(r)},o,s)}return this}dispose(){return super.dispose(),this._timeline=[],this}}const notifyNewContext=[];function onContextInit(n){notifyNewContext.push(n)}function initializeContext(n){notifyNewContext.forEach(e=>e(n))}const notifyCloseContext=[];function onContextClose(n){notifyCloseContext.push(n)}function closeContext(n){notifyCloseContext.forEach(e=>e(n))}class Emitter extends Tone$1{constructor(){super(...arguments),this.name="Emitter"}on(e,t){return e.split(/\W+/).forEach(o=>{isUndef(this._events)&&(this._events={}),this._events.hasOwnProperty(o)||(this._events[o]=[]),this._events[o].push(t)}),this}once(e,t){const s=(...o)=>{t(...o),this.off(e,s)};return this.on(e,s),this}off(e,t){return e.split(/\W+/).forEach(o=>{if(isUndef(this._events)&&(this._events={}),this._events.hasOwnProperty(e))if(isUndef(t))this._events[e]=[];else{const r=this._events[e];for(let a=r.length-1;a>=0;a--)r[a]===t&&r.splice(a,1)}}),this}emit(e,...t){if(this._events&&this._events.hasOwnProperty(e)){const s=this._events[e].slice(0);for(let o=0,r=s.length;o<r;o++)s[o].apply(this,t)}return this}static mixin(e){["on","once","off","emit"].forEach(t=>{const s=Object.getOwnPropertyDescriptor(Emitter.prototype,t);Object.defineProperty(e.prototype,t,s)})}dispose(){return super.dispose(),this._events=void 0,this}}class BaseContext extends Emitter{constructor(){super(...arguments),this.isOffline=!1}toJSON(){return{}}}class Context extends BaseContext{constructor(){super(),this.name="Context",this._constants=new Map,this._timeouts=new Timeline,this._timeoutIds=0,this._initialized=!1,this.isOffline=!1,this._workletModules=new Map;const e=optionsFromArguments(Context.getDefaults(),arguments,["context"]);e.context?this._context=e.context:this._context=createAudioContext({latencyHint:e.latencyHint}),this._ticker=new Ticker(this.emit.bind(this,"tick"),e.clockSource,e.updateInterval),this.on("tick",this._timeoutLoop.bind(this)),this._context.onstatechange=()=>{this.emit("statechange",this.state)},this._setLatencyHint(e.latencyHint),this.lookAhead=e.lookAhead}static getDefaults(){return{clockSource:"worker",latencyHint:"interactive",lookAhead:.1,updateInterval:.05}}initialize(){return this._initialized||(initializeContext(this),this._initialized=!0),this}createAnalyser(){return this._context.createAnalyser()}createOscillator(){return this._context.createOscillator()}createBufferSource(){return this._context.createBufferSource()}createBiquadFilter(){return this._context.createBiquadFilter()}createBuffer(e,t,s){return this._context.createBuffer(e,t,s)}createChannelMerger(e){return this._context.createChannelMerger(e)}createChannelSplitter(e){return this._context.createChannelSplitter(e)}createConstantSource(){return this._context.createConstantSource()}createConvolver(){return this._context.createConvolver()}createDelay(e){return this._context.createDelay(e)}createDynamicsCompressor(){return this._context.createDynamicsCompressor()}createGain(){return this._context.createGain()}createIIRFilter(e,t){return this._context.createIIRFilter(e,t)}createPanner(){return this._context.createPanner()}createPeriodicWave(e,t,s){return this._context.createPeriodicWave(e,t,s)}createStereoPanner(){return this._context.createStereoPanner()}createWaveShaper(){return this._context.createWaveShaper()}createMediaStreamSource(e){return assert(isAudioContext(this._context),"Not available if OfflineAudioContext"),this._context.createMediaStreamSource(e)}createMediaElementSource(e){return assert(isAudioContext(this._context),"Not available if OfflineAudioContext"),this._context.createMediaElementSource(e)}createMediaStreamDestination(){return assert(isAudioContext(this._context),"Not available if OfflineAudioContext"),this._context.createMediaStreamDestination()}decodeAudioData(e){return this._context.decodeAudioData(e)}get currentTime(){return this._context.currentTime}get state(){return this._context.state}get sampleRate(){return this._context.sampleRate}get listener(){return this.initialize(),this._listener}set listener(e){assert(!this._initialized,"The listener cannot be set after initialization."),this._listener=e}get transport(){return this.initialize(),this._transport}set transport(e){assert(!this._initialized,"The transport cannot be set after initialization."),this._transport=e}get draw(){return this.initialize(),this._draw}set draw(e){assert(!this._initialized,"Draw cannot be set after initialization."),this._draw=e}get destination(){return this.initialize(),this._destination}set destination(e){assert(!this._initialized,"The destination cannot be set after initialization."),this._destination=e}createAudioWorkletNode(e,t){return createAudioWorkletNode(this.rawContext,e,t)}addAudioWorkletModule(e,t){return __awaiter(this,void 0,void 0,function*(){assert(isDefined(this.rawContext.audioWorklet),"AudioWorkletNode is only available in a secure context (https or localhost)"),this._workletModules.has(t)||this._workletModules.set(t,this.rawContext.audioWorklet.addModule(e)),yield this._workletModules.get(t)})}workletsAreReady(){return __awaiter(this,void 0,void 0,function*(){const e=[];this._workletModules.forEach(t=>e.push(t)),yield Promise.all(e)})}get updateInterval(){return this._ticker.updateInterval}set updateInterval(e){this._ticker.updateInterval=e}get clockSource(){return this._ticker.type}set clockSource(e){this._ticker.type=e}get latencyHint(){return this._latencyHint}_setLatencyHint(e){let t=0;if(this._latencyHint=e,isString(e))switch(e){case"interactive":t=.1;break;case"playback":t=.5;break;case"balanced":t=.25;break}this.lookAhead=t,this.updateInterval=t/2}get rawContext(){return this._context}now(){return this._context.currentTime+this.lookAhead}immediate(){return this._context.currentTime}resume(){return isAudioContext(this._context)?this._context.resume():Promise.resolve()}close(){return __awaiter(this,void 0,void 0,function*(){isAudioContext(this._context)&&(yield this._context.close()),this._initialized&&closeContext(this)})}getConstant(e){if(this._constants.has(e))return this._constants.get(e);{const t=this._context.createBuffer(1,128,this._context.sampleRate),s=t.getChannelData(0);for(let r=0;r<s.length;r++)s[r]=e;const o=this._context.createBufferSource();return o.channelCount=1,o.channelCountMode="explicit",o.buffer=t,o.loop=!0,o.start(0),this._constants.set(e,o),o}}dispose(){return super.dispose(),this._ticker.dispose(),this._timeouts.dispose(),Object.keys(this._constants).map(e=>this._constants[e].disconnect()),this}_timeoutLoop(){const e=this.now();let t=this._timeouts.peek();for(;this._timeouts.length&&t&&t.time<=e;)t.callback(),this._timeouts.shift(),t=this._timeouts.peek()}setTimeout(e,t){this._timeoutIds++;const s=this.now();return this._timeouts.add({callback:e,id:this._timeoutIds,time:s+t}),this._timeoutIds}clearTimeout(e){return this._timeouts.forEach(t=>{t.id===e&&this._timeouts.remove(t)}),this}clearInterval(e){return this.clearTimeout(e)}setInterval(e,t){const s=++this._timeoutIds,o=()=>{const r=this.now();this._timeouts.add({callback:()=>{e(),o()},id:s,time:r+t})};return o(),s}}class DummyContext extends BaseContext{constructor(){super(...arguments),this.lookAhead=0,this.latencyHint=0,this.isOffline=!1}createAnalyser(){return{}}createOscillator(){return{}}createBufferSource(){return{}}createBiquadFilter(){return{}}createBuffer(e,t,s){return{}}createChannelMerger(e){return{}}createChannelSplitter(e){return{}}createConstantSource(){return{}}createConvolver(){return{}}createDelay(e){return{}}createDynamicsCompressor(){return{}}createGain(){return{}}createIIRFilter(e,t){return{}}createPanner(){return{}}createPeriodicWave(e,t,s){return{}}createStereoPanner(){return{}}createWaveShaper(){return{}}createMediaStreamSource(e){return{}}createMediaElementSource(e){return{}}createMediaStreamDestination(){return{}}decodeAudioData(e){return Promise.resolve({})}createAudioWorkletNode(e,t){return{}}get rawContext(){return{}}addAudioWorkletModule(e,t){return __awaiter(this,void 0,void 0,function*(){return Promise.resolve()})}resume(){return Promise.resolve()}setTimeout(e,t){return 0}clearTimeout(e){return this}setInterval(e,t){return 0}clearInterval(e){return this}getConstant(e){return{}}get currentTime(){return 0}get state(){return{}}get sampleRate(){return 0}get listener(){return{}}get transport(){return{}}get draw(){return{}}set draw(e){}get destination(){return{}}set destination(e){}now(){return 0}immediate(){return 0}}function readOnly(n,e){isArray(e)?e.forEach(t=>readOnly(n,t)):Object.defineProperty(n,e,{enumerable:!0,writable:!1})}function writable(n,e){isArray(e)?e.forEach(t=>writable(n,t)):Object.defineProperty(n,e,{writable:!0})}const noOp=()=>{};class ToneAudioBuffer extends Tone$1{constructor(){super(),this.name="ToneAudioBuffer",this.onload=noOp;const e=optionsFromArguments(ToneAudioBuffer.getDefaults(),arguments,["url","onload","onerror"]);this.reverse=e.reverse,this.onload=e.onload,e.url&&isAudioBuffer(e.url)||e.url instanceof ToneAudioBuffer?this.set(e.url):isString(e.url)&&this.load(e.url).catch(e.onerror)}static getDefaults(){return{onerror:noOp,onload:noOp,reverse:!1}}get sampleRate(){return this._buffer?this._buffer.sampleRate:getContext().sampleRate}set(e){return e instanceof ToneAudioBuffer?e.loaded?this._buffer=e.get():e.onload=()=>{this.set(e),this.onload(this)}:this._buffer=e,this._reversed&&this._reverse(),this}get(){return this._buffer}load(e){return __awaiter(this,void 0,void 0,function*(){const t=ToneAudioBuffer.load(e).then(s=>{this.set(s),this.onload(this)});ToneAudioBuffer.downloads.push(t);try{yield t}finally{const s=ToneAudioBuffer.downloads.indexOf(t);ToneAudioBuffer.downloads.splice(s,1)}return this})}dispose(){return super.dispose(),this._buffer=void 0,this}fromArray(e){const t=isArray(e)&&e[0].length>0,s=t?e.length:1,o=t?e[0].length:e.length,r=getContext(),a=r.createBuffer(s,o,r.sampleRate),c=!t&&s===1?[e]:e;for(let l=0;l<s;l++)a.copyToChannel(c[l],l);return this._buffer=a,this}toMono(e){if(isNumber(e))this.fromArray(this.toArray(e));else{let t=new Float32Array(this.length);const s=this.numberOfChannels;for(let o=0;o<s;o++){const r=this.toArray(o);for(let a=0;a<r.length;a++)t[a]+=r[a]}t=t.map(o=>o/s),this.fromArray(t)}return this}toArray(e){if(isNumber(e))return this.getChannelData(e);if(this.numberOfChannels===1)return this.toArray(0);{const t=[];for(let s=0;s<this.numberOfChannels;s++)t[s]=this.getChannelData(s);return t}}getChannelData(e){return this._buffer?this._buffer.getChannelData(e):new Float32Array(0)}slice(e,t=this.duration){const s=Math.floor(e*this.sampleRate),o=Math.floor(t*this.sampleRate);assert(s<o,"The start time must be less than the end time");const r=o-s,a=getContext().createBuffer(this.numberOfChannels,r,this.sampleRate);for(let c=0;c<this.numberOfChannels;c++)a.copyToChannel(this.getChannelData(c).subarray(s,o),c);return new ToneAudioBuffer(a)}_reverse(){if(this.loaded)for(let e=0;e<this.numberOfChannels;e++)this.getChannelData(e).reverse();return this}get loaded(){return this.length>0}get duration(){return this._buffer?this._buffer.duration:0}get length(){return this._buffer?this._buffer.length:0}get numberOfChannels(){return this._buffer?this._buffer.numberOfChannels:0}get reverse(){return this._reversed}set reverse(e){this._reversed!==e&&(this._reversed=e,this._reverse())}static fromArray(e){return new ToneAudioBuffer().fromArray(e)}static fromUrl(e){return __awaiter(this,void 0,void 0,function*(){return yield new ToneAudioBuffer().load(e)})}static load(e){return __awaiter(this,void 0,void 0,function*(){const t=e.match(/\[([^\]\[]+\|.+)\]$/);if(t){const c=t[1].split("|");let l=c[0];for(const u of c)if(ToneAudioBuffer.supportsType(u)){l=u;break}e=e.replace(t[0],l)}const s=ToneAudioBuffer.baseUrl===""||ToneAudioBuffer.baseUrl.endsWith("/")?ToneAudioBuffer.baseUrl:ToneAudioBuffer.baseUrl+"/",o=yield fetch(s+e);if(!o.ok)throw new Error(`could not load url: ${e}`);const r=yield o.arrayBuffer();return yield getContext().decodeAudioData(r)})}static supportsType(e){const t=e.split("."),s=t[t.length-1];return document.createElement("audio").canPlayType("audio/"+s)!==""}static loaded(){return __awaiter(this,void 0,void 0,function*(){for(yield Promise.resolve();ToneAudioBuffer.downloads.length;)yield ToneAudioBuffer.downloads[0]})}}ToneAudioBuffer.baseUrl="";ToneAudioBuffer.downloads=[];class OfflineContext extends Context{constructor(){super({clockSource:"offline",context:isOfflineAudioContext(arguments[0])?arguments[0]:createOfflineAudioContext(arguments[0],arguments[1]*arguments[2],arguments[2]),lookAhead:0,updateInterval:isOfflineAudioContext(arguments[0])?128/arguments[0].sampleRate:128/arguments[2]}),this.name="OfflineContext",this._currentTime=0,this.isOffline=!0,this._duration=isOfflineAudioContext(arguments[0])?arguments[0].length/arguments[0].sampleRate:arguments[1]}now(){return this._currentTime}get currentTime(){return this._currentTime}_renderClock(e){return __awaiter(this,void 0,void 0,function*(){let t=0;for(;this._duration-this._currentTime>=0;){this.emit("tick"),this._currentTime+=128/this.sampleRate,t++;const s=Math.floor(this.sampleRate/128);e&&t%s===0&&(yield new Promise(o=>setTimeout(o,1)))}})}render(e=!0){return __awaiter(this,void 0,void 0,function*(){yield this.workletsAreReady(),yield this._renderClock(e);const t=yield this._context.startRendering();return new ToneAudioBuffer(t)})}close(){return Promise.resolve()}}const dummyContext=new DummyContext;let globalContext=dummyContext;function getContext(){return globalContext===dummyContext&&hasAudioContext&&setContext(new Context),globalContext}function setContext(n){isAudioContext(n)?globalContext=new Context(n):isOfflineAudioContext(n)?globalContext=new OfflineContext(n):globalContext=n}function start(){return globalContext.resume()}if(theWindow&&!theWindow.TONE_SILENCE_LOGGING){const e=` * Tone.js v${version} * `;console.log(`%c${e}`,"background: #000; color: #fff")}function dbToGain(n){return Math.pow(10,n/20)}function gainToDb(n){return 20*(Math.log(n)/Math.LN10)}function intervalToFrequencyRatio(n){return Math.pow(2,n/12)}let A4=440;function getA4(){return A4}function setA4(n){A4=n}function ftom(n){return Math.round(ftomf(n))}function ftomf(n){return 69+12*Math.log2(n/A4)}function mtof(n){return A4*Math.pow(2,(n-69)/12)}class TimeBaseClass extends Tone$1{constructor(e,t,s){super(),this.defaultUnits="s",this._val=t,this._units=s,this.context=e,this._expressions=this._getExpressions()}_getExpressions(){return{hz:{method:e=>this._frequencyToUnits(parseFloat(e)),regexp:/^(\d+(?:\.\d+)?)hz$/i},i:{method:e=>this._ticksToUnits(parseInt(e,10)),regexp:/^(\d+)i$/i},m:{method:e=>this._beatsToUnits(parseInt(e,10)*this._getTimeSignature()),regexp:/^(\d+)m$/i},n:{method:(e,t)=>{const s=parseInt(e,10),o=t==="."?1.5:1;return s===1?this._beatsToUnits(this._getTimeSignature())*o:this._beatsToUnits(4/s)*o},regexp:/^(\d+)n(\.?)$/i},number:{method:e=>this._expressions[this.defaultUnits].method.call(this,e),regexp:/^(\d+(?:\.\d+)?)$/},s:{method:e=>this._secondsToUnits(parseFloat(e)),regexp:/^(\d+(?:\.\d+)?)s$/},samples:{method:e=>parseInt(e,10)/this.context.sampleRate,regexp:/^(\d+)samples$/},t:{method:e=>{const t=parseInt(e,10);return this._beatsToUnits(8/(Math.floor(t)*3))},regexp:/^(\d+)t$/i},tr:{method:(e,t,s)=>{let o=0;return e&&e!=="0"&&(o+=this._beatsToUnits(this._getTimeSignature()*parseFloat(e))),t&&t!=="0"&&(o+=this._beatsToUnits(parseFloat(t))),s&&s!=="0"&&(o+=this._beatsToUnits(parseFloat(s)/4)),o},regexp:/^(\d+(?:\.\d+)?):(\d+(?:\.\d+)?):?(\d+(?:\.\d+)?)?$/}}}valueOf(){if(this._val instanceof TimeBaseClass&&this.fromType(this._val),isUndef(this._val))return this._noArg();if(isString(this._val)&&isUndef(this._units)){for(const e in this._expressions)if(this._expressions[e].regexp.test(this._val.trim())){this._units=e;break}}else if(isObject(this._val)){let e=0;for(const t in this._val)if(isDefined(this._val[t])){const s=this._val[t],o=new this.constructor(this.context,t).valueOf()*s;e+=o}return e}if(isDefined(this._units)){const e=this._expressions[this._units],t=this._val.toString().trim().match(e.regexp);return t?e.method.apply(this,t.slice(1)):e.method.call(this,this._val)}else return isString(this._val)?parseFloat(this._val):this._val}_frequencyToUnits(e){return 1/e}_beatsToUnits(e){return 60/this._getBpm()*e}_secondsToUnits(e){return e}_ticksToUnits(e){return e*this._beatsToUnits(1)/this._getPPQ()}_noArg(){return this._now()}_getBpm(){return this.context.transport.bpm.value}_getTimeSignature(){return this.context.transport.timeSignature}_getPPQ(){return this.context.transport.PPQ}fromType(e){switch(this._units=void 0,this.defaultUnits){case"s":this._val=e.toSeconds();break;case"i":this._val=e.toTicks();break;case"hz":this._val=e.toFrequency();break;case"midi":this._val=e.toMidi();break}return this}toFrequency(){return 1/this.toSeconds()}toSamples(){return this.toSeconds()*this.context.sampleRate}toMilliseconds(){return this.toSeconds()*1e3}}class TimeClass extends TimeBaseClass{constructor(){super(...arguments),this.name="TimeClass"}_getExpressions(){return Object.assign(super._getExpressions(),{now:{method:e=>this._now()+new this.constructor(this.context,e).valueOf(),regexp:/^\+(.+)/},quantize:{method:e=>{const t=new TimeClass(this.context,e).valueOf();return this._secondsToUnits(this.context.transport.nextSubdivision(t))},regexp:/^@(.+)/}})}quantize(e,t=1){const s=new this.constructor(this.context,e).valueOf(),o=this.valueOf(),c=Math.round(o/s)*s-o;return o+c*t}toNotation(){const e=this.toSeconds(),t=["1m"];for(let r=1;r<9;r++){const a=Math.pow(2,r);t.push(a+"n."),t.push(a+"n"),t.push(a+"t")}t.push("0");let s=t[0],o=new TimeClass(this.context,t[0]).toSeconds();return t.forEach(r=>{const a=new TimeClass(this.context,r).toSeconds();Math.abs(a-e)<Math.abs(o-e)&&(s=r,o=a)}),s}toBarsBeatsSixteenths(){const e=this._beatsToUnits(1);let t=this.valueOf()/e;t=parseFloat(t.toFixed(4));const s=Math.floor(t/this._getTimeSignature());let o=t%1*4;t=Math.floor(t)%this._getTimeSignature();const r=o.toString();return r.length>3&&(o=parseFloat(parseFloat(r).toFixed(3))),[s,t,o].join(":")}toTicks(){const e=this._beatsToUnits(1),t=this.valueOf()/e;return Math.round(t*this._getPPQ())}toSeconds(){return this.valueOf()}toMidi(){return ftom(this.toFrequency())}_now(){return this.context.now()}}function Time(n,e){return new TimeClass(getContext(),n,e)}class FrequencyClass extends TimeClass{constructor(){super(...arguments),this.name="Frequency",this.defaultUnits="hz"}static get A4(){return getA4()}static set A4(e){setA4(e)}_getExpressions(){return Object.assign({},super._getExpressions(),{midi:{regexp:/^(\d+(?:\.\d+)?midi)/,method(e){return this.defaultUnits==="midi"?e:FrequencyClass.mtof(e)}},note:{regexp:/^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i,method(e,t){const o=noteToScaleIndex[e.toLowerCase()]+(parseInt(t,10)+1)*12;return this.defaultUnits==="midi"?o:FrequencyClass.mtof(o)}},tr:{regexp:/^(\d+(?:\.\d+)?):(\d+(?:\.\d+)?):?(\d+(?:\.\d+)?)?/,method(e,t,s){let o=1;return e&&e!=="0"&&(o*=this._beatsToUnits(this._getTimeSignature()*parseFloat(e))),t&&t!=="0"&&(o*=this._beatsToUnits(parseFloat(t))),s&&s!=="0"&&(o*=this._beatsToUnits(parseFloat(s)/4)),o}}})}transpose(e){return new FrequencyClass(this.context,this.valueOf()*intervalToFrequencyRatio(e))}harmonize(e){return e.map(t=>this.transpose(t))}toMidi(){return ftom(this.valueOf())}toNote(){const e=this.toFrequency(),t=Math.log2(e/FrequencyClass.A4);let s=Math.round(12*t)+57;const o=Math.floor(s/12);return o<0&&(s+=-12*o),scaleIndexToNote[s%12]+o.toString()}toSeconds(){return 1/super.toSeconds()}toTicks(){const e=this._beatsToUnits(1),t=this.valueOf()/e;return Math.floor(t*this._getPPQ())}_noArg(){return 0}_frequencyToUnits(e){return e}_ticksToUnits(e){return 1/(e*60/(this._getBpm()*this._getPPQ()))}_beatsToUnits(e){return 1/super._beatsToUnits(e)}_secondsToUnits(e){return 1/e}static mtof(e){return mtof(e)}static ftom(e){return ftom(e)}}const noteToScaleIndex={cbb:-2,cb:-1,c:0,"c#":1,cx:2,dbb:0,db:1,d:2,"d#":3,dx:4,ebb:2,eb:3,e:4,"e#":5,ex:6,fbb:3,fb:4,f:5,"f#":6,fx:7,gbb:5,gb:6,g:7,"g#":8,gx:9,abb:7,ab:8,a:9,"a#":10,ax:11,bbb:9,bb:10,b:11,"b#":12,bx:13},scaleIndexToNote=["C","C#","D","D#","E","F","F#","G","G#","A","A#","B"];function Frequency(n,e){return new FrequencyClass(getContext(),n,e)}class TransportTimeClass extends TimeClass{constructor(){super(...arguments),this.name="TransportTime"}_now(){return this.context.transport.seconds}}function TransportTime(n,e){return new TransportTimeClass(getContext(),n,e)}class ToneWithContext extends Tone$1{constructor(){super();const e=optionsFromArguments(ToneWithContext.getDefaults(),arguments,["context"]);this.defaultContext?this.context=this.defaultContext:this.context=e.context}static getDefaults(){return{context:getContext()}}now(){return this.context.currentTime+this.context.lookAhead}immediate(){return this.context.currentTime}get sampleTime(){return 1/this.context.sampleRate}get blockTime(){return 128/this.context.sampleRate}toSeconds(e){return new TimeClass(this.context,e).toSeconds()}toFrequency(e){return new FrequencyClass(this.context,e).toFrequency()}toTicks(e){return new TransportTimeClass(this.context,e).toTicks()}_getPartialProperties(e){const t=this.get();return Object.keys(t).forEach(s=>{isUndef(e[s])&&delete t[s]}),t}get(){const e=getDefaultsFromInstance(this);return Object.keys(e).forEach(t=>{if(Reflect.has(this,t)){const s=this[t];isDefined(s)&&isDefined(s.value)&&isDefined(s.setValueAtTime)?e[t]=s.value:s instanceof ToneWithContext?e[t]=s._getPartialProperties(e[t]):isArray(s)||isNumber(s)||isString(s)||isBoolean(s)?e[t]=s:delete e[t]}}),e}set(e){return Object.keys(e).forEach(t=>{Reflect.has(this,t)&&isDefined(this[t])&&(this[t]&&isDefined(this[t].value)&&isDefined(this[t].setValueAtTime)?this[t].value!==e[t]&&(this[t].value=e[t]):this[t]instanceof ToneWithContext?this[t].set(e[t]):this[t]=e[t])}),this}}class StateTimeline extends Timeline{constructor(e="stopped"){super(),this.name="StateTimeline",this._initial=e,this.setStateAtTime(this._initial,0)}getValueAtTime(e){const t=this.get(e);return t!==null?t.state:this._initial}setStateAtTime(e,t,s){return assertRange(t,0),this.add(Object.assign({},s,{state:e,time:t})),this}getLastState(e,t){const s=this._search(t);for(let o=s;o>=0;o--){const r=this._timeline[o];if(r.state===e)return r}}getNextState(e,t){const s=this._search(t);if(s!==-1)for(let o=s;o<this._timeline.length;o++){const r=this._timeline[o];if(r.state===e)return r}}}class Param extends ToneWithContext{constructor(){super(optionsFromArguments(Param.getDefaults(),arguments,["param","units","convert"])),this.name="Param",this.overridden=!1,this._minOutput=1e-7;const e=optionsFromArguments(Param.getDefaults(),arguments,["param","units","convert"]);for(assert(isDefined(e.param)&&(isAudioParam(e.param)||e.param instanceof Param),"param must be an AudioParam");!isAudioParam(e.param);)e.param=e.param._param;this._swappable=isDefined(e.swappable)?e.swappable:!1,this._swappable?(this.input=this.context.createGain(),this._param=e.param,this.input.connect(this._param)):this._param=this.input=e.param,this._events=new Timeline(1e3),this._initialValue=this._param.defaultValue,this.units=e.units,this.convert=e.convert,this._minValue=e.minValue,this._maxValue=e.maxValue,isDefined(e.value)&&e.value!==this._toType(this._initialValue)&&this.setValueAtTime(e.value,0)}static getDefaults(){return Object.assign(ToneWithContext.getDefaults(),{convert:!0,units:"number"})}get value(){const e=this.now();return this.getValueAtTime(e)}set value(e){this.cancelScheduledValues(this.now()),this.setValueAtTime(e,this.now())}get minValue(){return isDefined(this._minValue)?this._minValue:this.units==="time"||this.units==="frequency"||this.units==="normalRange"||this.units==="positive"||this.units==="transportTime"||this.units==="ticks"||this.units==="bpm"||this.units==="hertz"||this.units==="samples"?0:this.units==="audioRange"?-1:this.units==="decibels"?-1/0:this._param.minValue}get maxValue(){return isDefined(this._maxValue)?this._maxValue:this.units==="normalRange"||this.units==="audioRange"?1:this._param.maxValue}_is(e,t){return this.units===t}_assertRange(e){return isDefined(this.maxValue)&&isDefined(this.minValue)&&assertRange(e,this._fromType(this.minValue),this._fromType(this.maxValue)),e}_fromType(e){return this.convert&&!this.overridden?this._is(e,"time")?this.toSeconds(e):this._is(e,"decibels")?dbToGain(e):this._is(e,"frequency")?this.toFrequency(e):e:this.overridden?0:e}_toType(e){return this.convert&&this.units==="decibels"?gainToDb(e):e}setValueAtTime(e,t){const s=this.toSeconds(t),o=this._fromType(e);return assert(isFinite(o)&&isFinite(s),`Invalid argument(s) to setValueAtTime: ${JSON.stringify(e)}, ${JSON.stringify(t)}`),this._assertRange(o),this.log(this.units,"setValueAtTime",e,s),this._events.add({time:s,type:"setValueAtTime",value:o}),this._param.setValueAtTime(o,s),this}getValueAtTime(e){const t=Math.max(this.toSeconds(e),0),s=this._events.getAfter(t),o=this._events.get(t);let r=this._initialValue;if(o===null)r=this._initialValue;else if(o.type==="setTargetAtTime"&&(s===null||s.type==="setValueAtTime")){const a=this._events.getBefore(o.time);let c;a===null?c=this._initialValue:c=a.value,o.type==="setTargetAtTime"&&(r=this._exponentialApproach(o.time,c,o.value,o.constant,t))}else if(s===null)r=o.value;else if(s.type==="linearRampToValueAtTime"||s.type==="exponentialRampToValueAtTime"){let a=o.value;if(o.type==="setTargetAtTime"){const c=this._events.getBefore(o.time);c===null?a=this._initialValue:a=c.value}s.type==="linearRampToValueAtTime"?r=this._linearInterpolate(o.time,a,s.time,s.value,t):r=this._exponentialInterpolate(o.time,a,s.time,s.value,t)}else r=o.value;return this._toType(r)}setRampPoint(e){e=this.toSeconds(e);let t=this.getValueAtTime(e);return this.cancelAndHoldAtTime(e),this._fromType(t)===0&&(t=this._toType(this._minOutput)),this.setValueAtTime(t,e),this}linearRampToValueAtTime(e,t){const s=this._fromType(e),o=this.toSeconds(t);return assert(isFinite(s)&&isFinite(o),`Invalid argument(s) to linearRampToValueAtTime: ${JSON.stringify(e)}, ${JSON.stringify(t)}`),this._assertRange(s),this._events.add({time:o,type:"linearRampToValueAtTime",value:s}),this.log(this.units,"linearRampToValueAtTime",e,o),this._param.linearRampToValueAtTime(s,o),this}exponentialRampToValueAtTime(e,t){let s=this._fromType(e);s=EQ(s,0)?this._minOutput:s,this._assertRange(s);const o=this.toSeconds(t);return assert(isFinite(s)&&isFinite(o),`Invalid argument(s) to exponentialRampToValueAtTime: ${JSON.stringify(e)}, ${JSON.stringify(t)}`),this._events.add({time:o,type:"exponentialRampToValueAtTime",value:s}),this.log(this.units,"exponentialRampToValueAtTime",e,o),this._param.exponentialRampToValueAtTime(s,o),this}exponentialRampTo(e,t,s){return s=this.toSeconds(s),this.setRampPoint(s),this.exponentialRampToValueAtTime(e,s+this.toSeconds(t)),this}linearRampTo(e,t,s){return s=this.toSeconds(s),this.setRampPoint(s),this.linearRampToValueAtTime(e,s+this.toSeconds(t)),this}targetRampTo(e,t,s){return s=this.toSeconds(s),this.setRampPoint(s),this.exponentialApproachValueAtTime(e,s,t),this}exponentialApproachValueAtTime(e,t,s){t=this.toSeconds(t),s=this.toSeconds(s);const o=Math.log(s+1)/Math.log(200);return this.setTargetAtTime(e,t,o),this.cancelAndHoldAtTime(t+s*.9),this.linearRampToValueAtTime(e,t+s),this}setTargetAtTime(e,t,s){const o=this._fromType(e);assert(isFinite(s)&&s>0,"timeConstant must be a number greater than 0");const r=this.toSeconds(t);return this._assertRange(o),assert(isFinite(o)&&isFinite(r),`Invalid argument(s) to setTargetAtTime: ${JSON.stringify(e)}, ${JSON.stringify(t)}`),this._events.add({constant:s,time:r,type:"setTargetAtTime",value:o}),this.log(this.units,"setTargetAtTime",e,r,s),this._param.setTargetAtTime(o,r,s),this}setValueCurveAtTime(e,t,s,o=1){s=this.toSeconds(s),t=this.toSeconds(t);const r=this._fromType(e[0])*o;this.setValueAtTime(this._toType(r),t);const a=s/(e.length-1);for(let c=1;c<e.length;c++){const l=this._fromType(e[c])*o;this.linearRampToValueAtTime(this._toType(l),t+c*a)}return this}cancelScheduledValues(e){const t=this.toSeconds(e);return assert(isFinite(t),`Invalid argument to cancelScheduledValues: ${JSON.stringify(e)}`),this._events.cancel(t),this._param.cancelScheduledValues(t),this.log(this.units,"cancelScheduledValues",t),this}cancelAndHoldAtTime(e){const t=this.toSeconds(e),s=this._fromType(this.getValueAtTime(t));assert(isFinite(t),`Invalid argument to cancelAndHoldAtTime: ${JSON.stringify(e)}`),this.log(this.units,"cancelAndHoldAtTime",t,"value="+s);const o=this._events.get(t),r=this._events.getAfter(t);return o&&EQ(o.time,t)?r?(this._param.cancelScheduledValues(r.time),this._events.cancel(r.time)):(this._param.cancelAndHoldAtTime(t),this._events.cancel(t+this.sampleTime)):r&&(this._param.cancelScheduledValues(r.time),this._events.cancel(r.time),r.type==="linearRampToValueAtTime"?this.linearRampToValueAtTime(this._toType(s),t):r.type==="exponentialRampToValueAtTime"&&this.exponentialRampToValueAtTime(this._toType(s),t)),this._events.add({time:t,type:"setValueAtTime",value:s}),this._param.setValueAtTime(s,t),this}rampTo(e,t=.1,s){return this.units==="frequency"||this.units==="bpm"||this.units==="decibels"?this.exponentialRampTo(e,t,s):this.linearRampTo(e,t,s),this}apply(e){const t=this.context.currentTime;e.setValueAtTime(this.getValueAtTime(t),t);const s=this._events.get(t);if(s&&s.type==="setTargetAtTime"){const o=this._events.getAfter(s.time),r=o?o.time:t+2,a=(r-t)/10;for(let c=t;c<r;c+=a)e.linearRampToValueAtTime(this.getValueAtTime(c),c)}return this._events.forEachAfter(this.context.currentTime,o=>{o.type==="cancelScheduledValues"?e.cancelScheduledValues(o.time):o.type==="setTargetAtTime"?e.setTargetAtTime(o.value,o.time,o.constant):e[o.type](o.value,o.time)}),this}setParam(e){assert(this._swappable,"The Param must be assigned as 'swappable' in the constructor");const t=this.input;return t.disconnect(this._param),this.apply(e),this._param=e,t.connect(this._param),this}dispose(){return super.dispose(),this._events.dispose(),this}get defaultValue(){return this._toType(this._param.defaultValue)}_exponentialApproach(e,t,s,o,r){return s+(t-s)*Math.exp(-(r-e)/o)}_linearInterpolate(e,t,s,o,r){return t+(o-t)*((r-e)/(s-e))}_exponentialInterpolate(e,t,s,o,r){return t*Math.pow(o/t,(r-e)/(s-e))}}class ToneAudioNode extends ToneWithContext{constructor(){super(...arguments),this.name="ToneAudioNode",this._internalChannels=[]}get numberOfInputs(){return isDefined(this.input)?isAudioParam(this.input)||this.input instanceof Param?1:this.input.numberOfInputs:0}get numberOfOutputs(){return isDefined(this.output)?this.output.numberOfOutputs:0}_isAudioNode(e){return isDefined(e)&&(e instanceof ToneAudioNode||isAudioNode(e))}_getInternalNodes(){const e=this._internalChannels.slice(0);return this._isAudioNode(this.input)&&e.push(this.input),this._isAudioNode(this.output)&&this.input!==this.output&&e.push(this.output),e}_setChannelProperties(e){this._getInternalNodes().forEach(s=>{s.channelCount=e.channelCount,s.channelCountMode=e.channelCountMode,s.channelInterpretation=e.channelInterpretation})}_getChannelProperties(){const e=this._getInternalNodes();assert(e.length>0,"ToneAudioNode does not have any internal nodes");const t=e[0];return{channelCount:t.channelCount,channelCountMode:t.channelCountMode,channelInterpretation:t.channelInterpretation}}get channelCount(){return this._getChannelProperties().channelCount}set channelCount(e){const t=this._getChannelProperties();this._setChannelProperties(Object.assign(t,{channelCount:e}))}get channelCountMode(){return this._getChannelProperties().channelCountMode}set channelCountMode(e){const t=this._getChannelProperties();this._setChannelProperties(Object.assign(t,{channelCountMode:e}))}get channelInterpretation(){return this._getChannelProperties().channelInterpretation}set channelInterpretation(e){const t=this._getChannelProperties();this._setChannelProperties(Object.assign(t,{channelInterpretation:e}))}connect(e,t=0,s=0){return connect(this,e,t,s),this}toDestination(){return this.connect(this.context.destination),this}toMaster(){return warn("toMaster() has been renamed toDestination()"),this.toDestination()}disconnect(e,t=0,s=0){return disconnect(this,e,t,s),this}chain(...e){return connectSeries(this,...e),this}fan(...e){return e.forEach(t=>this.connect(t)),this}dispose(){return super.dispose(),isDefined(this.input)&&(this.input instanceof ToneAudioNode?this.input.dispose():isAudioNode(this.input)&&this.input.disconnect()),isDefined(this.output)&&(this.output instanceof ToneAudioNode?this.output.dispose():isAudioNode(this.output)&&this.output.disconnect()),this._internalChannels=[],this}}function connectSeries(...n){const e=n.shift();n.reduce((t,s)=>(t instanceof ToneAudioNode?t.connect(s):isAudioNode(t)&&connect(t,s),s),e)}function connect(n,e,t=0,s=0){for(assert(isDefined(n),"Cannot connect from undefined node"),assert(isDefined(e),"Cannot connect to undefined node"),(e instanceof ToneAudioNode||isAudioNode(e))&&assert(e.numberOfInputs>0,"Cannot connect to node with no inputs"),assert(n.numberOfOutputs>0,"Cannot connect from node with no outputs");e instanceof ToneAudioNode||e instanceof Param;)isDefined(e.input)&&(e=e.input);for(;n instanceof ToneAudioNode;)isDefined(n.output)&&(n=n.output);isAudioParam(e)?n.connect(e,t):n.connect(e,t,s)}function disconnect(n,e,t=0,s=0){if(isDefined(e))for(;e instanceof ToneAudioNode;)e=e.input;for(;!isAudioNode(n);)isDefined(n.output)&&(n=n.output);isAudioParam(e)?n.disconnect(e,t):isAudioNode(e)?n.disconnect(e,t,s):n.disconnect()}class Gain extends ToneAudioNode{constructor(){super(optionsFromArguments(Gain.getDefaults(),arguments,["gain","units"])),this.name="Gain",this._gainNode=this.context.createGain(),this.input=this._gainNode,this.output=this._gainNode;const e=optionsFromArguments(Gain.getDefaults(),arguments,["gain","units"]);this.gain=new Param({context:this.context,convert:e.convert,param:this._gainNode.gain,units:e.units,value:e.gain,minValue:e.minValue,maxValue:e.maxValue}),readOnly(this,"gain")}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{convert:!0,gain:1,units:"gain"})}dispose(){return super.dispose(),this._gainNode.disconnect(),this.gain.dispose(),this}}class OneShotSource extends ToneAudioNode{constructor(e){super(e),this.onended=noOp,this._startTime=-1,this._stopTime=-1,this._timeout=-1,this.output=new Gain({context:this.context,gain:0}),this._gainNode=this.output,this.getStateAtTime=function(t){const s=this.toSeconds(t);return this._startTime!==-1&&s>=this._startTime&&(this._stopTime===-1||s<=this._stopTime)?"started":"stopped"},this._fadeIn=e.fadeIn,this._fadeOut=e.fadeOut,this._curve=e.curve,this.onended=e.onended}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{curve:"linear",fadeIn:0,fadeOut:0,onended:noOp})}_startGain(e,t=1){assert(this._startTime===-1,"Source cannot be started more than once");const s=this.toSeconds(this._fadeIn);return this._startTime=e+s,this._startTime=Math.max(this._startTime,this.context.currentTime),s>0?(this._gainNode.gain.setValueAtTime(0,e),this._curve==="linear"?this._gainNode.gain.linearRampToValueAtTime(t,e+s):this._gainNode.gain.exponentialApproachValueAtTime(t,e,s)):this._gainNode.gain.setValueAtTime(t,e),this}stop(e){return this.log("stop",e),this._stopGain(this.toSeconds(e)),this}_stopGain(e){assert(this._startTime!==-1,"'start' must be called before 'stop'"),this.cancelStop();const t=this.toSeconds(this._fadeOut);return this._stopTime=this.toSeconds(e)+t,this._stopTime=Math.max(this._stopTime,this.context.currentTime),t>0?this._curve==="linear"?this._gainNode.gain.linearRampTo(0,t,e):this._gainNode.gain.targetRampTo(0,t,e):(this._gainNode.gain.cancelAndHoldAtTime(e),this._gainNode.gain.setValueAtTime(0,e)),this.context.clearTimeout(this._timeout),this._timeout=this.context.setTimeout(()=>{const s=this._curve==="exponential"?t*2:0;this._stopSource(this.now()+s),this._onended()},this._stopTime-this.context.currentTime),this}_onended(){if(this.onended!==noOp&&(this.onended(this),this.onended=noOp,!this.context.isOffline)){const e=()=>this.dispose();typeof window.requestIdleCallback<"u"?window.requestIdleCallback(e):setTimeout(e,1e3)}}get state(){return this.getStateAtTime(this.now())}cancelStop(){return this.log("cancelStop"),assert(this._startTime!==-1,"Source is not started"),this._gainNode.gain.cancelScheduledValues(this._startTime+this.sampleTime),this.context.clearTimeout(this._timeout),this._stopTime=-1,this}dispose(){return super.dispose(),this._gainNode.disconnect(),this}}class ToneConstantSource extends OneShotSource{constructor(){super(optionsFromArguments(ToneConstantSource.getDefaults(),arguments,["offset"])),this.name="ToneConstantSource",this._source=this.context.createConstantSource();const e=optionsFromArguments(ToneConstantSource.getDefaults(),arguments,["offset"]);connect(this._source,this._gainNode),this.offset=new Param({context:this.context,convert:e.convert,param:this._source.offset,units:e.units,value:e.offset,minValue:e.minValue,maxValue:e.maxValue})}static getDefaults(){return Object.assign(OneShotSource.getDefaults(),{convert:!0,offset:1,units:"number"})}start(e){const t=this.toSeconds(e);return this.log("start",t),this._startGain(t),this._source.start(t),this}_stopSource(e){this._source.stop(e)}dispose(){return super.dispose(),this.state==="started"&&this.stop(),this._source.disconnect(),this.offset.dispose(),this}}class Signal extends ToneAudioNode{constructor(){super(optionsFromArguments(Signal.getDefaults(),arguments,["value","units"])),this.name="Signal",this.override=!0;const e=optionsFromArguments(Signal.getDefaults(),arguments,["value","units"]);this.output=this._constantSource=new ToneConstantSource({context:this.context,convert:e.convert,offset:e.value,units:e.units,minValue:e.minValue,maxValue:e.maxValue}),this._constantSource.start(0),this.input=this._param=this._constantSource.offset}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{convert:!0,units:"number",value:0})}connect(e,t=0,s=0){return connectSignal(this,e,t,s),this}dispose(){return super.dispose(),this._param.dispose(),this._constantSource.dispose(),this}setValueAtTime(e,t){return this._param.setValueAtTime(e,t),this}getValueAtTime(e){return this._param.getValueAtTime(e)}setRampPoint(e){return this._param.setRampPoint(e),this}linearRampToValueAtTime(e,t){return this._param.linearRampToValueAtTime(e,t),this}exponentialRampToValueAtTime(e,t){return this._param.exponentialRampToValueAtTime(e,t),this}exponentialRampTo(e,t,s){return this._param.exponentialRampTo(e,t,s),this}linearRampTo(e,t,s){return this._param.linearRampTo(e,t,s),this}targetRampTo(e,t,s){return this._param.targetRampTo(e,t,s),this}exponentialApproachValueAtTime(e,t,s){return this._param.exponentialApproachValueAtTime(e,t,s),this}setTargetAtTime(e,t,s){return this._param.setTargetAtTime(e,t,s),this}setValueCurveAtTime(e,t,s,o){return this._param.setValueCurveAtTime(e,t,s,o),this}cancelScheduledValues(e){return this._param.cancelScheduledValues(e),this}cancelAndHoldAtTime(e){return this._param.cancelAndHoldAtTime(e),this}rampTo(e,t,s){return this._param.rampTo(e,t,s),this}get value(){return this._param.value}set value(e){this._param.value=e}get convert(){return this._param.convert}set convert(e){this._param.convert=e}get units(){return this._param.units}get overridden(){return this._param.overridden}set overridden(e){this._param.overridden=e}get maxValue(){return this._param.maxValue}get minValue(){return this._param.minValue}apply(e){return this._param.apply(e),this}}function connectSignal(n,e,t,s){(e instanceof Param||isAudioParam(e)||e instanceof Signal&&e.override)&&(e.cancelScheduledValues(0),e.setValueAtTime(0,0),e instanceof Signal&&(e.overridden=!0)),connect(n,e,t,s)}class TickParam extends Param{constructor(){super(optionsFromArguments(TickParam.getDefaults(),arguments,["value"])),this.name="TickParam",this._events=new Timeline(1/0),this._multiplier=1;const e=optionsFromArguments(TickParam.getDefaults(),arguments,["value"]);this._multiplier=e.multiplier,this._events.cancel(0),this._events.add({ticks:0,time:0,type:"setValueAtTime",value:this._fromType(e.value)}),this.setValueAtTime(e.value,0)}static getDefaults(){return Object.assign(Param.getDefaults(),{multiplier:1,units:"hertz",value:1})}setTargetAtTime(e,t,s){t=this.toSeconds(t),this.setRampPoint(t);const o=this._fromType(e),r=this._events.get(t),a=Math.round(Math.max(1/s,1));for(let c=0;c<=a;c++){const l=s*c+t,u=this._exponentialApproach(r.time,r.value,o,s,l);this.linearRampToValueAtTime(this._toType(u),l)}return this}setValueAtTime(e,t){const s=this.toSeconds(t);super.setValueAtTime(e,t);const o=this._events.get(s),r=this._events.previousEvent(o),a=this._getTicksUntilEvent(r,s);return o.ticks=Math.max(a,0),this}linearRampToValueAtTime(e,t){const s=this.toSeconds(t);super.linearRampToValueAtTime(e,t);const o=this._events.get(s),r=this._events.previousEvent(o),a=this._getTicksUntilEvent(r,s);return o.ticks=Math.max(a,0),this}exponentialRampToValueAtTime(e,t){t=this.toSeconds(t);const s=this._fromType(e),o=this._events.get(t),r=Math.round(Math.max((t-o.time)*10,1)),a=(t-o.time)/r;for(let c=0;c<=r;c++){const l=a*c+o.time,u=this._exponentialInterpolate(o.time,o.value,t,s,l);this.linearRampToValueAtTime(this._toType(u),l)}return this}_getTicksUntilEvent(e,t){if(e===null)e={ticks:0,time:0,type:"setValueAtTime",value:0};else if(isUndef(e.ticks)){const a=this._events.previousEvent(e);e.ticks=this._getTicksUntilEvent(a,e.time)}const s=this._fromType(this.getValueAtTime(e.time));let o=this._fromType(this.getValueAtTime(t));const r=this._events.get(t);return r&&r.time===t&&r.type==="setValueAtTime"&&(o=this._fromType(this.getValueAtTime(t-this.sampleTime))),.5*(t-e.time)*(s+o)+e.ticks}getTicksAtTime(e){const t=this.toSeconds(e),s=this._events.get(t);return Math.max(this._getTicksUntilEvent(s,t),0)}getDurationOfTicks(e,t){const s=this.toSeconds(t),o=this.getTicksAtTime(t);return this.getTimeOfTick(o+e)-s}getTimeOfTick(e){const t=this._events.get(e,"ticks"),s=this._events.getAfter(e,"ticks");if(t&&t.ticks===e)return t.time;if(t&&s&&s.type==="linearRampToValueAtTime"&&t.value!==s.value){const o=this._fromType(this.getValueAtTime(t.time)),a=(this._fromType(this.getValueAtTime(s.time))-o)/(s.time-t.time),c=Math.sqrt(Math.pow(o,2)-2*a*(t.ticks-e)),l=(-o+c)/a,u=(-o-c)/a;return(l>0?l:u)+t.time}else return t?t.value===0?1/0:t.time+(e-t.ticks)/t.value:e/this._initialValue}ticksToTime(e,t){return this.getDurationOfTicks(e,t)}timeToTicks(e,t){const s=this.toSeconds(t),o=this.toSeconds(e),r=this.getTicksAtTime(s);return this.getTicksAtTime(s+o)-r}_fromType(e){return this.units==="bpm"&&this.multiplier?1/(60/e/this.multiplier):super._fromType(e)}_toType(e){return this.units==="bpm"&&this.multiplier?e/this.multiplier*60:super._toType(e)}get multiplier(){return this._multiplier}set multiplier(e){const t=this.value;this._multiplier=e,this.cancelScheduledValues(0),this.setValueAtTime(t,0)}}class TickSignal extends Signal{constructor(){super(optionsFromArguments(TickSignal.getDefaults(),arguments,["value"])),this.name="TickSignal";const e=optionsFromArguments(TickSignal.getDefaults(),arguments,["value"]);this.input=this._param=new TickParam({context:this.context,convert:e.convert,multiplier:e.multiplier,param:this._constantSource.offset,units:e.units,value:e.value})}static getDefaults(){return Object.assign(Signal.getDefaults(),{multiplier:1,units:"hertz",value:1})}ticksToTime(e,t){return this._param.ticksToTime(e,t)}timeToTicks(e,t){return this._param.timeToTicks(e,t)}getTimeOfTick(e){return this._param.getTimeOfTick(e)}getDurationOfTicks(e,t){return this._param.getDurationOfTicks(e,t)}getTicksAtTime(e){return this._param.getTicksAtTime(e)}get multiplier(){return this._param.multiplier}set multiplier(e){this._param.multiplier=e}dispose(){return super.dispose(),this._param.dispose(),this}}class TickSource extends ToneWithContext{constructor(){super(optionsFromArguments(TickSource.getDefaults(),arguments,["frequency"])),this.name="TickSource",this._state=new StateTimeline,this._tickOffset=new Timeline;const e=optionsFromArguments(TickSource.getDefaults(),arguments,["frequency"]);this.frequency=new TickSignal({context:this.context,units:e.units,value:e.frequency}),readOnly(this,"frequency"),this._state.setStateAtTime("stopped",0),this.setTicksAtTime(0,0)}static getDefaults(){return Object.assign({frequency:1,units:"hertz"},ToneWithContext.getDefaults())}get state(){return this.getStateAtTime(this.now())}start(e,t){const s=this.toSeconds(e);return this._state.getValueAtTime(s)!=="started"&&(this._state.setStateAtTime("started",s),isDefined(t)&&this.setTicksAtTime(t,s)),this}stop(e){const t=this.toSeconds(e);if(this._state.getValueAtTime(t)==="stopped"){const s=this._state.get(t);s&&s.time>0&&(this._tickOffset.cancel(s.time),this._state.cancel(s.time))}return this._state.cancel(t),this._state.setStateAtTime("stopped",t),this.setTicksAtTime(0,t),this}pause(e){const t=this.toSeconds(e);return this._state.getValueAtTime(t)==="started"&&this._state.setStateAtTime("paused",t),this}cancel(e){return e=this.toSeconds(e),this._state.cancel(e),this._tickOffset.cancel(e),this}getTicksAtTime(e){const t=this.toSeconds(e),s=this._state.getLastState("stopped",t),o={state:"paused",time:t};this._state.add(o);let r=s,a=0;return this._state.forEachBetween(s.time,t+this.sampleTime,c=>{let l=r.time;const u=this._tickOffset.get(c.time);u&&u.time>=r.time&&(a=u.ticks,l=u.time),r.state==="started"&&c.state!=="started"&&(a+=this.frequency.getTicksAtTime(c.time)-this.frequency.getTicksAtTime(l)),r=c}),this._state.remove(o),a}get ticks(){return this.getTicksAtTime(this.now())}set ticks(e){this.setTicksAtTime(e,this.now())}get seconds(){return this.getSecondsAtTime(this.now())}set seconds(e){const t=this.now(),s=this.frequency.timeToTicks(e,t);this.setTicksAtTime(s,t)}getSecondsAtTime(e){e=this.toSeconds(e);const t=this._state.getLastState("stopped",e),s={state:"paused",time:e};this._state.add(s);let o=t,r=0;return this._state.forEachBetween(t.time,e+this.sampleTime,a=>{let c=o.time;const l=this._tickOffset.get(a.time);l&&l.time>=o.time&&(r=l.seconds,c=l.time),o.state==="started"&&a.state!=="started"&&(r+=a.time-c),o=a}),this._state.remove(s),r}setTicksAtTime(e,t){return t=this.toSeconds(t),this._tickOffset.cancel(t),this._tickOffset.add({seconds:this.frequency.getDurationOfTicks(e,t),ticks:e,time:t}),this}getStateAtTime(e){return e=this.toSeconds(e),this._state.getValueAtTime(e)}getTimeOfTick(e,t=this.now()){const s=this._tickOffset.get(t),o=this._state.get(t),r=Math.max(s.time,o.time),a=this.frequency.getTicksAtTime(r)+e-s.ticks;return this.frequency.getTimeOfTick(a)}forEachTickBetween(e,t,s){let o=this._state.get(e);this._state.forEachBetween(e,t,a=>{o&&o.state==="started"&&a.state!=="started"&&this.forEachTickBetween(Math.max(o.time,e),a.time-this.sampleTime,s),o=a});let r=null;if(o&&o.state==="started"){const a=Math.max(o.time,e),c=this.frequency.getTicksAtTime(a),l=this.frequency.getTicksAtTime(o.time),u=c-l;let d=Math.ceil(u)-u;d=EQ(d,1)?0:d;let f=this.frequency.getTimeOfTick(c+d);for(;f<t;){try{s(f,Math.round(this.getTicksAtTime(f)))}catch(m){r=m;break}f+=this.frequency.getDurationOfTicks(1,f)}}if(r)throw r;return this}dispose(){return super.dispose(),this._state.dispose(),this._tickOffset.dispose(),this.frequency.dispose(),this}}class Clock extends ToneWithContext{constructor(){super(optionsFromArguments(Clock.getDefaults(),arguments,["callback","frequency"])),this.name="Clock",this.callback=noOp,this._lastUpdate=0,this._state=new StateTimeline("stopped"),this._boundLoop=this._loop.bind(this);const e=optionsFromArguments(Clock.getDefaults(),arguments,["callback","frequency"]);this.callback=e.callback,this._tickSource=new TickSource({context:this.context,frequency:e.frequency,units:e.units}),this._lastUpdate=0,this.frequency=this._tickSource.frequency,readOnly(this,"frequency"),this._state.setStateAtTime("stopped",0),this.context.on("tick",this._boundLoop)}static getDefaults(){return Object.assign(ToneWithContext.getDefaults(),{callback:noOp,frequency:1,units:"hertz"})}get state(){return this._state.getValueAtTime(this.now())}start(e,t){assertContextRunning(this.context);const s=this.toSeconds(e);return this.log("start",s),this._state.getValueAtTime(s)!=="started"&&(this._state.setStateAtTime("started",s),this._tickSource.start(s,t),s<this._lastUpdate&&this.emit("start",s,t)),this}stop(e){const t=this.toSeconds(e);return this.log("stop",t),this._state.cancel(t),this._state.setStateAtTime("stopped",t),this._tickSource.stop(t),t<this._lastUpdate&&this.emit("stop",t),this}pause(e){const t=this.toSeconds(e);return this._state.getValueAtTime(t)==="started"&&(this._state.setStateAtTime("paused",t),this._tickSource.pause(t),t<this._lastUpdate&&this.emit("pause",t)),this}get ticks(){return Math.ceil(this.getTicksAtTime(this.now()))}set ticks(e){this._tickSource.ticks=e}get seconds(){return this._tickSource.seconds}set seconds(e){this._tickSource.seconds=e}getSecondsAtTime(e){return this._tickSource.getSecondsAtTime(e)}setTicksAtTime(e,t){return this._tickSource.setTicksAtTime(e,t),this}getTimeOfTick(e,t=this.now()){return this._tickSource.getTimeOfTick(e,t)}getTicksAtTime(e){return this._tickSource.getTicksAtTime(e)}nextTickTime(e,t){const s=this.toSeconds(t),o=this.getTicksAtTime(s);return this._tickSource.getTimeOfTick(o+e,s)}_loop(){const e=this._lastUpdate,t=this.now();this._lastUpdate=t,this.log("loop",e,t),e!==t&&(this._state.forEachBetween(e,t,s=>{switch(s.state){case"started":const o=this._tickSource.getTicksAtTime(s.time);this.emit("start",s.time,o);break;case"stopped":s.time!==0&&this.emit("stop",s.time);break;case"paused":this.emit("pause",s.time);break}}),this._tickSource.forEachTickBetween(e,t,(s,o)=>{this.callback(s,o)}))}getStateAtTime(e){const t=this.toSeconds(e);return this._state.getValueAtTime(t)}dispose(){return super.dispose(),this.context.off("tick",this._boundLoop),this._tickSource.dispose(),this._state.dispose(),this}}Emitter.mixin(Clock);class Delay extends ToneAudioNode{constructor(){super(optionsFromArguments(Delay.getDefaults(),arguments,["delayTime","maxDelay"])),this.name="Delay";const e=optionsFromArguments(Delay.getDefaults(),arguments,["delayTime","maxDelay"]),t=this.toSeconds(e.maxDelay);this._maxDelay=Math.max(t,this.toSeconds(e.delayTime)),this._delayNode=this.input=this.output=this.context.createDelay(t),this.delayTime=new Param({context:this.context,param:this._delayNode.delayTime,units:"time",value:e.delayTime,minValue:0,maxValue:this.maxDelay}),readOnly(this,"delayTime")}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{delayTime:0,maxDelay:1})}get maxDelay(){return this._maxDelay}dispose(){return super.dispose(),this._delayNode.disconnect(),this.delayTime.dispose(),this}}function Offline(n,e,t=2,s=getContext().sampleRate){return __awaiter(this,void 0,void 0,function*(){const o=getContext(),r=new OfflineContext(t,e,s);setContext(r),yield n(r);const a=r.render();setContext(o);const c=yield a;return new ToneAudioBuffer(c)})}class ToneAudioBuffers extends Tone$1{constructor(){super(),this.name="ToneAudioBuffers",this._buffers=new Map,this._loadingCount=0;const e=optionsFromArguments(ToneAudioBuffers.getDefaults(),arguments,["urls","onload","baseUrl"],"urls");this.baseUrl=e.baseUrl,Object.keys(e.urls).forEach(t=>{this._loadingCount++;const s=e.urls[t];this.add(t,s,this._bufferLoaded.bind(this,e.onload),e.onerror)})}static getDefaults(){return{baseUrl:"",onerror:noOp,onload:noOp,urls:{}}}has(e){return this._buffers.has(e.toString())}get(e){return assert(this.has(e),`ToneAudioBuffers has no buffer named: ${e}`),this._buffers.get(e.toString())}_bufferLoaded(e){this._loadingCount--,this._loadingCount===0&&e&&e()}get loaded(){return Array.from(this._buffers).every(([e,t])=>t.loaded)}add(e,t,s=noOp,o=noOp){return isString(t)?this._buffers.set(e.toString(),new ToneAudioBuffer(this.baseUrl+t,s,o)):this._buffers.set(e.toString(),new ToneAudioBuffer(t,s,o)),this}dispose(){return super.dispose(),this._buffers.forEach(e=>e.dispose()),this._buffers.clear(),this}}class MidiClass extends FrequencyClass{constructor(){super(...arguments),this.name="MidiClass",this.defaultUnits="midi"}_frequencyToUnits(e){return ftom(super._frequencyToUnits(e))}_ticksToUnits(e){return ftom(super._ticksToUnits(e))}_beatsToUnits(e){return ftom(super._beatsToUnits(e))}_secondsToUnits(e){return ftom(super._secondsToUnits(e))}toMidi(){return this.valueOf()}toFrequency(){return mtof(this.toMidi())}transpose(e){return new MidiClass(this.context,this.toMidi()+e)}}function Midi(n,e){return new MidiClass(getContext(),n,e)}class TicksClass extends TransportTimeClass{constructor(){super(...arguments),this.name="Ticks",this.defaultUnits="i"}_now(){return this.context.transport.ticks}_beatsToUnits(e){return this._getPPQ()*e}_secondsToUnits(e){return Math.floor(e/(60/this._getBpm())*this._getPPQ())}_ticksToUnits(e){return e}toTicks(){return this.valueOf()}toSeconds(){return this.valueOf()/this._getPPQ()*(60/this._getBpm())}}function Ticks(n,e){return new TicksClass(getContext(),n,e)}let Draw$1=class extends ToneWithContext{constructor(){super(...arguments),this.name="Draw",this.expiration=.25,this.anticipation=.008,this._events=new Timeline,this._boundDrawLoop=this._drawLoop.bind(this),this._animationFrame=-1}schedule(e,t){return this._events.add({callback:e,time:this.toSeconds(t)}),this._events.length===1&&(this._animationFrame=requestAnimationFrame(this._boundDrawLoop)),this}cancel(e){return this._events.cancel(this.toSeconds(e)),this}_drawLoop(){const e=this.context.currentTime;for(;this._events.length&&this._events.peek().time-this.anticipation<=e;){const t=this._events.shift();t&&e-t.time<=this.expiration&&t.callback()}this._events.length>0&&(this._animationFrame=requestAnimationFrame(this._boundDrawLoop))}dispose(){return super.dispose(),this._events.dispose(),cancelAnimationFrame(this._animationFrame),this}};onContextInit(n=>{n.draw=new Draw$1({context:n})});onContextClose(n=>{n.draw.dispose()});class IntervalTimeline extends Tone$1{constructor(){super(...arguments),this.name="IntervalTimeline",this._root=null,this._length=0}add(e){assert(isDefined(e.time),"Events must have a time property"),assert(isDefined(e.duration),"Events must have a duration parameter"),e.time=e.time.valueOf();let t=new IntervalNode(e.time,e.time+e.duration,e);for(this._root===null?this._root=t:this._root.insert(t),this._length++;t!==null;)t.updateHeight(),t.updateMax(),this._rebalance(t),t=t.parent;return this}remove(e){if(this._root!==null){const t=[];this._root.search(e.time,t);for(const s of t)if(s.event===e){this._removeNode(s),this._length--;break}}return this}get length(){return this._length}cancel(e){return this.forEachFrom(e,t=>this.remove(t)),this}_setRoot(e){this._root=e,this._root!==null&&(this._root.parent=null)}_replaceNodeInParent(e,t){e.parent!==null?(e.isLeftChild()?e.parent.left=t:e.parent.right=t,this._rebalance(e.parent)):this._setRoot(t)}_removeNode(e){if(e.left===null&&e.right===null)this._replaceNodeInParent(e,null);else if(e.right===null)this._replaceNodeInParent(e,e.left);else if(e.left===null)this._replaceNodeInParent(e,e.right);else{const t=e.getBalance();let s,o=null;if(t>0)if(e.left.right===null)s=e.left,s.right=e.right,o=s;else{for(s=e.left.right;s.right!==null;)s=s.right;s.parent&&(s.parent.right=s.left,o=s.parent,s.left=e.left,s.right=e.right)}else if(e.right.left===null)s=e.right,s.left=e.left,o=s;else{for(s=e.right.left;s.left!==null;)s=s.left;s.parent&&(s.parent.left=s.right,o=s.parent,s.left=e.left,s.right=e.right)}e.parent!==null?e.isLeftChild()?e.parent.left=s:e.parent.right=s:this._setRoot(s),o&&this._rebalance(o)}e.dispose()}_rotateLeft(e){const t=e.parent,s=e.isLeftChild(),o=e.right;o&&(e.right=o.left,o.left=e),t!==null?s?t.left=o:t.right=o:this._setRoot(o)}_rotateRight(e){const t=e.parent,s=e.isLeftChild(),o=e.left;o&&(e.left=o.right,o.right=e),t!==null?s?t.left=o:t.right=o:this._setRoot(o)}_rebalance(e){const t=e.getBalance();t>1&&e.left?e.left.getBalance()<0?this._rotateLeft(e.left):this._rotateRight(e):t<-1&&e.right&&(e.right.getBalance()>0?this._rotateRight(e.right):this._rotateLeft(e))}get(e){if(this._root!==null){const t=[];if(this._root.search(e,t),t.length>0){let s=t[0];for(let o=1;o<t.length;o++)t[o].low>s.low&&(s=t[o]);return s.event}}return null}forEach(e){if(this._root!==null){const t=[];this._root.traverse(s=>t.push(s)),t.forEach(s=>{s.event&&e(s.event)})}return this}forEachAtTime(e,t){if(this._root!==null){const s=[];this._root.search(e,s),s.forEach(o=>{o.event&&t(o.event)})}return this}forEachFrom(e,t){if(this._root!==null){const s=[];this._root.searchAfter(e,s),s.forEach(o=>{o.event&&t(o.event)})}return this}dispose(){return super.dispose(),this._root!==null&&this._root.traverse(e=>e.dispose()),this._root=null,this}}class IntervalNode{constructor(e,t,s){this._left=null,this._right=null,this.parent=null,this.height=0,this.event=s,this.low=e,this.high=t,this.max=this.high}insert(e){e.low<=this.low?this.left===null?this.left=e:this.left.insert(e):this.right===null?this.right=e:this.right.insert(e)}search(e,t){e>this.max||(this.left!==null&&this.left.search(e,t),this.low<=e&&this.high>e&&t.push(this),!(this.low>e)&&this.right!==null&&this.right.search(e,t))}searchAfter(e,t){this.low>=e&&(t.push(this),this.left!==null&&this.left.searchAfter(e,t)),this.right!==null&&this.right.searchAfter(e,t)}traverse(e){e(this),this.left!==null&&this.left.traverse(e),this.right!==null&&this.right.traverse(e)}updateHeight(){this.left!==null&&this.right!==null?this.height=Math.max(this.left.height,this.right.height)+1:this.right!==null?this.height=this.right.height+1:this.left!==null?this.height=this.left.height+1:this.height=0}updateMax(){this.max=this.high,this.left!==null&&(this.max=Math.max(this.max,this.left.max)),this.right!==null&&(this.max=Math.max(this.max,this.right.max))}getBalance(){let e=0;return this.left!==null&&this.right!==null?e=this.left.height-this.right.height:this.left!==null?e=this.left.height+1:this.right!==null&&(e=-(this.right.height+1)),e}isLeftChild(){return this.parent!==null&&this.parent.left===this}get left(){return this._left}set left(e){this._left=e,e!==null&&(e.parent=this),this.updateHeight(),this.updateMax()}get right(){return this._right}set right(e){this._right=e,e!==null&&(e.parent=this),this.updateHeight(),this.updateMax()}dispose(){this.parent=null,this._left=null,this._right=null,this.event=null}}const Units=Object.freeze(Object.defineProperty({__proto__:null},Symbol.toStringTag,{value:"Module"}));class Volume extends ToneAudioNode{constructor(){super(optionsFromArguments(Volume.getDefaults(),arguments,["volume"])),this.name="Volume";const e=optionsFromArguments(Volume.getDefaults(),arguments,["volume"]);this.input=this.output=new Gain({context:this.context,gain:e.volume,units:"decibels"}),this.volume=this.output.gain,readOnly(this,"volume"),this._unmutedVolume=e.volume,this.mute=e.mute}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{mute:!1,volume:0})}get mute(){return this.volume.value===-1/0}set mute(e){!this.mute&&e?(this._unmutedVolume=this.volume.value,this.volume.value=-1/0):this.mute&&!e&&(this.volume.value=this._unmutedVolume)}dispose(){return super.dispose(),this.input.dispose(),this.volume.dispose(),this}}let Destination$1=class Se extends ToneAudioNode{constructor(){super(optionsFromArguments(Se.getDefaults(),arguments)),this.name="Destination",this.input=new Volume({context:this.context}),this.output=new Gain({context:this.context}),this.volume=this.input.volume;const e=optionsFromArguments(Se.getDefaults(),arguments);connectSeries(this.input,this.output,this.context.rawContext.destination),this.mute=e.mute,this._internalChannels=[this.input,this.context.rawContext.destination,this.output]}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{mute:!1,volume:0})}get mute(){return this.input.mute}set mute(e){this.input.mute=e}chain(...e){return this.input.disconnect(),e.unshift(this.input),e.push(this.output),connectSeries(...e),this}get maxChannelCount(){return this.context.rawContext.destination.maxChannelCount}dispose(){return super.dispose(),this.volume.dispose(),this}};onContextInit(n=>{n.destination=new Destination$1({context:n})});onContextClose(n=>{n.destination.dispose()});class TimelineValue extends Tone$1{constructor(e){super(),this.name="TimelineValue",this._timeline=new Timeline({memory:10}),this._initialValue=e}set(e,t){return this._timeline.add({value:e,time:t}),this}get(e){const t=this._timeline.get(e);return t?t.value:this._initialValue}}class TransportEvent{constructor(e,t){this.id=TransportEvent._eventId++;const s=Object.assign(TransportEvent.getDefaults(),t);this.transport=e,this.callback=s.callback,this._once=s.once,this.time=s.time}static getDefaults(){return{callback:noOp,once:!1,time:0}}invoke(e){this.callback&&(this.callback(e),this._once&&this.transport.clear(this.id))}dispose(){return this.callback=void 0,this}}TransportEvent._eventId=0;class TransportRepeatEvent extends TransportEvent{constructor(e,t){super(e,t),this._currentId=-1,this._nextId=-1,this._nextTick=this.time,this._boundRestart=this._restart.bind(this);const s=Object.assign(TransportRepeatEvent.getDefaults(),t);this.duration=new TicksClass(e.context,s.duration).valueOf(),this._interval=new TicksClass(e.context,s.interval).valueOf(),this._nextTick=s.time,this.transport.on("start",this._boundRestart),this.transport.on("loopStart",this._boundRestart),this.context=this.transport.context,this._restart()}static getDefaults(){return Object.assign({},TransportEvent.getDefaults(),{duration:1/0,interval:1,once:!1})}invoke(e){this._createEvents(e),super.invoke(e)}_createEvents(e){const t=this.transport.getTicksAtTime(e);t>=this.time&&t>=this._nextTick&&this._nextTick+this._interval<this.time+this.duration&&(this._nextTick+=this._interval,this._currentId=this._nextId,this._nextId=this.transport.scheduleOnce(this.invoke.bind(this),new TicksClass(this.context,this._nextTick).toSeconds()))}_restart(e){this.transport.clear(this._currentId),this.transport.clear(this._nextId),this._nextTick=this.time;const t=this.transport.getTicksAtTime(e);t>this.time&&(this._nextTick=this.time+Math.ceil((t-this.time)/this._interval)*this._interval),this._currentId=this.transport.scheduleOnce(this.invoke.bind(this),new TicksClass(this.context,this._nextTick).toSeconds()),this._nextTick+=this._interval,this._nextId=this.transport.scheduleOnce(this.invoke.bind(this),new TicksClass(this.context,this._nextTick).toSeconds())}dispose(){return super.dispose(),this.transport.clear(this._currentId),this.transport.clear(this._nextId),this.transport.off("start",this._boundRestart),this.transport.off("loopStart",this._boundRestart),this}}let Transport$1=class Te extends ToneWithContext{constructor(){super(optionsFromArguments(Te.getDefaults(),arguments)),this.name="Transport",this._loop=new TimelineValue(!1),this._loopStart=0,this._loopEnd=0,this._scheduledEvents={},this._timeline=new Timeline,this._repeatedEvents=new IntervalTimeline,this._syncedSignals=[],this._swingAmount=0;const e=optionsFromArguments(Te.getDefaults(),arguments);this._ppq=e.ppq,this._clock=new Clock({callback:this._processTick.bind(this),context:this.context,frequency:0,units:"bpm"}),this._bindClockEvents(),this.bpm=this._clock.frequency,this._clock.frequency.multiplier=e.ppq,this.bpm.setValueAtTime(e.bpm,0),readOnly(this,"bpm"),this._timeSignature=e.timeSignature,this._swingTicks=e.ppq/2}static getDefaults(){return Object.assign(ToneWithContext.getDefaults(),{bpm:120,loopEnd:"4m",loopStart:0,ppq:192,swing:0,swingSubdivision:"8n",timeSignature:4})}_processTick(e,t){if(this._loop.get(e)&&t>=this._loopEnd&&(this.emit("loopEnd",e),this._clock.setTicksAtTime(this._loopStart,e),t=this._loopStart,this.emit("loopStart",e,this._clock.getSecondsAtTime(e)),this.emit("loop",e)),this._swingAmount>0&&t%this._ppq!==0&&t%(this._swingTicks*2)!==0){const s=t%(this._swingTicks*2)/(this._swingTicks*2),o=Math.sin(s*Math.PI)*this._swingAmount;e+=new TicksClass(this.context,this._swingTicks*2/3).toSeconds()*o}this._timeline.forEachAtTime(t,s=>s.invoke(e))}schedule(e,t){const s=new TransportEvent(this,{callback:e,time:new TransportTimeClass(this.context,t).toTicks()});return this._addEvent(s,this._timeline)}scheduleRepeat(e,t,s,o=1/0){const r=new TransportRepeatEvent(this,{callback:e,duration:new TimeClass(this.context,o).toTicks(),interval:new TimeClass(this.context,t).toTicks(),time:new TransportTimeClass(this.context,s).toTicks()});return this._addEvent(r,this._repeatedEvents)}scheduleOnce(e,t){const s=new TransportEvent(this,{callback:e,once:!0,time:new TransportTimeClass(this.context,t).toTicks()});return this._addEvent(s,this._timeline)}clear(e){if(this._scheduledEvents.hasOwnProperty(e)){const t=this._scheduledEvents[e.toString()];t.timeline.remove(t.event),t.event.dispose(),delete this._scheduledEvents[e.toString()]}return this}_addEvent(e,t){return this._scheduledEvents[e.id.toString()]={event:e,timeline:t},t.add(e),e.id}cancel(e=0){const t=this.toTicks(e);return this._timeline.forEachFrom(t,s=>this.clear(s.id)),this._repeatedEvents.forEachFrom(t,s=>this.clear(s.id)),this}_bindClockEvents(){this._clock.on("start",(e,t)=>{t=new TicksClass(this.context,t).toSeconds(),this.emit("start",e,t)}),this._clock.on("stop",e=>{this.emit("stop",e)}),this._clock.on("pause",e=>{this.emit("pause",e)})}get state(){return this._clock.getStateAtTime(this.now())}start(e,t){let s;return isDefined(t)&&(s=this.toTicks(t)),this._clock.start(e,s),this}stop(e){return this._clock.stop(e),this}pause(e){return this._clock.pause(e),this}toggle(e){return e=this.toSeconds(e),this._clock.getStateAtTime(e)!=="started"?this.start(e):this.stop(e),this}get timeSignature(){return this._timeSignature}set timeSignature(e){isArray(e)&&(e=e[0]/e[1]*4),this._timeSignature=e}get loopStart(){return new TimeClass(this.context,this._loopStart,"i").toSeconds()}set loopStart(e){this._loopStart=this.toTicks(e)}get loopEnd(){return new TimeClass(this.context,this._loopEnd,"i").toSeconds()}set loopEnd(e){this._loopEnd=this.toTicks(e)}get loop(){return this._loop.get(this.now())}set loop(e){this._loop.set(e,this.now())}setLoopPoints(e,t){return this.loopStart=e,this.loopEnd=t,this}get swing(){return this._swingAmount}set swing(e){this._swingAmount=e}get swingSubdivision(){return new TicksClass(this.context,this._swingTicks).toNotation()}set swingSubdivision(e){this._swingTicks=this.toTicks(e)}get position(){const e=this.now(),t=this._clock.getTicksAtTime(e);return new TicksClass(this.context,t).toBarsBeatsSixteenths()}set position(e){const t=this.toTicks(e);this.ticks=t}get seconds(){return this._clock.seconds}set seconds(e){const t=this.now(),s=this._clock.frequency.timeToTicks(e,t);this.ticks=s}get progress(){if(this.loop){const e=this.now();return(this._clock.getTicksAtTime(e)-this._loopStart)/(this._loopEnd-this._loopStart)}else return 0}get ticks(){return this._clock.ticks}set ticks(e){if(this._clock.ticks!==e){const t=this.now();if(this.state==="started"){const s=this._clock.getTicksAtTime(t),o=this._clock.frequency.getDurationOfTicks(Math.ceil(s)-s,t),r=t+o;this.emit("stop",r),this._clock.setTicksAtTime(e,r),this.emit("start",r,this._clock.getSecondsAtTime(r))}else this._clock.setTicksAtTime(e,t)}}getTicksAtTime(e){return Math.round(this._clock.getTicksAtTime(e))}getSecondsAtTime(e){return this._clock.getSecondsAtTime(e)}get PPQ(){return this._clock.frequency.multiplier}set PPQ(e){this._clock.frequency.multiplier=e}nextSubdivision(e){if(e=this.toTicks(e),this.state!=="started")return 0;{const t=this.now(),s=this.getTicksAtTime(t),o=e-s%e;return this._clock.nextTickTime(o,t)}}syncSignal(e,t){if(!t){const o=this.now();if(e.getValueAtTime(o)!==0){const a=1/(60/this.bpm.getValueAtTime(o)/this.PPQ);t=e.getValueAtTime(o)/a}else t=0}const s=new Gain(t);return this.bpm.connect(s),s.connect(e._param),this._syncedSignals.push({initial:e.value,ratio:s,signal:e}),e.value=0,this}unsyncSignal(e){for(let t=this._syncedSignals.length-1;t>=0;t--){const s=this._syncedSignals[t];s.signal===e&&(s.ratio.dispose(),s.signal.value=s.initial,this._syncedSignals.splice(t,1))}return this}dispose(){return super.dispose(),this._clock.dispose(),writable(this,"bpm"),this._timeline.dispose(),this._repeatedEvents.dispose(),this}};Emitter.mixin(Transport$1);onContextInit(n=>{n.transport=new Transport$1({context:n})});onContextClose(n=>{n.transport.dispose()});class Source extends ToneAudioNode{constructor(e){super(e),this.input=void 0,this._state=new StateTimeline("stopped"),this._synced=!1,this._scheduled=[],this._syncedStart=noOp,this._syncedStop=noOp,this._state.memory=100,this._state.increasing=!0,this._volume=this.output=new Volume({context:this.context,mute:e.mute,volume:e.volume}),this.volume=this._volume.volume,readOnly(this,"volume"),this.onstop=e.onstop}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{mute:!1,onstop:noOp,volume:0})}get state(){return this._synced?this.context.transport.state==="started"?this._state.getValueAtTime(this.context.transport.seconds):"stopped":this._state.getValueAtTime(this.now())}get mute(){return this._volume.mute}set mute(e){this._volume.mute=e}_clampToCurrentTime(e){return this._synced?e:Math.max(e,this.context.currentTime)}start(e,t,s){let o=isUndef(e)&&this._synced?this.context.transport.seconds:this.toSeconds(e);if(o=this._clampToCurrentTime(o),!this._synced&&this._state.getValueAtTime(o)==="started")assert(GT(o,this._state.get(o).time),"Start time must be strictly greater than previous start time"),this._state.cancel(o),this._state.setStateAtTime("started",o),this.log("restart",o),this.restart(o,t,s);else if(this.log("start",o),this._state.setStateAtTime("started",o),this._synced){const r=this._state.get(o);r&&(r.offset=this.toSeconds(defaultArg(t,0)),r.duration=s?this.toSeconds(s):void 0);const a=this.context.transport.schedule(c=>{this._start(c,t,s)},o);this._scheduled.push(a),this.context.transport.state==="started"&&this.context.transport.getSecondsAtTime(this.immediate())>o&&this._syncedStart(this.now(),this.context.transport.seconds)}else assertContextRunning(this.context),this._start(o,t,s);return this}stop(e){let t=isUndef(e)&&this._synced?this.context.transport.seconds:this.toSeconds(e);if(t=this._clampToCurrentTime(t),this._state.getValueAtTime(t)==="started"||isDefined(this._state.getNextState("started",t))){if(this.log("stop",t),!this._synced)this._stop(t);else{const s=this.context.transport.schedule(this._stop.bind(this),t);this._scheduled.push(s)}this._state.cancel(t),this._state.setStateAtTime("stopped",t)}return this}restart(e,t,s){return e=this.toSeconds(e),this._state.getValueAtTime(e)==="started"&&(this._state.cancel(e),this._restart(e,t,s)),this}sync(){return this._synced||(this._synced=!0,this._syncedStart=(e,t)=>{if(t>0){const s=this._state.get(t);if(s&&s.state==="started"&&s.time!==t){const o=t-this.toSeconds(s.time);let r;s.duration&&(r=this.toSeconds(s.duration)-o),this._start(e,this.toSeconds(s.offset)+o,r)}}},this._syncedStop=e=>{const t=this.context.transport.getSecondsAtTime(Math.max(e-this.sampleTime,0));this._state.getValueAtTime(t)==="started"&&this._stop(e)},this.context.transport.on("start",this._syncedStart),this.context.transport.on("loopStart",this._syncedStart),this.context.transport.on("stop",this._syncedStop),this.context.transport.on("pause",this._syncedStop),this.context.transport.on("loopEnd",this._syncedStop)),this}unsync(){return this._synced&&(this.context.transport.off("stop",this._syncedStop),this.context.transport.off("pause",this._syncedStop),this.context.transport.off("loopEnd",this._syncedStop),this.context.transport.off("start",this._syncedStart),this.context.transport.off("loopStart",this._syncedStart)),this._synced=!1,this._scheduled.forEach(e=>this.context.transport.clear(e)),this._scheduled=[],this._state.cancel(0),this._stop(0),this}dispose(){return super.dispose(),this.onstop=noOp,this.unsync(),this._volume.dispose(),this._state.dispose(),this}}class ToneBufferSource extends OneShotSource{constructor(){super(optionsFromArguments(ToneBufferSource.getDefaults(),arguments,["url","onload"])),this.name="ToneBufferSource",this._source=this.context.createBufferSource(),this._internalChannels=[this._source],this._sourceStarted=!1,this._sourceStopped=!1;const e=optionsFromArguments(ToneBufferSource.getDefaults(),arguments,["url","onload"]);connect(this._source,this._gainNode),this._source.onended=()=>this._stopSource(),this.playbackRate=new Param({context:this.context,param:this._source.playbackRate,units:"positive",value:e.playbackRate}),this.loop=e.loop,this.loopStart=e.loopStart,this.loopEnd=e.loopEnd,this._buffer=new ToneAudioBuffer(e.url,e.onload,e.onerror),this._internalChannels.push(this._source)}static getDefaults(){return Object.assign(OneShotSource.getDefaults(),{url:new ToneAudioBuffer,loop:!1,loopEnd:0,loopStart:0,onload:noOp,onerror:noOp,playbackRate:1})}get fadeIn(){return this._fadeIn}set fadeIn(e){this._fadeIn=e}get fadeOut(){return this._fadeOut}set fadeOut(e){this._fadeOut=e}get curve(){return this._curve}set curve(e){this._curve=e}start(e,t,s,o=1){assert(this.buffer.loaded,"buffer is either not set or not loaded");const r=this.toSeconds(e);this._startGain(r,o),this.loop?t=defaultArg(t,this.loopStart):t=defaultArg(t,0);let a=Math.max(this.toSeconds(t),0);if(this.loop){const c=this.toSeconds(this.loopEnd)||this.buffer.duration,l=this.toSeconds(this.loopStart),u=c-l;GTE(a,c)&&(a=(a-l)%u+l),EQ(a,this.buffer.duration)&&(a=0)}if(this._source.buffer=this.buffer.get(),this._source.loopEnd=this.toSeconds(this.loopEnd)||this.buffer.duration,LT(a,this.buffer.duration)&&(this._sourceStarted=!0,this._source.start(r,a)),isDefined(s)){let c=this.toSeconds(s);c=Math.max(c,0),this.stop(r+c)}return this}_stopSource(e){!this._sourceStopped&&this._sourceStarted&&(this._sourceStopped=!0,this._source.stop(this.toSeconds(e)),this._onended())}get loopStart(){return this._source.loopStart}set loopStart(e){this._source.loopStart=this.toSeconds(e)}get loopEnd(){return this._source.loopEnd}set loopEnd(e){this._source.loopEnd=this.toSeconds(e)}get buffer(){return this._buffer}set buffer(e){this._buffer.set(e)}get loop(){return this._source.loop}set loop(e){this._source.loop=e,this._sourceStarted&&this.cancelStop()}dispose(){return super.dispose(),this._source.onended=null,this._source.disconnect(),this._buffer.dispose(),this.playbackRate.dispose(),this}}class Noise extends Source{constructor(){super(optionsFromArguments(Noise.getDefaults(),arguments,["type"])),this.name="Noise",this._source=null;const e=optionsFromArguments(Noise.getDefaults(),arguments,["type"]);this._playbackRate=e.playbackRate,this.type=e.type,this._fadeIn=e.fadeIn,this._fadeOut=e.fadeOut}static getDefaults(){return Object.assign(Source.getDefaults(),{fadeIn:0,fadeOut:0,playbackRate:1,type:"white"})}get type(){return this._type}set type(e){if(assert(e in _noiseBuffers,"Noise: invalid type: "+e),this._type!==e&&(this._type=e,this.state==="started")){const t=this.now();this._stop(t),this._start(t)}}get playbackRate(){return this._playbackRate}set playbackRate(e){this._playbackRate=e,this._source&&(this._source.playbackRate.value=e)}_start(e){const t=_noiseBuffers[this._type];this._source=new ToneBufferSource({url:t,context:this.context,fadeIn:this._fadeIn,fadeOut:this._fadeOut,loop:!0,onended:()=>this.onstop(this),playbackRate:this._playbackRate}).connect(this.output),this._source.start(this.toSeconds(e),Math.random()*(t.duration-.001))}_stop(e){this._source&&(this._source.stop(this.toSeconds(e)),this._source=null)}get fadeIn(){return this._fadeIn}set fadeIn(e){this._fadeIn=e,this._source&&(this._source.fadeIn=this._fadeIn)}get fadeOut(){return this._fadeOut}set fadeOut(e){this._fadeOut=e,this._source&&(this._source.fadeOut=this._fadeOut)}_restart(e){this._stop(e),this._start(e)}dispose(){return super.dispose(),this._source&&this._source.disconnect(),this}}const BUFFER_LENGTH=44100*5,NUM_CHANNELS=2,_noiseCache={brown:null,pink:null,white:null},_noiseBuffers={get brown(){if(!_noiseCache.brown){const n=[];for(let e=0;e<NUM_CHANNELS;e++){const t=new Float32Array(BUFFER_LENGTH);n[e]=t;let s=0;for(let o=0;o<BUFFER_LENGTH;o++){const r=Math.random()*2-1;t[o]=(s+.02*r)/1.02,s=t[o],t[o]*=3.5}}_noiseCache.brown=new ToneAudioBuffer().fromArray(n)}return _noiseCache.brown},get pink(){if(!_noiseCache.pink){const n=[];for(let e=0;e<NUM_CHANNELS;e++){const t=new Float32Array(BUFFER_LENGTH);n[e]=t;let s,o,r,a,c,l,u;s=o=r=a=c=l=u=0;for(let d=0;d<BUFFER_LENGTH;d++){const f=Math.random()*2-1;s=.99886*s+f*.0555179,o=.99332*o+f*.0750759,r=.969*r+f*.153852,a=.8665*a+f*.3104856,c=.55*c+f*.5329522,l=-.7616*l-f*.016898,t[d]=s+o+r+a+c+l+u+f*.5362,t[d]*=.11,u=f*.115926}}_noiseCache.pink=new ToneAudioBuffer().fromArray(n)}return _noiseCache.pink},get white(){if(!_noiseCache.white){const n=[];for(let e=0;e<NUM_CHANNELS;e++){const t=new Float32Array(BUFFER_LENGTH);n[e]=t;for(let s=0;s<BUFFER_LENGTH;s++)t[s]=Math.random()*2-1}_noiseCache.white=new ToneAudioBuffer().fromArray(n)}return _noiseCache.white}};class UserMedia extends ToneAudioNode{constructor(){super(optionsFromArguments(UserMedia.getDefaults(),arguments,["volume"])),this.name="UserMedia";const e=optionsFromArguments(UserMedia.getDefaults(),arguments,["volume"]);this._volume=this.output=new Volume({context:this.context,volume:e.volume}),this.volume=this._volume.volume,readOnly(this,"volume"),this.mute=e.mute}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{mute:!1,volume:0})}open(e){return __awaiter(this,void 0,void 0,function*(){assert(UserMedia.supported,"UserMedia is not supported"),this.state==="started"&&this.close();const t=yield UserMedia.enumerateDevices();isNumber(e)?this._device=t[e]:(this._device=t.find(r=>r.label===e||r.deviceId===e),!this._device&&t.length>0&&(this._device=t[0]),assert(isDefined(this._device),`No matching device ${e}`));const s={audio:{echoCancellation:!1,sampleRate:this.context.sampleRate,noiseSuppression:!1,mozNoiseSuppression:!1}};this._device&&(s.audio.deviceId=this._device.deviceId);const o=yield navigator.mediaDevices.getUserMedia(s);if(!this._stream){this._stream=o;const r=this.context.createMediaStreamSource(o);connect(r,this.output),this._mediaStream=r}return this})}close(){return this._stream&&this._mediaStream&&(this._stream.getAudioTracks().forEach(e=>{e.stop()}),this._stream=void 0,this._mediaStream.disconnect(),this._mediaStream=void 0),this._device=void 0,this}static enumerateDevices(){return __awaiter(this,void 0,void 0,function*(){return(yield navigator.mediaDevices.enumerateDevices()).filter(t=>t.kind==="audioinput")})}get state(){return this._stream&&this._stream.active?"started":"stopped"}get deviceId(){if(this._device)return this._device.deviceId}get groupId(){if(this._device)return this._device.groupId}get label(){if(this._device)return this._device.label}get mute(){return this._volume.mute}set mute(e){this._volume.mute=e}dispose(){return super.dispose(),this.close(),this._volume.dispose(),this.volume.dispose(),this}static get supported(){return isDefined(navigator.mediaDevices)&&isDefined(navigator.mediaDevices.getUserMedia)}}function generateWaveform(n,e){return __awaiter(this,void 0,void 0,function*(){const t=e/n.context.sampleRate,s=new OfflineContext(1,t,n.context.sampleRate);return new n.constructor(Object.assign(n.get(),{frequency:2/t,detune:0,context:s})).toDestination().start(0),(yield s.render()).getChannelData(0)})}class ToneOscillatorNode extends OneShotSource{constructor(){super(optionsFromArguments(ToneOscillatorNode.getDefaults(),arguments,["frequency","type"])),this.name="ToneOscillatorNode",this._oscillator=this.context.createOscillator(),this._internalChannels=[this._oscillator];const e=optionsFromArguments(ToneOscillatorNode.getDefaults(),arguments,["frequency","type"]);connect(this._oscillator,this._gainNode),this.type=e.type,this.frequency=new Param({context:this.context,param:this._oscillator.frequency,units:"frequency",value:e.frequency}),this.detune=new Param({context:this.context,param:this._oscillator.detune,units:"cents",value:e.detune}),readOnly(this,["frequency","detune"])}static getDefaults(){return Object.assign(OneShotSource.getDefaults(),{detune:0,frequency:440,type:"sine"})}start(e){const t=this.toSeconds(e);return this.log("start",t),this._startGain(t),this._oscillator.start(t),this}_stopSource(e){this._oscillator.stop(e)}setPeriodicWave(e){return this._oscillator.setPeriodicWave(e),this}get type(){return this._oscillator.type}set type(e){this._oscillator.type=e}dispose(){return super.dispose(),this.state==="started"&&this.stop(),this._oscillator.disconnect(),this.frequency.dispose(),this.detune.dispose(),this}}class Oscillator extends Source{constructor(){super(optionsFromArguments(Oscillator.getDefaults(),arguments,["frequency","type"])),this.name="Oscillator",this._oscillator=null;const e=optionsFromArguments(Oscillator.getDefaults(),arguments,["frequency","type"]);this.frequency=new Signal({context:this.context,units:"frequency",value:e.frequency}),readOnly(this,"frequency"),this.detune=new Signal({context:this.context,units:"cents",value:e.detune}),readOnly(this,"detune"),this._partials=e.partials,this._partialCount=e.partialCount,this._type=e.type,e.partialCount&&e.type!=="custom"&&(this._type=this.baseType+e.partialCount.toString()),this.phase=e.phase}static getDefaults(){return Object.assign(Source.getDefaults(),{detune:0,frequency:440,partialCount:0,partials:[],phase:0,type:"sine"})}_start(e){const t=this.toSeconds(e),s=new ToneOscillatorNode({context:this.context,onended:()=>this.onstop(this)});this._oscillator=s,this._wave?this._oscillator.setPeriodicWave(this._wave):this._oscillator.type=this._type,this._oscillator.connect(this.output),this.frequency.connect(this._oscillator.frequency),this.detune.connect(this._oscillator.detune),this._oscillator.start(t)}_stop(e){const t=this.toSeconds(e);this._oscillator&&this._oscillator.stop(t)}_restart(e){const t=this.toSeconds(e);return this.log("restart",t),this._oscillator&&this._oscillator.cancelStop(),this._state.cancel(t),this}syncFrequency(){return this.context.transport.syncSignal(this.frequency),this}unsyncFrequency(){return this.context.transport.unsyncSignal(this.frequency),this}_getCachedPeriodicWave(){if(this._type==="custom")return Oscillator._periodicWaveCache.find(t=>t.phase===this._phase&&deepEquals(t.partials,this._partials));{const e=Oscillator._periodicWaveCache.find(t=>t.type===this._type&&t.phase===this._phase);return this._partialCount=e?e.partialCount:this._partialCount,e}}get type(){return this._type}set type(e){this._type=e;const t=["sine","square","sawtooth","triangle"].indexOf(e)!==-1;if(this._phase===0&&t)this._wave=void 0,this._partialCount=0,this._oscillator!==null&&(this._oscillator.type=e);else{const s=this._getCachedPeriodicWave();if(isDefined(s)){const{partials:o,wave:r}=s;this._wave=r,this._partials=o,this._oscillator!==null&&this._oscillator.setPeriodicWave(this._wave)}else{const[o,r]=this._getRealImaginary(e,this._phase),a=this.context.createPeriodicWave(o,r);this._wave=a,this._oscillator!==null&&this._oscillator.setPeriodicWave(this._wave),Oscillator._periodicWaveCache.push({imag:r,partialCount:this._partialCount,partials:this._partials,phase:this._phase,real:o,type:this._type,wave:this._wave}),Oscillator._periodicWaveCache.length>100&&Oscillator._periodicWaveCache.shift()}}}get baseType(){return this._type.replace(this.partialCount.toString(),"")}set baseType(e){this.partialCount&&this._type!=="custom"&&e!=="custom"?this.type=e+this.partialCount:this.type=e}get partialCount(){return this._partialCount}set partialCount(e){assertRange(e,0);let t=this._type;const s=/^(sine|triangle|square|sawtooth)(\d+)$/.exec(this._type);if(s&&(t=s[1]),this._type!=="custom")e===0?this.type=t:this.type=t+e.toString();else{const o=new Float32Array(e);this._partials.forEach((r,a)=>o[a]=r),this._partials=Array.from(o),this.type=this._type}}_getRealImaginary(e,t){let o=2048;const r=new Float32Array(o),a=new Float32Array(o);let c=1;if(e==="custom"){if(c=this._partials.length+1,this._partialCount=this._partials.length,o=c,this._partials.length===0)return[r,a]}else{const l=/^(sine|triangle|square|sawtooth)(\d+)$/.exec(e);l?(c=parseInt(l[2],10)+1,this._partialCount=parseInt(l[2],10),e=l[1],c=Math.max(c,2),o=c):this._partialCount=0,this._partials=[]}for(let l=1;l<o;++l){const u=2/(l*Math.PI);let d;switch(e){case"sine":d=l<=c?1:0,this._partials[l-1]=d;break;case"square":d=l&1?2*u:0,this._partials[l-1]=d;break;case"sawtooth":d=u*(l&1?1:-1),this._partials[l-1]=d;break;case"triangle":l&1?d=2*(u*u)*(l-1>>1&1?-1:1):d=0,this._partials[l-1]=d;break;case"custom":d=this._partials[l-1];break;default:throw new TypeError("Oscillator: invalid type: "+e)}d!==0?(r[l]=-d*Math.sin(t*l),a[l]=d*Math.cos(t*l)):(r[l]=0,a[l]=0)}return[r,a]}_inverseFFT(e,t,s){let o=0;const r=e.length;for(let a=0;a<r;a++)o+=e[a]*Math.cos(a*s)+t[a]*Math.sin(a*s);return o}getInitialValue(){const[e,t]=this._getRealImaginary(this._type,0);let s=0;const o=Math.PI*2,r=32;for(let a=0;a<r;a++)s=Math.max(this._inverseFFT(e,t,a/r*o),s);return clamp(-this._inverseFFT(e,t,this._phase)/s,-1,1)}get partials(){return this._partials.slice(0,this.partialCount)}set partials(e){this._partials=e,this._partialCount=this._partials.length,e.length&&(this.type="custom")}get phase(){return this._phase*(180/Math.PI)}set phase(e){this._phase=e*Math.PI/180,this.type=this._type}asArray(e=1024){return __awaiter(this,void 0,void 0,function*(){return generateWaveform(this,e)})}dispose(){return super.dispose(),this._oscillator!==null&&this._oscillator.dispose(),this._wave=void 0,this.frequency.dispose(),this.detune.dispose(),this}}Oscillator._periodicWaveCache=[];class SignalOperator extends ToneAudioNode{constructor(){super(Object.assign(optionsFromArguments(SignalOperator.getDefaults(),arguments,["context"])))}connect(e,t=0,s=0){return connectSignal(this,e,t,s),this}}class WaveShaper extends SignalOperator{constructor(){super(Object.assign(optionsFromArguments(WaveShaper.getDefaults(),arguments,["mapping","length"]))),this.name="WaveShaper",this._shaper=this.context.createWaveShaper(),this.input=this._shaper,this.output=this._shaper;const e=optionsFromArguments(WaveShaper.getDefaults(),arguments,["mapping","length"]);isArray(e.mapping)||e.mapping instanceof Float32Array?this.curve=Float32Array.from(e.mapping):isFunction(e.mapping)&&this.setMap(e.mapping,e.length)}static getDefaults(){return Object.assign(Signal.getDefaults(),{length:1024})}setMap(e,t=1024){const s=new Float32Array(t);for(let o=0,r=t;o<r;o++){const a=o/(r-1)*2-1;s[o]=e(a,o)}return this.curve=s,this}get curve(){return this._shaper.curve}set curve(e){this._shaper.curve=e}get oversample(){return this._shaper.oversample}set oversample(e){const t=["none","2x","4x"].some(s=>s.includes(e));assert(t,"oversampling must be either 'none', '2x', or '4x'"),this._shaper.oversample=e}dispose(){return super.dispose(),this._shaper.disconnect(),this}}class AudioToGain extends SignalOperator{constructor(){super(...arguments),this.name="AudioToGain",this._norm=new WaveShaper({context:this.context,mapping:e=>(e+1)/2}),this.input=this._norm,this.output=this._norm}dispose(){return super.dispose(),this._norm.dispose(),this}}class Multiply extends Signal{constructor(){super(Object.assign(optionsFromArguments(Multiply.getDefaults(),arguments,["value"]))),this.name="Multiply",this.override=!1;const e=optionsFromArguments(Multiply.getDefaults(),arguments,["value"]);this._mult=this.input=this.output=new Gain({context:this.context,minValue:e.minValue,maxValue:e.maxValue}),this.factor=this._param=this._mult.gain,this.factor.setValueAtTime(e.value,0)}static getDefaults(){return Object.assign(Signal.getDefaults(),{value:0})}dispose(){return super.dispose(),this._mult.dispose(),this}}class AMOscillator extends Source{constructor(){super(optionsFromArguments(AMOscillator.getDefaults(),arguments,["frequency","type","modulationType"])),this.name="AMOscillator",this._modulationScale=new AudioToGain({context:this.context}),this._modulationNode=new Gain({context:this.context});const e=optionsFromArguments(AMOscillator.getDefaults(),arguments,["frequency","type","modulationType"]);this._carrier=new Oscillator({context:this.context,detune:e.detune,frequency:e.frequency,onstop:()=>this.onstop(this),phase:e.phase,type:e.type}),this.frequency=this._carrier.frequency,this.detune=this._carrier.detune,this._modulator=new Oscillator({context:this.context,phase:e.phase,type:e.modulationType}),this.harmonicity=new Multiply({context:this.context,units:"positive",value:e.harmonicity}),this.frequency.chain(this.harmonicity,this._modulator.frequency),this._modulator.chain(this._modulationScale,this._modulationNode.gain),this._carrier.chain(this._modulationNode,this.output),readOnly(this,["frequency","detune","harmonicity"])}static getDefaults(){return Object.assign(Oscillator.getDefaults(),{harmonicity:1,modulationType:"square"})}_start(e){this._modulator.start(e),this._carrier.start(e)}_stop(e){this._modulator.stop(e),this._carrier.stop(e)}_restart(e){this._modulator.restart(e),this._carrier.restart(e)}get type(){return this._carrier.type}set type(e){this._carrier.type=e}get baseType(){return this._carrier.baseType}set baseType(e){this._carrier.baseType=e}get partialCount(){return this._carrier.partialCount}set partialCount(e){this._carrier.partialCount=e}get modulationType(){return this._modulator.type}set modulationType(e){this._modulator.type=e}get phase(){return this._carrier.phase}set phase(e){this._carrier.phase=e,this._modulator.phase=e}get partials(){return this._carrier.partials}set partials(e){this._carrier.partials=e}asArray(e=1024){return __awaiter(this,void 0,void 0,function*(){return generateWaveform(this,e)})}dispose(){return super.dispose(),this.frequency.dispose(),this.detune.dispose(),this.harmonicity.dispose(),this._carrier.dispose(),this._modulator.dispose(),this._modulationNode.dispose(),this._modulationScale.dispose(),this}}class FMOscillator extends Source{constructor(){super(optionsFromArguments(FMOscillator.getDefaults(),arguments,["frequency","type","modulationType"])),this.name="FMOscillator",this._modulationNode=new Gain({context:this.context,gain:0});const e=optionsFromArguments(FMOscillator.getDefaults(),arguments,["frequency","type","modulationType"]);this._carrier=new Oscillator({context:this.context,detune:e.detune,frequency:0,onstop:()=>this.onstop(this),phase:e.phase,type:e.type}),this.detune=this._carrier.detune,this.frequency=new Signal({context:this.context,units:"frequency",value:e.frequency}),this._modulator=new Oscillator({context:this.context,phase:e.phase,type:e.modulationType}),this.harmonicity=new Multiply({context:this.context,units:"positive",value:e.harmonicity}),this.modulationIndex=new Multiply({context:this.context,units:"positive",value:e.modulationIndex}),this.frequency.connect(this._carrier.frequency),this.frequency.chain(this.harmonicity,this._modulator.frequency),this.frequency.chain(this.modulationIndex,this._modulationNode),this._modulator.connect(this._modulationNode.gain),this._modulationNode.connect(this._carrier.frequency),this._carrier.connect(this.output),this.detune.connect(this._modulator.detune),readOnly(this,["modulationIndex","frequency","detune","harmonicity"])}static getDefaults(){return Object.assign(Oscillator.getDefaults(),{harmonicity:1,modulationIndex:2,modulationType:"square"})}_start(e){this._modulator.start(e),this._carrier.start(e)}_stop(e){this._modulator.stop(e),this._carrier.stop(e)}_restart(e){return this._modulator.restart(e),this._carrier.restart(e),this}get type(){return this._carrier.type}set type(e){this._carrier.type=e}get baseType(){return this._carrier.baseType}set baseType(e){this._carrier.baseType=e}get partialCount(){return this._carrier.partialCount}set partialCount(e){this._carrier.partialCount=e}get modulationType(){return this._modulator.type}set modulationType(e){this._modulator.type=e}get phase(){return this._carrier.phase}set phase(e){this._carrier.phase=e,this._modulator.phase=e}get partials(){return this._carrier.partials}set partials(e){this._carrier.partials=e}asArray(e=1024){return __awaiter(this,void 0,void 0,function*(){return generateWaveform(this,e)})}dispose(){return super.dispose(),this.frequency.dispose(),this.harmonicity.dispose(),this._carrier.dispose(),this._modulator.dispose(),this._modulationNode.dispose(),this.modulationIndex.dispose(),this}}class PulseOscillator extends Source{constructor(){super(optionsFromArguments(PulseOscillator.getDefaults(),arguments,["frequency","width"])),this.name="PulseOscillator",this._widthGate=new Gain({context:this.context,gain:0}),this._thresh=new WaveShaper({context:this.context,mapping:t=>t<=0?-1:1});const e=optionsFromArguments(PulseOscillator.getDefaults(),arguments,["frequency","width"]);this.width=new Signal({context:this.context,units:"audioRange",value:e.width}),this._triangle=new Oscillator({context:this.context,detune:e.detune,frequency:e.frequency,onstop:()=>this.onstop(this),phase:e.phase,type:"triangle"}),this.frequency=this._triangle.frequency,this.detune=this._triangle.detune,this._triangle.chain(this._thresh,this.output),this.width.chain(this._widthGate,this._thresh),readOnly(this,["width","frequency","detune"])}static getDefaults(){return Object.assign(Source.getDefaults(),{detune:0,frequency:440,phase:0,type:"pulse",width:.2})}_start(e){e=this.toSeconds(e),this._triangle.start(e),this._widthGate.gain.setValueAtTime(1,e)}_stop(e){e=this.toSeconds(e),this._triangle.stop(e),this._widthGate.gain.cancelScheduledValues(e),this._widthGate.gain.setValueAtTime(0,e)}_restart(e){this._triangle.restart(e),this._widthGate.gain.cancelScheduledValues(e),this._widthGate.gain.setValueAtTime(1,e)}get phase(){return this._triangle.phase}set phase(e){this._triangle.phase=e}get type(){return"pulse"}get baseType(){return"pulse"}get partials(){return[]}get partialCount(){return 0}set carrierType(e){this._triangle.type=e}asArray(e=1024){return __awaiter(this,void 0,void 0,function*(){return generateWaveform(this,e)})}dispose(){return super.dispose(),this._triangle.dispose(),this.width.dispose(),this._widthGate.dispose(),this._thresh.dispose(),this}}class FatOscillator extends Source{constructor(){super(optionsFromArguments(FatOscillator.getDefaults(),arguments,["frequency","type","spread"])),this.name="FatOscillator",this._oscillators=[];const e=optionsFromArguments(FatOscillator.getDefaults(),arguments,["frequency","type","spread"]);this.frequency=new Signal({context:this.context,units:"frequency",value:e.frequency}),this.detune=new Signal({context:this.context,units:"cents",value:e.detune}),this._spread=e.spread,this._type=e.type,this._phase=e.phase,this._partials=e.partials,this._partialCount=e.partialCount,this.count=e.count,readOnly(this,["frequency","detune"])}static getDefaults(){return Object.assign(Oscillator.getDefaults(),{count:3,spread:20,type:"sawtooth"})}_start(e){e=this.toSeconds(e),this._forEach(t=>t.start(e))}_stop(e){e=this.toSeconds(e),this._forEach(t=>t.stop(e))}_restart(e){this._forEach(t=>t.restart(e))}_forEach(e){for(let t=0;t<this._oscillators.length;t++)e(this._oscillators[t],t)}get type(){return this._type}set type(e){this._type=e,this._forEach(t=>t.type=e)}get spread(){return this._spread}set spread(e){if(this._spread=e,this._oscillators.length>1){const t=-e/2,s=e/(this._oscillators.length-1);this._forEach((o,r)=>o.detune.value=t+s*r)}}get count(){return this._oscillators.length}set count(e){if(assertRange(e,1),this._oscillators.length!==e){this._forEach(t=>t.dispose()),this._oscillators=[];for(let t=0;t<e;t++){const s=new Oscillator({context:this.context,volume:-6-e*1.1,type:this._type,phase:this._phase+t/e*360,partialCount:this._partialCount,onstop:t===0?()=>this.onstop(this):noOp});this.type==="custom"&&(s.partials=this._partials),this.frequency.connect(s.frequency),this.detune.connect(s.detune),s.detune.overridden=!1,s.connect(this.output),this._oscillators[t]=s}this.spread=this._spread,this.state==="started"&&this._forEach(t=>t.start())}}get phase(){return this._phase}set phase(e){this._phase=e,this._forEach((t,s)=>t.phase=this._phase+s/this.count*360)}get baseType(){return this._oscillators[0].baseType}set baseType(e){this._forEach(t=>t.baseType=e),this._type=this._oscillators[0].type}get partials(){return this._oscillators[0].partials}set partials(e){this._partials=e,this._partialCount=this._partials.length,e.length&&(this._type="custom",this._forEach(t=>t.partials=e))}get partialCount(){return this._oscillators[0].partialCount}set partialCount(e){this._partialCount=e,this._forEach(t=>t.partialCount=e),this._type=this._oscillators[0].type}asArray(e=1024){return __awaiter(this,void 0,void 0,function*(){return generateWaveform(this,e)})}dispose(){return super.dispose(),this.frequency.dispose(),this.detune.dispose(),this._forEach(e=>e.dispose()),this}}class PWMOscillator extends Source{constructor(){super(optionsFromArguments(PWMOscillator.getDefaults(),arguments,["frequency","modulationFrequency"])),this.name="PWMOscillator",this.sourceType="pwm",this._scale=new Multiply({context:this.context,value:2});const e=optionsFromArguments(PWMOscillator.getDefaults(),arguments,["frequency","modulationFrequency"]);this._pulse=new PulseOscillator({context:this.context,frequency:e.modulationFrequency}),this._pulse.carrierType="sine",this.modulationFrequency=this._pulse.frequency,this._modulator=new Oscillator({context:this.context,detune:e.detune,frequency:e.frequency,onstop:()=>this.onstop(this),phase:e.phase}),this.frequency=this._modulator.frequency,this.detune=this._modulator.detune,this._modulator.chain(this._scale,this._pulse.width),this._pulse.connect(this.output),readOnly(this,["modulationFrequency","frequency","detune"])}static getDefaults(){return Object.assign(Source.getDefaults(),{detune:0,frequency:440,modulationFrequency:.4,phase:0,type:"pwm"})}_start(e){e=this.toSeconds(e),this._modulator.start(e),this._pulse.start(e)}_stop(e){e=this.toSeconds(e),this._modulator.stop(e),this._pulse.stop(e)}_restart(e){this._modulator.restart(e),this._pulse.restart(e)}get type(){return"pwm"}get baseType(){return"pwm"}get partials(){return[]}get partialCount(){return 0}get phase(){return this._modulator.phase}set phase(e){this._modulator.phase=e}asArray(e=1024){return __awaiter(this,void 0,void 0,function*(){return generateWaveform(this,e)})}dispose(){return super.dispose(),this._pulse.dispose(),this._scale.dispose(),this._modulator.dispose(),this}}const OmniOscillatorSourceMap={am:AMOscillator,fat:FatOscillator,fm:FMOscillator,oscillator:Oscillator,pulse:PulseOscillator,pwm:PWMOscillator};class OmniOscillator extends Source{constructor(){super(optionsFromArguments(OmniOscillator.getDefaults(),arguments,["frequency","type"])),this.name="OmniOscillator";const e=optionsFromArguments(OmniOscillator.getDefaults(),arguments,["frequency","type"]);this.frequency=new Signal({context:this.context,units:"frequency",value:e.frequency}),this.detune=new Signal({context:this.context,units:"cents",value:e.detune}),readOnly(this,["frequency","detune"]),this.set(e)}static getDefaults(){return Object.assign(Oscillator.getDefaults(),FMOscillator.getDefaults(),AMOscillator.getDefaults(),FatOscillator.getDefaults(),PulseOscillator.getDefaults(),PWMOscillator.getDefaults())}_start(e){this._oscillator.start(e)}_stop(e){this._oscillator.stop(e)}_restart(e){return this._oscillator.restart(e),this}get type(){let e="";return["am","fm","fat"].some(t=>this._sourceType===t)&&(e=this._sourceType),e+this._oscillator.type}set type(e){e.substr(0,2)==="fm"?(this._createNewOscillator("fm"),this._oscillator=this._oscillator,this._oscillator.type=e.substr(2)):e.substr(0,2)==="am"?(this._createNewOscillator("am"),this._oscillator=this._oscillator,this._oscillator.type=e.substr(2)):e.substr(0,3)==="fat"?(this._createNewOscillator("fat"),this._oscillator=this._oscillator,this._oscillator.type=e.substr(3)):e==="pwm"?(this._createNewOscillator("pwm"),this._oscillator=this._oscillator):e==="pulse"?this._createNewOscillator("pulse"):(this._createNewOscillator("oscillator"),this._oscillator=this._oscillator,this._oscillator.type=e)}get partials(){return this._oscillator.partials}set partials(e){!this._getOscType(this._oscillator,"pulse")&&!this._getOscType(this._oscillator,"pwm")&&(this._oscillator.partials=e)}get partialCount(){return this._oscillator.partialCount}set partialCount(e){!this._getOscType(this._oscillator,"pulse")&&!this._getOscType(this._oscillator,"pwm")&&(this._oscillator.partialCount=e)}set(e){return Reflect.has(e,"type")&&e.type&&(this.type=e.type),super.set(e),this}_createNewOscillator(e){if(e!==this._sourceType){this._sourceType=e;const t=OmniOscillatorSourceMap[e],s=this.now();if(this._oscillator){const o=this._oscillator;o.stop(s),this.context.setTimeout(()=>o.dispose(),this.blockTime)}this._oscillator=new t({context:this.context}),this.frequency.connect(this._oscillator.frequency),this.detune.connect(this._oscillator.detune),this._oscillator.connect(this.output),this._oscillator.onstop=()=>this.onstop(this),this.state==="started"&&this._oscillator.start(s)}}get phase(){return this._oscillator.phase}set phase(e){this._oscillator.phase=e}get sourceType(){return this._sourceType}set sourceType(e){let t="sine";this._oscillator.type!=="pwm"&&this._oscillator.type!=="pulse"&&(t=this._oscillator.type),e==="fm"?this.type="fm"+t:e==="am"?this.type="am"+t:e==="fat"?this.type="fat"+t:e==="oscillator"?this.type=t:e==="pulse"?this.type="pulse":e==="pwm"&&(this.type="pwm")}_getOscType(e,t){return e instanceof OmniOscillatorSourceMap[t]}get baseType(){return this._oscillator.baseType}set baseType(e){!this._getOscType(this._oscillator,"pulse")&&!this._getOscType(this._oscillator,"pwm")&&e!=="pulse"&&e!=="pwm"&&(this._oscillator.baseType=e)}get width(){if(this._getOscType(this._oscillator,"pulse"))return this._oscillator.width}get count(){if(this._getOscType(this._oscillator,"fat"))return this._oscillator.count}set count(e){this._getOscType(this._oscillator,"fat")&&isNumber(e)&&(this._oscillator.count=e)}get spread(){if(this._getOscType(this._oscillator,"fat"))return this._oscillator.spread}set spread(e){this._getOscType(this._oscillator,"fat")&&isNumber(e)&&(this._oscillator.spread=e)}get modulationType(){if(this._getOscType(this._oscillator,"fm")||this._getOscType(this._oscillator,"am"))return this._oscillator.modulationType}set modulationType(e){(this._getOscType(this._oscillator,"fm")||this._getOscType(this._oscillator,"am"))&&isString(e)&&(this._oscillator.modulationType=e)}get modulationIndex(){if(this._getOscType(this._oscillator,"fm"))return this._oscillator.modulationIndex}get harmonicity(){if(this._getOscType(this._oscillator,"fm")||this._getOscType(this._oscillator,"am"))return this._oscillator.harmonicity}get modulationFrequency(){if(this._getOscType(this._oscillator,"pwm"))return this._oscillator.modulationFrequency}asArray(e=1024){return __awaiter(this,void 0,void 0,function*(){return generateWaveform(this,e)})}dispose(){return super.dispose(),this.detune.dispose(),this.frequency.dispose(),this._oscillator.dispose(),this}}class Add extends Signal{constructor(){super(Object.assign(optionsFromArguments(Add.getDefaults(),arguments,["value"]))),this.override=!1,this.name="Add",this._sum=new Gain({context:this.context}),this.input=this._sum,this.output=this._sum,this.addend=this._param,connectSeries(this._constantSource,this._sum)}static getDefaults(){return Object.assign(Signal.getDefaults(),{value:0})}dispose(){return super.dispose(),this._sum.dispose(),this}}class Scale extends SignalOperator{constructor(){super(Object.assign(optionsFromArguments(Scale.getDefaults(),arguments,["min","max"]))),this.name="Scale";const e=optionsFromArguments(Scale.getDefaults(),arguments,["min","max"]);this._mult=this.input=new Multiply({context:this.context,value:e.max-e.min}),this._add=this.output=new Add({context:this.context,value:e.min}),this._min=e.min,this._max=e.max,this.input.connect(this.output)}static getDefaults(){return Object.assign(SignalOperator.getDefaults(),{max:1,min:0})}get min(){return this._min}set min(e){this._min=e,this._setRange()}get max(){return this._max}set max(e){this._max=e,this._setRange()}_setRange(){this._add.value=this._min,this._mult.value=this._max-this._min}dispose(){return super.dispose(),this._add.dispose(),this._mult.dispose(),this}}class Zero extends SignalOperator{constructor(){super(Object.assign(optionsFromArguments(Zero.getDefaults(),arguments))),this.name="Zero",this._gain=new Gain({context:this.context}),this.output=this._gain,this.input=void 0,connect(this.context.getConstant(0),this._gain)}dispose(){return super.dispose(),disconnect(this.context.getConstant(0),this._gain),this}}class LFO extends ToneAudioNode{constructor(){super(optionsFromArguments(LFO.getDefaults(),arguments,["frequency","min","max"])),this.name="LFO",this._stoppedValue=0,this._units="number",this.convert=!0,this._fromType=Param.prototype._fromType,this._toType=Param.prototype._toType,this._is=Param.prototype._is,this._clampValue=Param.prototype._clampValue;const e=optionsFromArguments(LFO.getDefaults(),arguments,["frequency","min","max"]);this._oscillator=new Oscillator(e),this.frequency=this._oscillator.frequency,this._amplitudeGain=new Gain({context:this.context,gain:e.amplitude,units:"normalRange"}),this.amplitude=this._amplitudeGain.gain,this._stoppedSignal=new Signal({context:this.context,units:"audioRange",value:0}),this._zeros=new Zero({context:this.context}),this._a2g=new AudioToGain({context:this.context}),this._scaler=this.output=new Scale({context:this.context,max:e.max,min:e.min}),this.units=e.units,this.min=e.min,this.max=e.max,this._oscillator.chain(this._amplitudeGain,this._a2g,this._scaler),this._zeros.connect(this._a2g),this._stoppedSignal.connect(this._a2g),readOnly(this,["amplitude","frequency"]),this.phase=e.phase}static getDefaults(){return Object.assign(Oscillator.getDefaults(),{amplitude:1,frequency:"4n",max:1,min:0,type:"sine",units:"number"})}start(e){return e=this.toSeconds(e),this._stoppedSignal.setValueAtTime(0,e),this._oscillator.start(e),this}stop(e){return e=this.toSeconds(e),this._stoppedSignal.setValueAtTime(this._stoppedValue,e),this._oscillator.stop(e),this}sync(){return this._oscillator.sync(),this._oscillator.syncFrequency(),this}unsync(){return this._oscillator.unsync(),this._oscillator.unsyncFrequency(),this}_setStoppedValue(){this._stoppedValue=this._oscillator.getInitialValue(),this._stoppedSignal.value=this._stoppedValue}get min(){return this._toType(this._scaler.min)}set min(e){e=this._fromType(e),this._scaler.min=e}get max(){return this._toType(this._scaler.max)}set max(e){e=this._fromType(e),this._scaler.max=e}get type(){return this._oscillator.type}set type(e){this._oscillator.type=e,this._setStoppedValue()}get partials(){return this._oscillator.partials}set partials(e){this._oscillator.partials=e,this._setStoppedValue()}get phase(){return this._oscillator.phase}set phase(e){this._oscillator.phase=e,this._setStoppedValue()}get units(){return this._units}set units(e){const t=this.min,s=this.max;this._units=e,this.min=t,this.max=s}get state(){return this._oscillator.state}connect(e,t,s){return(e instanceof Param||e instanceof Signal)&&(this.convert=e.convert,this.units=e.units),connectSignal(this,e,t,s),this}dispose(){return super.dispose(),this._oscillator.dispose(),this._stoppedSignal.dispose(),this._zeros.dispose(),this._scaler.dispose(),this._a2g.dispose(),this._amplitudeGain.dispose(),this.amplitude.dispose(),this}}function range(n,e=1/0){const t=new WeakMap;return function(s,o){Reflect.defineProperty(s,o,{configurable:!0,enumerable:!0,get:function(){return t.get(this)},set:function(r){assertRange(r,n,e),t.set(this,r)}})}}function timeRange(n,e=1/0){const t=new WeakMap;return function(s,o){Reflect.defineProperty(s,o,{configurable:!0,enumerable:!0,get:function(){return t.get(this)},set:function(r){assertRange(this.toSeconds(r),n,e),t.set(this,r)}})}}class Player extends Source{constructor(){super(optionsFromArguments(Player.getDefaults(),arguments,["url","onload"])),this.name="Player",this._activeSources=new Set;const e=optionsFromArguments(Player.getDefaults(),arguments,["url","onload"]);this._buffer=new ToneAudioBuffer({onload:this._onload.bind(this,e.onload),onerror:e.onerror,reverse:e.reverse,url:e.url}),this.autostart=e.autostart,this._loop=e.loop,this._loopStart=e.loopStart,this._loopEnd=e.loopEnd,this._playbackRate=e.playbackRate,this.fadeIn=e.fadeIn,this.fadeOut=e.fadeOut}static getDefaults(){return Object.assign(Source.getDefaults(),{autostart:!1,fadeIn:0,fadeOut:0,loop:!1,loopEnd:0,loopStart:0,onload:noOp,onerror:noOp,playbackRate:1,reverse:!1})}load(e){return __awaiter(this,void 0,void 0,function*(){return yield this._buffer.load(e),this._onload(),this})}_onload(e=noOp){e(),this.autostart&&this.start()}_onSourceEnd(e){this.onstop(this),this._activeSources.delete(e),this._activeSources.size===0&&!this._synced&&this._state.getValueAtTime(this.now())==="started"&&(this._state.cancel(this.now()),this._state.setStateAtTime("stopped",this.now()))}start(e,t,s){return super.start(e,t,s),this}_start(e,t,s){this._loop?t=defaultArg(t,this._loopStart):t=defaultArg(t,0);const o=this.toSeconds(t),r=s;s=defaultArg(s,Math.max(this._buffer.duration-o,0));let a=this.toSeconds(s);a=a/this._playbackRate,e=this.toSeconds(e);const c=new ToneBufferSource({url:this._buffer,context:this.context,fadeIn:this.fadeIn,fadeOut:this.fadeOut,loop:this._loop,loopEnd:this._loopEnd,loopStart:this._loopStart,onended:this._onSourceEnd.bind(this),playbackRate:this._playbackRate}).connect(this.output);!this._loop&&!this._synced&&(this._state.cancel(e+a),this._state.setStateAtTime("stopped",e+a,{implicitEnd:!0})),this._activeSources.add(c),this._loop&&isUndef(r)?c.start(e,o):c.start(e,o,a-this.toSeconds(this.fadeOut))}_stop(e){const t=this.toSeconds(e);this._activeSources.forEach(s=>s.stop(t))}restart(e,t,s){return super.restart(e,t,s),this}_restart(e,t,s){this._stop(e),this._start(e,t,s)}seek(e,t){const s=this.toSeconds(t);if(this._state.getValueAtTime(s)==="started"){const o=this.toSeconds(e);this._stop(s),this._start(s,o)}return this}setLoopPoints(e,t){return this.loopStart=e,this.loopEnd=t,this}get loopStart(){return this._loopStart}set loopStart(e){this._loopStart=e,this.buffer.loaded&&assertRange(this.toSeconds(e),0,this.buffer.duration),this._activeSources.forEach(t=>{t.loopStart=e})}get loopEnd(){return this._loopEnd}set loopEnd(e){this._loopEnd=e,this.buffer.loaded&&assertRange(this.toSeconds(e),0,this.buffer.duration),this._activeSources.forEach(t=>{t.loopEnd=e})}get buffer(){return this._buffer}set buffer(e){this._buffer.set(e)}get loop(){return this._loop}set loop(e){if(this._loop!==e&&(this._loop=e,this._activeSources.forEach(t=>{t.loop=e}),e)){const t=this._state.getNextState("stopped",this.now());t&&this._state.cancel(t.time)}}get playbackRate(){return this._playbackRate}set playbackRate(e){this._playbackRate=e;const t=this.now(),s=this._state.getNextState("stopped",t);s&&s.implicitEnd&&(this._state.cancel(s.time),this._activeSources.forEach(o=>o.cancelStop())),this._activeSources.forEach(o=>{o.playbackRate.setValueAtTime(e,t)})}get reverse(){return this._buffer.reverse}set reverse(e){this._buffer.reverse=e}get loaded(){return this._buffer.loaded}dispose(){return super.dispose(),this._activeSources.forEach(e=>e.dispose()),this._activeSources.clear(),this._buffer.dispose(),this}}__decorate([timeRange(0)],Player.prototype,"fadeIn",void 0);__decorate([timeRange(0)],Player.prototype,"fadeOut",void 0);class Players extends ToneAudioNode{constructor(){super(optionsFromArguments(Players.getDefaults(),arguments,["urls","onload"],"urls")),this.name="Players",this.input=void 0,this._players=new Map;const e=optionsFromArguments(Players.getDefaults(),arguments,["urls","onload"],"urls");this._volume=this.output=new Volume({context:this.context,volume:e.volume}),this.volume=this._volume.volume,readOnly(this,"volume"),this._buffers=new ToneAudioBuffers({urls:e.urls,onload:e.onload,baseUrl:e.baseUrl,onerror:e.onerror}),this.mute=e.mute,this._fadeIn=e.fadeIn,this._fadeOut=e.fadeOut}static getDefaults(){return Object.assign(Source.getDefaults(),{baseUrl:"",fadeIn:0,fadeOut:0,mute:!1,onload:noOp,onerror:noOp,urls:{},volume:0})}get mute(){return this._volume.mute}set mute(e){this._volume.mute=e}get fadeIn(){return this._fadeIn}set fadeIn(e){this._fadeIn=e,this._players.forEach(t=>{t.fadeIn=e})}get fadeOut(){return this._fadeOut}set fadeOut(e){this._fadeOut=e,this._players.forEach(t=>{t.fadeOut=e})}get state(){return Array.from(this._players).some(([t,s])=>s.state==="started")?"started":"stopped"}has(e){return this._buffers.has(e)}player(e){if(assert(this.has(e),`No Player with the name ${e} exists on this object`),!this._players.has(e)){const t=new Player({context:this.context,fadeIn:this._fadeIn,fadeOut:this._fadeOut,url:this._buffers.get(e)}).connect(this.output);this._players.set(e,t)}return this._players.get(e)}get loaded(){return this._buffers.loaded}add(e,t,s){return assert(!this._buffers.has(e),"A buffer with that name already exists on this object"),this._buffers.add(e,t,s),this}stopAll(e){return this._players.forEach(t=>t.stop(e)),this}dispose(){return super.dispose(),this._volume.dispose(),this.volume.dispose(),this._players.forEach(e=>e.dispose()),this._buffers.dispose(),this}}class GrainPlayer extends Source{constructor(){super(optionsFromArguments(GrainPlayer.getDefaults(),arguments,["url","onload"])),this.name="GrainPlayer",this._loopStart=0,this._loopEnd=0,this._activeSources=[];const e=optionsFromArguments(GrainPlayer.getDefaults(),arguments,["url","onload"]);this.buffer=new ToneAudioBuffer({onload:e.onload,onerror:e.onerror,reverse:e.reverse,url:e.url}),this._clock=new Clock({context:this.context,callback:this._tick.bind(this),frequency:1/e.grainSize}),this._playbackRate=e.playbackRate,this._grainSize=e.grainSize,this._overlap=e.overlap,this.detune=e.detune,this.overlap=e.overlap,this.loop=e.loop,this.playbackRate=e.playbackRate,this.grainSize=e.grainSize,this.loopStart=e.loopStart,this.loopEnd=e.loopEnd,this.reverse=e.reverse,this._clock.on("stop",this._onstop.bind(this))}static getDefaults(){return Object.assign(Source.getDefaults(),{onload:noOp,onerror:noOp,overlap:.1,grainSize:.2,playbackRate:1,detune:0,loop:!1,loopStart:0,loopEnd:0,reverse:!1})}_start(e,t,s){t=defaultArg(t,0),t=this.toSeconds(t),e=this.toSeconds(e);const o=1/this._clock.frequency.getValueAtTime(e);this._clock.start(e,t/o),s&&this.stop(e+this.toSeconds(s))}restart(e,t,s){return super.restart(e,t,s),this}_restart(e,t,s){this._stop(e),this._start(e,t,s)}_stop(e){this._clock.stop(e)}_onstop(e){this._activeSources.forEach(t=>{t.fadeOut=0,t.stop(e)}),this.onstop(this)}_tick(e){const t=this._clock.getTicksAtTime(e),s=t*this._grainSize;if(this.log("offset",s),!this.loop&&s>this.buffer.duration){this.stop(e);return}const o=s<this._overlap?0:this._overlap,r=new ToneBufferSource({context:this.context,url:this.buffer,fadeIn:o,fadeOut:this._overlap,loop:this.loop,loopStart:this._loopStart,loopEnd:this._loopEnd,playbackRate:intervalToFrequencyRatio(this.detune/100)}).connect(this.output);r.start(e,this._grainSize*t),r.stop(e+this._grainSize/this.playbackRate),this._activeSources.push(r),r.onended=()=>{const a=this._activeSources.indexOf(r);a!==-1&&this._activeSources.splice(a,1)}}get playbackRate(){return this._playbackRate}set playbackRate(e){assertRange(e,.001),this._playbackRate=e,this.grainSize=this._grainSize}get loopStart(){return this._loopStart}set loopStart(e){this.buffer.loaded&&assertRange(this.toSeconds(e),0,this.buffer.duration),this._loopStart=this.toSeconds(e)}get loopEnd(){return this._loopEnd}set loopEnd(e){this.buffer.loaded&&assertRange(this.toSeconds(e),0,this.buffer.duration),this._loopEnd=this.toSeconds(e)}get reverse(){return this.buffer.reverse}set reverse(e){this.buffer.reverse=e}get grainSize(){return this._grainSize}set grainSize(e){this._grainSize=this.toSeconds(e),this._clock.frequency.setValueAtTime(this._playbackRate/this._grainSize,this.now())}get overlap(){return this._overlap}set overlap(e){const t=this.toSeconds(e);assertRange(t,0),this._overlap=t}get loaded(){return this.buffer.loaded}dispose(){return super.dispose(),this.buffer.dispose(),this._clock.dispose(),this._activeSources.forEach(e=>e.dispose()),this}}class Abs extends SignalOperator{constructor(){super(...arguments),this.name="Abs",this._abs=new WaveShaper({context:this.context,mapping:e=>Math.abs(e)<.001?0:Math.abs(e)}),this.input=this._abs,this.output=this._abs}dispose(){return super.dispose(),this._abs.dispose(),this}}class GainToAudio extends SignalOperator{constructor(){super(...arguments),this.name="GainToAudio",this._norm=new WaveShaper({context:this.context,mapping:e=>Math.abs(e)*2-1}),this.input=this._norm,this.output=this._norm}dispose(){return super.dispose(),this._norm.dispose(),this}}class Negate extends SignalOperator{constructor(){super(...arguments),this.name="Negate",this._multiply=new Multiply({context:this.context,value:-1}),this.input=this._multiply,this.output=this._multiply}dispose(){return super.dispose(),this._multiply.dispose(),this}}class Subtract extends Signal{constructor(){super(Object.assign(optionsFromArguments(Subtract.getDefaults(),arguments,["value"]))),this.override=!1,this.name="Subtract",this._sum=new Gain({context:this.context}),this.input=this._sum,this.output=this._sum,this._neg=new Negate({context:this.context}),this.subtrahend=this._param,connectSeries(this._constantSource,this._neg,this._sum)}static getDefaults(){return Object.assign(Signal.getDefaults(),{value:0})}dispose(){return super.dispose(),this._neg.dispose(),this._sum.dispose(),this}}class GreaterThanZero extends SignalOperator{constructor(){super(Object.assign(optionsFromArguments(GreaterThanZero.getDefaults(),arguments))),this.name="GreaterThanZero",this._thresh=this.output=new WaveShaper({context:this.context,length:127,mapping:e=>e<=0?0:1}),this._scale=this.input=new Multiply({context:this.context,value:1e4}),this._scale.connect(this._thresh)}dispose(){return super.dispose(),this._scale.dispose(),this._thresh.dispose(),this}}class GreaterThan extends Signal{constructor(){super(Object.assign(optionsFromArguments(GreaterThan.getDefaults(),arguments,["value"]))),this.name="GreaterThan",this.override=!1;const e=optionsFromArguments(GreaterThan.getDefaults(),arguments,["value"]);this._subtract=this.input=new Subtract({context:this.context,value:e.value}),this._gtz=this.output=new GreaterThanZero({context:this.context}),this.comparator=this._param=this._subtract.subtrahend,readOnly(this,"comparator"),this._subtract.connect(this._gtz)}static getDefaults(){return Object.assign(Signal.getDefaults(),{value:0})}dispose(){return super.dispose(),this._gtz.dispose(),this._subtract.dispose(),this.comparator.dispose(),this}}class Pow extends SignalOperator{constructor(){super(Object.assign(optionsFromArguments(Pow.getDefaults(),arguments,["value"]))),this.name="Pow";const e=optionsFromArguments(Pow.getDefaults(),arguments,["value"]);this._exponentScaler=this.input=this.output=new WaveShaper({context:this.context,mapping:this._expFunc(e.value),length:8192}),this._exponent=e.value}static getDefaults(){return Object.assign(SignalOperator.getDefaults(),{value:1})}_expFunc(e){return t=>Math.pow(Math.abs(t),e)}get value(){return this._exponent}set value(e){this._exponent=e,this._exponentScaler.setMap(this._expFunc(this._exponent))}dispose(){return super.dispose(),this._exponentScaler.dispose(),this}}class ScaleExp extends Scale{constructor(){super(Object.assign(optionsFromArguments(ScaleExp.getDefaults(),arguments,["min","max","exponent"]))),this.name="ScaleExp";const e=optionsFromArguments(ScaleExp.getDefaults(),arguments,["min","max","exponent"]);this.input=this._exp=new Pow({context:this.context,value:e.exponent}),this._exp.connect(this._mult)}static getDefaults(){return Object.assign(Scale.getDefaults(),{exponent:1})}get exponent(){return this._exp.value}set exponent(e){this._exp.value=e}dispose(){return super.dispose(),this._exp.dispose(),this}}class SyncedSignal extends Signal{constructor(){super(optionsFromArguments(Signal.getDefaults(),arguments,["value","units"])),this.name="SyncedSignal",this.override=!1;const e=optionsFromArguments(Signal.getDefaults(),arguments,["value","units"]);this._lastVal=e.value,this._synced=this.context.transport.scheduleRepeat(this._onTick.bind(this),"1i"),this._syncedCallback=this._anchorValue.bind(this),this.context.transport.on("start",this._syncedCallback),this.context.transport.on("pause",this._syncedCallback),this.context.transport.on("stop",this._syncedCallback),this._constantSource.disconnect(),this._constantSource.stop(0),this._constantSource=this.output=new ToneConstantSource({context:this.context,offset:e.value,units:e.units}).start(0),this.setValueAtTime(e.value,0)}_onTick(e){const t=super.getValueAtTime(this.context.transport.seconds);this._lastVal!==t&&(this._lastVal=t,this._constantSource.offset.setValueAtTime(t,e))}_anchorValue(e){const t=super.getValueAtTime(this.context.transport.seconds);this._lastVal=t,this._constantSource.offset.cancelAndHoldAtTime(e),this._constantSource.offset.setValueAtTime(t,e)}getValueAtTime(e){const t=new TransportTimeClass(this.context,e).toSeconds();return super.getValueAtTime(t)}setValueAtTime(e,t){const s=new TransportTimeClass(this.context,t).toSeconds();return super.setValueAtTime(e,s),this}linearRampToValueAtTime(e,t){const s=new TransportTimeClass(this.context,t).toSeconds();return super.linearRampToValueAtTime(e,s),this}exponentialRampToValueAtTime(e,t){const s=new TransportTimeClass(this.context,t).toSeconds();return super.exponentialRampToValueAtTime(e,s),this}setTargetAtTime(e,t,s){const o=new TransportTimeClass(this.context,t).toSeconds();return super.setTargetAtTime(e,o,s),this}cancelScheduledValues(e){const t=new TransportTimeClass(this.context,e).toSeconds();return super.cancelScheduledValues(t),this}setValueCurveAtTime(e,t,s,o){const r=new TransportTimeClass(this.context,t).toSeconds();return s=this.toSeconds(s),super.setValueCurveAtTime(e,r,s,o),this}cancelAndHoldAtTime(e){const t=new TransportTimeClass(this.context,e).toSeconds();return super.cancelAndHoldAtTime(t),this}setRampPoint(e){const t=new TransportTimeClass(this.context,e).toSeconds();return super.setRampPoint(t),this}exponentialRampTo(e,t,s){const o=new TransportTimeClass(this.context,s).toSeconds();return super.exponentialRampTo(e,t,o),this}linearRampTo(e,t,s){const o=new TransportTimeClass(this.context,s).toSeconds();return super.linearRampTo(e,t,o),this}targetRampTo(e,t,s){const o=new TransportTimeClass(this.context,s).toSeconds();return super.targetRampTo(e,t,o),this}dispose(){return super.dispose(),this.context.transport.clear(this._synced),this.context.transport.off("start",this._syncedCallback),this.context.transport.off("pause",this._syncedCallback),this.context.transport.off("stop",this._syncedCallback),this._constantSource.dispose(),this}}class Envelope extends ToneAudioNode{constructor(){super(optionsFromArguments(Envelope.getDefaults(),arguments,["attack","decay","sustain","release"])),this.name="Envelope",this._sig=new Signal({context:this.context,value:0}),this.output=this._sig,this.input=void 0;const e=optionsFromArguments(Envelope.getDefaults(),arguments,["attack","decay","sustain","release"]);this.attack=e.attack,this.decay=e.decay,this.sustain=e.sustain,this.release=e.release,this.attackCurve=e.attackCurve,this.releaseCurve=e.releaseCurve,this.decayCurve=e.decayCurve}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{attack:.01,attackCurve:"linear",decay:.1,decayCurve:"exponential",release:1,releaseCurve:"exponential",sustain:.5})}get value(){return this.getValueAtTime(this.now())}_getCurve(e,t){if(isString(e))return e;{let s;for(s in EnvelopeCurves)if(EnvelopeCurves[s][t]===e)return s;return e}}_setCurve(e,t,s){if(isString(s)&&Reflect.has(EnvelopeCurves,s)){const o=EnvelopeCurves[s];isObject(o)?e!=="_decayCurve"&&(this[e]=o[t]):this[e]=o}else if(isArray(s)&&e!=="_decayCurve")this[e]=s;else throw new Error("Envelope: invalid curve: "+s)}get attackCurve(){return this._getCurve(this._attackCurve,"In")}set attackCurve(e){this._setCurve("_attackCurve","In",e)}get releaseCurve(){return this._getCurve(this._releaseCurve,"Out")}set releaseCurve(e){this._setCurve("_releaseCurve","Out",e)}get decayCurve(){return this._decayCurve}set decayCurve(e){assert(["linear","exponential"].some(t=>t===e),`Invalid envelope curve: ${e}`),this._decayCurve=e}triggerAttack(e,t=1){this.log("triggerAttack",e,t),e=this.toSeconds(e);let o=this.toSeconds(this.attack);const r=this.toSeconds(this.decay),a=this.getValueAtTime(e);if(a>0){const c=1/o;o=(1-a)/c}if(o<this.sampleTime)this._sig.cancelScheduledValues(e),this._sig.setValueAtTime(t,e);else if(this._attackCurve==="linear")this._sig.linearRampTo(t,o,e);else if(this._attackCurve==="exponential")this._sig.targetRampTo(t,o,e);else{this._sig.cancelAndHoldAtTime(e);let c=this._attackCurve;for(let l=1;l<c.length;l++)if(c[l-1]<=a&&a<=c[l]){c=this._attackCurve.slice(l),c[0]=a;break}this._sig.setValueCurveAtTime(c,e,o,t)}if(r&&this.sustain<1){const c=t*this.sustain,l=e+o;this.log("decay",l),this._decayCurve==="linear"?this._sig.linearRampToValueAtTime(c,r+l):this._sig.exponentialApproachValueAtTime(c,l,r)}return this}triggerRelease(e){this.log("triggerRelease",e),e=this.toSeconds(e);const t=this.getValueAtTime(e);if(t>0){const s=this.toSeconds(this.release);s<this.sampleTime?this._sig.setValueAtTime(0,e):this._releaseCurve==="linear"?this._sig.linearRampTo(0,s,e):this._releaseCurve==="exponential"?this._sig.targetRampTo(0,s,e):(assert(isArray(this._releaseCurve),"releaseCurve must be either 'linear', 'exponential' or an array"),this._sig.cancelAndHoldAtTime(e),this._sig.setValueCurveAtTime(this._releaseCurve,e,s,t))}return this}getValueAtTime(e){return this._sig.getValueAtTime(e)}triggerAttackRelease(e,t,s=1){return t=this.toSeconds(t),this.triggerAttack(t,s),this.triggerRelease(t+this.toSeconds(e)),this}cancel(e){return this._sig.cancelScheduledValues(this.toSeconds(e)),this}connect(e,t=0,s=0){return connectSignal(this,e,t,s),this}asArray(e=1024){return __awaiter(this,void 0,void 0,function*(){const t=e/this.context.sampleRate,s=new OfflineContext(1,t,this.context.sampleRate),o=this.toSeconds(this.attack)+this.toSeconds(this.decay),r=o+this.toSeconds(this.release),a=r*.1,c=r+a,l=new this.constructor(Object.assign(this.get(),{attack:t*this.toSeconds(this.attack)/c,decay:t*this.toSeconds(this.decay)/c,release:t*this.toSeconds(this.release)/c,context:s}));return l._sig.toDestination(),l.triggerAttackRelease(t*(o+a)/c,0),(yield s.render()).getChannelData(0)})}dispose(){return super.dispose(),this._sig.dispose(),this}}__decorate([timeRange(0)],Envelope.prototype,"attack",void 0);__decorate([timeRange(0)],Envelope.prototype,"decay",void 0);__decorate([range(0,1)],Envelope.prototype,"sustain",void 0);__decorate([timeRange(0)],Envelope.prototype,"release",void 0);const EnvelopeCurves=(()=>{let e,t;const s=[];for(e=0;e<128;e++)s[e]=Math.sin(e/(128-1)*(Math.PI/2));const o=[],r=6.4;for(e=0;e<128-1;e++){t=e/(128-1);const m=Math.sin(t*(Math.PI*2)*r-Math.PI/2)+1;o[e]=m/10+t*.83}o[128-1]=1;const a=[],c=5;for(e=0;e<128;e++)a[e]=Math.ceil(e/(128-1)*c)/c;const l=[];for(e=0;e<128;e++)t=e/(128-1),l[e]=.5*(1-Math.cos(Math.PI*t));const u=[];for(e=0;e<128;e++){t=e/(128-1);const m=Math.pow(t,3)*4+.2,g=Math.cos(m*Math.PI*2*t);u[e]=Math.abs(g*(1-t))}function d(m){const g=new Array(m.length);for(let _=0;_<m.length;_++)g[_]=1-m[_];return g}function f(m){return m.slice(0).reverse()}return{bounce:{In:d(u),Out:u},cosine:{In:s,Out:f(s)},exponential:"exponential",linear:"linear",ripple:{In:o,Out:d(o)},sine:{In:l,Out:d(l)},step:{In:a,Out:d(a)}}})();class Instrument extends ToneAudioNode{constructor(){super(optionsFromArguments(Instrument.getDefaults(),arguments)),this._scheduledEvents=[],this._synced=!1,this._original_triggerAttack=this.triggerAttack,this._original_triggerRelease=this.triggerRelease;const e=optionsFromArguments(Instrument.getDefaults(),arguments);this._volume=this.output=new Volume({context:this.context,volume:e.volume}),this.volume=this._volume.volume,readOnly(this,"volume")}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{volume:0})}sync(){return this._syncState()&&(this._syncMethod("triggerAttack",1),this._syncMethod("triggerRelease",0)),this}_syncState(){let e=!1;return this._synced||(this._synced=!0,e=!0),e}_syncMethod(e,t){const s=this["_original_"+e]=this[e];this[e]=(...o)=>{const r=o[t],a=this.context.transport.schedule(c=>{o[t]=c,s.apply(this,o)},r);this._scheduledEvents.push(a)}}unsync(){return this._scheduledEvents.forEach(e=>this.context.transport.clear(e)),this._scheduledEvents=[],this._synced&&(this._synced=!1,this.triggerAttack=this._original_triggerAttack,this.triggerRelease=this._original_triggerRelease),this}triggerAttackRelease(e,t,s,o){const r=this.toSeconds(s),a=this.toSeconds(t);return this.triggerAttack(e,r,o),this.triggerRelease(r+a),this}dispose(){return super.dispose(),this._volume.dispose(),this.unsync(),this._scheduledEvents=[],this}}class Monophonic extends Instrument{constructor(){super(optionsFromArguments(Monophonic.getDefaults(),arguments));const e=optionsFromArguments(Monophonic.getDefaults(),arguments);this.portamento=e.portamento,this.onsilence=e.onsilence}static getDefaults(){return Object.assign(Instrument.getDefaults(),{detune:0,onsilence:noOp,portamento:0})}triggerAttack(e,t,s=1){this.log("triggerAttack",e,t,s);const o=this.toSeconds(t);return this._triggerEnvelopeAttack(o,s),this.setNote(e,o),this}triggerRelease(e){this.log("triggerRelease",e);const t=this.toSeconds(e);return this._triggerEnvelopeRelease(t),this}setNote(e,t){const s=this.toSeconds(t),o=e instanceof FrequencyClass?e.toFrequency():e;if(this.portamento>0&&this.getLevelAtTime(s)>.05){const r=this.toSeconds(this.portamento);this.frequency.exponentialRampTo(o,r,s)}else this.frequency.setValueAtTime(o,s);return this}}__decorate([timeRange(0)],Monophonic.prototype,"portamento",void 0);class AmplitudeEnvelope extends Envelope{constructor(){super(optionsFromArguments(AmplitudeEnvelope.getDefaults(),arguments,["attack","decay","sustain","release"])),this.name="AmplitudeEnvelope",this._gainNode=new Gain({context:this.context,gain:0}),this.output=this._gainNode,this.input=this._gainNode,this._sig.connect(this._gainNode.gain),this.output=this._gainNode,this.input=this._gainNode}dispose(){return super.dispose(),this._gainNode.dispose(),this}}class Synth extends Monophonic{constructor(){super(optionsFromArguments(Synth.getDefaults(),arguments)),this.name="Synth";const e=optionsFromArguments(Synth.getDefaults(),arguments);this.oscillator=new OmniOscillator(Object.assign({context:this.context,detune:e.detune,onstop:()=>this.onsilence(this)},e.oscillator)),this.frequency=this.oscillator.frequency,this.detune=this.oscillator.detune,this.envelope=new AmplitudeEnvelope(Object.assign({context:this.context},e.envelope)),this.oscillator.chain(this.envelope,this.output),readOnly(this,["oscillator","frequency","detune","envelope"])}static getDefaults(){return Object.assign(Monophonic.getDefaults(),{envelope:Object.assign(omitFromObject(Envelope.getDefaults(),Object.keys(ToneAudioNode.getDefaults())),{attack:.005,decay:.1,release:1,sustain:.3}),oscillator:Object.assign(omitFromObject(OmniOscillator.getDefaults(),[...Object.keys(Source.getDefaults()),"frequency","detune"]),{type:"triangle"})})}_triggerEnvelopeAttack(e,t){if(this.envelope.triggerAttack(e,t),this.oscillator.start(e),this.envelope.sustain===0){const s=this.toSeconds(this.envelope.attack),o=this.toSeconds(this.envelope.decay);this.oscillator.stop(e+s+o)}}_triggerEnvelopeRelease(e){this.envelope.triggerRelease(e),this.oscillator.stop(e+this.toSeconds(this.envelope.release))}getLevelAtTime(e){return e=this.toSeconds(e),this.envelope.getValueAtTime(e)}dispose(){return super.dispose(),this.oscillator.dispose(),this.envelope.dispose(),this}}class ModulationSynth extends Monophonic{constructor(){super(optionsFromArguments(ModulationSynth.getDefaults(),arguments)),this.name="ModulationSynth";const e=optionsFromArguments(ModulationSynth.getDefaults(),arguments);this._carrier=new Synth({context:this.context,oscillator:e.oscillator,envelope:e.envelope,onsilence:()=>this.onsilence(this),volume:-10}),this._modulator=new Synth({context:this.context,oscillator:e.modulation,envelope:e.modulationEnvelope,volume:-10}),this.oscillator=this._carrier.oscillator,this.envelope=this._carrier.envelope,this.modulation=this._modulator.oscillator,this.modulationEnvelope=this._modulator.envelope,this.frequency=new Signal({context:this.context,units:"frequency"}),this.detune=new Signal({context:this.context,value:e.detune,units:"cents"}),this.harmonicity=new Multiply({context:this.context,value:e.harmonicity,minValue:0}),this._modulationNode=new Gain({context:this.context,gain:0}),readOnly(this,["frequency","harmonicity","oscillator","envelope","modulation","modulationEnvelope","detune"])}static getDefaults(){return Object.assign(Monophonic.getDefaults(),{harmonicity:3,oscillator:Object.assign(omitFromObject(OmniOscillator.getDefaults(),[...Object.keys(Source.getDefaults()),"frequency","detune"]),{type:"sine"}),envelope:Object.assign(omitFromObject(Envelope.getDefaults(),Object.keys(ToneAudioNode.getDefaults())),{attack:.01,decay:.01,sustain:1,release:.5}),modulation:Object.assign(omitFromObject(OmniOscillator.getDefaults(),[...Object.keys(Source.getDefaults()),"frequency","detune"]),{type:"square"}),modulationEnvelope:Object.assign(omitFromObject(Envelope.getDefaults(),Object.keys(ToneAudioNode.getDefaults())),{attack:.5,decay:0,sustain:1,release:.5})})}_triggerEnvelopeAttack(e,t){this._carrier._triggerEnvelopeAttack(e,t),this._modulator._triggerEnvelopeAttack(e,t)}_triggerEnvelopeRelease(e){return this._carrier._triggerEnvelopeRelease(e),this._modulator._triggerEnvelopeRelease(e),this}getLevelAtTime(e){return e=this.toSeconds(e),this.envelope.getValueAtTime(e)}dispose(){return super.dispose(),this._carrier.dispose(),this._modulator.dispose(),this.frequency.dispose(),this.detune.dispose(),this.harmonicity.dispose(),this._modulationNode.dispose(),this}}class AMSynth extends ModulationSynth{constructor(){super(optionsFromArguments(AMSynth.getDefaults(),arguments)),this.name="AMSynth",this._modulationScale=new AudioToGain({context:this.context}),this.frequency.connect(this._carrier.frequency),this.frequency.chain(this.harmonicity,this._modulator.frequency),this.detune.fan(this._carrier.detune,this._modulator.detune),this._modulator.chain(this._modulationScale,this._modulationNode.gain),this._carrier.chain(this._modulationNode,this.output)}dispose(){return super.dispose(),this._modulationScale.dispose(),this}}class BiquadFilter extends ToneAudioNode{constructor(){super(optionsFromArguments(BiquadFilter.getDefaults(),arguments,["frequency","type"])),this.name="BiquadFilter";const e=optionsFromArguments(BiquadFilter.getDefaults(),arguments,["frequency","type"]);this._filter=this.context.createBiquadFilter(),this.input=this.output=this._filter,this.Q=new Param({context:this.context,units:"number",value:e.Q,param:this._filter.Q}),this.frequency=new Param({context:this.context,units:"frequency",value:e.frequency,param:this._filter.frequency}),this.detune=new Param({context:this.context,units:"cents",value:e.detune,param:this._filter.detune}),this.gain=new Param({context:this.context,units:"decibels",convert:!1,value:e.gain,param:this._filter.gain}),this.type=e.type}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{Q:1,type:"lowpass",frequency:350,detune:0,gain:0})}get type(){return this._filter.type}set type(e){assert(["lowpass","highpass","bandpass","lowshelf","highshelf","notch","allpass","peaking"].indexOf(e)!==-1,`Invalid filter type: ${e}`),this._filter.type=e}getFrequencyResponse(e=128){const t=new Float32Array(e);for(let a=0;a<e;a++){const l=Math.pow(a/e,2)*(2e4-20)+20;t[a]=l}const s=new Float32Array(e),o=new Float32Array(e),r=this.context.createBiquadFilter();return r.type=this.type,r.Q.value=this.Q.value,r.frequency.value=this.frequency.value,r.gain.value=this.gain.value,r.getFrequencyResponse(t,s,o),s}dispose(){return super.dispose(),this._filter.disconnect(),this.Q.dispose(),this.frequency.dispose(),this.gain.dispose(),this.detune.dispose(),this}}let Filter$2=class Ce extends ToneAudioNode{constructor(){super(optionsFromArguments(Ce.getDefaults(),arguments,["frequency","type","rolloff"])),this.name="Filter",this.input=new Gain({context:this.context}),this.output=new Gain({context:this.context}),this._filters=[];const e=optionsFromArguments(Ce.getDefaults(),arguments,["frequency","type","rolloff"]);this._filters=[],this.Q=new Signal({context:this.context,units:"positive",value:e.Q}),this.frequency=new Signal({context:this.context,units:"frequency",value:e.frequency}),this.detune=new Signal({context:this.context,units:"cents",value:e.detune}),this.gain=new Signal({context:this.context,units:"decibels",convert:!1,value:e.gain}),this._type=e.type,this.rolloff=e.rolloff,readOnly(this,["detune","frequency","gain","Q"])}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{Q:1,detune:0,frequency:350,gain:0,rolloff:-12,type:"lowpass"})}get type(){return this._type}set type(e){assert(["lowpass","highpass","bandpass","lowshelf","highshelf","notch","allpass","peaking"].indexOf(e)!==-1,`Invalid filter type: ${e}`),this._type=e,this._filters.forEach(s=>s.type=e)}get rolloff(){return this._rolloff}set rolloff(e){const t=isNumber(e)?e:parseInt(e,10),s=[-12,-24,-48,-96];let o=s.indexOf(t);assert(o!==-1,`rolloff can only be ${s.join(", ")}`),o+=1,this._rolloff=t,this.input.disconnect(),this._filters.forEach(r=>r.disconnect()),this._filters=new Array(o);for(let r=0;r<o;r++){const a=new BiquadFilter({context:this.context});a.type=this._type,this.frequency.connect(a.frequency),this.detune.connect(a.detune),this.Q.connect(a.Q),this.gain.connect(a.gain),this._filters[r]=a}this._internalChannels=this._filters,connectSeries(this.input,...this._internalChannels,this.output)}getFrequencyResponse(e=128){const t=new BiquadFilter({frequency:this.frequency.value,gain:this.gain.value,Q:this.Q.value,type:this._type,detune:this.detune.value}),s=new Float32Array(e).map(()=>1);return this._filters.forEach(()=>{t.getFrequencyResponse(e).forEach((r,a)=>s[a]*=r)}),t.dispose(),s}dispose(){return super.dispose(),this._filters.forEach(e=>{e.dispose()}),writable(this,["detune","frequency","gain","Q"]),this.frequency.dispose(),this.Q.dispose(),this.detune.dispose(),this.gain.dispose(),this}};class FrequencyEnvelope extends Envelope{constructor(){super(optionsFromArguments(FrequencyEnvelope.getDefaults(),arguments,["attack","decay","sustain","release"])),this.name="FrequencyEnvelope";const e=optionsFromArguments(FrequencyEnvelope.getDefaults(),arguments,["attack","decay","sustain","release"]);this._octaves=e.octaves,this._baseFrequency=this.toFrequency(e.baseFrequency),this._exponent=this.input=new Pow({context:this.context,value:e.exponent}),this._scale=this.output=new Scale({context:this.context,min:this._baseFrequency,max:this._baseFrequency*Math.pow(2,this._octaves)}),this._sig.chain(this._exponent,this._scale)}static getDefaults(){return Object.assign(Envelope.getDefaults(),{baseFrequency:200,exponent:1,octaves:4})}get baseFrequency(){return this._baseFrequency}set baseFrequency(e){const t=this.toFrequency(e);assertRange(t,0),this._baseFrequency=t,this._scale.min=this._baseFrequency,this.octaves=this._octaves}get octaves(){return this._octaves}set octaves(e){this._octaves=e,this._scale.max=this._baseFrequency*Math.pow(2,e)}get exponent(){return this._exponent.value}set exponent(e){this._exponent.value=e}dispose(){return super.dispose(),this._exponent.dispose(),this._scale.dispose(),this}}class MonoSynth extends Monophonic{constructor(){super(optionsFromArguments(MonoSynth.getDefaults(),arguments)),this.name="MonoSynth";const e=optionsFromArguments(MonoSynth.getDefaults(),arguments);this.oscillator=new OmniOscillator(Object.assign(e.oscillator,{context:this.context,detune:e.detune,onstop:()=>this.onsilence(this)})),this.frequency=this.oscillator.frequency,this.detune=this.oscillator.detune,this.filter=new Filter$2(Object.assign(e.filter,{context:this.context})),this.filterEnvelope=new FrequencyEnvelope(Object.assign(e.filterEnvelope,{context:this.context})),this.envelope=new AmplitudeEnvelope(Object.assign(e.envelope,{context:this.context})),this.oscillator.chain(this.filter,this.envelope,this.output),this.filterEnvelope.connect(this.filter.frequency),readOnly(this,["oscillator","frequency","detune","filter","filterEnvelope","envelope"])}static getDefaults(){return Object.assign(Monophonic.getDefaults(),{envelope:Object.assign(omitFromObject(Envelope.getDefaults(),Object.keys(ToneAudioNode.getDefaults())),{attack:.005,decay:.1,release:1,sustain:.9}),filter:Object.assign(omitFromObject(Filter$2.getDefaults(),Object.keys(ToneAudioNode.getDefaults())),{Q:1,rolloff:-12,type:"lowpass"}),filterEnvelope:Object.assign(omitFromObject(FrequencyEnvelope.getDefaults(),Object.keys(ToneAudioNode.getDefaults())),{attack:.6,baseFrequency:200,decay:.2,exponent:2,octaves:3,release:2,sustain:.5}),oscillator:Object.assign(omitFromObject(OmniOscillator.getDefaults(),Object.keys(Source.getDefaults())),{type:"sawtooth"})})}_triggerEnvelopeAttack(e,t=1){if(this.envelope.triggerAttack(e,t),this.filterEnvelope.triggerAttack(e),this.oscillator.start(e),this.envelope.sustain===0){const s=this.toSeconds(this.envelope.attack),o=this.toSeconds(this.envelope.decay);this.oscillator.stop(e+s+o)}}_triggerEnvelopeRelease(e){this.envelope.triggerRelease(e),this.filterEnvelope.triggerRelease(e),this.oscillator.stop(e+this.toSeconds(this.envelope.release))}getLevelAtTime(e){return e=this.toSeconds(e),this.envelope.getValueAtTime(e)}dispose(){return super.dispose(),this.oscillator.dispose(),this.envelope.dispose(),this.filterEnvelope.dispose(),this.filter.dispose(),this}}class DuoSynth extends Monophonic{constructor(){super(optionsFromArguments(DuoSynth.getDefaults(),arguments)),this.name="DuoSynth";const e=optionsFromArguments(DuoSynth.getDefaults(),arguments);this.voice0=new MonoSynth(Object.assign(e.voice0,{context:this.context,onsilence:()=>this.onsilence(this)})),this.voice1=new MonoSynth(Object.assign(e.voice1,{context:this.context})),this.harmonicity=new Multiply({context:this.context,units:"positive",value:e.harmonicity}),this._vibrato=new LFO({frequency:e.vibratoRate,context:this.context,min:-50,max:50}),this._vibrato.start(),this.vibratoRate=this._vibrato.frequency,this._vibratoGain=new Gain({context:this.context,units:"normalRange",gain:e.vibratoAmount}),this.vibratoAmount=this._vibratoGain.gain,this.frequency=new Signal({context:this.context,units:"frequency",value:440}),this.detune=new Signal({context:this.context,units:"cents",value:e.detune}),this.frequency.connect(this.voice0.frequency),this.frequency.chain(this.harmonicity,this.voice1.frequency),this._vibrato.connect(this._vibratoGain),this._vibratoGain.fan(this.voice0.detune,this.voice1.detune),this.detune.fan(this.voice0.detune,this.voice1.detune),this.voice0.connect(this.output),this.voice1.connect(this.output),readOnly(this,["voice0","voice1","frequency","vibratoAmount","vibratoRate"])}getLevelAtTime(e){return e=this.toSeconds(e),this.voice0.envelope.getValueAtTime(e)+this.voice1.envelope.getValueAtTime(e)}static getDefaults(){return deepMerge(Monophonic.getDefaults(),{vibratoAmount:.5,vibratoRate:5,harmonicity:1.5,voice0:deepMerge(omitFromObject(MonoSynth.getDefaults(),Object.keys(Monophonic.getDefaults())),{filterEnvelope:{attack:.01,decay:0,sustain:1,release:.5},envelope:{attack:.01,decay:0,sustain:1,release:.5}}),voice1:deepMerge(omitFromObject(MonoSynth.getDefaults(),Object.keys(Monophonic.getDefaults())),{filterEnvelope:{attack:.01,decay:0,sustain:1,release:.5},envelope:{attack:.01,decay:0,sustain:1,release:.5}})})}_triggerEnvelopeAttack(e,t){this.voice0._triggerEnvelopeAttack(e,t),this.voice1._triggerEnvelopeAttack(e,t)}_triggerEnvelopeRelease(e){return this.voice0._triggerEnvelopeRelease(e),this.voice1._triggerEnvelopeRelease(e),this}dispose(){return super.dispose(),this.voice0.dispose(),this.voice1.dispose(),this.frequency.dispose(),this.detune.dispose(),this._vibrato.dispose(),this.vibratoRate.dispose(),this._vibratoGain.dispose(),this.harmonicity.dispose(),this}}class FMSynth extends ModulationSynth{constructor(){super(optionsFromArguments(FMSynth.getDefaults(),arguments)),this.name="FMSynth";const e=optionsFromArguments(FMSynth.getDefaults(),arguments);this.modulationIndex=new Multiply({context:this.context,value:e.modulationIndex}),this.frequency.connect(this._carrier.frequency),this.frequency.chain(this.harmonicity,this._modulator.frequency),this.frequency.chain(this.modulationIndex,this._modulationNode),this.detune.fan(this._carrier.detune,this._modulator.detune),this._modulator.connect(this._modulationNode.gain),this._modulationNode.connect(this._carrier.frequency),this._carrier.connect(this.output)}static getDefaults(){return Object.assign(ModulationSynth.getDefaults(),{modulationIndex:10})}dispose(){return super.dispose(),this.modulationIndex.dispose(),this}}const inharmRatios=[1,1.483,1.932,2.546,2.63,3.897];class MetalSynth extends Monophonic{constructor(){super(optionsFromArguments(MetalSynth.getDefaults(),arguments)),this.name="MetalSynth",this._oscillators=[],this._freqMultipliers=[];const e=optionsFromArguments(MetalSynth.getDefaults(),arguments);this.detune=new Signal({context:this.context,units:"cents",value:e.detune}),this.frequency=new Signal({context:this.context,units:"frequency"}),this._amplitude=new Gain({context:this.context,gain:0}).connect(this.output),this._highpass=new Filter$2({Q:0,context:this.context,type:"highpass"}).connect(this._amplitude);for(let t=0;t<inharmRatios.length;t++){const s=new FMOscillator({context:this.context,harmonicity:e.harmonicity,modulationIndex:e.modulationIndex,modulationType:"square",onstop:t===0?()=>this.onsilence(this):noOp,type:"square"});s.connect(this._highpass),this._oscillators[t]=s;const o=new Multiply({context:this.context,value:inharmRatios[t]});this._freqMultipliers[t]=o,this.frequency.chain(o,s.frequency),this.detune.connect(s.detune)}this._filterFreqScaler=new Scale({context:this.context,max:7e3,min:this.toFrequency(e.resonance)}),this.envelope=new Envelope({attack:e.envelope.attack,attackCurve:"linear",context:this.context,decay:e.envelope.decay,release:e.envelope.release,sustain:0}),this.envelope.chain(this._filterFreqScaler,this._highpass.frequency),this.envelope.connect(this._amplitude.gain),this._octaves=e.octaves,this.octaves=e.octaves}static getDefaults(){return deepMerge(Monophonic.getDefaults(),{envelope:Object.assign(omitFromObject(Envelope.getDefaults(),Object.keys(ToneAudioNode.getDefaults())),{attack:.001,decay:1.4,release:.2}),harmonicity:5.1,modulationIndex:32,octaves:1.5,resonance:4e3})}_triggerEnvelopeAttack(e,t=1){return this.envelope.triggerAttack(e,t),this._oscillators.forEach(s=>s.start(e)),this.envelope.sustain===0&&this._oscillators.forEach(s=>{s.stop(e+this.toSeconds(this.envelope.attack)+this.toSeconds(this.envelope.decay))}),this}_triggerEnvelopeRelease(e){return this.envelope.triggerRelease(e),this._oscillators.forEach(t=>t.stop(e+this.toSeconds(this.envelope.release))),this}getLevelAtTime(e){return e=this.toSeconds(e),this.envelope.getValueAtTime(e)}get modulationIndex(){return this._oscillators[0].modulationIndex.value}set modulationIndex(e){this._oscillators.forEach(t=>t.modulationIndex.value=e)}get harmonicity(){return this._oscillators[0].harmonicity.value}set harmonicity(e){this._oscillators.forEach(t=>t.harmonicity.value=e)}get resonance(){return this._filterFreqScaler.min}set resonance(e){this._filterFreqScaler.min=this.toFrequency(e),this.octaves=this._octaves}get octaves(){return this._octaves}set octaves(e){this._octaves=e,this._filterFreqScaler.max=this._filterFreqScaler.min*Math.pow(2,e)}dispose(){return super.dispose(),this._oscillators.forEach(e=>e.dispose()),this._freqMultipliers.forEach(e=>e.dispose()),this.frequency.dispose(),this.detune.dispose(),this._filterFreqScaler.dispose(),this._amplitude.dispose(),this.envelope.dispose(),this._highpass.dispose(),this}}class MembraneSynth extends Synth{constructor(){super(optionsFromArguments(MembraneSynth.getDefaults(),arguments)),this.name="MembraneSynth",this.portamento=0;const e=optionsFromArguments(MembraneSynth.getDefaults(),arguments);this.pitchDecay=e.pitchDecay,this.octaves=e.octaves,readOnly(this,["oscillator","envelope"])}static getDefaults(){return deepMerge(Monophonic.getDefaults(),Synth.getDefaults(),{envelope:{attack:.001,attackCurve:"exponential",decay:.4,release:1.4,sustain:.01},octaves:10,oscillator:{type:"sine"},pitchDecay:.05})}setNote(e,t){const s=this.toSeconds(t),o=this.toFrequency(e instanceof FrequencyClass?e.toFrequency():e),r=o*this.octaves;return this.oscillator.frequency.setValueAtTime(r,s),this.oscillator.frequency.exponentialRampToValueAtTime(o,s+this.toSeconds(this.pitchDecay)),this}dispose(){return super.dispose(),this}}__decorate([range(0)],MembraneSynth.prototype,"octaves",void 0);__decorate([timeRange(0)],MembraneSynth.prototype,"pitchDecay",void 0);class NoiseSynth extends Instrument{constructor(){super(optionsFromArguments(NoiseSynth.getDefaults(),arguments)),this.name="NoiseSynth";const e=optionsFromArguments(NoiseSynth.getDefaults(),arguments);this.noise=new Noise(Object.assign({context:this.context},e.noise)),this.envelope=new AmplitudeEnvelope(Object.assign({context:this.context},e.envelope)),this.noise.chain(this.envelope,this.output)}static getDefaults(){return Object.assign(Instrument.getDefaults(),{envelope:Object.assign(omitFromObject(Envelope.getDefaults(),Object.keys(ToneAudioNode.getDefaults())),{decay:.1,sustain:0}),noise:Object.assign(omitFromObject(Noise.getDefaults(),Object.keys(Source.getDefaults())),{type:"white"})})}triggerAttack(e,t=1){return e=this.toSeconds(e),this.envelope.triggerAttack(e,t),this.noise.start(e),this.envelope.sustain===0&&this.noise.stop(e+this.toSeconds(this.envelope.attack)+this.toSeconds(this.envelope.decay)),this}triggerRelease(e){return e=this.toSeconds(e),this.envelope.triggerRelease(e),this.noise.stop(e+this.toSeconds(this.envelope.release)),this}sync(){return this._syncState()&&(this._syncMethod("triggerAttack",0),this._syncMethod("triggerRelease",0)),this}triggerAttackRelease(e,t,s=1){return t=this.toSeconds(t),e=this.toSeconds(e),this.triggerAttack(t,s),this.triggerRelease(t+e),this}dispose(){return super.dispose(),this.noise.dispose(),this.envelope.dispose(),this}}const workletContext=new Set;function addToWorklet(n){workletContext.add(n)}function registerProcessor(n,e){const t=`registerProcessor("${n}", ${e})`;workletContext.add(t)}function getWorkletGlobalScope(){return Array.from(workletContext).join(`
`)}class ToneAudioWorklet extends ToneAudioNode{constructor(e){super(e),this.name="ToneAudioWorklet",this.workletOptions={},this.onprocessorerror=noOp;const t=URL.createObjectURL(new Blob([getWorkletGlobalScope()],{type:"text/javascript"})),s=this._audioWorkletName();this._dummyGain=this.context.createGain(),this._dummyParam=this._dummyGain.gain,this.context.addAudioWorkletModule(t,s).then(()=>{this.disposed||(this._worklet=this.context.createAudioWorkletNode(s,this.workletOptions),this._worklet.onprocessorerror=this.onprocessorerror.bind(this),this.onReady(this._worklet))})}dispose(){return super.dispose(),this._dummyGain.disconnect(),this._worklet&&(this._worklet.port.postMessage("dispose"),this._worklet.disconnect()),this}}const toneAudioWorkletProcessor=`
	/**
	 * The base AudioWorkletProcessor for use in Tone.js. Works with the [[ToneAudioWorklet]]. 
	 */
	class ToneAudioWorkletProcessor extends AudioWorkletProcessor {

		constructor(options) {
			
			super(options);
			/**
			 * If the processor was disposed or not. Keep alive until it's disposed.
			 */
			this.disposed = false;
		   	/** 
			 * The number of samples in the processing block
			 */
			this.blockSize = 128;
			/**
			 * the sample rate
			 */
			this.sampleRate = sampleRate;

			this.port.onmessage = (event) => {
				// when it receives a dispose 
				if (event.data === "dispose") {
					this.disposed = true;
				}
			};
		}
	}
`;addToWorklet(toneAudioWorkletProcessor);const singleIOProcess=`
	/**
	 * Abstract class for a single input/output processor. 
	 * has a 'generate' function which processes one sample at a time
	 */
	class SingleIOProcessor extends ToneAudioWorkletProcessor {

		constructor(options) {
			super(Object.assign(options, {
				numberOfInputs: 1,
				numberOfOutputs: 1
			}));
			/**
			 * Holds the name of the parameter and a single value of that
			 * parameter at the current sample
			 * @type { [name: string]: number }
			 */
			this.params = {}
		}

		/**
		 * Generate an output sample from the input sample and parameters
		 * @abstract
		 * @param input number
		 * @param channel number
		 * @param parameters { [name: string]: number }
		 * @returns number
		 */
		generate(){}

		/**
		 * Update the private params object with the 
		 * values of the parameters at the given index
		 * @param parameters { [name: string]: Float32Array },
		 * @param index number
		 */
		updateParams(parameters, index) {
			for (const paramName in parameters) {
				const param = parameters[paramName];
				if (param.length > 1) {
					this.params[paramName] = parameters[paramName][index];
				} else {
					this.params[paramName] = parameters[paramName][0];
				}
			}
		}

		/**
		 * Process a single frame of the audio
		 * @param inputs Float32Array[][]
		 * @param outputs Float32Array[][]
		 */
		process(inputs, outputs, parameters) {
			const input = inputs[0];
			const output = outputs[0];
			// get the parameter values
			const channelCount = Math.max(input && input.length || 0, output.length);
			for (let sample = 0; sample < this.blockSize; sample++) {
				this.updateParams(parameters, sample);
				for (let channel = 0; channel < channelCount; channel++) {
					const inputSample = input && input.length ? input[channel][sample] : 0;
					output[channel][sample] = this.generate(inputSample, channel, this.params);
				}
			}
			return !this.disposed;
		}
	};
`;addToWorklet(singleIOProcess);const delayLine=`
	/**
	 * A multichannel buffer for use within an AudioWorkletProcessor as a delay line
	 */
	class DelayLine {
		
		constructor(size, channels) {
			this.buffer = [];
			this.writeHead = []
			this.size = size;

			// create the empty channels
			for (let i = 0; i < channels; i++) {
				this.buffer[i] = new Float32Array(this.size);
				this.writeHead[i] = 0;
			}
		}

		/**
		 * Push a value onto the end
		 * @param channel number
		 * @param value number
		 */
		push(channel, value) {
			this.writeHead[channel] += 1;
			if (this.writeHead[channel] > this.size) {
				this.writeHead[channel] = 0;
			}
			this.buffer[channel][this.writeHead[channel]] = value;
		}

		/**
		 * Get the recorded value of the channel given the delay
		 * @param channel number
		 * @param delay number delay samples
		 */
		get(channel, delay) {
			let readHead = this.writeHead[channel] - Math.floor(delay);
			if (readHead < 0) {
				readHead += this.size;
			}
			return this.buffer[channel][readHead];
		}
	}
`;addToWorklet(delayLine);const workletName$1="feedback-comb-filter",feedbackCombFilter=`
	class FeedbackCombFilterWorklet extends SingleIOProcessor {

		constructor(options) {
			super(options);
			this.delayLine = new DelayLine(this.sampleRate, options.channelCount || 2);
		}

		static get parameterDescriptors() {
			return [{
				name: "delayTime",
				defaultValue: 0.1,
				minValue: 0,
				maxValue: 1,
				automationRate: "k-rate"
			}, {
				name: "feedback",
				defaultValue: 0.5,
				minValue: 0,
				maxValue: 0.9999,
				automationRate: "k-rate"
			}];
		}

		generate(input, channel, parameters) {
			const delayedSample = this.delayLine.get(channel, parameters.delayTime * this.sampleRate);
			this.delayLine.push(channel, input + delayedSample * parameters.feedback);
			return delayedSample;
		}
	}
`;registerProcessor(workletName$1,feedbackCombFilter);class FeedbackCombFilter extends ToneAudioWorklet{constructor(){super(optionsFromArguments(FeedbackCombFilter.getDefaults(),arguments,["delayTime","resonance"])),this.name="FeedbackCombFilter";const e=optionsFromArguments(FeedbackCombFilter.getDefaults(),arguments,["delayTime","resonance"]);this.input=new Gain({context:this.context}),this.output=new Gain({context:this.context}),this.delayTime=new Param({context:this.context,value:e.delayTime,units:"time",minValue:0,maxValue:1,param:this._dummyParam,swappable:!0}),this.resonance=new Param({context:this.context,value:e.resonance,units:"normalRange",param:this._dummyParam,swappable:!0}),readOnly(this,["resonance","delayTime"])}_audioWorkletName(){return workletName$1}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{delayTime:.1,resonance:.5})}onReady(e){connectSeries(this.input,e,this.output);const t=e.parameters.get("delayTime");this.delayTime.setParam(t);const s=e.parameters.get("feedback");this.resonance.setParam(s)}dispose(){return super.dispose(),this.input.dispose(),this.output.dispose(),this.delayTime.dispose(),this.resonance.dispose(),this}}class OnePoleFilter extends ToneAudioNode{constructor(){super(optionsFromArguments(OnePoleFilter.getDefaults(),arguments,["frequency","type"])),this.name="OnePoleFilter";const e=optionsFromArguments(OnePoleFilter.getDefaults(),arguments,["frequency","type"]);this._frequency=e.frequency,this._type=e.type,this.input=new Gain({context:this.context}),this.output=new Gain({context:this.context}),this._createFilter()}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{frequency:880,type:"lowpass"})}_createFilter(){const e=this._filter,t=this.toFrequency(this._frequency),s=1/(2*Math.PI*t);if(this._type==="lowpass"){const o=1/(s*this.context.sampleRate),r=o-1;this._filter=this.context.createIIRFilter([o,0],[1,r])}else{const o=1/(s*this.context.sampleRate)-1;this._filter=this.context.createIIRFilter([1,-1],[1,o])}this.input.chain(this._filter,this.output),e&&this.context.setTimeout(()=>{this.disposed||(this.input.disconnect(e),e.disconnect())},this.blockTime)}get frequency(){return this._frequency}set frequency(e){this._frequency=e,this._createFilter()}get type(){return this._type}set type(e){this._type=e,this._createFilter()}getFrequencyResponse(e=128){const t=new Float32Array(e);for(let r=0;r<e;r++){const c=Math.pow(r/e,2)*(2e4-20)+20;t[r]=c}const s=new Float32Array(e),o=new Float32Array(e);return this._filter.getFrequencyResponse(t,s,o),s}dispose(){return super.dispose(),this.input.dispose(),this.output.dispose(),this._filter.disconnect(),this}}class LowpassCombFilter extends ToneAudioNode{constructor(){super(optionsFromArguments(LowpassCombFilter.getDefaults(),arguments,["delayTime","resonance","dampening"])),this.name="LowpassCombFilter";const e=optionsFromArguments(LowpassCombFilter.getDefaults(),arguments,["delayTime","resonance","dampening"]);this._combFilter=this.output=new FeedbackCombFilter({context:this.context,delayTime:e.delayTime,resonance:e.resonance}),this.delayTime=this._combFilter.delayTime,this.resonance=this._combFilter.resonance,this._lowpass=this.input=new OnePoleFilter({context:this.context,frequency:e.dampening,type:"lowpass"}),this._lowpass.connect(this._combFilter)}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{dampening:3e3,delayTime:.1,resonance:.5})}get dampening(){return this._lowpass.frequency}set dampening(e){this._lowpass.frequency=e}dispose(){return super.dispose(),this._combFilter.dispose(),this._lowpass.dispose(),this}}class PluckSynth extends Instrument{constructor(){super(optionsFromArguments(PluckSynth.getDefaults(),arguments)),this.name="PluckSynth";const e=optionsFromArguments(PluckSynth.getDefaults(),arguments);this._noise=new Noise({context:this.context,type:"pink"}),this.attackNoise=e.attackNoise,this._lfcf=new LowpassCombFilter({context:this.context,dampening:e.dampening,resonance:e.resonance}),this.resonance=e.resonance,this.release=e.release,this._noise.connect(this._lfcf),this._lfcf.connect(this.output)}static getDefaults(){return deepMerge(Instrument.getDefaults(),{attackNoise:1,dampening:4e3,resonance:.7,release:1})}get dampening(){return this._lfcf.dampening}set dampening(e){this._lfcf.dampening=e}triggerAttack(e,t){const s=this.toFrequency(e);t=this.toSeconds(t);const o=1/s;return this._lfcf.delayTime.setValueAtTime(o,t),this._noise.start(t),this._noise.stop(t+o*this.attackNoise),this._lfcf.resonance.cancelScheduledValues(t),this._lfcf.resonance.setValueAtTime(this.resonance,t),this}triggerRelease(e){return this._lfcf.resonance.linearRampTo(0,this.release,e),this}dispose(){return super.dispose(),this._noise.dispose(),this._lfcf.dispose(),this}}class PolySynth extends Instrument{constructor(){super(optionsFromArguments(PolySynth.getDefaults(),arguments,["voice","options"])),this.name="PolySynth",this._availableVoices=[],this._activeVoices=[],this._voices=[],this._gcTimeout=-1,this._averageActiveVoices=0;const e=optionsFromArguments(PolySynth.getDefaults(),arguments,["voice","options"]);assert(!isNumber(e.voice),"DEPRECATED: The polyphony count is no longer the first argument.");const t=e.voice.getDefaults();this.options=Object.assign(t,e.options),this.voice=e.voice,this.maxPolyphony=e.maxPolyphony,this._dummyVoice=this._getNextAvailableVoice();const s=this._voices.indexOf(this._dummyVoice);this._voices.splice(s,1),this._gcTimeout=this.context.setInterval(this._collectGarbage.bind(this),1)}static getDefaults(){return Object.assign(Instrument.getDefaults(),{maxPolyphony:32,options:{},voice:Synth})}get activeVoices(){return this._activeVoices.length}_makeVoiceAvailable(e){this._availableVoices.push(e);const t=this._activeVoices.findIndex(s=>s.voice===e);this._activeVoices.splice(t,1)}_getNextAvailableVoice(){if(this._availableVoices.length)return this._availableVoices.shift();if(this._voices.length<this.maxPolyphony){const e=new this.voice(Object.assign(this.options,{context:this.context,onsilence:this._makeVoiceAvailable.bind(this)}));return e.connect(this.output),this._voices.push(e),e}else warn("Max polyphony exceeded. Note dropped.")}_collectGarbage(){if(this._averageActiveVoices=Math.max(this._averageActiveVoices*.95,this.activeVoices),this._availableVoices.length&&this._voices.length>Math.ceil(this._averageActiveVoices+1)){const e=this._availableVoices.shift(),t=this._voices.indexOf(e);this._voices.splice(t,1),this.context.isOffline||e.dispose()}}_triggerAttack(e,t,s){e.forEach(o=>{const r=new MidiClass(this.context,o).toMidi(),a=this._getNextAvailableVoice();a&&(a.triggerAttack(o,t,s),this._activeVoices.push({midi:r,voice:a,released:!1}),this.log("triggerAttack",o,t))})}_triggerRelease(e,t){e.forEach(s=>{const o=new MidiClass(this.context,s).toMidi(),r=this._activeVoices.find(({midi:a,released:c})=>a===o&&!c);r&&(r.voice.triggerRelease(t),r.released=!0,this.log("triggerRelease",s,t))})}_scheduleEvent(e,t,s,o){assert(!this.disposed,"Synth was already disposed"),s<=this.now()?e==="attack"?this._triggerAttack(t,s,o):this._triggerRelease(t,s):this.context.setTimeout(()=>{this._scheduleEvent(e,t,s,o)},s-this.now())}triggerAttack(e,t,s){Array.isArray(e)||(e=[e]);const o=this.toSeconds(t);return this._scheduleEvent("attack",e,o,s),this}triggerRelease(e,t){Array.isArray(e)||(e=[e]);const s=this.toSeconds(t);return this._scheduleEvent("release",e,s),this}triggerAttackRelease(e,t,s,o){const r=this.toSeconds(s);if(this.triggerAttack(e,r,o),isArray(t)){assert(isArray(e),"If the duration is an array, the notes must also be an array"),e=e;for(let a=0;a<e.length;a++){const c=t[Math.min(a,t.length-1)],l=this.toSeconds(c);assert(l>0,"The duration must be greater than 0"),this.triggerRelease(e[a],r+l)}}else{const a=this.toSeconds(t);assert(a>0,"The duration must be greater than 0"),this.triggerRelease(e,r+a)}return this}sync(){return this._syncState()&&(this._syncMethod("triggerAttack",1),this._syncMethod("triggerRelease",1)),this}set(e){const t=omitFromObject(e,["onsilence","context"]);return this.options=deepMerge(this.options,t),this._voices.forEach(s=>s.set(t)),this._dummyVoice.set(t),this}get(){return this._dummyVoice.get()}releaseAll(e){const t=this.toSeconds(e);return this._activeVoices.forEach(({voice:s})=>{s.triggerRelease(t)}),this}dispose(){return super.dispose(),this._dummyVoice.dispose(),this._voices.forEach(e=>e.dispose()),this._activeVoices=[],this._availableVoices=[],this.context.clearInterval(this._gcTimeout),this}}class Sampler extends Instrument{constructor(){super(optionsFromArguments(Sampler.getDefaults(),arguments,["urls","onload","baseUrl"],"urls")),this.name="Sampler",this._activeSources=new Map;const e=optionsFromArguments(Sampler.getDefaults(),arguments,["urls","onload","baseUrl"],"urls"),t={};Object.keys(e.urls).forEach(s=>{const o=parseInt(s,10);if(assert(isNote(s)||isNumber(o)&&isFinite(o),`url key is neither a note or midi pitch: ${s}`),isNote(s)){const r=new FrequencyClass(this.context,s).toMidi();t[r]=e.urls[s]}else isNumber(o)&&isFinite(o)&&(t[o]=e.urls[o])}),this._buffers=new ToneAudioBuffers({urls:t,onload:e.onload,baseUrl:e.baseUrl,onerror:e.onerror}),this.attack=e.attack,this.release=e.release,this.curve=e.curve,this._buffers.loaded&&Promise.resolve().then(e.onload)}static getDefaults(){return Object.assign(Instrument.getDefaults(),{attack:0,baseUrl:"",curve:"exponential",onload:noOp,onerror:noOp,release:.1,urls:{}})}_findClosest(e){let s=0;for(;s<96;){if(this._buffers.has(e+s))return-s;if(this._buffers.has(e-s))return s;s++}throw new Error(`No available buffers for note: ${e}`)}triggerAttack(e,t,s=1){return this.log("triggerAttack",e,t,s),Array.isArray(e)||(e=[e]),e.forEach(o=>{const r=ftomf(new FrequencyClass(this.context,o).toFrequency()),a=Math.round(r),c=r-a,l=this._findClosest(a),u=a-l,d=this._buffers.get(u),f=intervalToFrequencyRatio(l+c),m=new ToneBufferSource({url:d,context:this.context,curve:this.curve,fadeIn:this.attack,fadeOut:this.release,playbackRate:f}).connect(this.output);m.start(t,0,d.duration/f,s),isArray(this._activeSources.get(a))||this._activeSources.set(a,[]),this._activeSources.get(a).push(m),m.onended=()=>{if(this._activeSources&&this._activeSources.has(a)){const g=this._activeSources.get(a),_=g.indexOf(m);_!==-1&&g.splice(_,1)}}}),this}triggerRelease(e,t){return this.log("triggerRelease",e,t),Array.isArray(e)||(e=[e]),e.forEach(s=>{const o=new FrequencyClass(this.context,s).toMidi();if(this._activeSources.has(o)&&this._activeSources.get(o).length){const r=this._activeSources.get(o);t=this.toSeconds(t),r.forEach(a=>{a.stop(t)}),this._activeSources.set(o,[])}}),this}releaseAll(e){const t=this.toSeconds(e);return this._activeSources.forEach(s=>{for(;s.length;)s.shift().stop(t)}),this}sync(){return this._syncState()&&(this._syncMethod("triggerAttack",1),this._syncMethod("triggerRelease",1)),this}triggerAttackRelease(e,t,s,o=1){const r=this.toSeconds(s);return this.triggerAttack(e,r,o),isArray(t)?(assert(isArray(e),"notes must be an array when duration is array"),e.forEach((a,c)=>{const l=t[Math.min(c,t.length-1)];this.triggerRelease(a,r+this.toSeconds(l))})):this.triggerRelease(e,r+this.toSeconds(t)),this}add(e,t,s){if(assert(isNote(e)||isFinite(e),`note must be a pitch or midi: ${e}`),isNote(e)){const o=new FrequencyClass(this.context,e).toMidi();this._buffers.add(o,t,s)}else this._buffers.add(e,t,s);return this}get loaded(){return this._buffers.loaded}dispose(){return super.dispose(),this._buffers.dispose(),this._activeSources.forEach(e=>{e.forEach(t=>t.dispose())}),this._activeSources.clear(),this}}__decorate([timeRange(0)],Sampler.prototype,"attack",void 0);__decorate([timeRange(0)],Sampler.prototype,"release",void 0);class ToneEvent extends ToneWithContext{constructor(){super(optionsFromArguments(ToneEvent.getDefaults(),arguments,["callback","value"])),this.name="ToneEvent",this._state=new StateTimeline("stopped"),this._startOffset=0;const e=optionsFromArguments(ToneEvent.getDefaults(),arguments,["callback","value"]);this._loop=e.loop,this.callback=e.callback,this.value=e.value,this._loopStart=this.toTicks(e.loopStart),this._loopEnd=this.toTicks(e.loopEnd),this._playbackRate=e.playbackRate,this._probability=e.probability,this._humanize=e.humanize,this.mute=e.mute,this._playbackRate=e.playbackRate,this._state.increasing=!0,this._rescheduleEvents()}static getDefaults(){return Object.assign(ToneWithContext.getDefaults(),{callback:noOp,humanize:!1,loop:!1,loopEnd:"1m",loopStart:0,mute:!1,playbackRate:1,probability:1,value:null})}_rescheduleEvents(e=-1){this._state.forEachFrom(e,t=>{let s;if(t.state==="started"){t.id!==-1&&this.context.transport.clear(t.id);const o=t.time+Math.round(this.startOffset/this._playbackRate);if(this._loop===!0||isNumber(this._loop)&&this._loop>1){s=1/0,isNumber(this._loop)&&(s=this._loop*this._getLoopDuration());const r=this._state.getAfter(o);r!==null&&(s=Math.min(s,r.time-o)),s!==1/0&&(this._state.setStateAtTime("stopped",o+s+1,{id:-1}),s=new TicksClass(this.context,s));const a=new TicksClass(this.context,this._getLoopDuration());t.id=this.context.transport.scheduleRepeat(this._tick.bind(this),a,new TicksClass(this.context,o),s)}else t.id=this.context.transport.schedule(this._tick.bind(this),new TicksClass(this.context,o))}})}get state(){return this._state.getValueAtTime(this.context.transport.ticks)}get startOffset(){return this._startOffset}set startOffset(e){this._startOffset=e}get probability(){return this._probability}set probability(e){this._probability=e}get humanize(){return this._humanize}set humanize(e){this._humanize=e}start(e){const t=this.toTicks(e);return this._state.getValueAtTime(t)==="stopped"&&(this._state.add({id:-1,state:"started",time:t}),this._rescheduleEvents(t)),this}stop(e){this.cancel(e);const t=this.toTicks(e);if(this._state.getValueAtTime(t)==="started"){this._state.setStateAtTime("stopped",t,{id:-1});const s=this._state.getBefore(t);let o=t;s!==null&&(o=s.time),this._rescheduleEvents(o)}return this}cancel(e){e=defaultArg(e,-1/0);const t=this.toTicks(e);return this._state.forEachFrom(t,s=>{this.context.transport.clear(s.id)}),this._state.cancel(t),this}_tick(e){const t=this.context.transport.getTicksAtTime(e);if(!this.mute&&this._state.getValueAtTime(t)==="started"){if(this.probability<1&&Math.random()>this.probability)return;if(this.humanize){let s=.02;isBoolean(this.humanize)||(s=this.toSeconds(this.humanize)),e+=(Math.random()*2-1)*s}this.callback(e,this.value)}}_getLoopDuration(){return Math.round((this._loopEnd-this._loopStart)/this._playbackRate)}get loop(){return this._loop}set loop(e){this._loop=e,this._rescheduleEvents()}get playbackRate(){return this._playbackRate}set playbackRate(e){this._playbackRate=e,this._rescheduleEvents()}get loopEnd(){return new TicksClass(this.context,this._loopEnd).toSeconds()}set loopEnd(e){this._loopEnd=this.toTicks(e),this._loop&&this._rescheduleEvents()}get loopStart(){return new TicksClass(this.context,this._loopStart).toSeconds()}set loopStart(e){this._loopStart=this.toTicks(e),this._loop&&this._rescheduleEvents()}get progress(){if(this._loop){const e=this.context.transport.ticks,t=this._state.get(e);if(t!==null&&t.state==="started"){const s=this._getLoopDuration();return(e-t.time)%s/s}else return 0}else return 0}dispose(){return super.dispose(),this.cancel(),this._state.dispose(),this}}class Loop extends ToneWithContext{constructor(){super(optionsFromArguments(Loop.getDefaults(),arguments,["callback","interval"])),this.name="Loop";const e=optionsFromArguments(Loop.getDefaults(),arguments,["callback","interval"]);this._event=new ToneEvent({context:this.context,callback:this._tick.bind(this),loop:!0,loopEnd:e.interval,playbackRate:e.playbackRate,probability:e.probability}),this.callback=e.callback,this.iterations=e.iterations}static getDefaults(){return Object.assign(ToneWithContext.getDefaults(),{interval:"4n",callback:noOp,playbackRate:1,iterations:1/0,probability:1,mute:!1,humanize:!1})}start(e){return this._event.start(e),this}stop(e){return this._event.stop(e),this}cancel(e){return this._event.cancel(e),this}_tick(e){this.callback(e)}get state(){return this._event.state}get progress(){return this._event.progress}get interval(){return this._event.loopEnd}set interval(e){this._event.loopEnd=e}get playbackRate(){return this._event.playbackRate}set playbackRate(e){this._event.playbackRate=e}get humanize(){return this._event.humanize}set humanize(e){this._event.humanize=e}get probability(){return this._event.probability}set probability(e){this._event.probability=e}get mute(){return this._event.mute}set mute(e){this._event.mute=e}get iterations(){return this._event.loop===!0?1/0:this._event.loop}set iterations(e){e===1/0?this._event.loop=!0:this._event.loop=e}dispose(){return super.dispose(),this._event.dispose(),this}}class Part extends ToneEvent{constructor(){super(optionsFromArguments(Part.getDefaults(),arguments,["callback","events"])),this.name="Part",this._state=new StateTimeline("stopped"),this._events=new Set;const e=optionsFromArguments(Part.getDefaults(),arguments,["callback","events"]);this._state.increasing=!0,e.events.forEach(t=>{isArray(t)?this.add(t[0],t[1]):this.add(t)})}static getDefaults(){return Object.assign(ToneEvent.getDefaults(),{events:[]})}start(e,t){const s=this.toTicks(e);if(this._state.getValueAtTime(s)!=="started"){t=defaultArg(t,this._loop?this._loopStart:0),this._loop?t=defaultArg(t,this._loopStart):t=defaultArg(t,0);const o=this.toTicks(t);this._state.add({id:-1,offset:o,state:"started",time:s}),this._forEach(r=>{this._startNote(r,s,o)})}return this}_startNote(e,t,s){t-=s,this._loop?e.startOffset>=this._loopStart&&e.startOffset<this._loopEnd?(e.startOffset<s&&(t+=this._getLoopDuration()),e.start(new TicksClass(this.context,t))):e.startOffset<this._loopStart&&e.startOffset>=s&&(e.loop=!1,e.start(new TicksClass(this.context,t))):e.startOffset>=s&&e.start(new TicksClass(this.context,t))}get startOffset(){return this._startOffset}set startOffset(e){this._startOffset=e,this._forEach(t=>{t.startOffset+=this._startOffset})}stop(e){const t=this.toTicks(e);return this._state.cancel(t),this._state.setStateAtTime("stopped",t),this._forEach(s=>{s.stop(e)}),this}at(e,t){const s=new TransportTimeClass(this.context,e).toTicks(),o=new TicksClass(this.context,1).toSeconds(),r=this._events.values();let a=r.next();for(;!a.done;){const c=a.value;if(Math.abs(s-c.startOffset)<o)return isDefined(t)&&(c.value=t),c;a=r.next()}return isDefined(t)?(this.add(e,t),this.at(e)):null}add(e,t){e instanceof Object&&Reflect.has(e,"time")&&(t=e,e=t.time);const s=this.toTicks(e);let o;return t instanceof ToneEvent?(o=t,o.callback=this._tick.bind(this)):o=new ToneEvent({callback:this._tick.bind(this),context:this.context,value:t}),o.startOffset=s,o.set({humanize:this.humanize,loop:this.loop,loopEnd:this.loopEnd,loopStart:this.loopStart,playbackRate:this.playbackRate,probability:this.probability}),this._events.add(o),this._restartEvent(o),this}_restartEvent(e){this._state.forEach(t=>{t.state==="started"?this._startNote(e,t.time,t.offset):e.stop(new TicksClass(this.context,t.time))})}remove(e,t){return isObject(e)&&e.hasOwnProperty("time")&&(t=e,e=t.time),e=this.toTicks(e),this._events.forEach(s=>{s.startOffset===e&&(isUndef(t)||isDefined(t)&&s.value===t)&&(this._events.delete(s),s.dispose())}),this}clear(){return this._forEach(e=>e.dispose()),this._events.clear(),this}cancel(e){return this._forEach(t=>t.cancel(e)),this._state.cancel(this.toTicks(e)),this}_forEach(e){return this._events&&this._events.forEach(t=>{t instanceof Part?t._forEach(e):e(t)}),this}_setAll(e,t){this._forEach(s=>{s[e]=t})}_tick(e,t){this.mute||this.callback(e,t)}_testLoopBoundries(e){this._loop&&(e.startOffset<this._loopStart||e.startOffset>=this._loopEnd)?e.cancel(0):e.state==="stopped"&&this._restartEvent(e)}get probability(){return this._probability}set probability(e){this._probability=e,this._setAll("probability",e)}get humanize(){return this._humanize}set humanize(e){this._humanize=e,this._setAll("humanize",e)}get loop(){return this._loop}set loop(e){this._loop=e,this._forEach(t=>{t.loopStart=this.loopStart,t.loopEnd=this.loopEnd,t.loop=e,this._testLoopBoundries(t)})}get loopEnd(){return new TicksClass(this.context,this._loopEnd).toSeconds()}set loopEnd(e){this._loopEnd=this.toTicks(e),this._loop&&this._forEach(t=>{t.loopEnd=e,this._testLoopBoundries(t)})}get loopStart(){return new TicksClass(this.context,this._loopStart).toSeconds()}set loopStart(e){this._loopStart=this.toTicks(e),this._loop&&this._forEach(t=>{t.loopStart=this.loopStart,this._testLoopBoundries(t)})}get playbackRate(){return this._playbackRate}set playbackRate(e){this._playbackRate=e,this._setAll("playbackRate",e)}get length(){return this._events.size}dispose(){return super.dispose(),this.clear(),this}}function*upPatternGen(n){let e=0;for(;e<n.length;)e=clampToArraySize(e,n),yield n[e],e++}function*downPatternGen(n){let e=n.length-1;for(;e>=0;)e=clampToArraySize(e,n),yield n[e],e--}function*infiniteGen(n,e){for(;;)yield*e(n)}function clampToArraySize(n,e){return clamp(n,0,e.length-1)}function*alternatingGenerator(n,e){let t=e?0:n.length-1;for(;;)t=clampToArraySize(t,n),yield n[t],e?(t++,t>=n.length-1&&(e=!1)):(t--,t<=0&&(e=!0))}function*jumpUp(n){let e=0,t=0;for(;e<n.length;)e=clampToArraySize(e,n),yield n[e],t++,e+=t%2?2:-1}function*jumpDown(n){let e=n.length-1,t=0;for(;e>=0;)e=clampToArraySize(e,n),yield n[e],t++,e+=t%2?-2:1}function*randomGen(n){for(;;){const e=Math.floor(Math.random()*n.length);yield n[e]}}function*randomOnce(n){const e=[];for(let t=0;t<n.length;t++)e.push(t);for(;e.length>0;){const t=e.splice(Math.floor(e.length*Math.random()),1),s=clampToArraySize(t[0],n);yield n[s]}}function*randomWalk(n){let e=Math.floor(Math.random()*n.length);for(;;)e===0?e++:e===n.length-1||Math.random()<.5?e--:e++,yield n[e]}function*PatternGenerator(n,e="up",t=0){switch(assert(n.length>0,"The array must have more than one value in it"),e){case"up":yield*infiniteGen(n,upPatternGen);case"down":yield*infiniteGen(n,downPatternGen);case"upDown":yield*alternatingGenerator(n,!0);case"downUp":yield*alternatingGenerator(n,!1);case"alternateUp":yield*infiniteGen(n,jumpUp);case"alternateDown":yield*infiniteGen(n,jumpDown);case"random":yield*randomGen(n);case"randomOnce":yield*infiniteGen(n,randomOnce);case"randomWalk":yield*randomWalk(n)}}class Pattern extends Loop{constructor(){super(optionsFromArguments(Pattern.getDefaults(),arguments,["callback","values","pattern"])),this.name="Pattern";const e=optionsFromArguments(Pattern.getDefaults(),arguments,["callback","values","pattern"]);this.callback=e.callback,this._values=e.values,this._pattern=PatternGenerator(e.values,e.pattern),this._type=e.pattern}static getDefaults(){return Object.assign(Loop.getDefaults(),{pattern:"up",values:[],callback:noOp})}_tick(e){const t=this._pattern.next();this._value=t.value,this.callback(e,this._value)}get values(){return this._values}set values(e){this._values=e,this.pattern=this._type}get value(){return this._value}get pattern(){return this._type}set pattern(e){this._type=e,this._pattern=PatternGenerator(this._values,this._type)}}class Sequence extends ToneEvent{constructor(){super(optionsFromArguments(Sequence.getDefaults(),arguments,["callback","events","subdivision"])),this.name="Sequence",this._part=new Part({callback:this._seqCallback.bind(this),context:this.context}),this._events=[],this._eventsArray=[];const e=optionsFromArguments(Sequence.getDefaults(),arguments,["callback","events","subdivision"]);this._subdivision=this.toTicks(e.subdivision),this.events=e.events,this.loop=e.loop,this.loopStart=e.loopStart,this.loopEnd=e.loopEnd,this.playbackRate=e.playbackRate,this.probability=e.probability,this.humanize=e.humanize,this.mute=e.mute,this.playbackRate=e.playbackRate}static getDefaults(){return Object.assign(omitFromObject(ToneEvent.getDefaults(),["value"]),{events:[],loop:!0,loopEnd:0,loopStart:0,subdivision:"8n"})}_seqCallback(e,t){t!==null&&this.callback(e,t)}get events(){return this._events}set events(e){this.clear(),this._eventsArray=e,this._events=this._createSequence(this._eventsArray),this._eventsUpdated()}start(e,t){return this._part.start(e,t&&this._indexTime(t)),this}stop(e){return this._part.stop(e),this}get subdivision(){return new TicksClass(this.context,this._subdivision).toSeconds()}_createSequence(e){return new Proxy(e,{get:(t,s)=>t[s],set:(t,s,o)=>(isString(s)&&isFinite(parseInt(s,10))&&isArray(o)?t[s]=this._createSequence(o):t[s]=o,this._eventsUpdated(),!0)})}_eventsUpdated(){this._part.clear(),this._rescheduleSequence(this._eventsArray,this._subdivision,this.startOffset),this.loopEnd=this.loopEnd}_rescheduleSequence(e,t,s){e.forEach((o,r)=>{const a=r*t+s;if(isArray(o))this._rescheduleSequence(o,t/o.length,a);else{const c=new TicksClass(this.context,a,"i").toSeconds();this._part.add(c,o)}})}_indexTime(e){return new TicksClass(this.context,e*this._subdivision+this.startOffset).toSeconds()}clear(){return this._part.clear(),this}dispose(){return super.dispose(),this._part.dispose(),this}get loop(){return this._part.loop}set loop(e){this._part.loop=e}get loopStart(){return this._loopStart}set loopStart(e){this._loopStart=e,this._part.loopStart=this._indexTime(e)}get loopEnd(){return this._loopEnd}set loopEnd(e){this._loopEnd=e,e===0?this._part.loopEnd=this._indexTime(this._eventsArray.length):this._part.loopEnd=this._indexTime(e)}get startOffset(){return this._part.startOffset}set startOffset(e){this._part.startOffset=e}get playbackRate(){return this._part.playbackRate}set playbackRate(e){this._part.playbackRate=e}get probability(){return this._part.probability}set probability(e){this._part.probability=e}get progress(){return this._part.progress}get humanize(){return this._part.humanize}set humanize(e){this._part.humanize=e}get length(){return this._part.length}}class CrossFade extends ToneAudioNode{constructor(){super(Object.assign(optionsFromArguments(CrossFade.getDefaults(),arguments,["fade"]))),this.name="CrossFade",this._panner=this.context.createStereoPanner(),this._split=this.context.createChannelSplitter(2),this._g2a=new GainToAudio({context:this.context}),this.a=new Gain({context:this.context,gain:0}),this.b=new Gain({context:this.context,gain:0}),this.output=new Gain({context:this.context}),this._internalChannels=[this.a,this.b];const e=optionsFromArguments(CrossFade.getDefaults(),arguments,["fade"]);this.fade=new Signal({context:this.context,units:"normalRange",value:e.fade}),readOnly(this,"fade"),this.context.getConstant(1).connect(this._panner),this._panner.connect(this._split),this._panner.channelCount=1,this._panner.channelCountMode="explicit",connect(this._split,this.a.gain,0),connect(this._split,this.b.gain,1),this.fade.chain(this._g2a,this._panner.pan),this.a.connect(this.output),this.b.connect(this.output)}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{fade:.5})}dispose(){return super.dispose(),this.a.dispose(),this.b.dispose(),this.output.dispose(),this.fade.dispose(),this._g2a.dispose(),this._panner.disconnect(),this._split.disconnect(),this}}class Effect extends ToneAudioNode{constructor(e){super(e),this.name="Effect",this._dryWet=new CrossFade({context:this.context}),this.wet=this._dryWet.fade,this.effectSend=new Gain({context:this.context}),this.effectReturn=new Gain({context:this.context}),this.input=new Gain({context:this.context}),this.output=this._dryWet,this.input.fan(this._dryWet.a,this.effectSend),this.effectReturn.connect(this._dryWet.b),this.wet.setValueAtTime(e.wet,0),this._internalChannels=[this.effectReturn,this.effectSend],readOnly(this,"wet")}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{wet:1})}connectEffect(e){return this._internalChannels.push(e),this.effectSend.chain(e,this.effectReturn),this}dispose(){return super.dispose(),this._dryWet.dispose(),this.effectSend.dispose(),this.effectReturn.dispose(),this.wet.dispose(),this}}class LFOEffect extends Effect{constructor(e){super(e),this.name="LFOEffect",this._lfo=new LFO({context:this.context,frequency:e.frequency,amplitude:e.depth}),this.depth=this._lfo.amplitude,this.frequency=this._lfo.frequency,this.type=e.type,readOnly(this,["frequency","depth"])}static getDefaults(){return Object.assign(Effect.getDefaults(),{frequency:1,type:"sine",depth:1})}start(e){return this._lfo.start(e),this}stop(e){return this._lfo.stop(e),this}sync(){return this._lfo.sync(),this}unsync(){return this._lfo.unsync(),this}get type(){return this._lfo.type}set type(e){this._lfo.type=e}dispose(){return super.dispose(),this._lfo.dispose(),this.frequency.dispose(),this.depth.dispose(),this}}class AutoFilter extends LFOEffect{constructor(){super(optionsFromArguments(AutoFilter.getDefaults(),arguments,["frequency","baseFrequency","octaves"])),this.name="AutoFilter";const e=optionsFromArguments(AutoFilter.getDefaults(),arguments,["frequency","baseFrequency","octaves"]);this.filter=new Filter$2(Object.assign(e.filter,{context:this.context})),this.connectEffect(this.filter),this._lfo.connect(this.filter.frequency),this.octaves=e.octaves,this.baseFrequency=e.baseFrequency}static getDefaults(){return Object.assign(LFOEffect.getDefaults(),{baseFrequency:200,octaves:2.6,filter:{type:"lowpass",rolloff:-12,Q:1}})}get baseFrequency(){return this._lfo.min}set baseFrequency(e){this._lfo.min=this.toFrequency(e),this.octaves=this._octaves}get octaves(){return this._octaves}set octaves(e){this._octaves=e,this._lfo.max=this._lfo.min*Math.pow(2,e)}dispose(){return super.dispose(),this.filter.dispose(),this}}class Panner extends ToneAudioNode{constructor(){super(Object.assign(optionsFromArguments(Panner.getDefaults(),arguments,["pan"]))),this.name="Panner",this._panner=this.context.createStereoPanner(),this.input=this._panner,this.output=this._panner;const e=optionsFromArguments(Panner.getDefaults(),arguments,["pan"]);this.pan=new Param({context:this.context,param:this._panner.pan,value:e.pan,minValue:-1,maxValue:1}),this._panner.channelCount=e.channelCount,this._panner.channelCountMode="explicit",readOnly(this,"pan")}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{pan:0,channelCount:1})}dispose(){return super.dispose(),this._panner.disconnect(),this.pan.dispose(),this}}class AutoPanner extends LFOEffect{constructor(){super(optionsFromArguments(AutoPanner.getDefaults(),arguments,["frequency"])),this.name="AutoPanner";const e=optionsFromArguments(AutoPanner.getDefaults(),arguments,["frequency"]);this._panner=new Panner({context:this.context,channelCount:e.channelCount}),this.connectEffect(this._panner),this._lfo.connect(this._panner.pan),this._lfo.min=-1,this._lfo.max=1}static getDefaults(){return Object.assign(LFOEffect.getDefaults(),{channelCount:1})}dispose(){return super.dispose(),this._panner.dispose(),this}}class Follower extends ToneAudioNode{constructor(){super(optionsFromArguments(Follower.getDefaults(),arguments,["smoothing"])),this.name="Follower";const e=optionsFromArguments(Follower.getDefaults(),arguments,["smoothing"]);this._abs=this.input=new Abs({context:this.context}),this._lowpass=this.output=new OnePoleFilter({context:this.context,frequency:1/this.toSeconds(e.smoothing),type:"lowpass"}),this._abs.connect(this._lowpass),this._smoothing=e.smoothing}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{smoothing:.05})}get smoothing(){return this._smoothing}set smoothing(e){this._smoothing=e,this._lowpass.frequency=1/this.toSeconds(this.smoothing)}dispose(){return super.dispose(),this._abs.dispose(),this._lowpass.dispose(),this}}class AutoWah extends Effect{constructor(){super(optionsFromArguments(AutoWah.getDefaults(),arguments,["baseFrequency","octaves","sensitivity"])),this.name="AutoWah";const e=optionsFromArguments(AutoWah.getDefaults(),arguments,["baseFrequency","octaves","sensitivity"]);this._follower=new Follower({context:this.context,smoothing:e.follower}),this._sweepRange=new ScaleExp({context:this.context,min:0,max:1,exponent:.5}),this._baseFrequency=this.toFrequency(e.baseFrequency),this._octaves=e.octaves,this._inputBoost=new Gain({context:this.context}),this._bandpass=new Filter$2({context:this.context,rolloff:-48,frequency:0,Q:e.Q}),this._peaking=new Filter$2({context:this.context,type:"peaking"}),this._peaking.gain.value=e.gain,this.gain=this._peaking.gain,this.Q=this._bandpass.Q,this.effectSend.chain(this._inputBoost,this._follower,this._sweepRange),this._sweepRange.connect(this._bandpass.frequency),this._sweepRange.connect(this._peaking.frequency),this.effectSend.chain(this._bandpass,this._peaking,this.effectReturn),this._setSweepRange(),this.sensitivity=e.sensitivity,readOnly(this,["gain","Q"])}static getDefaults(){return Object.assign(Effect.getDefaults(),{baseFrequency:100,octaves:6,sensitivity:0,Q:2,gain:2,follower:.2})}get octaves(){return this._octaves}set octaves(e){this._octaves=e,this._setSweepRange()}get follower(){return this._follower.smoothing}set follower(e){this._follower.smoothing=e}get baseFrequency(){return this._baseFrequency}set baseFrequency(e){this._baseFrequency=this.toFrequency(e),this._setSweepRange()}get sensitivity(){return gainToDb(1/this._inputBoost.gain.value)}set sensitivity(e){this._inputBoost.gain.value=1/dbToGain(e)}_setSweepRange(){this._sweepRange.min=this._baseFrequency,this._sweepRange.max=Math.min(this._baseFrequency*Math.pow(2,this._octaves),this.context.sampleRate/2)}dispose(){return super.dispose(),this._follower.dispose(),this._sweepRange.dispose(),this._bandpass.dispose(),this._peaking.dispose(),this._inputBoost.dispose(),this}}const workletName="bit-crusher",bitCrusherWorklet=`
	class BitCrusherWorklet extends SingleIOProcessor {

		static get parameterDescriptors() {
			return [{
				name: "bits",
				defaultValue: 12,
				minValue: 1,
				maxValue: 16,
				automationRate: 'k-rate'
			}];
		}

		generate(input, _channel, parameters) {
			const step = Math.pow(0.5, parameters.bits - 1);
			const val = step * Math.floor(input / step + 0.5);
			return val;
		}
	}
`;registerProcessor(workletName,bitCrusherWorklet);class BitCrusher extends Effect{constructor(){super(optionsFromArguments(BitCrusher.getDefaults(),arguments,["bits"])),this.name="BitCrusher";const e=optionsFromArguments(BitCrusher.getDefaults(),arguments,["bits"]);this._bitCrusherWorklet=new BitCrusherWorklet({context:this.context,bits:e.bits}),this.connectEffect(this._bitCrusherWorklet),this.bits=this._bitCrusherWorklet.bits}static getDefaults(){return Object.assign(Effect.getDefaults(),{bits:4})}dispose(){return super.dispose(),this._bitCrusherWorklet.dispose(),this}}class BitCrusherWorklet extends ToneAudioWorklet{constructor(){super(optionsFromArguments(BitCrusherWorklet.getDefaults(),arguments)),this.name="BitCrusherWorklet";const e=optionsFromArguments(BitCrusherWorklet.getDefaults(),arguments);this.input=new Gain({context:this.context}),this.output=new Gain({context:this.context}),this.bits=new Param({context:this.context,value:e.bits,units:"positive",minValue:1,maxValue:16,param:this._dummyParam,swappable:!0})}static getDefaults(){return Object.assign(ToneAudioWorklet.getDefaults(),{bits:12})}_audioWorkletName(){return workletName}onReady(e){connectSeries(this.input,e,this.output);const t=e.parameters.get("bits");this.bits.setParam(t)}dispose(){return super.dispose(),this.input.dispose(),this.output.dispose(),this.bits.dispose(),this}}class Chebyshev extends Effect{constructor(){super(optionsFromArguments(Chebyshev.getDefaults(),arguments,["order"])),this.name="Chebyshev";const e=optionsFromArguments(Chebyshev.getDefaults(),arguments,["order"]);this._shaper=new WaveShaper({context:this.context,length:4096}),this._order=e.order,this.connectEffect(this._shaper),this.order=e.order,this.oversample=e.oversample}static getDefaults(){return Object.assign(Effect.getDefaults(),{order:1,oversample:"none"})}_getCoefficient(e,t,s){return s.has(t)||(t===0?s.set(t,0):t===1?s.set(t,e):s.set(t,2*e*this._getCoefficient(e,t-1,s)-this._getCoefficient(e,t-2,s))),s.get(t)}get order(){return this._order}set order(e){this._order=e,this._shaper.setMap(t=>this._getCoefficient(t,e,new Map))}get oversample(){return this._shaper.oversample}set oversample(e){this._shaper.oversample=e}dispose(){return super.dispose(),this._shaper.dispose(),this}}class Split extends ToneAudioNode{constructor(){super(optionsFromArguments(Split.getDefaults(),arguments,["channels"])),this.name="Split";const e=optionsFromArguments(Split.getDefaults(),arguments,["channels"]);this._splitter=this.input=this.output=this.context.createChannelSplitter(e.channels),this._internalChannels=[this._splitter]}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{channels:2})}dispose(){return super.dispose(),this._splitter.disconnect(),this}}class Merge extends ToneAudioNode{constructor(){super(optionsFromArguments(Merge.getDefaults(),arguments,["channels"])),this.name="Merge";const e=optionsFromArguments(Merge.getDefaults(),arguments,["channels"]);this._merger=this.output=this.input=this.context.createChannelMerger(e.channels)}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{channels:2})}dispose(){return super.dispose(),this._merger.disconnect(),this}}class StereoEffect extends ToneAudioNode{constructor(e){super(e),this.name="StereoEffect",this.input=new Gain({context:this.context}),this.input.channelCount=2,this.input.channelCountMode="explicit",this._dryWet=this.output=new CrossFade({context:this.context,fade:e.wet}),this.wet=this._dryWet.fade,this._split=new Split({context:this.context,channels:2}),this._merge=new Merge({context:this.context,channels:2}),this.input.connect(this._split),this.input.connect(this._dryWet.a),this._merge.connect(this._dryWet.b),readOnly(this,["wet"])}connectEffectLeft(...e){this._split.connect(e[0],0,0),connectSeries(...e),connect(e[e.length-1],this._merge,0,0)}connectEffectRight(...e){this._split.connect(e[0],1,0),connectSeries(...e),connect(e[e.length-1],this._merge,0,1)}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{wet:1})}dispose(){return super.dispose(),this._dryWet.dispose(),this._split.dispose(),this._merge.dispose(),this}}class StereoFeedbackEffect extends StereoEffect{constructor(e){super(e),this.feedback=new Signal({context:this.context,value:e.feedback,units:"normalRange"}),this._feedbackL=new Gain({context:this.context}),this._feedbackR=new Gain({context:this.context}),this._feedbackSplit=new Split({context:this.context,channels:2}),this._feedbackMerge=new Merge({context:this.context,channels:2}),this._merge.connect(this._feedbackSplit),this._feedbackMerge.connect(this._split),this._feedbackSplit.connect(this._feedbackL,0,0),this._feedbackL.connect(this._feedbackMerge,0,0),this._feedbackSplit.connect(this._feedbackR,1,0),this._feedbackR.connect(this._feedbackMerge,0,1),this.feedback.fan(this._feedbackL.gain,this._feedbackR.gain),readOnly(this,["feedback"])}static getDefaults(){return Object.assign(StereoEffect.getDefaults(),{feedback:.5})}dispose(){return super.dispose(),this.feedback.dispose(),this._feedbackL.dispose(),this._feedbackR.dispose(),this._feedbackSplit.dispose(),this._feedbackMerge.dispose(),this}}class Chorus extends StereoFeedbackEffect{constructor(){super(optionsFromArguments(Chorus.getDefaults(),arguments,["frequency","delayTime","depth"])),this.name="Chorus";const e=optionsFromArguments(Chorus.getDefaults(),arguments,["frequency","delayTime","depth"]);this._depth=e.depth,this._delayTime=e.delayTime/1e3,this._lfoL=new LFO({context:this.context,frequency:e.frequency,min:0,max:1}),this._lfoR=new LFO({context:this.context,frequency:e.frequency,min:0,max:1,phase:180}),this._delayNodeL=new Delay({context:this.context}),this._delayNodeR=new Delay({context:this.context}),this.frequency=this._lfoL.frequency,readOnly(this,["frequency"]),this._lfoL.frequency.connect(this._lfoR.frequency),this.connectEffectLeft(this._delayNodeL),this.connectEffectRight(this._delayNodeR),this._lfoL.connect(this._delayNodeL.delayTime),this._lfoR.connect(this._delayNodeR.delayTime),this.depth=this._depth,this.type=e.type,this.spread=e.spread}static getDefaults(){return Object.assign(StereoFeedbackEffect.getDefaults(),{frequency:1.5,delayTime:3.5,depth:.7,type:"sine",spread:180,feedback:0,wet:.5})}get depth(){return this._depth}set depth(e){this._depth=e;const t=this._delayTime*e;this._lfoL.min=Math.max(this._delayTime-t,0),this._lfoL.max=this._delayTime+t,this._lfoR.min=Math.max(this._delayTime-t,0),this._lfoR.max=this._delayTime+t}get delayTime(){return this._delayTime*1e3}set delayTime(e){this._delayTime=e/1e3,this.depth=this._depth}get type(){return this._lfoL.type}set type(e){this._lfoL.type=e,this._lfoR.type=e}get spread(){return this._lfoR.phase-this._lfoL.phase}set spread(e){this._lfoL.phase=90-e/2,this._lfoR.phase=e/2+90}start(e){return this._lfoL.start(e),this._lfoR.start(e),this}stop(e){return this._lfoL.stop(e),this._lfoR.stop(e),this}sync(){return this._lfoL.sync(),this._lfoR.sync(),this}unsync(){return this._lfoL.unsync(),this._lfoR.unsync(),this}dispose(){return super.dispose(),this._lfoL.dispose(),this._lfoR.dispose(),this._delayNodeL.dispose(),this._delayNodeR.dispose(),this.frequency.dispose(),this}}class Distortion extends Effect{constructor(){super(optionsFromArguments(Distortion.getDefaults(),arguments,["distortion"])),this.name="Distortion";const e=optionsFromArguments(Distortion.getDefaults(),arguments,["distortion"]);this._shaper=new WaveShaper({context:this.context,length:4096}),this._distortion=e.distortion,this.connectEffect(this._shaper),this.distortion=e.distortion,this.oversample=e.oversample}static getDefaults(){return Object.assign(Effect.getDefaults(),{distortion:.4,oversample:"none"})}get distortion(){return this._distortion}set distortion(e){this._distortion=e;const t=e*100,s=Math.PI/180;this._shaper.setMap(o=>Math.abs(o)<.001?0:(3+t)*o*20*s/(Math.PI+t*Math.abs(o)))}get oversample(){return this._shaper.oversample}set oversample(e){this._shaper.oversample=e}dispose(){return super.dispose(),this._shaper.dispose(),this}}class FeedbackEffect extends Effect{constructor(e){super(e),this.name="FeedbackEffect",this._feedbackGain=new Gain({context:this.context,gain:e.feedback,units:"normalRange"}),this.feedback=this._feedbackGain.gain,readOnly(this,"feedback"),this.effectReturn.chain(this._feedbackGain,this.effectSend)}static getDefaults(){return Object.assign(Effect.getDefaults(),{feedback:.125})}dispose(){return super.dispose(),this._feedbackGain.dispose(),this.feedback.dispose(),this}}class FeedbackDelay extends FeedbackEffect{constructor(){super(optionsFromArguments(FeedbackDelay.getDefaults(),arguments,["delayTime","feedback"])),this.name="FeedbackDelay";const e=optionsFromArguments(FeedbackDelay.getDefaults(),arguments,["delayTime","feedback"]);this._delayNode=new Delay({context:this.context,delayTime:e.delayTime,maxDelay:e.maxDelay}),this.delayTime=this._delayNode.delayTime,this.connectEffect(this._delayNode),readOnly(this,"delayTime")}static getDefaults(){return Object.assign(FeedbackEffect.getDefaults(),{delayTime:.25,maxDelay:1})}dispose(){return super.dispose(),this._delayNode.dispose(),this.delayTime.dispose(),this}}class PhaseShiftAllpass extends ToneAudioNode{constructor(e){super(e),this.name="PhaseShiftAllpass",this.input=new Gain({context:this.context}),this.output=new Gain({context:this.context}),this.offset90=new Gain({context:this.context});const t=[.6923878,.9360654322959,.988229522686,.9987488452737],s=[.4021921162426,.856171088242,.9722909545651,.9952884791278];this._bank0=this._createAllPassFilterBank(t),this._bank1=this._createAllPassFilterBank(s),this._oneSampleDelay=this.context.createIIRFilter([0,1],[1,0]),connectSeries(this.input,...this._bank0,this._oneSampleDelay,this.output),connectSeries(this.input,...this._bank1,this.offset90)}_createAllPassFilterBank(e){return e.map(s=>{const o=[[s*s,0,-1],[1,0,-(s*s)]];return this.context.createIIRFilter(o[0],o[1])})}dispose(){return super.dispose(),this.input.dispose(),this.output.dispose(),this.offset90.dispose(),this._bank0.forEach(e=>e.disconnect()),this._bank1.forEach(e=>e.disconnect()),this._oneSampleDelay.disconnect(),this}}class FrequencyShifter extends Effect{constructor(){super(optionsFromArguments(FrequencyShifter.getDefaults(),arguments,["frequency"])),this.name="FrequencyShifter";const e=optionsFromArguments(FrequencyShifter.getDefaults(),arguments,["frequency"]);this.frequency=new Signal({context:this.context,units:"frequency",value:e.frequency,minValue:-this.context.sampleRate/2,maxValue:this.context.sampleRate/2}),this._sine=new ToneOscillatorNode({context:this.context,type:"sine"}),this._cosine=new Oscillator({context:this.context,phase:-90,type:"sine"}),this._sineMultiply=new Multiply({context:this.context}),this._cosineMultiply=new Multiply({context:this.context}),this._negate=new Negate({context:this.context}),this._add=new Add({context:this.context}),this._phaseShifter=new PhaseShiftAllpass({context:this.context}),this.effectSend.connect(this._phaseShifter),this.frequency.fan(this._sine.frequency,this._cosine.frequency),this._phaseShifter.offset90.connect(this._cosineMultiply),this._cosine.connect(this._cosineMultiply.factor),this._phaseShifter.connect(this._sineMultiply),this._sine.connect(this._sineMultiply.factor),this._sineMultiply.connect(this._negate),this._cosineMultiply.connect(this._add),this._negate.connect(this._add.addend),this._add.connect(this.effectReturn);const t=this.immediate();this._sine.start(t),this._cosine.start(t)}static getDefaults(){return Object.assign(Effect.getDefaults(),{frequency:0})}dispose(){return super.dispose(),this.frequency.dispose(),this._add.dispose(),this._cosine.dispose(),this._cosineMultiply.dispose(),this._negate.dispose(),this._phaseShifter.dispose(),this._sine.dispose(),this._sineMultiply.dispose(),this}}const combFilterTunings=[1557/44100,1617/44100,1491/44100,1422/44100,1277/44100,1356/44100,1188/44100,1116/44100],allpassFilterFrequencies=[225,556,441,341];class Freeverb extends StereoEffect{constructor(){super(optionsFromArguments(Freeverb.getDefaults(),arguments,["roomSize","dampening"])),this.name="Freeverb",this._combFilters=[],this._allpassFiltersL=[],this._allpassFiltersR=[];const e=optionsFromArguments(Freeverb.getDefaults(),arguments,["roomSize","dampening"]);this.roomSize=new Signal({context:this.context,value:e.roomSize,units:"normalRange"}),this._allpassFiltersL=allpassFilterFrequencies.map(t=>{const s=this.context.createBiquadFilter();return s.type="allpass",s.frequency.value=t,s}),this._allpassFiltersR=allpassFilterFrequencies.map(t=>{const s=this.context.createBiquadFilter();return s.type="allpass",s.frequency.value=t,s}),this._combFilters=combFilterTunings.map((t,s)=>{const o=new LowpassCombFilter({context:this.context,dampening:e.dampening,delayTime:t});return s<combFilterTunings.length/2?this.connectEffectLeft(o,...this._allpassFiltersL):this.connectEffectRight(o,...this._allpassFiltersR),this.roomSize.connect(o.resonance),o}),readOnly(this,["roomSize"])}static getDefaults(){return Object.assign(StereoEffect.getDefaults(),{roomSize:.7,dampening:3e3})}get dampening(){return this._combFilters[0].dampening}set dampening(e){this._combFilters.forEach(t=>t.dampening=e)}dispose(){return super.dispose(),this._allpassFiltersL.forEach(e=>e.disconnect()),this._allpassFiltersR.forEach(e=>e.disconnect()),this._combFilters.forEach(e=>e.dispose()),this.roomSize.dispose(),this}}const combFilterDelayTimes=[1687/25e3,1601/25e3,2053/25e3,2251/25e3],combFilterResonances=[.773,.802,.753,.733],allpassFilterFreqs=[347,113,37];class JCReverb extends StereoEffect{constructor(){super(optionsFromArguments(JCReverb.getDefaults(),arguments,["roomSize"])),this.name="JCReverb",this._allpassFilters=[],this._feedbackCombFilters=[];const e=optionsFromArguments(JCReverb.getDefaults(),arguments,["roomSize"]);this.roomSize=new Signal({context:this.context,value:e.roomSize,units:"normalRange"}),this._scaleRoomSize=new Scale({context:this.context,min:-.733,max:.197}),this._allpassFilters=allpassFilterFreqs.map(t=>{const s=this.context.createBiquadFilter();return s.type="allpass",s.frequency.value=t,s}),this._feedbackCombFilters=combFilterDelayTimes.map((t,s)=>{const o=new FeedbackCombFilter({context:this.context,delayTime:t});return this._scaleRoomSize.connect(o.resonance),o.resonance.value=combFilterResonances[s],s<combFilterDelayTimes.length/2?this.connectEffectLeft(...this._allpassFilters,o):this.connectEffectRight(...this._allpassFilters,o),o}),this.roomSize.connect(this._scaleRoomSize),readOnly(this,["roomSize"])}static getDefaults(){return Object.assign(StereoEffect.getDefaults(),{roomSize:.5})}dispose(){return super.dispose(),this._allpassFilters.forEach(e=>e.disconnect()),this._feedbackCombFilters.forEach(e=>e.dispose()),this.roomSize.dispose(),this._scaleRoomSize.dispose(),this}}class StereoXFeedbackEffect extends StereoFeedbackEffect{constructor(e){super(e),this._feedbackL.disconnect(),this._feedbackL.connect(this._feedbackMerge,0,1),this._feedbackR.disconnect(),this._feedbackR.connect(this._feedbackMerge,0,0),readOnly(this,["feedback"])}}class PingPongDelay extends StereoXFeedbackEffect{constructor(){super(optionsFromArguments(PingPongDelay.getDefaults(),arguments,["delayTime","feedback"])),this.name="PingPongDelay";const e=optionsFromArguments(PingPongDelay.getDefaults(),arguments,["delayTime","feedback"]);this._leftDelay=new Delay({context:this.context,maxDelay:e.maxDelay}),this._rightDelay=new Delay({context:this.context,maxDelay:e.maxDelay}),this._rightPreDelay=new Delay({context:this.context,maxDelay:e.maxDelay}),this.delayTime=new Signal({context:this.context,units:"time",value:e.delayTime}),this.connectEffectLeft(this._leftDelay),this.connectEffectRight(this._rightPreDelay,this._rightDelay),this.delayTime.fan(this._leftDelay.delayTime,this._rightDelay.delayTime,this._rightPreDelay.delayTime),this._feedbackL.disconnect(),this._feedbackL.connect(this._rightDelay),readOnly(this,["delayTime"])}static getDefaults(){return Object.assign(StereoXFeedbackEffect.getDefaults(),{delayTime:.25,maxDelay:1})}dispose(){return super.dispose(),this._leftDelay.dispose(),this._rightDelay.dispose(),this._rightPreDelay.dispose(),this.delayTime.dispose(),this}}class PitchShift extends FeedbackEffect{constructor(){super(optionsFromArguments(PitchShift.getDefaults(),arguments,["pitch"])),this.name="PitchShift";const e=optionsFromArguments(PitchShift.getDefaults(),arguments,["pitch"]);this._frequency=new Signal({context:this.context}),this._delayA=new Delay({maxDelay:1,context:this.context}),this._lfoA=new LFO({context:this.context,min:0,max:.1,type:"sawtooth"}).connect(this._delayA.delayTime),this._delayB=new Delay({maxDelay:1,context:this.context}),this._lfoB=new LFO({context:this.context,min:0,max:.1,type:"sawtooth",phase:180}).connect(this._delayB.delayTime),this._crossFade=new CrossFade({context:this.context}),this._crossFadeLFO=new LFO({context:this.context,min:0,max:1,type:"triangle",phase:90}).connect(this._crossFade.fade),this._feedbackDelay=new Delay({delayTime:e.delayTime,context:this.context}),this.delayTime=this._feedbackDelay.delayTime,readOnly(this,"delayTime"),this._pitch=e.pitch,this._windowSize=e.windowSize,this._delayA.connect(this._crossFade.a),this._delayB.connect(this._crossFade.b),this._frequency.fan(this._lfoA.frequency,this._lfoB.frequency,this._crossFadeLFO.frequency),this.effectSend.fan(this._delayA,this._delayB),this._crossFade.chain(this._feedbackDelay,this.effectReturn);const t=this.now();this._lfoA.start(t),this._lfoB.start(t),this._crossFadeLFO.start(t),this.windowSize=this._windowSize}static getDefaults(){return Object.assign(FeedbackEffect.getDefaults(),{pitch:0,windowSize:.1,delayTime:0,feedback:0})}get pitch(){return this._pitch}set pitch(e){this._pitch=e;let t=0;e<0?(this._lfoA.min=0,this._lfoA.max=this._windowSize,this._lfoB.min=0,this._lfoB.max=this._windowSize,t=intervalToFrequencyRatio(e-1)+1):(this._lfoA.min=this._windowSize,this._lfoA.max=0,this._lfoB.min=this._windowSize,this._lfoB.max=0,t=intervalToFrequencyRatio(e)-1),this._frequency.value=t*(1.2/this._windowSize)}get windowSize(){return this._windowSize}set windowSize(e){this._windowSize=this.toSeconds(e),this.pitch=this._pitch}dispose(){return super.dispose(),this._frequency.dispose(),this._delayA.dispose(),this._delayB.dispose(),this._lfoA.dispose(),this._lfoB.dispose(),this._crossFade.dispose(),this._crossFadeLFO.dispose(),this._feedbackDelay.dispose(),this}}class Phaser extends StereoEffect{constructor(){super(optionsFromArguments(Phaser.getDefaults(),arguments,["frequency","octaves","baseFrequency"])),this.name="Phaser";const e=optionsFromArguments(Phaser.getDefaults(),arguments,["frequency","octaves","baseFrequency"]);this._lfoL=new LFO({context:this.context,frequency:e.frequency,min:0,max:1}),this._lfoR=new LFO({context:this.context,frequency:e.frequency,min:0,max:1,phase:180}),this._baseFrequency=this.toFrequency(e.baseFrequency),this._octaves=e.octaves,this.Q=new Signal({context:this.context,value:e.Q,units:"positive"}),this._filtersL=this._makeFilters(e.stages,this._lfoL),this._filtersR=this._makeFilters(e.stages,this._lfoR),this.frequency=this._lfoL.frequency,this.frequency.value=e.frequency,this.connectEffectLeft(...this._filtersL),this.connectEffectRight(...this._filtersR),this._lfoL.frequency.connect(this._lfoR.frequency),this.baseFrequency=e.baseFrequency,this.octaves=e.octaves,this._lfoL.start(),this._lfoR.start(),readOnly(this,["frequency","Q"])}static getDefaults(){return Object.assign(StereoEffect.getDefaults(),{frequency:.5,octaves:3,stages:10,Q:10,baseFrequency:350})}_makeFilters(e,t){const s=[];for(let o=0;o<e;o++){const r=this.context.createBiquadFilter();r.type="allpass",this.Q.connect(r.Q),t.connect(r.frequency),s.push(r)}return s}get octaves(){return this._octaves}set octaves(e){this._octaves=e;const t=this._baseFrequency*Math.pow(2,e);this._lfoL.max=t,this._lfoR.max=t}get baseFrequency(){return this._baseFrequency}set baseFrequency(e){this._baseFrequency=this.toFrequency(e),this._lfoL.min=this._baseFrequency,this._lfoR.min=this._baseFrequency,this.octaves=this._octaves}dispose(){return super.dispose(),this.Q.dispose(),this._lfoL.dispose(),this._lfoR.dispose(),this._filtersL.forEach(e=>e.disconnect()),this._filtersR.forEach(e=>e.disconnect()),this.frequency.dispose(),this}}let Reverb$2=class Ne extends Effect{constructor(){super(optionsFromArguments(Ne.getDefaults(),arguments,["decay"])),this.name="Reverb",this._convolver=this.context.createConvolver(),this.ready=Promise.resolve();const e=optionsFromArguments(Ne.getDefaults(),arguments,["decay"]);this._decay=e.decay,this._preDelay=e.preDelay,this.generate(),this.connectEffect(this._convolver)}static getDefaults(){return Object.assign(Effect.getDefaults(),{decay:1.5,preDelay:.01})}get decay(){return this._decay}set decay(e){e=this.toSeconds(e),assertRange(e,.001),this._decay=e,this.generate()}get preDelay(){return this._preDelay}set preDelay(e){e=this.toSeconds(e),assertRange(e,0),this._preDelay=e,this.generate()}generate(){return __awaiter(this,void 0,void 0,function*(){const e=this.ready,t=new OfflineContext(2,this._decay+this._preDelay,this.context.sampleRate),s=new Noise({context:t}),o=new Noise({context:t}),r=new Merge({context:t});s.connect(r,0,0),o.connect(r,0,1);const a=new Gain({context:t}).toDestination();r.connect(a),s.start(0),o.start(0),a.gain.setValueAtTime(0,0),a.gain.setValueAtTime(1,this._preDelay),a.gain.exponentialApproachValueAtTime(0,this._preDelay,this.decay);const c=t.render();return this.ready=c.then(noOp),yield e,this._convolver.buffer=(yield c).get(),this})}dispose(){return super.dispose(),this._convolver.disconnect(),this}};class MidSideSplit extends ToneAudioNode{constructor(){super(optionsFromArguments(MidSideSplit.getDefaults(),arguments)),this.name="MidSideSplit",this._split=this.input=new Split({channels:2,context:this.context}),this._midAdd=new Add({context:this.context}),this.mid=new Multiply({context:this.context,value:Math.SQRT1_2}),this._sideSubtract=new Subtract({context:this.context}),this.side=new Multiply({context:this.context,value:Math.SQRT1_2}),this._split.connect(this._midAdd,0),this._split.connect(this._midAdd.addend,1),this._split.connect(this._sideSubtract,0),this._split.connect(this._sideSubtract.subtrahend,1),this._midAdd.connect(this.mid),this._sideSubtract.connect(this.side)}dispose(){return super.dispose(),this.mid.dispose(),this.side.dispose(),this._midAdd.dispose(),this._sideSubtract.dispose(),this._split.dispose(),this}}class MidSideMerge extends ToneAudioNode{constructor(){super(optionsFromArguments(MidSideMerge.getDefaults(),arguments)),this.name="MidSideMerge",this.mid=new Gain({context:this.context}),this.side=new Gain({context:this.context}),this._left=new Add({context:this.context}),this._leftMult=new Multiply({context:this.context,value:Math.SQRT1_2}),this._right=new Subtract({context:this.context}),this._rightMult=new Multiply({context:this.context,value:Math.SQRT1_2}),this._merge=this.output=new Merge({context:this.context}),this.mid.fan(this._left),this.side.connect(this._left.addend),this.mid.connect(this._right),this.side.connect(this._right.subtrahend),this._left.connect(this._leftMult),this._right.connect(this._rightMult),this._leftMult.connect(this._merge,0,0),this._rightMult.connect(this._merge,0,1)}dispose(){return super.dispose(),this.mid.dispose(),this.side.dispose(),this._leftMult.dispose(),this._rightMult.dispose(),this._left.dispose(),this._right.dispose(),this}}class MidSideEffect extends Effect{constructor(e){super(e),this.name="MidSideEffect",this._midSideMerge=new MidSideMerge({context:this.context}),this._midSideSplit=new MidSideSplit({context:this.context}),this._midSend=this._midSideSplit.mid,this._sideSend=this._midSideSplit.side,this._midReturn=this._midSideMerge.mid,this._sideReturn=this._midSideMerge.side,this.effectSend.connect(this._midSideSplit),this._midSideMerge.connect(this.effectReturn)}connectEffectMid(...e){this._midSend.chain(...e,this._midReturn)}connectEffectSide(...e){this._sideSend.chain(...e,this._sideReturn)}dispose(){return super.dispose(),this._midSideSplit.dispose(),this._midSideMerge.dispose(),this._midSend.dispose(),this._sideSend.dispose(),this._midReturn.dispose(),this._sideReturn.dispose(),this}}class StereoWidener extends MidSideEffect{constructor(){super(optionsFromArguments(StereoWidener.getDefaults(),arguments,["width"])),this.name="StereoWidener";const e=optionsFromArguments(StereoWidener.getDefaults(),arguments,["width"]);this.width=new Signal({context:this.context,value:e.width,units:"normalRange"}),readOnly(this,["width"]),this._twoTimesWidthMid=new Multiply({context:this.context,value:2}),this._twoTimesWidthSide=new Multiply({context:this.context,value:2}),this._midMult=new Multiply({context:this.context}),this._twoTimesWidthMid.connect(this._midMult.factor),this.connectEffectMid(this._midMult),this._oneMinusWidth=new Subtract({context:this.context}),this._oneMinusWidth.connect(this._twoTimesWidthMid),connect(this.context.getConstant(1),this._oneMinusWidth),this.width.connect(this._oneMinusWidth.subtrahend),this._sideMult=new Multiply({context:this.context}),this.width.connect(this._twoTimesWidthSide),this._twoTimesWidthSide.connect(this._sideMult.factor),this.connectEffectSide(this._sideMult)}static getDefaults(){return Object.assign(MidSideEffect.getDefaults(),{width:.5})}dispose(){return super.dispose(),this.width.dispose(),this._midMult.dispose(),this._sideMult.dispose(),this._twoTimesWidthMid.dispose(),this._twoTimesWidthSide.dispose(),this._oneMinusWidth.dispose(),this}}class Tremolo extends StereoEffect{constructor(){super(optionsFromArguments(Tremolo.getDefaults(),arguments,["frequency","depth"])),this.name="Tremolo";const e=optionsFromArguments(Tremolo.getDefaults(),arguments,["frequency","depth"]);this._lfoL=new LFO({context:this.context,type:e.type,min:1,max:0}),this._lfoR=new LFO({context:this.context,type:e.type,min:1,max:0}),this._amplitudeL=new Gain({context:this.context}),this._amplitudeR=new Gain({context:this.context}),this.frequency=new Signal({context:this.context,value:e.frequency,units:"frequency"}),this.depth=new Signal({context:this.context,value:e.depth,units:"normalRange"}),readOnly(this,["frequency","depth"]),this.connectEffectLeft(this._amplitudeL),this.connectEffectRight(this._amplitudeR),this._lfoL.connect(this._amplitudeL.gain),this._lfoR.connect(this._amplitudeR.gain),this.frequency.fan(this._lfoL.frequency,this._lfoR.frequency),this.depth.fan(this._lfoR.amplitude,this._lfoL.amplitude),this.spread=e.spread}static getDefaults(){return Object.assign(StereoEffect.getDefaults(),{frequency:10,type:"sine",depth:.5,spread:180})}start(e){return this._lfoL.start(e),this._lfoR.start(e),this}stop(e){return this._lfoL.stop(e),this._lfoR.stop(e),this}sync(){return this._lfoL.sync(),this._lfoR.sync(),this.context.transport.syncSignal(this.frequency),this}unsync(){return this._lfoL.unsync(),this._lfoR.unsync(),this.context.transport.unsyncSignal(this.frequency),this}get type(){return this._lfoL.type}set type(e){this._lfoL.type=e,this._lfoR.type=e}get spread(){return this._lfoR.phase-this._lfoL.phase}set spread(e){this._lfoL.phase=90-e/2,this._lfoR.phase=e/2+90}dispose(){return super.dispose(),this._lfoL.dispose(),this._lfoR.dispose(),this._amplitudeL.dispose(),this._amplitudeR.dispose(),this.frequency.dispose(),this.depth.dispose(),this}}class Vibrato extends Effect{constructor(){super(optionsFromArguments(Vibrato.getDefaults(),arguments,["frequency","depth"])),this.name="Vibrato";const e=optionsFromArguments(Vibrato.getDefaults(),arguments,["frequency","depth"]);this._delayNode=new Delay({context:this.context,delayTime:0,maxDelay:e.maxDelay}),this._lfo=new LFO({context:this.context,type:e.type,min:0,max:e.maxDelay,frequency:e.frequency,phase:-90}).start().connect(this._delayNode.delayTime),this.frequency=this._lfo.frequency,this.depth=this._lfo.amplitude,this.depth.value=e.depth,readOnly(this,["frequency","depth"]),this.effectSend.chain(this._delayNode,this.effectReturn)}static getDefaults(){return Object.assign(Effect.getDefaults(),{maxDelay:.005,frequency:5,depth:.1,type:"sine"})}get type(){return this._lfo.type}set type(e){this._lfo.type=e}dispose(){return super.dispose(),this._delayNode.dispose(),this._lfo.dispose(),this.frequency.dispose(),this.depth.dispose(),this}}class Analyser extends ToneAudioNode{constructor(){super(optionsFromArguments(Analyser.getDefaults(),arguments,["type","size"])),this.name="Analyser",this._analysers=[],this._buffers=[];const e=optionsFromArguments(Analyser.getDefaults(),arguments,["type","size"]);this.input=this.output=this._gain=new Gain({context:this.context}),this._split=new Split({context:this.context,channels:e.channels}),this.input.connect(this._split),assertRange(e.channels,1);for(let t=0;t<e.channels;t++)this._analysers[t]=this.context.createAnalyser(),this._split.connect(this._analysers[t],t,0);this.size=e.size,this.type=e.type}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{size:1024,smoothing:.8,type:"fft",channels:1})}getValue(){return this._analysers.forEach((e,t)=>{const s=this._buffers[t];this._type==="fft"?e.getFloatFrequencyData(s):this._type==="waveform"&&e.getFloatTimeDomainData(s)}),this.channels===1?this._buffers[0]:this._buffers}get size(){return this._analysers[0].frequencyBinCount}set size(e){this._analysers.forEach((t,s)=>{t.fftSize=e*2,this._buffers[s]=new Float32Array(e)})}get channels(){return this._analysers.length}get type(){return this._type}set type(e){assert(e==="waveform"||e==="fft",`Analyser: invalid type: ${e}`),this._type=e}get smoothing(){return this._analysers[0].smoothingTimeConstant}set smoothing(e){this._analysers.forEach(t=>t.smoothingTimeConstant=e)}dispose(){return super.dispose(),this._analysers.forEach(e=>e.disconnect()),this._split.dispose(),this._gain.dispose(),this}}class MeterBase extends ToneAudioNode{constructor(){super(optionsFromArguments(MeterBase.getDefaults(),arguments)),this.name="MeterBase",this.input=this.output=this._analyser=new Analyser({context:this.context,size:256,type:"waveform"})}dispose(){return super.dispose(),this._analyser.dispose(),this}}class Meter extends MeterBase{constructor(){super(optionsFromArguments(Meter.getDefaults(),arguments,["smoothing"])),this.name="Meter",this._rms=0;const e=optionsFromArguments(Meter.getDefaults(),arguments,["smoothing"]);this.input=this.output=this._analyser=new Analyser({context:this.context,size:256,type:"waveform",channels:e.channels}),this.smoothing=e.smoothing,this.normalRange=e.normalRange}static getDefaults(){return Object.assign(MeterBase.getDefaults(),{smoothing:.8,normalRange:!1,channels:1})}getLevel(){return warn("'getLevel' has been changed to 'getValue'"),this.getValue()}getValue(){const e=this._analyser.getValue(),s=(this.channels===1?[e]:e).map(o=>{const r=o.reduce((c,l)=>c+l*l,0),a=Math.sqrt(r/o.length);return this._rms=Math.max(a,this._rms*this.smoothing),this.normalRange?this._rms:gainToDb(this._rms)});return this.channels===1?s[0]:s}get channels(){return this._analyser.channels}dispose(){return super.dispose(),this._analyser.dispose(),this}}class FFT extends MeterBase{constructor(){super(optionsFromArguments(FFT.getDefaults(),arguments,["size"])),this.name="FFT";const e=optionsFromArguments(FFT.getDefaults(),arguments,["size"]);this.normalRange=e.normalRange,this._analyser.type="fft",this.size=e.size}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{normalRange:!1,size:1024,smoothing:.8})}getValue(){return this._analyser.getValue().map(t=>this.normalRange?dbToGain(t):t)}get size(){return this._analyser.size}set size(e){this._analyser.size=e}get smoothing(){return this._analyser.smoothing}set smoothing(e){this._analyser.smoothing=e}getFrequencyOfIndex(e){return assert(0<=e&&e<this.size,`index must be greater than or equal to 0 and less than ${this.size}`),e*this.context.sampleRate/(this.size*2)}}class DCMeter extends MeterBase{constructor(){super(optionsFromArguments(DCMeter.getDefaults(),arguments)),this.name="DCMeter",this._analyser.type="waveform",this._analyser.size=256}getValue(){return this._analyser.getValue()[0]}}class Waveform extends MeterBase{constructor(){super(optionsFromArguments(Waveform.getDefaults(),arguments,["size"])),this.name="Waveform";const e=optionsFromArguments(Waveform.getDefaults(),arguments,["size"]);this._analyser.type="waveform",this.size=e.size}static getDefaults(){return Object.assign(MeterBase.getDefaults(),{size:1024})}getValue(){return this._analyser.getValue()}get size(){return this._analyser.size}set size(e){this._analyser.size=e}}class Solo extends ToneAudioNode{constructor(){super(optionsFromArguments(Solo.getDefaults(),arguments,["solo"])),this.name="Solo";const e=optionsFromArguments(Solo.getDefaults(),arguments,["solo"]);this.input=this.output=new Gain({context:this.context}),Solo._allSolos.has(this.context)||Solo._allSolos.set(this.context,new Set),Solo._allSolos.get(this.context).add(this),this.solo=e.solo}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{solo:!1})}get solo(){return this._isSoloed()}set solo(e){e?this._addSolo():this._removeSolo(),Solo._allSolos.get(this.context).forEach(t=>t._updateSolo())}get muted(){return this.input.gain.value===0}_addSolo(){Solo._soloed.has(this.context)||Solo._soloed.set(this.context,new Set),Solo._soloed.get(this.context).add(this)}_removeSolo(){Solo._soloed.has(this.context)&&Solo._soloed.get(this.context).delete(this)}_isSoloed(){return Solo._soloed.has(this.context)&&Solo._soloed.get(this.context).has(this)}_noSolos(){return!Solo._soloed.has(this.context)||Solo._soloed.has(this.context)&&Solo._soloed.get(this.context).size===0}_updateSolo(){this._isSoloed()?this.input.gain.value=1:this._noSolos()?this.input.gain.value=1:this.input.gain.value=0}dispose(){return super.dispose(),Solo._allSolos.get(this.context).delete(this),this._removeSolo(),this}}Solo._allSolos=new Map;Solo._soloed=new Map;class PanVol extends ToneAudioNode{constructor(){super(optionsFromArguments(PanVol.getDefaults(),arguments,["pan","volume"])),this.name="PanVol";const e=optionsFromArguments(PanVol.getDefaults(),arguments,["pan","volume"]);this._panner=this.input=new Panner({context:this.context,pan:e.pan,channelCount:e.channelCount}),this.pan=this._panner.pan,this._volume=this.output=new Volume({context:this.context,volume:e.volume}),this.volume=this._volume.volume,this._panner.connect(this._volume),this.mute=e.mute,readOnly(this,["pan","volume"])}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{mute:!1,pan:0,volume:0,channelCount:1})}get mute(){return this._volume.mute}set mute(e){this._volume.mute=e}dispose(){return super.dispose(),this._panner.dispose(),this.pan.dispose(),this._volume.dispose(),this.volume.dispose(),this}}class Channel extends ToneAudioNode{constructor(){super(optionsFromArguments(Channel.getDefaults(),arguments,["volume","pan"])),this.name="Channel";const e=optionsFromArguments(Channel.getDefaults(),arguments,["volume","pan"]);this._solo=this.input=new Solo({solo:e.solo,context:this.context}),this._panVol=this.output=new PanVol({context:this.context,pan:e.pan,volume:e.volume,mute:e.mute,channelCount:e.channelCount}),this.pan=this._panVol.pan,this.volume=this._panVol.volume,this._solo.connect(this._panVol),readOnly(this,["pan","volume"])}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{pan:0,volume:0,mute:!1,solo:!1,channelCount:1})}get solo(){return this._solo.solo}set solo(e){this._solo.solo=e}get muted(){return this._solo.muted||this.mute}get mute(){return this._panVol.mute}set mute(e){this._panVol.mute=e}_getBus(e){return Channel.buses.has(e)||Channel.buses.set(e,new Gain({context:this.context})),Channel.buses.get(e)}send(e,t=0){const s=this._getBus(e),o=new Gain({context:this.context,units:"decibels",gain:t});return this.connect(o),o.connect(s),o}receive(e){return this._getBus(e).connect(this),this}dispose(){return super.dispose(),this._panVol.dispose(),this.pan.dispose(),this.volume.dispose(),this._solo.dispose(),this}}Channel.buses=new Map;class Mono extends ToneAudioNode{constructor(){super(optionsFromArguments(Mono.getDefaults(),arguments)),this.name="Mono",this.input=new Gain({context:this.context}),this._merge=this.output=new Merge({channels:2,context:this.context}),this.input.connect(this._merge,0,0),this.input.connect(this._merge,0,1)}dispose(){return super.dispose(),this._merge.dispose(),this.input.dispose(),this}}class MultibandSplit extends ToneAudioNode{constructor(){super(optionsFromArguments(MultibandSplit.getDefaults(),arguments,["lowFrequency","highFrequency"])),this.name="MultibandSplit",this.input=new Gain({context:this.context}),this.output=void 0,this.low=new Filter$2({context:this.context,frequency:0,type:"lowpass"}),this._lowMidFilter=new Filter$2({context:this.context,frequency:0,type:"highpass"}),this.mid=new Filter$2({context:this.context,frequency:0,type:"lowpass"}),this.high=new Filter$2({context:this.context,frequency:0,type:"highpass"}),this._internalChannels=[this.low,this.mid,this.high];const e=optionsFromArguments(MultibandSplit.getDefaults(),arguments,["lowFrequency","highFrequency"]);this.lowFrequency=new Signal({context:this.context,units:"frequency",value:e.lowFrequency}),this.highFrequency=new Signal({context:this.context,units:"frequency",value:e.highFrequency}),this.Q=new Signal({context:this.context,units:"positive",value:e.Q}),this.input.fan(this.low,this.high),this.input.chain(this._lowMidFilter,this.mid),this.lowFrequency.fan(this.low.frequency,this._lowMidFilter.frequency),this.highFrequency.fan(this.mid.frequency,this.high.frequency),this.Q.connect(this.low.Q),this.Q.connect(this._lowMidFilter.Q),this.Q.connect(this.mid.Q),this.Q.connect(this.high.Q),readOnly(this,["high","mid","low","highFrequency","lowFrequency"])}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{Q:1,highFrequency:2500,lowFrequency:400})}dispose(){return super.dispose(),writable(this,["high","mid","low","highFrequency","lowFrequency"]),this.low.dispose(),this._lowMidFilter.dispose(),this.mid.dispose(),this.high.dispose(),this.lowFrequency.dispose(),this.highFrequency.dispose(),this.Q.dispose(),this}}let Listener$1=class extends ToneAudioNode{constructor(){super(...arguments),this.name="Listener",this.positionX=new Param({context:this.context,param:this.context.rawContext.listener.positionX}),this.positionY=new Param({context:this.context,param:this.context.rawContext.listener.positionY}),this.positionZ=new Param({context:this.context,param:this.context.rawContext.listener.positionZ}),this.forwardX=new Param({context:this.context,param:this.context.rawContext.listener.forwardX}),this.forwardY=new Param({context:this.context,param:this.context.rawContext.listener.forwardY}),this.forwardZ=new Param({context:this.context,param:this.context.rawContext.listener.forwardZ}),this.upX=new Param({context:this.context,param:this.context.rawContext.listener.upX}),this.upY=new Param({context:this.context,param:this.context.rawContext.listener.upY}),this.upZ=new Param({context:this.context,param:this.context.rawContext.listener.upZ})}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{positionX:0,positionY:0,positionZ:0,forwardX:0,forwardY:0,forwardZ:-1,upX:0,upY:1,upZ:0})}dispose(){return super.dispose(),this.positionX.dispose(),this.positionY.dispose(),this.positionZ.dispose(),this.forwardX.dispose(),this.forwardY.dispose(),this.forwardZ.dispose(),this.upX.dispose(),this.upY.dispose(),this.upZ.dispose(),this}};onContextInit(n=>{n.listener=new Listener$1({context:n})});onContextClose(n=>{n.listener.dispose()});class Panner3D extends ToneAudioNode{constructor(){super(optionsFromArguments(Panner3D.getDefaults(),arguments,["positionX","positionY","positionZ"])),this.name="Panner3D";const e=optionsFromArguments(Panner3D.getDefaults(),arguments,["positionX","positionY","positionZ"]);this._panner=this.input=this.output=this.context.createPanner(),this.panningModel=e.panningModel,this.maxDistance=e.maxDistance,this.distanceModel=e.distanceModel,this.coneOuterGain=e.coneOuterGain,this.coneOuterAngle=e.coneOuterAngle,this.coneInnerAngle=e.coneInnerAngle,this.refDistance=e.refDistance,this.rolloffFactor=e.rolloffFactor,this.positionX=new Param({context:this.context,param:this._panner.positionX,value:e.positionX}),this.positionY=new Param({context:this.context,param:this._panner.positionY,value:e.positionY}),this.positionZ=new Param({context:this.context,param:this._panner.positionZ,value:e.positionZ}),this.orientationX=new Param({context:this.context,param:this._panner.orientationX,value:e.orientationX}),this.orientationY=new Param({context:this.context,param:this._panner.orientationY,value:e.orientationY}),this.orientationZ=new Param({context:this.context,param:this._panner.orientationZ,value:e.orientationZ})}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{coneInnerAngle:360,coneOuterAngle:360,coneOuterGain:0,distanceModel:"inverse",maxDistance:1e4,orientationX:0,orientationY:0,orientationZ:0,panningModel:"equalpower",positionX:0,positionY:0,positionZ:0,refDistance:1,rolloffFactor:1})}setPosition(e,t,s){return this.positionX.value=e,this.positionY.value=t,this.positionZ.value=s,this}setOrientation(e,t,s){return this.orientationX.value=e,this.orientationY.value=t,this.orientationZ.value=s,this}get panningModel(){return this._panner.panningModel}set panningModel(e){this._panner.panningModel=e}get refDistance(){return this._panner.refDistance}set refDistance(e){this._panner.refDistance=e}get rolloffFactor(){return this._panner.rolloffFactor}set rolloffFactor(e){this._panner.rolloffFactor=e}get distanceModel(){return this._panner.distanceModel}set distanceModel(e){this._panner.distanceModel=e}get coneInnerAngle(){return this._panner.coneInnerAngle}set coneInnerAngle(e){this._panner.coneInnerAngle=e}get coneOuterAngle(){return this._panner.coneOuterAngle}set coneOuterAngle(e){this._panner.coneOuterAngle=e}get coneOuterGain(){return this._panner.coneOuterGain}set coneOuterGain(e){this._panner.coneOuterGain=e}get maxDistance(){return this._panner.maxDistance}set maxDistance(e){this._panner.maxDistance=e}dispose(){return super.dispose(),this._panner.disconnect(),this.orientationX.dispose(),this.orientationY.dispose(),this.orientationZ.dispose(),this.positionX.dispose(),this.positionY.dispose(),this.positionZ.dispose(),this}}class Recorder extends ToneAudioNode{constructor(){super(optionsFromArguments(Recorder.getDefaults(),arguments)),this.name="Recorder";const e=optionsFromArguments(Recorder.getDefaults(),arguments);this.input=new Gain({context:this.context}),assert(Recorder.supported,"Media Recorder API is not available"),this._stream=this.context.createMediaStreamDestination(),this.input.connect(this._stream),this._recorder=new MediaRecorder(this._stream.stream,{mimeType:e.mimeType})}static getDefaults(){return ToneAudioNode.getDefaults()}get mimeType(){return this._recorder.mimeType}static get supported(){return theWindow!==null&&Reflect.has(theWindow,"MediaRecorder")}get state(){return this._recorder.state==="inactive"?"stopped":this._recorder.state==="paused"?"paused":"started"}start(){return __awaiter(this,void 0,void 0,function*(){assert(this.state!=="started","Recorder is already started");const e=new Promise(t=>{const s=()=>{this._recorder.removeEventListener("start",s,!1),t()};this._recorder.addEventListener("start",s,!1)});return this._recorder.start(),yield e})}stop(){return __awaiter(this,void 0,void 0,function*(){assert(this.state!=="stopped","Recorder is not started");const e=new Promise(t=>{const s=o=>{this._recorder.removeEventListener("dataavailable",s,!1),t(o.data)};this._recorder.addEventListener("dataavailable",s,!1)});return this._recorder.stop(),yield e})}pause(){return assert(this.state==="started","Recorder must be started"),this._recorder.pause(),this}dispose(){return super.dispose(),this.input.dispose(),this._stream.disconnect(),this}}class Compressor extends ToneAudioNode{constructor(){super(optionsFromArguments(Compressor.getDefaults(),arguments,["threshold","ratio"])),this.name="Compressor",this._compressor=this.context.createDynamicsCompressor(),this.input=this._compressor,this.output=this._compressor;const e=optionsFromArguments(Compressor.getDefaults(),arguments,["threshold","ratio"]);this.threshold=new Param({minValue:this._compressor.threshold.minValue,maxValue:this._compressor.threshold.maxValue,context:this.context,convert:!1,param:this._compressor.threshold,units:"decibels",value:e.threshold}),this.attack=new Param({minValue:this._compressor.attack.minValue,maxValue:this._compressor.attack.maxValue,context:this.context,param:this._compressor.attack,units:"time",value:e.attack}),this.release=new Param({minValue:this._compressor.release.minValue,maxValue:this._compressor.release.maxValue,context:this.context,param:this._compressor.release,units:"time",value:e.release}),this.knee=new Param({minValue:this._compressor.knee.minValue,maxValue:this._compressor.knee.maxValue,context:this.context,convert:!1,param:this._compressor.knee,units:"decibels",value:e.knee}),this.ratio=new Param({minValue:this._compressor.ratio.minValue,maxValue:this._compressor.ratio.maxValue,context:this.context,convert:!1,param:this._compressor.ratio,units:"positive",value:e.ratio}),readOnly(this,["knee","release","attack","ratio","threshold"])}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{attack:.003,knee:30,ratio:12,release:.25,threshold:-24})}get reduction(){return this._compressor.reduction}dispose(){return super.dispose(),this._compressor.disconnect(),this.attack.dispose(),this.release.dispose(),this.threshold.dispose(),this.ratio.dispose(),this.knee.dispose(),this}}class Gate extends ToneAudioNode{constructor(){super(Object.assign(optionsFromArguments(Gate.getDefaults(),arguments,["threshold","smoothing"]))),this.name="Gate";const e=optionsFromArguments(Gate.getDefaults(),arguments,["threshold","smoothing"]);this._follower=new Follower({context:this.context,smoothing:e.smoothing}),this._gt=new GreaterThan({context:this.context,value:dbToGain(e.threshold)}),this.input=new Gain({context:this.context}),this._gate=this.output=new Gain({context:this.context}),this.input.connect(this._gate),this.input.chain(this._follower,this._gt,this._gate.gain)}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{smoothing:.1,threshold:-40})}get threshold(){return gainToDb(this._gt.value)}set threshold(e){this._gt.value=dbToGain(e)}get smoothing(){return this._follower.smoothing}set smoothing(e){this._follower.smoothing=e}dispose(){return super.dispose(),this.input.dispose(),this._follower.dispose(),this._gt.dispose(),this._gate.dispose(),this}}class Limiter extends ToneAudioNode{constructor(){super(Object.assign(optionsFromArguments(Limiter.getDefaults(),arguments,["threshold"]))),this.name="Limiter";const e=optionsFromArguments(Limiter.getDefaults(),arguments,["threshold"]);this._compressor=this.input=this.output=new Compressor({context:this.context,ratio:20,attack:.003,release:.01,threshold:e.threshold}),this.threshold=this._compressor.threshold,readOnly(this,"threshold")}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{threshold:-12})}get reduction(){return this._compressor.reduction}dispose(){return super.dispose(),this._compressor.dispose(),this.threshold.dispose(),this}}class MidSideCompressor extends ToneAudioNode{constructor(){super(Object.assign(optionsFromArguments(MidSideCompressor.getDefaults(),arguments))),this.name="MidSideCompressor";const e=optionsFromArguments(MidSideCompressor.getDefaults(),arguments);this._midSideSplit=this.input=new MidSideSplit({context:this.context}),this._midSideMerge=this.output=new MidSideMerge({context:this.context}),this.mid=new Compressor(Object.assign(e.mid,{context:this.context})),this.side=new Compressor(Object.assign(e.side,{context:this.context})),this._midSideSplit.mid.chain(this.mid,this._midSideMerge.mid),this._midSideSplit.side.chain(this.side,this._midSideMerge.side),readOnly(this,["mid","side"])}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{mid:{ratio:3,threshold:-24,release:.03,attack:.02,knee:16},side:{ratio:6,threshold:-30,release:.25,attack:.03,knee:10}})}dispose(){return super.dispose(),this.mid.dispose(),this.side.dispose(),this._midSideSplit.dispose(),this._midSideMerge.dispose(),this}}class MultibandCompressor extends ToneAudioNode{constructor(){super(Object.assign(optionsFromArguments(MultibandCompressor.getDefaults(),arguments))),this.name="MultibandCompressor";const e=optionsFromArguments(MultibandCompressor.getDefaults(),arguments);this._splitter=this.input=new MultibandSplit({context:this.context,lowFrequency:e.lowFrequency,highFrequency:e.highFrequency}),this.lowFrequency=this._splitter.lowFrequency,this.highFrequency=this._splitter.highFrequency,this.output=new Gain({context:this.context}),this.low=new Compressor(Object.assign(e.low,{context:this.context})),this.mid=new Compressor(Object.assign(e.mid,{context:this.context})),this.high=new Compressor(Object.assign(e.high,{context:this.context})),this._splitter.low.chain(this.low,this.output),this._splitter.mid.chain(this.mid,this.output),this._splitter.high.chain(this.high,this.output),readOnly(this,["high","mid","low","highFrequency","lowFrequency"])}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{lowFrequency:250,highFrequency:2e3,low:{ratio:6,threshold:-30,release:.25,attack:.03,knee:10},mid:{ratio:3,threshold:-24,release:.03,attack:.02,knee:16},high:{ratio:3,threshold:-24,release:.03,attack:.02,knee:16}})}dispose(){return super.dispose(),this._splitter.dispose(),this.low.dispose(),this.mid.dispose(),this.high.dispose(),this.output.dispose(),this}}class EQ3 extends ToneAudioNode{constructor(){super(optionsFromArguments(EQ3.getDefaults(),arguments,["low","mid","high"])),this.name="EQ3",this.output=new Gain({context:this.context}),this._internalChannels=[];const e=optionsFromArguments(EQ3.getDefaults(),arguments,["low","mid","high"]);this.input=this._multibandSplit=new MultibandSplit({context:this.context,highFrequency:e.highFrequency,lowFrequency:e.lowFrequency}),this._lowGain=new Gain({context:this.context,gain:e.low,units:"decibels"}),this._midGain=new Gain({context:this.context,gain:e.mid,units:"decibels"}),this._highGain=new Gain({context:this.context,gain:e.high,units:"decibels"}),this.low=this._lowGain.gain,this.mid=this._midGain.gain,this.high=this._highGain.gain,this.Q=this._multibandSplit.Q,this.lowFrequency=this._multibandSplit.lowFrequency,this.highFrequency=this._multibandSplit.highFrequency,this._multibandSplit.low.chain(this._lowGain,this.output),this._multibandSplit.mid.chain(this._midGain,this.output),this._multibandSplit.high.chain(this._highGain,this.output),readOnly(this,["low","mid","high","lowFrequency","highFrequency"]),this._internalChannels=[this._multibandSplit]}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{high:0,highFrequency:2500,low:0,lowFrequency:400,mid:0})}dispose(){return super.dispose(),writable(this,["low","mid","high","lowFrequency","highFrequency"]),this._multibandSplit.dispose(),this.lowFrequency.dispose(),this.highFrequency.dispose(),this._lowGain.dispose(),this._midGain.dispose(),this._highGain.dispose(),this.low.dispose(),this.mid.dispose(),this.high.dispose(),this.Q.dispose(),this}}class Convolver extends ToneAudioNode{constructor(){super(optionsFromArguments(Convolver.getDefaults(),arguments,["url","onload"])),this.name="Convolver",this._convolver=this.context.createConvolver();const e=optionsFromArguments(Convolver.getDefaults(),arguments,["url","onload"]);this._buffer=new ToneAudioBuffer(e.url,t=>{this.buffer=t,e.onload()}),this.input=new Gain({context:this.context}),this.output=new Gain({context:this.context}),this._buffer.loaded&&(this.buffer=this._buffer),this.normalize=e.normalize,this.input.chain(this._convolver,this.output)}static getDefaults(){return Object.assign(ToneAudioNode.getDefaults(),{normalize:!0,onload:noOp})}load(e){return __awaiter(this,void 0,void 0,function*(){this.buffer=yield this._buffer.load(e)})}get buffer(){return this._buffer.length?this._buffer:null}set buffer(e){e&&this._buffer.set(e),this._convolver.buffer&&(this.input.disconnect(),this._convolver.disconnect(),this._convolver=this.context.createConvolver(),this.input.chain(this._convolver,this.output));const t=this._buffer.get();this._convolver.buffer=t||null}get normalize(){return this._convolver.normalize}set normalize(e){this._convolver.normalize=e}dispose(){return super.dispose(),this._buffer.dispose(),this._convolver.disconnect(),this}}function now(){return getContext().now()}function immediate(){return getContext().immediate()}const Transport=getContext().transport;function getTransport(){return getContext().transport}const Destination=getContext().destination,Master=getContext().destination;function getDestination(){return getContext().destination}const Listener=getContext().listener;function getListener(){return getContext().listener}const Draw=getContext().draw;function getDraw(){return getContext().draw}const context=getContext();function loaded(){return ToneAudioBuffer.loaded()}const Buffer=ToneAudioBuffer,Buffers=ToneAudioBuffers,BufferSource=ToneBufferSource,Tone=Object.freeze(Object.defineProperty({__proto__:null,AMOscillator,AMSynth,Abs,Add,AmplitudeEnvelope,Analyser,AudioToGain,AutoFilter,AutoPanner,AutoWah,BaseContext,BiquadFilter,BitCrusher,Buffer,BufferSource,Buffers,Channel,Chebyshev,Chorus,Clock,Compressor,Context,Convolver,CrossFade,DCMeter,Delay,Destination,Distortion,Draw,DuoSynth,EQ3,Emitter,Envelope,FFT,FMOscillator,FMSynth,FatOscillator,FeedbackCombFilter,FeedbackDelay,Filter:Filter$2,Follower,Freeverb,Frequency,FrequencyClass,FrequencyEnvelope,FrequencyShifter,Gain,GainToAudio,Gate,GrainPlayer,GreaterThan,GreaterThanZero,IntervalTimeline,JCReverb,LFO,Limiter,Listener,Loop,LowpassCombFilter,Master,MembraneSynth,Merge,MetalSynth,Meter,MidSideCompressor,MidSideMerge,MidSideSplit,Midi,MidiClass,Mono,MonoSynth,MultibandCompressor,MultibandSplit,Multiply,Negate,Noise,NoiseSynth,Offline,OfflineContext,OmniOscillator,OnePoleFilter,Oscillator,PWMOscillator,PanVol,Panner,Panner3D,Param,Part,Pattern,Phaser,PingPongDelay,PitchShift,Player,Players,PluckSynth,PolySynth,Pow,PulseOscillator,Recorder,Reverb:Reverb$2,Sampler,Scale,ScaleExp,Sequence,Signal,Solo,Split,StateTimeline,StereoWidener,Subtract,SyncedSignal,Synth,Ticks,TicksClass,Time,TimeClass,Timeline,ToneAudioBuffer,ToneAudioBuffers,ToneAudioNode,ToneBufferSource,ToneEvent,ToneOscillatorNode,Transport,TransportTime,TransportTimeClass,Tremolo,Unit:Units,UserMedia,Vibrato,Volume,WaveShaper,Waveform,Zero,connect,connectSeries,connectSignal,context,dbToGain,debug:Debug,defaultArg,disconnect,ftom,gainToDb,getContext,getDestination,getDraw,getListener,getTransport,immediate,intervalToFrequencyRatio,isArray,isBoolean,isDefined,isFunction,isNote,isNumber,isObject,isString,isUndef,loaded,mtof,now,optionsFromArguments,setContext,start,supported:isSupported,version},Symbol.toStringTag,{value:"Module"})),Module_vue_vue_type_style_index_0_scoped_80ef1961_lang="",_sfc_main$e={inject:["ACM"],props:{moduleName:String,moduleType:String,createdCoordsX:Number,createdCoordsY:Number,moduleId:Number},created(){this.createdCoords=[this.createdCoordsX,this.createdCoordsY],this.currentPosition={x:this.createdCoordsX,y:this.createdCoordsY},this.startPosition={x:this.createdCoordsX,y:this.createdCoordsY},this.lastPosition={x:this.currentPosition.x,y:this.currentPosition.y}},mounted(){this.ACM.addNode(this.moduleId,this.moduleType)},data(){return{isDragging:!1,startPosition:{x:0,y:0},currentPosition:{x:0,y:0}}},computed:{elementStyles(){return{top:`${this.currentPosition.y}px`,left:`${this.currentPosition.x}px`}}},methods:{startDragging(n){n.ctrlKey||(this.isDragging=!0,this.startPosition={x:n.clientX-this.currentPosition.x,y:n.clientY-this.currentPosition.y},window.addEventListener("mousemove",this.handleDrag),window.addEventListener("mouseup",this.stopDragging))},handleDrag(n){if(this.isDragging){this.currentPosition={x:n.clientX-this.startPosition.x,y:n.clientY-this.startPosition.y};let e=this.currentPosition.x-this.lastPosition.x,t=this.currentPosition.y-this.lastPosition.y;this.$emit("module-moved",this.moduleId,e,t),this.lastPosition={x:this.currentPosition.x,y:this.currentPosition.y}}},stopDragging(){this.isDragging=!1,window.removeEventListener("mousemove",this.handleDrag),window.removeEventListener("mouseup",this.stopDragging)},handleModulePortClick(){console.log("module port clicked and passed")},removeModule(){this.$emit("remove-module",this.moduleId);var n=new Event("remove-module-"+this.moduleId);dispatchEvent(n)},test(){console.log("test")}}},_hoisted_1$e={class:"module-control-area"};function _sfc_render$d(n,e,t,s,o,r){return openBlock(),createElementBlock("div",{class:"module",style:normalizeStyle(r.elementStyles)},[createBaseVNode("div",{class:"module-title",onMousedown:e[1]||(e[1]=(...a)=>r.startDragging&&r.startDragging(...a))},[createTextVNode(toDisplayString(t.moduleName)+" ",1),createBaseVNode("a",{style:{cursor:"pointer"},onClick:e[0]||(e[0]=(...a)=>r.removeModule&&r.removeModule(...a))},"     X ")],32),createBaseVNode("div",_hoisted_1$e,[renderSlot(n.$slots,"default",{},void 0,!0)])],4)}const Module=_export_sfc(_sfc_main$e,[["render",_sfc_render$d],["__scopeId","data-v-80ef1961"]]);function mapValue(n,e,t,s,o){return((n-e)/(t-e)*(o-s)+s).toFixed(2)}const Knob_vue_vue_type_style_index_0_scoped_b103a8fe_lang="",_sfc_main$d={props:{parameter:String,label:String,initialValue:Number,from:Number,to:Number},emits:{updateknobvalue:null},created(){this.currentKnobValue=this.initialValue,this.currentAngle=mapValue(this.currentKnobValue,this.from,this.to,-135,135),this.currentAngle=parseFloat(this.currentAngle)},data(){return{currentKnobValue:0,isDraggingKnob:!1,currentAngle:0,startPosition:{x:Number,y:Number},draggingDirection:0}},methods:{startDraggingKnob(n){n.ctrlKey||(this.isDraggingKnob=!0,this.startPosition={x:n.clientX,y:n.clientY},this.draggingDirection=0,window.addEventListener("mousemove",this.handleDragKnob),window.addEventListener("mouseup",this.stopDraggingKnob))},handleDragKnob(n){if(this.draggingDirection=n.clientX-this.startPosition.x,this.draggingDirection=this.draggingDirection/Math.abs(this.draggingDirection),this.draggingDirection==0&&(this.draggingDirection=1),this.isDraggingKnob&&this.draggingDirection!=0){if(this.currentAngle=this.currentAngle+10*this.draggingDirection,Math.abs(this.currentAngle)>=135){let e=this.currentAngle/Math.abs(this.currentAngle);this.currentAngle=135*e}this.currentKnobValue=mapValue(this.currentAngle,-135,135,this.from,this.to)}isNaN(this.currentKnobValue)&&(this.currentKnobValue=this.from,this.currentAngle=-135,this.draggingDirection=0),this.updateKnobValue()},stopDraggingKnob(){this.isDraggingKnob=!1,window.removeEventListener("mousemove",this.handleDragKnob),window.removeEventListener("mouseup",this.stopDraggingKnob)},updateKnobValue(){this.$emit("updateknobvalue",[this.parameter,this.currentKnobValue])}}},_withScopeId$5=n=>(pushScopeId("data-v-b103a8fe"),n=n(),popScopeId(),n),_hoisted_1$d={class:"wrapper"},_hoisted_2$c={class:"label parameter"},_hoisted_3$8={class:"knob"},_hoisted_4$5={class:"label label-l"},_hoisted_5$5=_withScopeId$5(()=>createBaseVNode("div",{class:"knob_inner_pointer",id:"knob-pointer"},null,-1)),_hoisted_6$3=[_hoisted_5$5],_hoisted_7$3={key:0,class:"current-value",id:"current-value"},_hoisted_8$2={class:"label label-r"};function _sfc_render$c(n,e,t,s,o,r){return openBlock(),createElementBlock("div",_hoisted_1$d,[createBaseVNode("div",_hoisted_2$c,toDisplayString(t.label),1),createBaseVNode("div",_hoisted_3$8,[createBaseVNode("div",_hoisted_4$5,toDisplayString(t.from),1),createBaseVNode("div",{class:"knob_inner",id:"knob-inner",style:normalizeStyle({transform:"rotate("+o.currentAngle+"deg)"}),onMousedown:e[0]||(e[0]=(...a)=>r.startDraggingKnob&&r.startDraggingKnob(...a))},_hoisted_6$3,36),o.isDraggingKnob?(openBlock(),createElementBlock("div",_hoisted_7$3,toDisplayString(o.currentKnobValue),1)):createCommentVNode("",!0),createBaseVNode("div",_hoisted_8$2,toDisplayString(t.to),1)])])}const Knob=_export_sfc(_sfc_main$d,[["render",_sfc_render$c],["__scopeId","data-v-b103a8fe"]]),Port_vue_vue_type_style_index_0_scoped_ec8d1b04_lang="",_sfc_main$c={emits:{portClicked:null,portMouseMoved:null,portMouseStopMove:null,portHovered:null,portOut:null},props:{parameter:String,type:String,ID:Number,modId:Number},data(){return{portType:"OUT",normalColor:"rgb(255, 255, 255)",hoverColor:"rgb(255, 255, 255)",circleColor:"rgb(150,150, 150)",circleBorderColor:"rgb(255, 255, 255)",squareColor:"rgb(255, 255, 255)",portID:0}},created(){this.portType=this.type,this.portType==="IN"?(this.normalColor="rgb(0, 0, 0)",this.hoverColor="rgb(75, 75, 75)"):(this.normalColor="rgb(220, 220, 220)",this.hoverColor="rgb(170, 170, 170)"),this.squareColor=this.normalColor,this.ID!=null&&(this.portID=this.ID),this.parentModuleID=this.modId,this.circleRef="innerCircle"+this.parentModuleID+this.portID},computed:{generateDefaultRef(){return"innerCircle"+this.parentModuleID+this.portID}},methods:{handlePortMouseOver(){if(this.squareColor=this.hoverColor,this.portType=="IN"){const e=document.getElementById(this.circleRef).getBoundingClientRect(),t=e.left+e.width/2,s=e.top+e.height/2;this.$emit("portHovered",this.portID,t,s)}},handlePortMouseOut(){this.squareColor=this.normalColor,this.$emit("portOut",this.portID)},handlePortMouseClick(n){if(this.portType=="OUT"){const t=document.getElementById(this.circleRef).getBoundingClientRect(),s=t.left+t.width/2,o=t.top+t.height/2;this.$emit("portClicked",this.portID,s,o),window.addEventListener("mousemove",this.handlePortMouseMove),window.addEventListener("mouseup",this.handlePortStopMove)}},handlePortMouseMove(n){console.log("aaaa"),this.$emit("portMouseMoved",n.clientX,n.clientY)},handlePortStopMove(n){const t=document.getElementById(this.circleRef).getBoundingClientRect(),s=t.left+t.width/2,o=t.top+t.height/2;this.$emit("portMouseStopMove",this.modId,this.portID,s,o),window.removeEventListener("mousemove",this.handlePortMouseMove),window.removeEventListener("mouseup",this.handlePortStopMove)},handlePortMouseUp(){console.log("mouseup!")}}},_hoisted_1$c=["id"],_hoisted_2$b={class:"portName"};function _sfc_render$b(n,e,t,s,o,r){return openBlock(),createElementBlock(Fragment,null,[createBaseVNode("div",{class:"container",onMouseover:e[0]||(e[0]=(...a)=>r.handlePortMouseOver&&r.handlePortMouseOver(...a)),onMouseout:e[1]||(e[1]=(...a)=>r.handlePortMouseOut&&r.handlePortMouseOut(...a)),onMousedown:e[2]||(e[2]=(...a)=>r.handlePortMouseClick&&r.handlePortMouseClick(...a))},[createBaseVNode("div",{class:"square",style:normalizeStyle({backgroundColor:o.squareColor})},[createBaseVNode("div",{class:"circle",style:normalizeStyle({backgroundColor:o.circleColor,borderColor:o.circleBorderColor})},[createBaseVNode("div",{class:"innerCircle",id:this.circleRef||r.generateDefaultRef,ref:this.circleRef||r.generateDefaultRef},null,8,_hoisted_1$c)],4)],4)],32),createBaseVNode("div",_hoisted_2$b,toDisplayString(t.parameter),1)],64)}const Port=_export_sfc(_sfc_main$c,[["render",_sfc_render$b],["__scopeId","data-v-ec8d1b04"]]),BasicOsc_vue_vue_type_style_index_0_lang="",_sfc_main$b={inject:["ACM"],components:{Knob,Port},created(){this.selectedWaveType="sine"},data(){return{selectedWaveType:"sine"}},methods:{knobUpdatedValue(n){var e,t;n!=null&&(e=n[0],t=parseFloat(n[1])),this.ACM.updateModuleParameter(this.$parent.moduleId,e,t)},handlePortClick(n,e,t){console.log("parent",this.$parent.moduleId),this.$emit("portClicked",this.$parent.moduleId,n,e,t)},handlePortMouseMove(n,e){this.$emit("modulePortMouseMoved",n,e)},handlePortMouseStopMove(n,e,t,s){console.log("stopped moving ",n),this.$emit("modulePortMouseStopMove",n,e,t,s)},handlePortHover(n,e,t){this.$emit("modulePortHover",this.$parent.moduleId,n,e,t)},handlePortOut(n){this.$emit("modulePortOut",this.$parent.moduleId,n)},handleWaveTypeChange(){console.log(this.selectedWaveType),this.ACM.updateModuleParameter(this.$parent.moduleId,"type",this.selectedWaveType)}}},_hoisted_1$b={class:"mainDivBO"},_hoisted_2$a={class:"knobClass"},_hoisted_3$7=createBaseVNode("option",null,"sine",-1),_hoisted_4$4=createBaseVNode("option",null,"triangle",-1),_hoisted_5$4=createBaseVNode("option",null,"sawtooth",-1),_hoisted_6$2=createBaseVNode("option",null,"square",-1),_hoisted_7$2=[_hoisted_3$7,_hoisted_4$4,_hoisted_5$4,_hoisted_6$2],_hoisted_8$1={class:"portContainer"};function _sfc_render$a(n,e,t,s,o,r){return openBlock(),createElementBlock("div",_hoisted_1$b,[createBaseVNode("div",_hoisted_2$a,[(openBlock(),createBlock(resolveDynamicComponent("Knob"),{onUpdateknobvalue:r.knobUpdatedValue,parameter:"frequency",label:"FREQ",initialValue:440,from:20,to:4e3},null,40,["onUpdateknobvalue"])),(openBlock(),createBlock(resolveDynamicComponent("Knob"),{onUpdateknobvalue:r.knobUpdatedValue,parameter:"attack",label:"ATK",initialValue:4,from:3,to:10},null,40,["onUpdateknobvalue"]))]),withDirectives(createBaseVNode("select",{"onUpdate:modelValue":e[0]||(e[0]=a=>o.selectedWaveType=a),onChange:e[1]||(e[1]=(...a)=>r.handleWaveTypeChange&&r.handleWaveTypeChange(...a))},_hoisted_7$2,544),[[vModelSelect,o.selectedWaveType]]),createBaseVNode("div",_hoisted_8$1,[(openBlock(),createBlock(resolveDynamicComponent("Port"),{onPortClicked:r.handlePortClick,onPortMouseMoved:r.handlePortMouseMove,onPortMouseStopMove:r.handlePortMouseStopMove,onPortHovered:r.handlePortHover,onPortOut:r.handlePortOut,type:"IN",parameter:"FREQ",modId:this.$parent.moduleId,ID:0},null,40,["onPortClicked","onPortMouseMoved","onPortMouseStopMove","onPortHovered","onPortOut","modId"])),(openBlock(),createBlock(resolveDynamicComponent("Port"),{onPortClicked:r.handlePortClick,onPortMouseMoved:r.handlePortMouseMove,onPortMouseStopMove:r.handlePortMouseStopMove,onPortHovered:r.handlePortHover,onPortOut:r.handlePortOut,type:"OUT",parameter:"OUT",modId:this.$parent.moduleId,ID:1},null,40,["onPortClicked","onPortMouseMoved","onPortMouseStopMove","onPortHovered","onPortOut","modId"]))])])}const BasicOsc$1=_export_sfc(_sfc_main$b,[["render",_sfc_render$a]]),AudioOut_vue_vue_type_style_index_0_lang="",_sfc_main$a={components:{Port},methods:{handlePortClick(n,e,t){this.$emit("portClicked",this.$parent.moduleId,n,e,t)},handlePortMouseMove(n,e){this.$emit("modulePortMouseMoved",n,e)},handlePortMouseStopMove(n,e,t){this.$emit("modulePortMouseStopMove",this.$parent.moduleId,n,e,t)},handlePortHover(n,e,t){this.$emit("modulePortHover",this.$parent.moduleId,n,e,t)},handlePortOut(n){this.$emit("modulePortOut",this.$parent.moduleId,n)}}},_hoisted_1$a={class:"mainDivAO"};function _sfc_render$9(n,e,t,s,o,r){return openBlock(),createElementBlock("div",_hoisted_1$a,[(openBlock(),createBlock(resolveDynamicComponent("Port"),{onPortClicked:r.handlePortClick,onPortMouseMoved:r.handlePortMouseMove,onPortMouseStopMove:r.handlePortMouseStopMove,onPortHovered:r.handlePortHover,onPortOut:r.handlePortOut,type:"IN",parameter:"OUT",ID:0},null,40,["onPortClicked","onPortMouseMoved","onPortMouseStopMove","onPortHovered","onPortOut"]))])}const AudioOut$1=_export_sfc(_sfc_main$a,[["render",_sfc_render$9]]),MidiIn_vue_vue_type_style_index_0_lang="",_sfc_main$9={inject:["ACM","oct"],components:{Port},data(){return{activeKey:null,keyNotes:["a","w","s","e","d","f","t","g","y","h","u","j"],midiNotes:[60,61,62,63,64,65,66,67,68,69,70,71]}},emits:["portClicked","modulePortMouseMoved","modulePortMouseStopMove","modulePortHover","modulePortOut"],created(){window.addEventListener("keydown",this.playKeyPressed),window.addEventListener("keyup",this.playKeyReleased),window.addEventListener("remove-module-"+this.$parent.moduleId,this.removeModuleListeners)},methods:{playKeyPressed(n){let e=n.key.toLowerCase();if(e=="x"){this.oct=this.oct+1,this.oct>7&&(this.oct=7);return}else if(e=="z"){this.oct=this.oct-1,this.oct<1&&(this.oct=1);return}this.setActiveKey(e);let t=this.oct-4,s=this.getMidiKey(e)+12*t;this.ACM.keyPlayed(s,this.$parent.moduleId)},setActiveKey(n){this.activeKey=n},playKeyReleased(n){if(this.activeKey==n.key.toLowerCase()){this.activeKey=null;let e=this.oct-4,t=this.getMidiKey(n.key.toLowerCase())+12*e;this.ACM.keyReleased(t,this.$parent.moduleId)}},getMidiKey(n){let e=this.keyNotes.indexOf(n);return this.midiNotes[e]},removeModuleListeners(){window.removeEventListener("keydown",this.playKeyPressed),window.removeEventListener("keyup",this.playKeyReleased),window.removeEventListener("remove-module"+this.$parent.moduleId,this.removeModuleListeners)},handlePortClick(n,e,t){console.log("parent",this.$parent.moduleId),this.$emit("portClicked",this.$parent.moduleId,n,e,t)},handlePortMouseMove(n,e){this.$emit("modulePortMouseMoved",n,e)},handlePortMouseStopMove(n,e,t,s){console.log("stopped moving ",n),this.$emit("modulePortMouseStopMove",n,e,t,s)},handlePortHover(n,e,t){this.$emit("modulePortHover",this.$parent.moduleId,n,e,t)},handlePortOut(n){this.$emit("modulePortOut",this.$parent.moduleId,n)}}},_hoisted_1$9={class:"mainDivMI"},_hoisted_2$9=createBaseVNode("br",null,null,-1),_hoisted_3$6=createBaseVNode("br",null,null,-1),_hoisted_4$3={class:"set"},_hoisted_5$3={class:"portContainerMidiIn"};function _sfc_render$8(n,e,t,s,o,r){return openBlock(),createElementBlock(Fragment,null,[createBaseVNode("div",_hoisted_1$9,[createBaseVNode("div",null,[createTextVNode(" Oct: "+toDisplayString(r.oct)+" ",1),_hoisted_2$9,createTextVNode("(z and x "),_hoisted_3$6,createTextVNode("to change)")]),createBaseVNode("ul",_hoisted_4$3,[createBaseVNode("li",{class:normalizeClass(["white c",{"w-active":o.activeKey==="a"}]),onClick:e[0]||(e[0]=a=>r.setActiveKey("a"))},null,2),createBaseVNode("li",{class:normalizeClass(["black cs",{"b-active":o.activeKey==="w"}]),onClick:e[1]||(e[1]=a=>r.setActiveKey("w"))},null,2),createBaseVNode("li",{class:normalizeClass(["white d",{"w-active":o.activeKey==="s"}]),onClick:e[2]||(e[2]=a=>r.setActiveKey("s"))},null,2),createBaseVNode("li",{class:normalizeClass(["black ds",{"b-active":o.activeKey==="e"}]),onClick:e[3]||(e[3]=a=>r.setActiveKey("e"))},null,2),createBaseVNode("li",{class:normalizeClass(["white e",{"w-active":o.activeKey==="d"}]),onClick:e[4]||(e[4]=a=>r.setActiveKey("d"))},null,2),createBaseVNode("li",{class:normalizeClass(["white f",{"w-active":o.activeKey==="f"}]),onClick:e[5]||(e[5]=a=>r.setActiveKey("f"))},null,2),createBaseVNode("li",{class:normalizeClass(["black fs",{"b-active":o.activeKey==="t"}]),onClick:e[6]||(e[6]=a=>r.setActiveKey("t"))},null,2),createBaseVNode("li",{class:normalizeClass(["white g",{"w-active":o.activeKey==="g"}]),onClick:e[7]||(e[7]=a=>r.setActiveKey("g"))},null,2),createBaseVNode("li",{class:normalizeClass(["black gs",{"b-active":o.activeKey==="y"}]),onClick:e[8]||(e[8]=a=>r.setActiveKey("y"))},null,2),createBaseVNode("li",{class:normalizeClass(["white a",{"w-active":o.activeKey==="h"}]),onClick:e[9]||(e[9]=a=>r.setActiveKey("h"))},null,2),createBaseVNode("li",{class:normalizeClass(["black as",{"b-active":o.activeKey==="u"}]),onClick:e[10]||(e[10]=a=>r.setActiveKey("u"))},null,2),createBaseVNode("li",{class:normalizeClass(["white b",{"w-active":o.activeKey==="j"}]),onClick:e[11]||(e[11]=a=>r.setActiveKey("j"))},null,2)])]),createBaseVNode("div",_hoisted_5$3,[(openBlock(),createBlock(resolveDynamicComponent("Port"),{onPortClicked:r.handlePortClick,onPortMouseMoved:r.handlePortMouseMove,onPortMouseStopMove:r.handlePortMouseStopMove,onPortHovered:r.handlePortHover,onPortOut:r.handlePortOut,type:"OUT",parameter:"V/OCT",modId:this.$parent.moduleId,ID:0},null,40,["onPortClicked","onPortMouseMoved","onPortMouseStopMove","onPortHovered","onPortOut","modId"]))])],64)}const MidiIn$1=_export_sfc(_sfc_main$9,[["render",_sfc_render$8]]),Theremin_vue_vue_type_style_index_0_lang="",_sfc_main$8={inject:["ACM"],components:{Knob,Port},created(){},data(){return{thereminIndicator:{x:0,y:0},movable:!1}},methods:{setMovable(n,e){this.movable=e,e&&(this.thereminIndicator.x=n.layerX,this.thereminIndicator.y=n.layerY)},handleThereminMouseOver(n){if(!this.movable)return;var e=n.target.getBoundingClientRect();this.thereminIndicator.x=n.pageX-e.left,this.thereminIndicator.y=n.pageY-e.top,this.thereminIndicator.y>300&&(this.thereminIndicator.y=300);let t=mapValue(this.thereminIndicator.x,0,300,65.41,2093),s=1-mapValue(this.thereminIndicator.y,0,300,0,1);s=30*Math.log10(s),this.ACM.updateModuleParameter(this.$parent.moduleId,"frequency",t),this.ACM.updateModuleParameter(this.$parent.moduleId,"volume",s)},handlePortClick(n,e,t){console.log("parent",this.$parent.moduleId),console.log(this.$parent),this.$emit("portClicked",this.$parent.moduleId,n,e,t)},handlePortMouseMove(n,e){this.$emit("modulePortMouseMoved",n,e)},handlePortMouseStopMove(n,e,t,s){console.log("stopped moving ",n),this.$emit("modulePortMouseStopMove",n,e,t,s)},handlePortHover(n,e,t){this.$emit("modulePortHover",this.$parent.moduleId,n,e,t)},handlePortOut(n){this.$emit("modulePortOut",this.$parent.moduleId,n)}}},_hoisted_1$8={class:"mainDivThe"},_hoisted_2$8=createBaseVNode("div",{class:"theremin-indications"},[createTextVNode(" Vertical axis: amplitude "),createBaseVNode("br"),createTextVNode(" Horizontal axis: pitch "),createBaseVNode("br"),createTextVNode(" Click and drag to move! "),createBaseVNode("br"),createTextVNode(" (just clicking won't update values!) ")],-1),_hoisted_3$5={class:"portContainerThe"};function _sfc_render$7(n,e,t,s,o,r){return openBlock(),createElementBlock("div",_hoisted_1$8,[createBaseVNode("div",{class:"thereminControlArea",onMousedown:e[0]||(e[0]=a=>r.setMovable(a,!0)),onMouseup:e[1]||(e[1]=a=>r.setMovable(a,!1)),onMousemove:e[2]||(e[2]=(...a)=>r.handleThereminMouseOver&&r.handleThereminMouseOver(...a))},[createBaseVNode("div",{class:"theremin-indicator",style:normalizeStyle({top:o.thereminIndicator.y+"px",left:o.thereminIndicator.x+"px"})},null,4)],32),_hoisted_2$8,createBaseVNode("div",_hoisted_3$5,[(openBlock(),createBlock(resolveDynamicComponent("Port"),{onPortClicked:r.handlePortClick,onPortMouseMoved:r.handlePortMouseMove,onPortMouseStopMove:r.handlePortMouseStopMove,onPortHovered:r.handlePortHover,onPortOut:r.handlePortOut,type:"OUT",parameter:"OUT",modId:this.$parent.moduleId,ID:0},null,40,["onPortClicked","onPortMouseMoved","onPortMouseStopMove","onPortHovered","onPortOut","modId"]))])])}const Theremin$1=_export_sfc(_sfc_main$8,[["render",_sfc_render$7]]),Reverb_vue_vue_type_style_index_0_lang="",_sfc_main$7={inject:["ACM"],components:{Knob,Port},created(){},data(){return{timeOutID:-1}},methods:{knobUpdatedValue(n){clearTimeout(this.timeOutID);var e,t;n!=null&&(e=n[0],t=parseFloat(n[1])),this.timeOutID=setTimeout(()=>{this.ACM.updateModuleParameter(this.$parent.moduleId,e,t)},100)},handlePortClick(n,e,t){console.log("parent",this.$parent.moduleId),this.$emit("portClicked",this.$parent.moduleId,n,e,t)},handlePortMouseMove(n,e){this.$emit("modulePortMouseMoved",n,e)},handlePortMouseStopMove(n,e,t,s){console.log("stopped moving ",n),this.$emit("modulePortMouseStopMove",n,e,t,s)},handlePortHover(n,e,t){this.$emit("modulePortHover",this.$parent.moduleId,n,e,t)},handlePortOut(n){this.$emit("modulePortOut",this.$parent.moduleId,n)}}},_hoisted_1$7={class:"mainDivRev"},_hoisted_2$7={class:"knobClassRev"},_hoisted_3$4={class:"portContainerRev"};function _sfc_render$6(n,e,t,s,o,r){return openBlock(),createElementBlock("div",_hoisted_1$7,[createBaseVNode("div",_hoisted_2$7,[(openBlock(),createBlock(resolveDynamicComponent("Knob"),{onUpdateknobvalue:r.knobUpdatedValue,parameter:"wet",label:"DRY/WET",initialValue:.5,from:0,to:1},null,40,["onUpdateknobvalue"]))]),createBaseVNode("div",_hoisted_3$4,[(openBlock(),createBlock(resolveDynamicComponent("Port"),{onPortClicked:r.handlePortClick,onPortMouseMoved:r.handlePortMouseMove,onPortMouseStopMove:r.handlePortMouseStopMove,onPortHovered:r.handlePortHover,onPortOut:r.handlePortOut,type:"IN",parameter:"IN",modId:this.$parent.moduleId,ID:0},null,40,["onPortClicked","onPortMouseMoved","onPortMouseStopMove","onPortHovered","onPortOut","modId"])),(openBlock(),createBlock(resolveDynamicComponent("Port"),{onPortClicked:r.handlePortClick,onPortMouseMoved:r.handlePortMouseMove,onPortMouseStopMove:r.handlePortMouseStopMove,onPortHovered:r.handlePortHover,onPortOut:r.handlePortOut,type:"OUT",parameter:"OUT",modId:this.$parent.moduleId,ID:1},null,40,["onPortClicked","onPortMouseMoved","onPortMouseStopMove","onPortHovered","onPortOut","modId"]))])])}const Reverb$1=_export_sfc(_sfc_main$7,[["render",_sfc_render$6]]),VCA_vue_vue_type_style_index_0_lang="",_sfc_main$6={inject:["ACM"],components:{Knob,Port},created(){},data(){return{}},methods:{knobUpdatedValue(n){var e,t;n!=null&&(e=n[0],t=parseFloat(n[1])),this.ACM.updateModuleParameter(this.$parent.moduleId,e,t)},handlePortClick(n,e,t){console.log("parent",this.$parent.moduleId),this.$emit("portClicked",this.$parent.moduleId,n,e,t)},handlePortMouseMove(n,e){this.$emit("modulePortMouseMoved",n,e)},handlePortMouseStopMove(n,e,t,s){console.log("stopped moving ",n),this.$emit("modulePortMouseStopMove",n,e,t,s)},handlePortHover(n,e,t){this.$emit("modulePortHover",this.$parent.moduleId,n,e,t)},handlePortOut(n){this.$emit("modulePortOut",this.$parent.moduleId,n)}}},_hoisted_1$6={class:"mainDivVCA"},_hoisted_2$6={class:"knobClassVCA"},_hoisted_3$3={class:"portContainerVCA"};function _sfc_render$5(n,e,t,s,o,r){return openBlock(),createElementBlock("div",_hoisted_1$6,[createBaseVNode("div",_hoisted_2$6,[(openBlock(),createBlock(resolveDynamicComponent("Knob"),{onUpdateknobvalue:r.knobUpdatedValue,parameter:"factor",label:"GAIN",initialValue:1,from:0,to:2},null,40,["onUpdateknobvalue"]))]),createBaseVNode("div",_hoisted_3$3,[(openBlock(),createBlock(resolveDynamicComponent("Port"),{onPortClicked:r.handlePortClick,onPortMouseMoved:r.handlePortMouseMove,onPortMouseStopMove:r.handlePortMouseStopMove,onPortHovered:r.handlePortHover,onPortOut:r.handlePortOut,type:"IN",parameter:"IN",modId:this.$parent.moduleId,ID:0},null,40,["onPortClicked","onPortMouseMoved","onPortMouseStopMove","onPortHovered","onPortOut","modId"])),(openBlock(),createBlock(resolveDynamicComponent("Port"),{onPortClicked:r.handlePortClick,onPortMouseMoved:r.handlePortMouseMove,onPortMouseStopMove:r.handlePortMouseStopMove,onPortHovered:r.handlePortHover,onPortOut:r.handlePortOut,type:"OUT",parameter:"OUT",modId:this.$parent.moduleId,ID:1},null,40,["onPortClicked","onPortMouseMoved","onPortMouseStopMove","onPortHovered","onPortOut","modId"]))])])}const VCA$2=_export_sfc(_sfc_main$6,[["render",_sfc_render$5]]),Filter_vue_vue_type_style_index_0_lang="",_sfc_main$5={inject:["ACM"],components:{Port,Knob},data(){return{selectedFilterType:"lowpass"}},emits:["portClicked","modulePortMouseMoved","modulePortMouseStopMove","modulePortHover","modulePortOut"],methods:{knobUpdatedValue(n){var e,t;n!=null&&(e=n[0],t=parseFloat(n[1])),this.ACM.updateModuleParameter(this.$parent.moduleId,e,t)},handlePortClick(n,e,t){console.log("parent",this.$parent.moduleId),this.$emit("portClicked",this.$parent.moduleId,n,e,t)},handlePortMouseMove(n,e){this.$emit("modulePortMouseMoved",n,e)},handlePortMouseStopMove(n,e,t,s){console.log("stopped moving ",n),this.$emit("modulePortMouseStopMove",n,e,t,s)},handlePortHover(n,e,t){this.$emit("modulePortHover",this.$parent.moduleId,n,e,t)},handlePortOut(n){this.$emit("modulePortOut",this.$parent.moduleId,n)},handleFilterTypeChange(){this.ACM.updateModuleParameter(this.$parent.moduleId,"type",this.selectedFilterType)}}},_hoisted_1$5={class:"mainDivFilter"},_hoisted_2$5={class:"knobClassFilter"},_hoisted_3$2={class:"portContainerFilter"},_hoisted_4$2=createBaseVNode("option",null,"lowpass",-1),_hoisted_5$2=createBaseVNode("option",null,"highpass",-1),_hoisted_6$1=createBaseVNode("option",null,"bandpass",-1),_hoisted_7$1=[_hoisted_4$2,_hoisted_5$2,_hoisted_6$1];function _sfc_render$4(n,e,t,s,o,r){return openBlock(),createElementBlock(Fragment,null,[createBaseVNode("div",_hoisted_1$5,[createBaseVNode("div",_hoisted_2$5,[(openBlock(),createBlock(resolveDynamicComponent("Knob"),{onUpdateknobvalue:r.knobUpdatedValue,parameter:"frequency",label:"FREQ",initialValue:1500,from:20,to:18e3},null,40,["onUpdateknobvalue"])),(openBlock(),createBlock(resolveDynamicComponent("Knob"),{onUpdateknobvalue:r.knobUpdatedValue,parameter:"Q",label:"Q",initialValue:0,from:0,to:10},null,40,["onUpdateknobvalue"]))])]),createBaseVNode("div",_hoisted_3$2,[withDirectives(createBaseVNode("select",{"onUpdate:modelValue":e[0]||(e[0]=a=>o.selectedFilterType=a),onChange:e[1]||(e[1]=(...a)=>r.handleFilterTypeChange&&r.handleFilterTypeChange(...a))},_hoisted_7$1,544),[[vModelSelect,o.selectedFilterType]]),(openBlock(),createBlock(resolveDynamicComponent("Port"),{onPortClicked:r.handlePortClick,onPortMouseMoved:r.handlePortMouseMove,onPortMouseStopMove:r.handlePortMouseStopMove,onPortHovered:r.handlePortHover,onPortOut:r.handlePortOut,type:"IN",parameter:"IN",modId:this.$parent.moduleId,ID:0},null,40,["onPortClicked","onPortMouseMoved","onPortMouseStopMove","onPortHovered","onPortOut","modId"])),(openBlock(),createBlock(resolveDynamicComponent("Port"),{onPortClicked:r.handlePortClick,onPortMouseMoved:r.handlePortMouseMove,onPortMouseStopMove:r.handlePortMouseStopMove,onPortHovered:r.handlePortHover,onPortOut:r.handlePortOut,type:"OUT",parameter:"OUT",modId:this.$parent.moduleId,ID:1},null,40,["onPortClicked","onPortMouseMoved","onPortMouseStopMove","onPortHovered","onPortOut","modId"]))])],64)}const Filter$1=_export_sfc(_sfc_main$5,[["render",_sfc_render$4]]);class ModuleConnection{constructor(e,t,s,o,r,a,c,l,u,d="red"){this.fromId=t,this.toId=s,this.fromPort=o,this.toPort=r,this.x1=a,this.y1=c,this.x2=l,this.y2=u,this.color=this.getRandomColor(),this.addConnectionToACM(e,this.fromId,this.toId,this.fromPort,this.toPort)}getRandomColor(){var e=["red","green","yellow","cyan","magenta","green"],t=e[Math.floor(Math.random()*e.length)];return t}printConnection(){console.log("fromId: "+this.fromId+" toId: "+this.toId+" fromPort: "+this.fromPort+" toPort: "+this.toPort+" x1: "+this.x1+" y1: "+this.y1+" x2: "+this.x2+" y2: "+this.y2)}addConnectionToACM(e,t,s,o,r){e.connectNodes(t,s,o,r)}}const categories=["Synth","Effects","I/O"],modules={synth:["osc"]},list_json={categories,modules},categories_content={0:["basic_osc","theremin"],1:["filter","reverb","VCA"],2:["audio_out","midi_in"]},basic_osc={name:"SVO",type:"synth",description:"A simple oscillator",preview_img_source:"./assets/images/oscillator.png",codename:"BasicOsc",parameters:{frequency:4402}},theremin={name:"Theremin",type:"synth",description:"A Theremin - like oscillator",preview_img_source:"./assets/images/theremin.png",codename:"Theremin",parameters:{frequency:4402}},filter={name:"Filter",type:"effect",description:"Lowpass / Highpass / Bandpass Filter",preview_img_source:"./assets/images/Filter.png",codename:"Filter",parameters:{}},reverb={name:"Reverb",type:"effect",description:"A basic reverb",preview_img_source:"./assets/images/reverb.png",codename:"Reverb",parameters:{}},VCA$1={name:"VCA",type:"effect",description:"Simple VCA/gain module. Not actually voltage controlled :|",preview_img_source:"./assets/images/VCA.png",codename:"VCA",parameters:{}},audio_out={name:"Audio Out",type:"I/O",description:"Audio output. Stereo only, sorry!",preview_img_source:"./assets/images/audio_out.png",codename:"AudioOut",parameters:{}},midi_in={name:"Keyboard Input",type:"I/O",description:"Midi input. For now only thorugh the computer keyboard",preview_img_source:"./assets/images/midi_in_key.png",codename:"MidiIn",parameters:{}},synth_info_json={categories_content,basic_osc,theremin,filter,reverb,VCA:VCA$1,audio_out,midi_in};typeof JSON.decycle!="function"&&(JSON.decycle=function(e,t){var s=new WeakMap;return function o(r,a){var c,l;return t!==void 0&&(r=t(r)),typeof r=="object"&&r!==null&&!(r instanceof Boolean)&&!(r instanceof Date)&&!(r instanceof Number)&&!(r instanceof RegExp)&&!(r instanceof String)?(c=s.get(r),c!==void 0?{$ref:c}:(s.set(r,a),Array.isArray(r)?(l=[],r.forEach(function(u,d){l[d]=o(u,a+"["+d+"]")})):(l={},Object.keys(r).forEach(function(u){l[u]=o(r[u],a+"["+JSON.stringify(u)+"]")})),l)):r}(e,"$")});typeof JSON.retrocycle!="function"&&(JSON.retrocycle=function retrocycle($){var px=/^\$(?:\[(?:\d+|"(?:[^\\"\u0000-\u001f]|\\(?:[\\"\/bfnrt]|u[0-9a-zA-Z]{4}))*")\])*$/;return function rez(value){value&&typeof value=="object"&&(Array.isArray(value)?value.forEach(function(element,i){if(typeof element=="object"&&element!==null){var path=element.$ref;typeof path=="string"&&px.test(path)?value[i]=eval(path):rez(element)}}):Object.keys(value).forEach(function(name){var item=value[name];if(typeof item=="object"&&item!==null){var path=item.$ref;typeof path=="string"&&px.test(path)?value[name]=eval(path):rez(item)}}))}($),$});const Playground_vue_vue_type_style_index_0_scoped_a10f8bf4_lang="",_withScopeId$4=n=>(pushScopeId("data-v-a10f8bf4"),n=n(),popScopeId(),n),_hoisted_1$4={style:{cursor:"default"}},_hoisted_2$4={key:0,id:"modulesScaffold",class:"modules-scaffold"},_hoisted_3$1=_withScopeId$4(()=>createBaseVNode("div",{class:"scaffoldTitle"}," MODULE SCAFFOLD ",-1)),_hoisted_4$1=["id","onClick"],_hoisted_5$1=["id"],_hoisted_6={key:0,class:"scaffoldCategoryContent"},_hoisted_7=["onClick"],_hoisted_8=["src"],_hoisted_9={class:"visualConnections"},_hoisted_10=["x1","y1","x2","y2"],_hoisted_11=["x1","y1","x2","y2","stroke"],_hoisted_12={class:"controls"},__default__={inject:["ACM"],components:{Module,BasicOsc:BasicOsc$1,AudioOut:AudioOut$1,MidiIn:MidiIn$1,Theremin:Theremin$1,Reverb:Reverb$1,VCA:VCA$2,Filter:Filter$1},data(){return{libButtonClicked:!1,contextMenuVisible:!1,contextMenuPosition:{x:0,y:0},modules:[],moduleName:"My Module",myJson:list_json,synth_info:synth_info_json,mod_categories:list_json.categories,categories_content:synth_info_json.categories_content,expandedCategories:[],connections:[],isDraggingPort:!1,dragPortPositionX:0,dragPortPositionY:0,mouseCurrentX:0,mouseCurrentY:0,makeConnectionPermanent:!1,lastHoveredPortModID:-1,lastHoveredPortID:-1,lastHoveredPortX:0,lastHoveredPortY:0,lastAssignedModuleId:-1,canMovePlayground:!1,playGroundMoveInitialX:0,playGroundMoveInitialY:0,playGroundXtranslate:0,playGroundYtranslate:0}},options:{isDragging(){return this.isDraggingPort}},methods:{isDragging(){return this.isDraggingPort},startPortDragging(n,e,t,s){this.dragPortPositionX=t,this.dragPortPositionY=s,this.isDraggingPort=!0,console.log("Starting"),console.log(this.dragPortPositionX,this.dragPortPositionY)},handlePortDragging(n,e){console.log("handling"),this.isDraggingPort&&(this.mouseCurrentX=n,this.mouseCurrentY=e)},stopPortDragging(n,e,t,s){this.isDraggingPort=!1,console.log("Module ID from: ",n),console.log("Last Hoevered module:",this.lastHoveredPortModID),console.log(this.isHoveringPort),this.isHoveringPort&&n!=this.lastHoveredPortModID&&(console.log("fff",n,this.lastHoveredPortModID),this.ACM.checkConnectionValidity(n,this.lastHoveredPortModID,e,this.lastHoveredPortID)?(this.connections.push(new ModuleConnection(this.ACM,n,this.lastHoveredPortModID,e,this.lastHoveredPortID,t-this.playGroundXtranslate,s-this.playGroundYtranslate,this.lastHoveredPortX-this.playGroundXtranslate,this.lastHoveredPortY-this.playGroundYtranslate)),this.connections[this.connections.length-1].printConnection()):console.log("Invalid connection")),this.isHoveringPort=!1},trackPort(n,e,t,s){this.lastHoveredPortModID=n,this.lastHoveredPortID=e,this.lastHoveredPortX=t,this.lastHoveredPortY=s,this.isHoveringPort=!0},stopTrackPort(){this.isHoveringPort=!1},moduleMovedUpdate(n,e,t){this.findUpdateConnectionsToModule(n,e,t),this.findUpdateConnectionsFromModule(n,e,t)},findUpdateConnectionsToModule(n,e,t){if(this.connections.length!=0)for(let s=0;s<this.connections.length;s++)this.connections[s].toId==n&&(this.connections[s].x2+=e,this.connections[s].y2+=t)},findUpdateConnectionsFromModule(n,e,t){if(this.connections.length!=0)for(let s=0;s<this.connections.length;s++)this.connections[s].fromId==n&&(this.connections[s].x1+=e,this.connections[s].y1+=t)},removeConnectionsWithModule(n){if(this.connections.length!=0)for(let e=0;e<this.connections.length;e++)(this.connections[e].fromId==n||this.connections[e].toId==n)&&this.connections.splice(e,1)},removeModule(n){this.removeConnectionsWithModule(n),this.ACM.removeNode(n);for(let e=0;e<this.modules.length;e++)this.modules[e].id==n&&this.modules.splice(e,1)},setVisibleContextMenu(n){console.log(this.contextMenuVisible),this.contextMenuVisible==!0?this.contextMenuVisible=!1:(this.contextMenuVisible=!0,this.contextMenuPosition={x:n.clientX,y:n.clientY}),n.target.parentElement.classList.contains("module"),console.log(n)},addModule(n,e=!1){if(!e){let t=synth_info_json[n].codename,s=this.lastAssignedModuleId+1;this.lastAssignedModuleId=s,this.modules.push({moduleName:n,type:t,id:s,createdCoordsX:Math.floor(Math.random()*600)+200-this.playGroundXtranslate,createdCoordsY:Math.floor(Math.random()*500)+100-this.playGroundYtranslate});return}this.modules.push({moduleName:n,inputPorts:[{id:1,x:10,y:50},{id:2,x:10,y:80}],outputPorts:[{id:1,x:190,y:50},{id:2,x:190,y:80}],createdCoordsX:this.contextMenuPosition.x,createdCoordsY:this.contextMenuPosition.y}),this.contextMenuVisible=!1},libraryButtonClicked(){this.libButtonClicked=!this.libButtonClicked,this.libButtonClicked?(document.getElementById("libButton").style.transform="translate(calc(24cqw), -50%) ",document.getElementById("libButton").innerHTML="arrow_back_ios_new"):(document.getElementById("libButton").innerHTML="arrow_forward_ios",document.getElementById("libButton").style.transform="translate(0px, -50%)")},toggleCategory(n){this.expandedCategories.includes(n)?(this.expandedCategories=this.expandedCategories.filter(e=>e!==n),document.getElementById("category_span"+n).innerHTML="arrow_drop_down"):(this.expandedCategories.push(n),document.getElementById("category_span"+n).innerHTML="arrow_drop_up")},isExpanded(n){return this.expandedCategories.includes(n)},clickedMainDiv(n,e){console.log(n),n.target.classList.contains("mainDiv")!=!1&&(this.canMovePlayground=e,e==!0?(n.target.classList.add("maindiv-grabbed"),this.playGroundMoveInitialX=n.clientX,this.playGroundMoveInitialY=n.clientY):n.target.classList.remove("maindiv-grabbed"))},moveMainDiv(n){this.canMovePlayground!=!1&&(console.log(n.clientX,n.clientY),console.log("moving the playground sire!"),this.playGroundXtranslate+=n.clientX-this.playGroundMoveInitialX,this.playGroundYtranslate+=n.clientY-this.playGroundMoveInitialY,this.playGroundMoveInitialX=n.clientX,this.playGroundMoveInitialY=n.clientY)},async savePreset(){console.log("saving preset!!!!");let n=prompt("Please enter the name of your preset","Preset Name");if(n==null||n=="")return;let e={preset_name:n,creator_id:0,public:!0},t={x:this.playGroundXtranslate,y:this.playGroundYtranslate,modules:this.modules,connections:this.connections,lastAssignedModuleId:this.lastAssignedModuleId},s=this.ACM.getData(),r={metadata:e,data:{playground_data:t,ACM_data:s}};var a=JSON.stringify({preset:JSON.decycle(r)});console.log(a),fetch("http://localhost:5000/presets/new",{method:"POST",headers:{"Content-Type":"application/json"},body:a}).then(c=>c.json()).then(c=>{console.log("Success:",c)}).catch(c=>{console.error("Error:",c)})},loadPreset(){console.log("loading preset!!!!")}}},_sfc_main$4=Object.assign(__default__,{__name:"Playground",setup(n){return(e,t)=>(openBlock(),createElementBlock(Fragment,null,[createBaseVNode("header",null,[createVNode(Toolbar,{onSavepreset:e.savePreset,onLoadpreset:e.loadPreset},null,8,["onSavepreset","onLoadpreset"])]),createBaseVNode("main",{onContextmenu:t[5]||(t[5]=withModifiers(s=>e.setVisibleContextMenu(s),["prevent"]))},[createBaseVNode("div",{class:"mainDiv",onMousedown:t[2]||(t[2]=s=>e.clickedMainDiv(s,!0)),onMouseup:t[3]||(t[3]=s=>e.clickedMainDiv(s,!1)),onMousemove:t[4]||(t[4]=(...s)=>e.moveMainDiv&&e.moveMainDiv(...s))},[createBaseVNode("div",_hoisted_1$4,[(openBlock(!0),createElementBlock(Fragment,null,renderList(e.modules,(s,o)=>(openBlock(),createElementBlock("div",{key:o},[createVNode(Module,{moduleName:s.moduleName,inputPorts:s.inputPorts,outputPorts:s.outputPorts,createdCoordsX:s.createdCoordsX,createdCoordsY:s.createdCoordsY,moduleId:s.id,moduleType:s.type,onContextmenu:t[0]||(t[0]=withModifiers(r=>e.setVisibleContextMenu(r),["prevent"])),onModuleMoved:e.moduleMovedUpdate,onRemoveModule:e.removeModule,style:normalizeStyle({transform:"translate("+e.playGroundXtranslate+"px,"+e.playGroundYtranslate+"px)"})},{default:withCtx(()=>[(openBlock(),createBlock(resolveDynamicComponent(s.type),{onPortClicked:e.startPortDragging,onModulePortMouseMoved:e.handlePortDragging,onModulePortMouseStopMove:e.stopPortDragging,onModulePortHover:e.trackPort,onModulePortOut:e.stopTrackPort},null,40,["onPortClicked","onModulePortMouseMoved","onModulePortMouseStopMove","onModulePortHover","onModulePortOut"]))]),_:2},1032,["moduleName","inputPorts","outputPorts","createdCoordsX","createdCoordsY","moduleId","moduleType","onModuleMoved","onRemoveModule","style"])]))),128))]),createBaseVNode("button",{id:"libButton",class:"libraryButton material-symbols-outlined",onClick:t[1]||(t[1]=(...s)=>e.libraryButtonClicked&&e.libraryButtonClicked(...s))},"arrow_forward_ios"),e.libButtonClicked?(openBlock(),createElementBlock("div",_hoisted_2$4,[_hoisted_3$1,(openBlock(!0),createElementBlock(Fragment,null,renderList(e.mod_categories,(s,o)=>(openBlock(),createElementBlock("div",{key:o},[createBaseVNode("div",{class:"scaffoldCategory",id:"category"+o,onClick:r=>e.toggleCategory(o)},[createTextVNode(toDisplayString(s.toLocaleUpperCase())+" ",1),createBaseVNode("span",{class:"material-symbols-outlined",id:"category_span"+o},"arrow_drop_down",8,_hoisted_5$1)],8,_hoisted_4$1),e.isExpanded(o)?(openBlock(),createElementBlock("div",_hoisted_6,[(openBlock(!0),createElementBlock(Fragment,null,renderList(e.categories_content[o],(r,a)=>(openBlock(),createElementBlock("div",{key:a,class:"scaffoldCategoryItem",onClick:c=>e.addModule(r)},[createBaseVNode("img",{src:"./src/assets/images/"+r+".png",class:"scaffoldCategoryItemImg"},null,8,_hoisted_8),createTextVNode(" "+toDisplayString(r),1)],8,_hoisted_7))),128))])):createCommentVNode("",!0)]))),128))])):createCommentVNode("",!0),(openBlock(),createElementBlock("svg",_hoisted_9,[e.isDragging()?(openBlock(),createElementBlock("line",{key:0,x1:e.dragPortPositionX,y1:e.dragPortPositionY,x2:e.mouseCurrentX,y2:e.mouseCurrentY,stroke:"blue","stroke-width":"2"},null,8,_hoisted_10)):createCommentVNode("",!0)])),(openBlock(!0),createElementBlock(Fragment,null,renderList(e.connections,(s,o)=>(openBlock(),createElementBlock("svg",{class:"visualConnections",key:o},[createBaseVNode("line",{x1:e.connections[o].x1+e.playGroundXtranslate,y1:e.connections[o].y1+e.playGroundYtranslate,x2:e.connections[o].x2+e.playGroundXtranslate,y2:e.connections[o].y2+e.playGroundYtranslate,stroke:e.connections[o].color,"stroke-width":"6"},null,8,_hoisted_11)]))),128))],32)],32),createBaseVNode("div",_hoisted_12,[createVNode(ControlsToolbar,{oncontextmenu:"return false;"})])],64))}}),Playground=_export_sfc(_sfc_main$4,[["__scopeId","data-v-a10f8bf4"]]),store=reactive({loggedIn:!1,login(){this.loggedIn=!0},logout(){this.loggedIn=!1}}),Login_vue_vue_type_style_index_0_scoped_2ffaca94_lang="",_sfc_main$3={data(){return{store}},methods:{login(){localStorage.setItem("loggedIn","true"),store.login(),this.$router.push("/account")}},created(){localStorage.getItem("loggedIn")=="true"?this.loggedIn=!0:this.loggedIn=!1}},_withScopeId$3=n=>(pushScopeId("data-v-2ffaca94"),n=n(),popScopeId(),n),_hoisted_1$3=_withScopeId$3(()=>createBaseVNode("header",null,null,-1)),_hoisted_2$3={class:"centralDiv"};function _sfc_render$3(n,e,t,s,o,r){return openBlock(),createElementBlock(Fragment,null,[_hoisted_1$3,createBaseVNode("main",null,[createBaseVNode("div",_hoisted_2$3,[createBaseVNode("button",{onClick:e[0]||(e[0]=(...a)=>r.login&&r.login(...a))},"Login")]),createBaseVNode("button",{onClick:e[1]||(e[1]=(...a)=>r.login&&r.login(...a))},"Login")])],64)}const Login=_export_sfc(_sfc_main$3,[["render",_sfc_render$3],["__scopeId","data-v-2ffaca94"]]),Workshop_vue_vue_type_style_index_0_scoped_7a7516ba_lang="",_sfc_main$2={},_withScopeId$2=n=>(pushScopeId("data-v-7a7516ba"),n=n(),popScopeId(),n),_hoisted_1$2=_withScopeId$2(()=>createBaseVNode("header",null,null,-1)),_hoisted_2$2=_withScopeId$2(()=>createBaseVNode("main",null,[createBaseVNode("div",{class:"aboutDiv"}," Welcome to the workshop! ")],-1));function _sfc_render$2(n,e){return openBlock(),createElementBlock(Fragment,null,[_hoisted_1$2,_hoisted_2$2],64)}const Workshop=_export_sfc(_sfc_main$2,[["render",_sfc_render$2],["__scopeId","data-v-7a7516ba"]]),App_vue_vue_type_style_index_0_scoped_c31b24bf_lang="",routes={"/":Home,"/about":About,"/synth":Playground,"/login":Login},_sfc_main$1={inject:["ACM"],data(){return{store,currentPath:window.location.hash}},created(){localStorage.getItem("loggedIn")=="true"?this.loggedIn=!0:(localStorage.setItem("loggedIn","false"),this.loggedIn=!1)},computed:{currentView(){return routes[this.currentPath.slice(1)||"/"]||NotFound}},mounted(){window.addEventListener("hashchange",()=>{this.currentPath=window.location.hash}),window.addEventListener("loginEvent",n=>{this.loggedIn=localStorage.getItem("loggedIn")})},methods:{testButton(){console.log("testButton clicked");var n=JSON.stringify({name:"testPresetName",data:"testPresetData",creator_id:"1"});fetch("http://localhost:5000/presets/new",{method:"POST",headers:{"Content-Type":"application/json"},body:n}).then(e=>e.json()).then(e=>{console.log("Success:",e)}).catch(e=>{console.error("Error:",e)})},async startACM(){await this.ACM.startAudio()}}},_withScopeId$1=n=>(pushScopeId("data-v-c31b24bf"),n=n(),popScopeId(),n),_hoisted_1$1={class:"toolbar",style:{"user-select":"none"}},_hoisted_2$1=_withScopeId$1(()=>createBaseVNode("div",{class:"toolbar-title"},"SynthA!",-1)),_hoisted_3={class:"toolbar-actions"},_hoisted_4={class:"accountSection"},_hoisted_5=_withScopeId$1(()=>createBaseVNode("div",{class:"version"},"DEMO v0.5",-1));function _sfc_render$1(n,e,t,s,o,r){const a=resolveComponent("router-link"),c=resolveComponent("router-view");return openBlock(),createElementBlock(Fragment,null,[createBaseVNode("div",_hoisted_1$1,[_hoisted_2$1,createBaseVNode("div",_hoisted_3,[createVNode(a,{to:"/"},{default:withCtx(()=>[createTextVNode("Home")]),_:1}),createVNode(a,{onClick:r.startACM,to:"/synth"},{default:withCtx(()=>[createTextVNode("Playground")]),_:1},8,["onClick"]),createVNode(a,{to:"/workshop"},{default:withCtx(()=>[createTextVNode("Workshop")]),_:1}),createVNode(a,{to:"/about"},{default:withCtx(()=>[createTextVNode("About")]),_:1}),createBaseVNode("button",{onClick:e[0]||(e[0]=(...l)=>r.testButton&&r.testButton(...l)),class:"testButton"},"CLick me!")]),createBaseVNode("div",_hoisted_4,[o.store.loggedIn==!1?(openBlock(),createBlock(a,{key:0,to:"/login"},{default:withCtx(()=>[createTextVNode("Login")]),_:1})):createCommentVNode("",!0),o.store.loggedIn?(openBlock(),createBlock(a,{key:1,to:"/account"},{default:withCtx(()=>[createTextVNode("Account")]),_:1})):createCommentVNode("",!0)]),_hoisted_5]),createBaseVNode("main",null,[createBaseVNode("div",null,[createVNode(c)])])],64)}const App=_export_sfc(_sfc_main$1,[["render",_sfc_render$1],["__scopeId","data-v-c31b24bf"]]),Account_vue_vue_type_style_index_0_scoped_961d1858_lang="",_sfc_main={data(){return{store}},methods:{logout(){localStorage.setItem("loggedIn","false"),store.logout(),this.$router.push("/login")}},created(){localStorage.getItem("loggedIn")=="true"?this.loggedIn=!0:this.loggedIn=!1}},_withScopeId=n=>(pushScopeId("data-v-961d1858"),n=n(),popScopeId(),n),_hoisted_1=_withScopeId(()=>createBaseVNode("header",null,null,-1)),_hoisted_2={class:"centralDiv"};function _sfc_render(n,e,t,s,o,r){return openBlock(),createElementBlock(Fragment,null,[_hoisted_1,createBaseVNode("main",null,[createBaseVNode("div",_hoisted_2,[createBaseVNode("button",{onClick:e[0]||(e[0]=(...a)=>r.logout&&r.logout(...a))},"Logout")])])],64)}const Account=_export_sfc(_sfc_main,[["render",_sfc_render],["__scopeId","data-v-961d1858"]]);class AudioNode{constructor(e,t){this.id=e,this.synthNode=null,this.internalChain=[],this.type=t,this.next={},this.prev={},this.createSynthNode(t)}createSynthNode(e){if(e==null){console.log("passed a null module type, returning..."),console.log("Note this is probably because the module type doesn't need initialisation");return}this.handleNodeSetup(e)}setNext(e,t){this.next[t]=e,e.type=="AudioOut"?this.sendOutToDestination():e.type!="MidiIn"&&this.type!="MidiIn"&&this.synthNode.connect(e.synthNode)}setPrevious(e,t){this.prev[t]=e}handleNodeSetup(e){switch(e){case"Oscillator":this.synthNode=new Tone[e],this.synthNode.type="sine",this.synthNode.set({frequency:"C4"}),this.synthNode.start(),console.log("OSCILLATING",this.synthNode);break;case"Theremin":this.synthNode=new Oscillator,this.synthNode.type="sine",this.synthNode.set({frequency:"C4"}),this.synthNode.partials=[1,.6,.2];var t=new LFO(7,this.synthNode.frequency.value-10,this.synthNode.frequency.value+10).start();t.connect(this.synthNode.frequency),this.internalChain.push(t),this.synthNode.start();break;case"Reverb":this.synthNode=new Tone[e],this.synthNode.set({decay:.5,wet:.5});break;case"Gain":this.synthNode=new Multiply(1);break;case"Filter":this.synthNode=new Filter$2(3e3,"lowpass");break}}handleNodeRemoval(){switch(this.type){case"AudioOut":for(let e in this.prev)this.prev[e].synthNode.disconnect();return;case"MidiIn":return}if(console.log(this.synthNode),this.synthNode.dispose(),this.internalChain.length>0)for(let e=0;e<this.internalChain.length;e++)this.internalChain[e].dispose()}updateParameter(e,t){if((this.type=="Oscillator"||this.type=="Filter")&&e=="type"){this.synthNode.type=t;return}if(this.synthNode.hasOwnProperty(e)){if(e=="volume"){this.synthNode.volume.value=t;return}if(this.type=="Theremin"&&e=="frequency"){this.internalChain[0].min=t-t/20,this.internalChain[0].max=t+t/20;return}this.synthNode.set({[e]:t})}else{console.log(this.synthNode),console.log(this.type+" does not have the field",e);return}}hasConnectionsOnPort(e){return this.next[e]!=null||this.prev[e]!=null||this.next[e]!=null||this.prev[e]!=null}removeConnectionsWith(e){for(let t in this.next)this.next[t]==e&&delete this.next[t];for(let t in this.prev)this.prev[t]==e&&delete this.prev[t]}keyPlayed(e){console.log("KEY PLAYED",e),!(e==null||e==null||isNaN(e))&&(this.type=="MidiIn"&&this.next[0]!=null&&this.next[0]!=null&&this.next[0].keyPlayed(e),this.type=="Oscillator"&&(this.synthNode.volume.value=0,this.synthNode.set({frequency:Frequency(e,"midi").toFrequency()})))}keyReleased(e){this.type=="MidiIn"&&this.next[0]!=null&&this.next[0]!=null&&this.next[0].keyReleased(e),this.type=="Oscillator"&&(this.synthNode.volume.value=-200)}sendOutToDestination(){this.synthNode.toDestination()}print(){console.log("id: "+this.id+" type: "+this.type)}}const BasicOsc="Oscillator",AudioOut="AudioOut",MidiIn="MidiIn",Theremin="Theremin",Reverb="Reverb",VCA="Gain",Filter="Filter",type_to_class_json={BasicOsc,AudioOut,MidiIn,Theremin,Reverb,VCA,Filter};class AudioChainManager{constructor(e){this.appName=e,this.modules=[],this.audioStarted=!1,this.outputRecorder=new Recorder}addNode(e,t){let s=type_to_class_json[t];if(s==null){console.log("ERROR: "+t+" is not a valid type. Not adding module");return}let o=new AudioNode(e,s);this.modules.push(o),console.log("adding node "+e+" of type "+s)}removeNode(e){let t=this.findNode(e);if(t==null){console.log("removeNode ERROR: could not find node with id "+e);return}let s=this.modules[t];this.removeAllConnections(s),s.handleNodeRemoval(),this.modules.splice(t,1)}removeAllConnections(e){for(let t=0;t<this.modules.length;t++)this.modules[t].removeConnectionsWith(e)}connectNodes(e,t,s,o){let r=this.findNode(e),a=this.findNode(t);if(r==null||a==null){console.log("ERROR: could not find node with id "+e+" or "+t);return}let c=this.modules[r],l=this.modules[a];c.setNext(this.modules[a],s),l.setPrevious(this.modules[r],o)}findNode(e){for(let t=0;t<this.modules.length;t++)if(this.modules[t].id==e)return t;return console.log("ERROR: could not find node with id "+e),null}updateModuleParameter(e,t,s){let o=this.findNode(e);if(o==null){console.log("ERROR: could not find node with id "+e);return}this.modules[o].updateParameter(t,s)}printModules(){console.log("printing modules...");for(let e=0;e<this.modules.length;e++)console.log(this.modules[e].print())}async startAudio(){this.audioStarted||await start().then(console.log("Hello party people, this is your captain ACM speaking. The audio is ready"),this.audioStarted=!0)}checkConnectionValidity(e,t,s,o){let r=this.findNode(e),a=this.findNode(t),c=this.modules[r],l=this.modules[a];return console.log("fromMod: "+c.type+" toMod: "+l.type),!this.hasConnections(r,s)&&!this.hasConnections(a,o)}hasConnections(e,t){return!!this.modules[e].hasConnectionsOnPort(t)}keyPlayed(e,t){this.modules[this.findNode(t)].keyPlayed(e)}keyReleased(e,t){this.modules[this.findNode(t)].keyReleased(e)}testACM(){console.log(this.appName+" ACM tested successfully")}getData(){return{appName:this.appName,modules:this.modules}}async recordAudio(){Destination.connect(this.outputRecorder),this.outputRecorder.start()}async stopRecordAudio(){const e=await this.outputRecorder.stop(),t=URL.createObjectURL(e),s=document.createElement("a");s.download="recording.wav",s.href=t,s.click(),Destination.disconnect(this.outputRecorder)}}const router=createRouter({history:createWebHistory(),routes:[{path:"/syntha/",component:Home},{path:"/syntha/about",component:About},{path:"/syntha/synth",component:Playground},{path:"/syntha/login",component:Login},{path:"/syntha/account",component:Account},{path:"/syntha/workshop",component:Workshop},{path:"/:pathMatch(.*)*",name:"not-found",component:NotFound}]});var ACM=new AudioChainManager("SynthA!"),octave=4;const app=createApp(App);app.provide("ACM",ACM);app.provide("oct",octave);app.use(router);app.mount("#app");
